{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/core/fabric.js","webpack:///./src/canvas/fabric/object.js","webpack:///./src/canvas/object.js","webpack:///./src/core/class.js","webpack:///./src/canvas/view.js","webpack:///./src/core/lib.js","webpack:///(webpack)/buildin/global.js","webpack:///./src/core/canvas.js","webpack:///./src/core/generate.js","webpack:///./node_modules/lodash/lodash.js","webpack:///./src/core/initialize.js","webpack:///./src/ui/initializers/basic.js","webpack:///./src/index.js","webpack:///./node_modules/buffer/index.js","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/ieee754/index.js","webpack:///./node_modules/isarray/index.js","webpack:///(webpack)/buildin/module.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Buffer","fabric","version","copyGLTo2DDrawImage","gl","pipelineState","glCanvas","canvas","targetCanvas","ctx","getContext","translate","height","scale","sourceY","drawImage","width","copyGLTo2DPutImageData","dWidth","destinationWidth","dHeight","destinationHeight","numBytes","u8","Uint8Array","this","imageBuffer","u8Clamped","Uint8ClampedArray","readPixels","RGBA","UNSIGNED_BYTE","imgData","ImageData","putImageData","document","window","isTouchSupported","isLikelyNode","SHARED_ATTRIBUTES","DPI","reNum","fontPaths","iMatrix","canvasModule","perfLimitSizeTotal","maxCacheSideLimit","minCacheSideLimit","charWidthsCache","textureSize","enableGLFiltering","devicePixelRatio","webkitDevicePixelRatio","mozDevicePixelRatio","browserShadowBlurConstant","initFilterBackend","isWebglSupported","console","log","maxTextureSize","WebglFilterBackend","tileSize","Canvas2dFilterBackend","_removeEventListener","eventName","handler","__eventListeners","eventListener","indexOf","util","array","fill","observe","arguments","length","prop","on","push","stopObserving","fire","options","listenersForEvent","len","filter","Observable","off","trigger","Collection","_objects","add","apply","_onObjectAdded","renderOnAddRemove","requestRenderAll","insertAt","index","nonSplicing","objects","getObjects","splice","remove","somethingRemoved","_onObjectRemoved","forEachObject","callback","context","type","item","isEmpty","size","contains","complexity","reduce","memo","current","CommonMethods","_setOptions","set","_initGradient","filler","colorStops","Gradient","_initPattern","source","Pattern","_initClipping","clipTo","functionBody","getFunctionBody","Function","_setObject","obj","_set","toggle","global","sqrt","Math","atan2","pow","abs","PiBy180","PI","removeFromArray","idx","getRandomInt","min","max","floor","random","degreesToRadians","degrees","radiansToDegrees","radians","rotatePoint","point","origin","subtractEquals","v","rotateVector","Point","x","y","addEquals","vector","sin","cos","transformPoint","ignoreOffset","makeBoundingBoxFromPoints","points","xPoints","minX","yPoints","minY","left","top","invertTransform","a","toFixed","number","fractionDigits","parseFloat","Number","parseUnit","fontSize","unit","exec","Text","DEFAULT_SVG_FONT_SIZE","falseFunction","getKlass","namespace","string","camelize","charAt","toUpperCase","slice","resolveNamespace","getSvgAttributes","attributes","concat","parts","split","loadImage","url","crossOrigin","img","createImage","onLoadCallback","onload","onerror","src","substring","loadImageInDom","div","createElement","style","position","appendChild","querySelector","parentNode","removeChild","enlivenObjects","reviver","onLoaded","numLoadedObjects","numTotalObjects","enlivenedObjects","forEach","fromObject","error","enlivenPatterns","patterns","numLoadedPatterns","numPatterns","enlivenedPatterns","pattern","groupSVGElements","elements","path","centerPoint","Group","sourcePath","populateWithProperties","destination","properties","toString","drawDashedLine","x2","y2","da","dx","dy","rot","dc","di","draw","save","moveTo","rotate","restore","createCanvasElement","clipContext","receiver","beginPath","clip","multiplyTransformMatrices","b","is2x2","qrDecompose","angle","denom","scaleX","scaleY","skewX","skewY","translateX","translateY","customTransformMatrix","skewMatrixX","tan","scaleMatrix","resetObjectTransform","target","flipX","flipY","fn","String","match","isTransparent","tolerance","_isTransparent","imageData","getImageData","data","parsePreserveAspectRatioAttribute","attribute","align","meetOrSlice","aspectRatioAttrs","pop","alignX","alignY","clearFabricFontCache","fontFamily","limitDimsByArea","ar","maximumArea","roughWidth","perfLimitSizeY","capValue","findScaleToFit","findScaleToCover","arcToSegmentsCache","segmentToBezierCache","boundsOfCurveCache","_join","Array","join","arcToSegments","toX","toY","rx","ry","large","sweep","rotateX","argsString","th","sinTh","cosTh","fromX","fromY","px","py","rx2","ry2","py2","px2","pl","root","cx","cy","cx1","cy1","mTheta","calcVectorAngle","dtheta","segments","ceil","result","mDelta","mT","th3","segmentToBezier","th2","argsString2","costh2","sinth2","costh3","sinth3","cp1X","cp1Y","cp2X","cp2Y","ux","uy","vx","vy","ta","tb","getBoundsOfCurve","x0","y0","x1","y1","x3","y3","t1","t2","b2ac","sqrtb2ac","tvalues","bounds","mt","j","jlen","drawArc","fx","fy","coords","segs","segsNorm","bezierCurveTo","getBoundsOfArc","tx","ty","bound","find","byProperty","condition","k","invoke","method","args","value1","value2","extend","deep","Element","clone","getWholeChar","str","code","charCodeAt","isNaN","next","prev","replace","character","capitalize","firstLetterOnly","toLowerCase","escapeXml","graphemeSplit","textstring","chr","graphemes","emptyFunction","IS_DONTENUM_BUGGY","addMethods","klass","parent","superclass","constructor","returnValue","valueOf","Subclass","callSuper","methodName","parentMethod","_this","superClassMethod","createClass","initialize","shift","subclasses","unknown","areHostMethods","methodNames","test","getElement","setElement","getUniqueId","uid","element","__uniqueID","createListener","wrappedHandler","e","event","createWrappedHandler","addListener","removeListener","shouldUseAddListenerRemoveListener","documentElement","shouldUseAttachEventDetachEvent","listeners","handlers","addEventListener","removeEventListener","listener","attachEvent","detachEvent","existingHandler","handlersForEvent","createDispatcher","pointerX","clientX","pointerY","clientY","_getPointer","pageProp","clientProp","touchProp","getPointer","srcElement","scroll","getScrollLeftTop","parseEl","supportsOpacity","opacity","supportsFilters","reOpacity","setOpacity","es","currentStyle","hasLayout","zoom","setStyle","styles","elementStyle","cssText","styleFloat","_slice","sliceCanConvertNodelists","getElementStyle","toArray","arrayLike","childNodes","err","makeElement","tagName","el","className","htmlFor","setAttribute","docElement","body","scrollLeft","scrollTop","host","nodeType","arr","defaultView","getComputedStyle","attr","undefined","selectProp","makeElementUnselectable","onselectstart","unselectable","makeElementSelectable","getScript","headEl","getElementsByTagName","scriptEl","loading","onreadystatechange","readyState","getById","id","getElementById","addClass","wrapElement","wrapper","replaceChild","getElementOffset","docElem","scrollLeftTop","doc","ownerDocument","box","offset","offsetAttributes","borderLeftWidth","borderTopWidth","paddingLeft","paddingTop","parseInt","getBoundingClientRect","clientLeft","clientTop","getNodeCanvas","impl","jsdomImplForWrapper","_canvas","_image","makeXHR","factories","ActiveXObject","XMLHttpRequest","emptyFn","request","onComplete","xhr","parameters","param","addParamToUrl","open","setRequestHeader","send","warn","noop","_requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","_cancelAnimFrame","cancelAnimationFrame","clearTimeout","requestAnimFrame","animate","timestamp","time","start","Date","duration","finish","onChange","abort","easing","startValue","endValue","byValue","onStart","tick","ticktime","currentTime","timePerc","valuePerc","cancelAnimFrame","animateColor","fromColor","toColor","startColor","Color","getSource","endColor","begin","end","pos","color","calculateColor","colorEasing","normalize","asin","elastic","opts","easeInBounce","easeOutBounce","ease","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInOutBounce","attributesMap","display","visibility","transform","fill-opacity","fill-rule","font-family","font-size","font-style","font-weight","paint-order","stroke-dasharray","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","text-decoration","text-anchor","colorAttributes","stroke","normalizeAttr","normalizeValue","parentAttributes","parsed","isArray","map","transformMatrix","parseTransformAttribute","visible","fillIndex","strokeIndex","getSvgRegex","RegExp","_getMultipleNodes","nodeNames","nodeName","nodeList","nodeArray","elementMatchesRule","selectors","firstMatching","parentMatching","selectorMatches","selector","doesSomeParentMatch","matcher","classNames","getAttribute","elementById","node","nodelist","svgValidTagNamesRegEx","svgViewBoxElementsRegEx","svgInvalidAncestorsRegEx","svgValidParentsRegEx","cssRules","gradientDefs","skewMatrix","matrix","commaWsp","reTransformList","reTransform","attributeValue","matrices","operation","translateMatrix","rotateMatrix","multiplierX","multiplierY","combinedMatrix","reViewBoxAttrValue","applyViewboxTransform","viewBoxWidth","viewBoxHeight","viewBoxAttr","widthAttr","heightAttr","preserveAspectRatio","missingViewBox","missingDimAttr","toBeParsed","parsedDim","firstChild","parseSVGDocument","parsingOptions","attrs","xlink","substr","el2","cloneNode","currentTrans","oldLength","el3","nodeValue","removeAttribute","parseUseDirectives","svgUid","__uid","descendants","selectNodes","hasAncestorWithNodeName","getGradientDefs","getCSSRules","parseElements","instances","reFontDeclaration","parseFontDeclaration","oStyle","fontStyle","fontWeight","lineHeight","elList","idsToXlinkMap","parseAttributes","ownAttributes","rule","getGlobalStylesForElement","parseStyleAttribute","normalizedAttr","normalizedValue","normalizedStyle","font","mergedAttrs","setAlpha","getAlpha","toRgba","_setStrokeFillOpacity","ElementsParser","parse","chunk","pair","trim","parseStyleString","parseStyleObject","parsePointsAttribute","parsedPoints","allRules","styleContents","textContent","text","ruleObj","propertyValuePairs","_rule","loadSVGFromURL","xml","responseXML","responseText","async","loadXML","results","_options","allElements","loadSVGFromString","DOMParser","parser","parseFromString","numElements","createObjects","_obj","createObject","fromElement","_createObject","checkIfDone","createCallback","resolveGradient","Image","_removeTransformMatrix","instanceFillValue","gradientId","that","scalarAdd","scalar","scalarAddEquals","subtract","scalarSubtract","scalarSubtractEquals","multiply","multiplyEquals","divide","divideEquals","eq","lt","lte","gt","gte","lerp","distanceFrom","midPointFrom","setXY","setX","setY","setFromPoint","swap","Intersection","status","appendPoint","appendPoints","intersectLineLine","a1","a2","b1","b2","uaT","ubT","uB","ua","ub","intersectLinePolygon","inter","intersectPolygonPolygon","points1","points2","intersectPolygonRectangle","r1","r2","topRight","bottomLeft","inter1","inter2","inter3","inter4","_tryParsingColor","setSource","hue2rgb","q","colorNameMap","sourceFromHex","sourceFromRgb","sourceFromHsl","_rgbToHsl","g","h","round","_source","toRgb","toHsl","hsl","toHsla","toHex","toHexa","alpha","toGrayscale","average","currentAlpha","toBlackWhite","threshold","overlayWith","otherColor","otherSource","reRGBa","reHSLa","reHex","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgrey","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","grey","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","fromRgb","fromSource","fromRgba","fromHsl","fromHsla","fromHex","isShortNotation","isRGBa","oColor","getColorStop","colorAlpha","keyValuePairs","_convertPercentUnitsToValues","gradientUnits","propValue","addFactor","multFactor","ellipseMatrix","scaleFactor","offsetX","offsetY","gradientTransform","addColorStop","toObject","propertiesToInclude","toSVG","markup","commonAttributes","needsSwap","sort","pathOffset","reverse","minRadius","percentageShift","colorStop","toLive","gradient","createLinearGradient","createRadialGradient","instance","colorStopEls","getLinearCoords","getRadialCoords","forObject","repeat","patternTransform","setOptions","NUM_FRACTION_DIGITS","toDataURL","patternSource","patternWidth","patternHeight","patternOffsetX","patternOffsetY","patternImgSrc","complete","naturalWidth","naturalHeight","createPattern","Shadow","blur","affectStroke","includeDefaultValues","_parseShadow","shadow","shadowStr","offsetsAndBlur","reOffsetsAndBlur","fBoxX","fBoxY","proto","StaticCanvas","CANVAS_INIT_ERROR","Error","renderAndResetBound","renderAndReset","requestRenderAllBound","_initStatic","backgroundColor","backgroundImage","overlayColor","overlayImage","stateful","controlsAboveOverlay","allowTouchScrolling","imageSmoothingEnabled","viewportTransform","backgroundVpt","overlayVpt","onBeforeScaleRotate","enableRetinaScaling","vptCoords","skipOffscreen","cb","_createLowerCanvas","_initOptions","_setImageSmoothing","interactive","_initRetinaScaling","setOverlayImage","setBackgroundImage","setBackgroundColor","setOverlayColor","calcOffset","_isRetinaScaling","getRetinaScaling","lowerCanvasEl","contextContainer","_offset","image","__setBgOverlayImage","__setBgOverlayColor","webkitImageSmoothingEnabled","mozImageSmoothingEnabled","msImageSmoothingEnabled","oImageSmoothingEnabled","_createCanvasElement","canvasEl","_applyCanvasStyle","getWidth","getHeight","setWidth","setDimensions","setHeight","dimensions","cssValue","cssOnly","_setBackstoreDimension","backstoreOnly","_setCssDimension","_isCurrentlyDrawing","freeDrawingBrush","_setBrushStyles","upperCanvasEl","cacheCanvasEl","wrapperEl","getZoom","setViewportTransform","vpt","activeObject","_activeObject","group","setCoords","calcViewportBoundaries","zoomToPoint","before","after","setZoom","absolutePan","relativePan","setupState","clearContext","clearRect","clear","_hasITextHandlers","_mouseUpITextHandler","_iTextInstances","renderAll","canvasToDrawOn","renderCanvas","isRendering","iVpt","tl","br","tr","bl","_renderBackground","_renderObjects","drawControls","_renderOverlay","render","_renderBackgroundOrOverlay","fillStyle","fillRect","getCenter","centerObjectH","_centerObject","getCenterPoint","centerObjectV","centerObject","center","viewportCenterObject","vpCenter","getVpCenter","viewportCenterObjectH","viewportCenterObjectV","setPositionByOrigin","toDatalessJSON","toDatalessObject","_toObjectMethod","_toObjects","__serializeBgOverlay","excludeFromExport","_toObject","originalValue","bgImage","overlay","background","svgViewportTransformation","_setSVGPreamble","_setSVGHeader","_setSVGBgOverlayColor","_setSVGBgOverlayImage","_setSVGObjects","suppressPreamble","encoding","viewBox","createSVGFontFacesMarkup","createSVGRefElementsMarkup","row","rowIndex","charIndex","fontList","_setSVGObject","sendToBack","objs","activeSelection","unshift","bringToFront","sendBackwards","intersecting","newIdx","objsMoved","_findNewLowerIndex","intersectsWithObject","isContainedWithinObject","bringForward","_findNewUpperIndex","dispose","DataURLExporter","EMPTY_JSON","supports","setLineDash","toJSON","createPNGStream","createJPEGStream","BaseBrush","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeDashArray","setShadow","contextTop","strokeStyle","lineWidth","lineCap","miterLimit","lineJoin","_saveAndTransform","_setShadow","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","_resetShadow","PencilBrush","_points","onMouseDown","pointer","_prepareForDrawing","_captureDrawingPath","_render","onMouseMove","onMouseUp","_finalizeAndAddPath","_reset","_addPoint","pointerPoint","p1","p2","midPoint","quadraticCurveTo","lineTo","convertPointsToSVGPath","multSignX","multSignY","manyPoints","createPath","pathData","Path","strokeWidth","translateToGivenOrigin","originX","originY","closePath","CircleBrush","drawDot","addPoint","arc","radius","originalRenderOnAddRemove","circles","circle","Circle","circleRadius","circleColor","SprayBrush","density","dotWidth","dotWidthVariance","randomOpacity","optimizeOverlapping","sprayChunks","addSprayChunk","sprayChunkPoints","rects","ilen","sprayChunk","rect","Rect","_getOptimizedRects","uniqueRects","uniqueRectsArray","globalAlpha","PatternBrush","getPatternSrc","patternCanvas","patternCtx","getPatternSrcFunction","getPattern","topLeft","_getLeftTopCoords","supportLineDash","Canvas","_initInteractive","_createCacheCanvas","uniScaleTransform","uniScaleKey","centeredScaling","centeredRotation","centeredKey","altActionKey","selection","selectionKey","altSelectionKey","selectionColor","selectionDashArray","selectionBorderColor","selectionLineWidth","selectionFullyContained","hoverCursor","moveCursor","defaultCursor","freeDrawingCursor","rotationCursor","notAllowedCursor","containerClass","perPixelTargetFind","targetFindTolerance","skipTargetFind","isDrawingMode","preserveObjectStacking","snapAngle","snapThreshold","stopContextMenu","fireRightClick","fireMiddleClick","_currentTransform","_groupSelector","_initWrapperElement","_createUpperCanvas","_initEventListeners","_chooseObjectsToRender","objsToRender","activeGroupObjects","activeObjects","getActiveObjects","_","sortBy","zIndex","contextTopDirty","renderTop","_drawSelection","_resetCurrentTransform","original","_shouldCenterTransform","action","_setOriginToCenter","mouseXSign","mouseYSign","containsPoint","xy","_normalizePointer","_findTargetCorner","calcTransformMatrix","invertedM","vptPointer","restorePointerVpt","isTargetTransparent","contextCache","originalColor","selectionBackgroundColor","_renderControls","hasBorders","transparentCorners","_isSelectionKeyPressed","_shouldClearSelection","evented","selectable","centerTransform","altKey","_getOriginFromCorner","corner","_getActionFromCorner","_setupCurrentTransform","ex","ey","lastX","lastY","theta","shiftKey","_translateObject","newLeft","newTop","moveX","moveY","_changeSkewTransformOrigin","mouseMove","by","origins","0","skew","originA","originB","flipSign","skewSign","_skewObject","skewed","lockSkewingX","lockSkewingY","actualMouseByOrigin","constraintPosition","actualMouseByCenter","toLocalPoint","lastMouseByCenter","dim","_getTransformedDimensions","translateToOriginPoint","_setObjectSkew","localMouse","_dim","newValue","newDim","dimNoSkew","otherBy","_otherBy","_by","newDimMouse","atan","_scaleObject","lockScalingX","lockScalingY","lockScalingFlip","scaled","_setLocalMouse","_setObjectScale","changeX","changeY","forbidScalingX","forbidScalingY","_scaleObjectEqually","newScaleX","newScaleY","_flipObject","dist","lastDist","signX","signY","padding","_rotateObject","lastAngle","curAngle","hasRotated","rightAngleLocked","leftAngleLocked","setCursor","cursor","_resetObjectTransform","groupSelector","aleft","atop","_setLineDash","strokeRect","findTarget","skipGroup","activeTarget","activeTargetSubs","aObjects","targets","_searchPossibleTargets","_checkTarget","isEditing","normalizedPointer","subTarget","subTargetCheck","ignoreZoom","cssScale","boundsWidth","boundsHeight","bottom","right","lowerCanvasClass","_copyCanvasStyle","class","touch-action","fromEl","toEl","getSelectionContext","getSelectionElement","getActiveObject","active","_discardActiveObject","_hoveredTarget","_fireSelectionEvents","oldObjects","somethingChanged","added","removed","opt","oldObject","selected","deselected","updated","setActiveObject","currentActives","_setActiveObject","onSelect","onDeselect","discardActiveObject","removeListeners","originalProperties","_realizeGroupTransformOnObject","_unwindGroupTransformOnObject","originalValues","realizeTransform","_setCursorFromEvent","cursorOffset","mr","mb","ml","checkClick","which","button","cursorMap","_bindEvents","_onResize","_onMouseDown","_onDoubleClick","_onMouseMove","_onMouseOut","_onMouseEnter","_onMouseWheel","_onContextMenu","passive","eventjs","_onGesture","_onDrag","_onOrientationChange","_onShake","_onLongPress","eventsBinded","_onMouseUp","self","__onTransformGesture","__onDrag","__onMouseWheel","hiddenTextarea","focus","__onOrientationChange","__onShake","__onLongPress","stopPropagation","preventDefault","_handleEvent","__onMouseDown","__onMouseUp","__onMouseMove","_shouldRender","isMoving","_previousPointer","searchTarget","isClick","_onMouseUpInDrawingMode","_finalizeCurrentTransform","actionPerformed","shouldRender","_maybeGroupObjects","__corner","eventType","targetObj","subTargets","_scaling","_restoreOriginXY","hasStateChanged","_previousOriginX","_previousOriginY","originPoint","_onMouseDownInDrawingMode","_onMouseMoveInDrawingMode","shouldGroup","_shouldGroup","_handleGrouping","_beforeTransform","saveState","_setCenterToOrigin","touches","_transformObject","_fireOverOutEvents","overOpt","outOpt","hoveredTarget","previousTarget","nextTarget","reset","_beforeScaleTransform","_performTransformAction","_fire","_onScale","_isUniscalePossible","currentAction","getCornerCursor","actionIsDisabled","_getRotatedCornerCursor","hasRotatingPoint","lockRotation","_updateActiveSelection","_createActiveSelection","currentActiveObjects","removeWithUpdate","addWithUpdate","_createGroup","groupObjects","exitEditing","ActiveSelection","_groupSelectedObjects","aGroup","_collectObjects","currentObject","selectionX1Y1","selectionX2Y2","allowIntersect","intersectsWithRect","isContainedWithinRect","supportQuality","format","quality","multiplier","cropping","__toDataURLWithMultiplier","origWidth","origHeight","scaledWidth","scaledHeight","newZoom","vp","newVp","originalInteractive","originalSkipOffScreen","needsResize","__toDataURL","loadFromDatalessJSON","json","loadFromJSON","serialized","JSON","_enlivenObjects","_setBgOverlay","loaded","cbIfLoaded","__setBgOverlay","enlivedObject","_toDataURL","_toDataURLWithMultiplier","toDataURLWithMultiplier","stringify","cloneWithoutData","backgroundImageOpacity","backgroundImageStretch","supportsLineDash","objectCaching","cornerSize","borderColor","borderDashArray","cornerColor","cornerStrokeColor","cornerStyle","cornerDashArray","fillRule","globalCompositeOperation","borderOpacityWhenMoving","borderScaleFactor","minScaleLimit","hasControls","rotatingPointOffset","lockMovementX","lockMovementY","lockUniScaling","statefullCache","noScaleCache","dirty","paintFirst","stateProperties","cacheProperties","_cacheProperties","_cacheCanvas","_cacheContext","_updateCacheCanvas","_limitCacheSize","dims","limitedDims","zoomX","capped","zoomY","_getCacheCanvasDimensions","objectScale","getObjectScaling","retina","_getNonTransformedDimensions","drawingWidth","drawingHeight","minCacheSize","dimensionsChanged","cacheWidth","cacheHeight","zoomChanged","shouldRedraw","additionalWidth","additionalHeight","shouldResizeCanvas","canvasWidth","canvasHeight","sizeGrowing","setTransform","cacheTranslationX","cacheTranslationY","_transformDone","calcOwnMatrix","_removeDefaultValues","scaling","getObjectOpacity","shouldConstrainValue","isChanged","groupNeedsUpdate","_constrainScale","isOnACache","setOnGroup","getViewportTransform","isNotVisible","isOnScreen","_setupCompositeOperation","drawSelectionBackground","_setOpacity","shouldCache","isCacheDirty","propertySet","drawObject","drawCacheOnCanvas","_removeCacheCanvas","needsItsOwnCache","ownCaching","willDrawShadow","_setStrokeStyles","_setFillStyles","skipCanvas","_removeShadow","decl","dashArray","alternative","styleOverride","drawBorders","forActiveSelection","drawBordersInGroup","multX","multY","_applyPatternGradientTransform","_renderPaintInOrder","_renderStroke","_renderFill","_renderDashedStroke","_findCenterFromElement","_assignTransformMatrixProps","preserveAspectRatioOptions","cropX","cropY","offsetLeft","offsetTop","objectForm","_fromObject","cloneAsImage","dataUrl","boundingRect","getBoundingRect","origParams","originalCanvas","isType","setGradient","setPatternFill","setColor","shouldCenterOrigin","_resetOrigin","centerH","viewportCenterH","centerV","viewportCenterV","viewportCenter","getLocalPointer","pClicked","objectLeftTop","createAccessors","extraParam","originXOffset","originYOffset","fromOriginX","fromOriginY","toOriginX","toOriginY","translateToCenterPoint","leftTop","getPointByOrigin","adjustPosition","to","offsetFrom","offsetTo","hypotFull","getScaledWidth","xFull","yFull","_originalOriginX","_originalOriginY","multiplyMatrices","oCoords","aCoords","ownMatrixCache","matrixCache","getCoords","absolute","calculate","calcCoords","pointTL","pointBR","other","lines","_getImageLines","_findCrossPoints","topline","rightline","bottomline","leftline","xi","iLine","xcount","lineKey","getScaledHeight","scaleToWidth","boundingRectFactor","scaleToHeight","_calculateCurrentDimensions","currentWidth","currentHeight","_angle","_hypotenuse","mtr","skipAbsolute","_setCornerCoords","_calcRotateMatrix","transformMatrixKey","prefix","cache","dimensionMatrix","_calcDimensionsTransformMatrix","flipping","bbox","dimX","dimY","getSvgColorString","getSvgStyles","skipShadow","getSvgFilter","getSvgSpanStyles","useWhiteSpace","textDecoration","getSvgTextDecoration","overline","underline","linethrough","getSvgId","getSvgTransform","translatePart","anglePart","scalePart","skewXPart","skewYPart","getSvgTransformMatrix","_setSVGBg","textBgRects","_getFillAttributes","_createBaseSVGMarkup","addPaintOrder","saveProps","props","tmpObj","dashedPropertySet","keys","_isEqual","origValue","currentValue","firstPass","_controlsVisibility","isControlVisible","newTheta","cornerHypotenuse","cosHalfOffset","sinHalfOffset","wh","drawRotatingPoint","rotateHeight","scaleOffset","_drawControl","control","controlName","_getControlsVisibility","setControlVisible","setControlsVisibility","FX_DURATION","fxCenterObjectH","callbacks","empty","fxCenterObjectV","fxRemove","skipCallbacks","propsToAnimate","_animate","propPair","from","valueProgress","timeProgress","coordProps","makeEdgeToOriginGetter","propertyNames","originValues","axis1","axis2","dimension","nearest","farthest","Line","_setWidthHeight","_getLeftToOriginX","_getTopToOriginY","calcLinePoints","origStrokeStyle","xMult","yMult","ATTRIBUTE_NAMES","parsedAttributes","pi","startAngle","endAngle","setRadius","startX","startY","endX","endY","largeFlag","getRadiusX","getRadiusY","isValidRadius","Triangle","widthBy2","heightBy2","piBy2","Ellipse","getRx","getRy","_initRxRy","w","isRounded","Polyline","calcDim","_calcDimensions","diffX","diffY","commonRender","Polygon","_toString","commandLengths","repeatedCommands","M","fromArray","_parsePath","_setPositionDimensions","_parseDimensions","_renderPathCommands","tempX","tempY","previous","subpathStartX","subpathStartY","controlX","controlY","addTransform","chunks","currentPath","coordsStr","coordsParsed","re","command","commandLength","repeatedCommand","klen","aX","aY","pathUrl","useSetOnGroup","isAlreadyGrouped","_updateObjectsACoords","_calcBounds","_updateObjectsCoords","_updateObjectCoords","objectLeft","objectTop","_restoreObjectsState","objsToObject","originalDefaults","ownCache","_restoreObjectState","destroy","toActiveSelection","ungroupOnCanvas","setObjectsCoords","onlyWidthHeight","iLen","jLen","_getBounds","minXY","maxXY","toGroup","newGroup","childrenOverride","_lastScaleX","_lastScaleY","_filterScalingX","_filterScalingY","minimumScaleTrigger","cacheKey","filters","_initElement","_element","backend","filterBackend","evictCachesForKey","_originalElement","_initConfig","resizeFilter","applyResizeFilters","applyFilters","_filteredEl","setCrossOrigin","getOriginalSize","_stroke","filterObj","getSrc","imageMarkup","getSvgSrc","origFill","filtered","setSrc","retinaScaling","minimumScale","elementToFilter","sourceWidth","sourceHeight","imgElement","_needsResize","sW","sH","elementToDraw","_resetWidthHeight","CSS_CANVAS","_initFilters","pAR","rWidth","rHeight","pWidth","pHeight","_object","resizeFilters","fromURL","imgOptions","_getAngleValueForStraighten","straighten","fxStraighten","straightenObject","fxStraightenObject","testPrecision","precision","fragmentSource","fragmentShader","createShader","FRAGMENT_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","setupGLContext","captureGPUInfo","isSupported","getParameter","MAX_TEXTURE_SIZE","precisions","webGlPrecision","resources","createWebGLCanvas","aPosition","Float32Array","chooseFastestCopyGLTo2DMethod","canUseImageData","canMeasurePerf","performance","canUseArrayBuffer","ArrayBuffer","canUseUint8Clamped","startTime","drawImageTime","testContext","now","copyGLTo2D","glOptions","premultipliedAlpha","clearColor","cachedTexture","getCachedTexture","originalWidth","originalHeight","sourceTexture","createTexture","targetTexture","originalTexture","passes","webgl","programCache","pass","tempFbo","createFramebuffer","bindFramebuffer","FRAMEBUFFER","applyTo","resizeCanvasIfNeeded","bindTexture","TEXTURE_2D","deleteTexture","deleteFramebuffer","applyFiltersDebug","ret","glError","getError","NO_ERROR","errorString","glErrorToString","glErrorCode","errorCode","INVALID_ENUM","INVALID_VALUE","INVALID_OPERATION","INVALID_FRAMEBUFFER_OPERATION","OUT_OF_MEMORY","CONTEXT_LOST_WEBGL","clearWebGLCaches","textureCache","textureImageSource","texture","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","texImage2D","uniqueId","gpuInfo","ext","getExtension","renderer","vendor","UNMASKED_RENDERER_WEBGL","UNMASKED_VENDOR_WEBGL","sourceElement","originalEl","originalImageData","BaseFilter","vertexSource","createProgram","vertexShader","VERTEX_SHADER","getShaderInfoLog","program","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","attributeLocations","getAttributeLocations","uniformLocations","getUniformLocations","uStepW","getUniformLocation","uStepH","getAttribLocation","sendAttributeData","aPositionData","attributeLocation","aPostion","buffer","createBuffer","bindBuffer","ARRAY_BUFFER","enableVertexAttribArray","vertexAttribPointer","FLOAT","bufferData","STATIC_DRAW","_setupFrameBuffer","framebufferTexture2D","COLOR_ATTACHMENT0","_swapTextures","temp","isNeutralState","applyToWebGL","applyTo2d","retrieveShader","shader","useProgram","uniform1f","sendUniformData","viewport","drawArrays","TRIANGLE_STRIP","bindAdditionalTexture","textureUnit","activeTexture","TEXTURE0","unbindAdditionalTexture","getMainParameter","mainParameter","setMainParameter","createHelpLayer","helpLayer","mainP","ColorMatrix","colorsOnly","_class","uColorMatrix","uConstants","constants","uniformMatrix4fv","uniform4fv","Brightness","brightness","uBrightness","Convolute","opaque","Convolute_3_1","Convolute_3_0","Convolute_5_1","Convolute_5_0","Convolute_7_1","Convolute_7_0","Convolute_9_1","Convolute_9_0","dstOff","scx","scy","srcOff","wt","weights","side","halfSide","sw","sh","output","createImageData","dst","alphaFac","uMatrix","uOpaque","uHalfSize","uSize","uniform1fv","Grayscale","lightness","luminosity","uMode","uniform1i","Invert","invert","uInvert","Noise","noise","rand","uNoise","uSeed","Pixelate","blocksize","_i","_j","_iLen","_jLen","uBlocksize","RemoveColor","distance","useAlpha","lowC","highC","uLow","uHigh","Brownie","Vintage","Kodachrome","Technicolor","Polaroid","Sepia","BlackWhite","BlendColor","screen","diff","lighten","darken","exclusion","tint","tg","alpha1","uColor","BlendImage","mask","TEXTURE1","calculateMatrix","canvas1","blendData","blendImage","uTransformMatrix","uImage","uniformMatrix3fv","Resize","resizeType","lanczosLobes","uDelta","uTaps","uniform2fv","horizontal","taps","filterWindow","getFilterWindow","generateShader","tempScale","getTaps","lobeFunction","lanczosCreate","offsets","fragmentSourceTOP","dW","dH","lobes","xx","rcpScaleX","rcpScaleY","newData","oW","oH","sliceByTwo","hermiteFastResize","bilinearFiltering","lanczosResize","tmpCanvas","doneW","doneH","stepW","stepH","sX","sY","dX","dY","srcData","destImg","destData","lanczos","ratioX","ratioY","rcpRatioX","rcpRatioY","range2X","range2Y","cacheLanc","icenter","process","u","weight","fX","fY","xDiff","yDiff","chnl","origPix","w4","pixels","destImage","destPixels","ratioW","ratioH","ratioWHalf","ratioHHalf","img2","data2","weightsAlpha","gxR","gxG","gxB","gxA","centerY","yy","centerX","w0","Contrast","contrast","contrastF","uContrast","Saturation","saturation","adjust","uSaturation","Blur","aspectRatio","simpleBlur","canvas2","blurLayer1","blurLayer2","percent","ctx1","ctx2","newImageData","delta","chooseRightDelta","blurScale","Gamma","gamma","rInv","gInv","bInv","rVals","gVals","bVals","uGamma","uniform3fv","Composed","subFilters","HueRotation","rotation","rad","aThirdSqtSin","OneMinusCos","_dimensionAffectingProps","_reNewline","_reSpacesAndTabs","_reSpaceAndTab","_reWords","textAlign","textBackgroundColor","_fontSizeFraction","_fontSizeMult","charSpacing","_measuringContext","_styleProperties","__charBounds","__skipDimension","initDimensions","getMeasuringContext","_splitText","newLines","_splitTextIntoLines","textLines","_textLines","graphemeLines","_unwrappedTextLines","_unwrappedLines","_text","graphemeText","_clearCache","calcTextWidth","cursorWidth","enlargeSpaces","calcTextHeight","diffSpace","currentLineWidth","numberOfSpaces","accumulatedSpace","line","charBound","spaces","isEndOfWrapping","getLineWidth","kernedWidth","lineIndex","_setTextStyles","_renderTextLinesBackground","_renderTextDecoration","_renderText","_renderTextStroke","_renderTextFill","charStyle","forMeasuring","textBaseline","_getFontDeclaration","maxWidth","_renderTextLine","_renderChars","styleHas","heightOfLine","lineLeftOffset","lastColor","charBox","currentColor","lineTopOffset","originalFill","leftOffset","_getLeftOffset","topOffset","_getTopOffset","boxStart","boxWidth","getHeightOfLine","_getLineLeftOffset","getValueOfPropertyAt","getFontCache","cacheProp","_applyCharStyles","styleDeclaration","_measureChar","_char","previousChar","prevCharStyle","coupleWidth","previousWidth","fontCache","couple","stylesAreEqual","fontMultiplier","measureText","getHeightOfChar","measureLine","lineInfo","_measureLine","_getWidthOfCharSpacing","grapheme","prevGrapheme","graphemeInfo","lineBounds","_getGraphemeBox","numOfSpaces","previousGrapheme","skipLeft","getCompleteStyleDeclaration","info","previousBox","__lineHeights","maxHeight","currentCharHeight","_renderTextCommon","lineHeights","isEmptyStyles","actualStyle","nextStyle","timeToRender","isJustify","charsToRender","shortCut","_renderChar","_hasStyleChanged","_getStyleDeclaration","fullDecl","shouldFill","shouldStroke","fillText","strokeText","prevStyle","thisStyle","_hasStyleChangedForSvg","__lineWidths","_shouldClearDimensionCache","shouldClear","_forceClearCache","lastDecoration","currentDecoration","currentFill","lastFill","styleObject","CACHE_FONT_SIZE","newLine","newText","additionalProperties","needsDims","_key","parsedAnchor","textAnchor","textHeightScaleFactor","scaledDiff","textHeight","offX","p3","cleanStyle","letterCount","stylesCount","foundStyle","canBeSwapped","graphemeCount","removeStyle","lineNum","charNum","_extendStyles","loc","get2DCursorLocation","_getLineStyle","_setLineStyle","_setStyleDeclaration","selectionStart","skipWrapping","getSelectionStyles","startIndex","endIndex","selectionEnd","getStyleAtPosition","setSelectionStyles","lineStyle","_deleteStyleDeclaration","_deleteLineStyle","parseDecoration","IText","editable","editingBorderColor","cursorColor","cursorDelay","cursorDuration","caching","_reSpace","_currentCursorOpacity","_selectionDirection","_abortCursorAnimation","__widthOfSpace","inCompositionMode","initBehavior","setSelectionStart","_updateAndFire","setSelectionEnd","_fireSelectionChanged","_updateTextarea","initDelayedCursor","clearContextTop","cursorOffsetCache","renderCursorOrSelection","skipRestore","_clearTextArea","boundaries","_getCursorBoundaries","renderCursor","renderSelection","_getCursorBoundariesOffsets","cursorPosition","cursorLocation","charHeight","__isMousedown","startLine","endLine","startChar","endChar","realLineHeight","lineOffset","boxEnd","compositionColor","getCurrentCharFontSize","cp","_getCurrentCharIndex","getCurrentCharColor","initAddedHandler","initRemovedHandler","initCursorSelectionHandlers","initDoubleClickSimulation","mouseMoveHandler","_initCanvasHandlers","_removeCanvasHandlers","_tick","_currentTickState","_animateCursor","targetOpacity","completeMethod","tickState","isAborted","_onTickComplete","_cursorTimeout1","_currentTickCompleteState","restart","delay","abortCursorAnimation","_cursorTimeout2","selectAll","getSelectedText","findWordBoundaryLeft","startFrom","findWordBoundaryRight","findLineBoundaryLeft","findLineBoundaryRight","searchWordBoundary","direction","reNonWord","selectWord","newSelectionStart","newSelectionEnd","selectLine","enterEditing","exitEditingOnOthers","initHiddenTextarea","_saveEditingProps","_setEditingProps","_textBeforeEdit","initMouseMoveHandler","getSelectionStartFromPointer","currentStart","currentEnd","__selectionStartOnMouseDown","restartCursorIfNeeded","fromStringToGraphemeSelection","smallerTextStart","graphemeStart","smallerTextEnd","fromGraphemeToStringSelection","newSelection","updateTextareaPosition","updateFromTextArea","_calcTextareaPosition","desiredPostion","compositionStart","upperCanvas","_savedProps","_restoreEditingProps","isTextChanged","_removeExtraneousStyles","removeStyleFromTo","styleObj","cursorStart","cursorEnd","lineStart","charStart","lineEnd","charEnd","shiftLineStyles","numericChar","clonedStyles","numericLine","insertNewlineStyleObject","qty","copiedStyle","currentCharStyle","newLineStyles","somethingAdded","numIndex","insertCharStyleObject","quantity","currentLineStyles","currentLineStylesCloned","numericIndex","newStyle","insertNewStyleBlock","insertedText","cursorLoc","addedLines","linesLenght","setSelectionStartEndWithShift","setSelectionInBoundaries","__lastClickTime","__lastLastClickTime","__lastPointer","__newClickTime","newPointer","isTripleClick","_stopEvent","__lastIsEditing","__lastSelected","initMousedownHandler","initMouseupHandler","initClicks","_mouseDownHandler","__mousedownX","__mousedownY","setCursorByClick","_isObjectMoved","mouseOffset","prevWidth","_getNewSelectionStartFromOffset","distanceBtwLastCharAndCursor","distanceBtwNextCharAndCursor","onKeyDown","onKeyUp","onInput","copy","paste","onCompositionStart","onCompositionUpdate","onCompositionEnd","_clickHandlerInitialized","onClick","keysMap","9","27","33","34","35","36","37","38","39","40","ctrlKeysMapUp","67","88","ctrlKeysMapDown","65","keyCode","ctrlKey","metaKey","stopImmediatePropagation","_copyDone","fromPaste","removedText","nextText","charCount","nextCharCount","charDiff","textareaSelection","backDelete","copiedText","copiedTextStyle","compositionEnd","_getClipboardData","clipboardData","_getWidthBeforeCursor","widthBeforeCursor","getDownCursorOffset","isRight","selectionProp","_getSelectionForOffset","indexOnOtherLine","_getIndexOnLine","getUpCursorOffset","textBeforeCursor","charWidth","foundMatch","widthOfCharsOnLine","indexOnLine","leftEdge","rightEdge","offsetFromLeftEdge","moveCursorDown","_moveCursorUpOrDown","moveCursorUp","moveCursorWithShift","moveCursorWithoutShift","moveCursorLeft","_moveCursorLeftOrRight","_move","_moveLeft","_moveRight","moveCursorLeftWithoutShift","change","moveCursorLeftWithShift","moveCursorRight","actionName","moveCursorRightWithShift","moveCursorRightWithoutShift","changed","removeChars","insertChars","_getSVGLeftTopOffsets","textAndBg","_getSVGTextAndBg","textTop","textLeft","_wrapSVGTextAndBg","lineTop","textSpans","textTopOffset","textLeftOffset","_setSVGTextLineBg","_setSVGTextLineText","_createTextCharSpan","styleDecl","styleProps","fillStyles","_pushTextBgRect","fillColor","_getSVGLineTopOffset","lastHeight","Textbox","minWidth","dynamicMinWidth","__cachedLines","_styleMap","_generateStyleMap","textInfo","realLineCount","realLineCharCount","isWrapping","_wrapText","desiredWidth","wrapped","_wrapLine","_measureWord","word","charOffset","_line","words","wordWidth","infixWidth","largestWordWidth","lineJustStarted","additionalSpace","getMinWidth","setObjectScaleOverridden","tw","__webpack_exports__","FabricCanvasObject","_object_js__WEBPACK_IMPORTED_MODULE_0__","_core_fabric_js__WEBPACK_IMPORTED_MODULE_1__","[object Object]","super","defaults","shape","shapeFabricClassMap","polyline","fabricObject","diameter","canvasView","addToCanvasView","isRemoved","removeFromCanvasView","layout","pick","includes","imageUrls","promises","Promise","success","all","then","mapValues","keyBy","CanvasObject","_core_class_js__WEBPACK_IMPORTED_MODULE_0__","dereference","Class","CanvasView","_container","resize","innerHTML","canvasOptions","$canvas","lib","factor","randInt","mo","math","trig","eval","_canvas_fabric_object_js__WEBPACK_IMPORTED_MODULE_0__","_canvas_view_js__WEBPACK_IMPORTED_MODULE_1__","_canvas_object_js__WEBPACK_IMPORTED_MODULE_2__","classes","__WEBPACK_AMD_DEFINE_RESULT__","LARGE_ARRAY_SIZE","CORE_ERROR_TEXT","FUNC_ERROR_TEXT","HASH_UNDEFINED","MAX_MEMOIZE_SIZE","PLACEHOLDER","CLONE_DEEP_FLAG","CLONE_FLAT_FLAG","CLONE_SYMBOLS_FLAG","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","WRAP_BIND_FLAG","WRAP_BIND_KEY_FLAG","WRAP_CURRY_BOUND_FLAG","WRAP_CURRY_FLAG","WRAP_CURRY_RIGHT_FLAG","WRAP_PARTIAL_FLAG","WRAP_PARTIAL_RIGHT_FLAG","WRAP_ARY_FLAG","WRAP_REARG_FLAG","WRAP_FLIP_FLAG","DEFAULT_TRUNC_LENGTH","DEFAULT_TRUNC_OMISSION","HOT_COUNT","HOT_SPAN","LAZY_FILTER_FLAG","LAZY_MAP_FLAG","INFINITY","MAX_SAFE_INTEGER","MAX_INTEGER","NAN","MAX_ARRAY_LENGTH","MAX_ARRAY_INDEX","HALF_MAX_ARRAY_LENGTH","wrapFlags","argsTag","arrayTag","asyncTag","boolTag","dateTag","domExcTag","errorTag","funcTag","genTag","mapTag","numberTag","nullTag","objectTag","proxyTag","regexpTag","setTag","stringTag","symbolTag","undefinedTag","weakMapTag","weakSetTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","reEscapedHtml","reUnescapedHtml","reHasEscapedHtml","reHasUnescapedHtml","reEscape","reEvaluate","reInterpolate","reIsDeepProp","reIsPlainProp","rePropName","reRegExpChar","reHasRegExpChar","reTrim","reTrimStart","reTrimEnd","reWrapComment","reWrapDetails","reSplitDetails","reAsciiWord","reEscapeChar","reEsTemplate","reFlags","reIsBadHex","reIsBinary","reIsHostCtor","reIsOctal","reIsUint","reLatin","reNoMatch","reUnescapedString","rsComboRange","rsComboMarksRange","rsBreakRange","rsMathOpRange","rsAstral","rsBreak","rsCombo","rsDigits","rsDingbat","rsLower","rsMisc","rsFitz","rsNonAstral","rsRegional","rsSurrPair","rsUpper","rsMiscLower","rsMiscUpper","reOptMod","rsSeq","rsEmoji","rsSymbol","reApos","reComboMark","reUnicode","reUnicodeWord","reHasUnicode","reHasUnicodeWord","contextProps","templateCounter","typedArrayTags","cloneableTags","stringEscapes","\\","'","\n","\r"," "," ","freeParseFloat","freeParseInt","freeGlobal","freeSelf","freeExports","freeModule","moduleExports","freeProcess","nodeUtil","types","require","binding","nodeIsArrayBuffer","isArrayBuffer","nodeIsDate","isDate","nodeIsMap","isMap","nodeIsRegExp","isRegExp","nodeIsSet","isSet","nodeIsTypedArray","isTypedArray","func","thisArg","arrayAggregator","setter","iteratee","accumulator","arrayEach","arrayEachRight","arrayEvery","predicate","arrayFilter","resIndex","arrayIncludes","baseIndexOf","arrayIncludesWith","comparator","arrayMap","arrayPush","values","arrayReduce","initAccum","arrayReduceRight","arraySome","asciiSize","baseProperty","baseFindKey","collection","eachFunc","baseFindIndex","fromIndex","fromRight","strictIndexOf","baseIsNaN","baseIndexOfWith","baseMean","baseSum","basePropertyOf","baseReduce","baseTimes","baseUnary","baseValues","cacheHas","has","charsStartIndex","strSymbols","chrSymbols","charsEndIndex","deburrLetter","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","Ā","Ă","Ą","ā","ă","ą","Ć","Ĉ","Ċ","Č","ć","ĉ","ċ","č","Ď","Đ","ď","đ","Ē","Ĕ","Ė","Ę","Ě","ē","ĕ","ė","ę","ě","Ĝ","Ğ","Ġ","Ģ","ĝ","ğ","ġ","ģ","Ĥ","Ħ","ĥ","ħ","Ĩ","Ī","Ĭ","Į","İ","ĩ","ī","ĭ","į","ı","Ĵ","ĵ","Ķ","ķ","ĸ","Ĺ","Ļ","Ľ","Ŀ","Ł","ĺ","ļ","ľ","ŀ","ł","Ń","Ņ","Ň","Ŋ","ń","ņ","ň","ŋ","Ō","Ŏ","Ő","ō","ŏ","ő","Ŕ","Ŗ","Ř","ŕ","ŗ","ř","Ś","Ŝ","Ş","Š","ś","ŝ","ş","š","Ţ","Ť","Ŧ","ţ","ť","ŧ","Ũ","Ū","Ŭ","Ů","Ű","Ų","ũ","ū","ŭ","ů","ű","ų","Ŵ","ŵ","Ŷ","ŷ","Ÿ","Ź","Ż","Ž","ź","ż","ž","Ĳ","ĳ","Œ","œ","ŉ","ſ","escapeHtmlChar","&","<",">","\"","escapeStringChar","hasUnicode","mapToArray","overArg","arg","replaceHolders","placeholder","setToArray","setToPairs","stringSize","lastIndex","unicodeSize","stringToArray","unicodeToArray","asciiToArray","unescapeHtmlChar","&amp;","&lt;","&gt;","&quot;","&#39;","runInContext","TypeError","arrayProto","funcProto","objectProto","coreJsData","funcToString","idCounter","maskSrcKey","IE_PROTO","nativeObjectToString","objectCtorString","oldDash","reIsNative","allocUnsafe","getPrototype","getPrototypeOf","objectCreate","propertyIsEnumerable","spreadableSymbol","isConcatSpreadable","symIterator","iterator","symToStringTag","getNative","ctxClearTimeout","ctxNow","ctxSetTimeout","nativeCeil","nativeFloor","nativeGetSymbols","getOwnPropertySymbols","nativeIsBuffer","isBuffer","nativeIsFinite","isFinite","nativeJoin","nativeKeys","nativeMax","nativeMin","nativeNow","nativeParseInt","nativeRandom","nativeReverse","DataView","Map","Set","WeakMap","nativeCreate","metaMap","realNames","dataViewCtorString","toSource","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","symbolValueOf","symbolToString","lodash","isObjectLike","LazyWrapper","LodashWrapper","wrapperClone","baseCreate","isObject","baseLodash","chainAll","__wrapped__","__actions__","__chain__","__index__","__values__","__dir__","__filtered__","__iteratees__","__takeCount__","__views__","Hash","entries","entry","ListCache","MapCache","SetCache","__data__","Stack","arrayLikeKeys","inherited","isArr","isArg","isArguments","isBuff","skipIndexes","isIndex","arraySample","baseRandom","arraySampleSize","shuffleSelf","copyArray","baseClamp","arrayShuffle","assignMergeValue","baseAssignValue","assignValue","objValue","assocIndexOf","baseAggregator","baseEach","baseAssign","copyObject","configurable","writable","baseAt","paths","skip","lower","upper","baseClone","bitmask","customizer","stack","isDeep","isFlat","isFull","input","initCloneArray","tag","getTag","isFunc","cloneBuffer","initCloneObject","getSymbolsIn","copySymbolsIn","keysIn","baseAssignIn","getSymbols","copySymbols","Ctor","cloneArrayBuffer","dataView","byteOffset","byteLength","cloneDataView","cloneTypedArray","regexp","cloneRegExp","symbol","cloneSymbol","initCloneByTag","stacked","subValue","getAllKeysIn","getAllKeys","baseConformsTo","baseDelay","wait","baseDifference","isCommon","valuesLength","outer","computed","valuesIndex","templateSettings","escape","evaluate","interpolate","variable","imports","hash","getMapData","pairs","createBaseEach","baseForOwn","baseEachRight","baseForOwnRight","baseEvery","baseExtremum","isSymbol","baseFilter","baseFlatten","depth","isStrict","isFlattenable","baseFor","createBaseFor","baseForRight","baseFunctions","isFunction","baseGet","castPath","toKey","baseGetAllKeys","keysFunc","symbolsFunc","baseGetTag","isOwn","unmasked","getRawTag","objectToString","baseGt","baseHas","baseHasIn","baseIntersection","arrays","othLength","othIndex","caches","maxLength","Infinity","seen","baseInvoke","last","baseIsArguments","baseIsEqual","equalFunc","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","equalArrays","message","convert","isPartial","equalByTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","objProps","objLength","skipCtor","othValue","compared","objCtor","othCtor","equalObjects","baseIsEqualDeep","baseIsMatch","matchData","noCustomizer","srcValue","baseIsNative","isMasked","baseIteratee","identity","baseMatchesProperty","baseMatches","baseKeys","isPrototype","baseKeysIn","nativeKeysIn","isProto","baseLt","baseMap","isArrayLike","getMatchData","matchesStrictComparable","isKey","isStrictComparable","hasIn","baseMerge","srcIndex","mergeFunc","safeGet","isTyped","isArrayLikeObject","isPlainObject","toPlainObject","baseMergeDeep","baseNth","baseOrderBy","iteratees","orders","getIteratee","comparer","baseSortBy","criteria","objCriteria","othCriteria","ordersLength","compareAscending","order","compareMultiple","basePickBy","baseSet","basePullAll","basePullAt","indexes","baseUnset","baseRepeat","baseRest","setToString","overRest","baseSample","baseSampleSize","nested","baseSetData","baseSetToString","constant","baseShuffle","baseSlice","baseSome","baseSortedIndex","retHighest","low","high","mid","baseSortedIndexBy","valIsNaN","valIsNull","valIsSymbol","valIsUndefined","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","setLow","baseSortedUniq","baseToNumber","baseToString","baseUniq","createSet","seenIndex","baseUpdate","updater","baseWhile","isDrop","baseWrapperValue","actions","baseXor","baseZipObject","assignFunc","valsLength","castArrayLikeObject","castFunction","stringToPath","castRest","castSlice","arrayBuffer","typedArray","valIsDefined","valIsReflexive","composeArgs","partials","holders","isCurried","argsIndex","argsLength","holdersLength","leftIndex","leftLength","rangeLength","isUncurried","composeArgsRight","holdersIndex","rightIndex","rightLength","isNew","createAggregator","initializer","createAssigner","assigner","sources","guard","isIterateeCall","iterable","createCaseFirst","trailing","createCompounder","deburr","createCtor","thisBinding","createFind","findIndexFunc","createFlow","flatRest","funcs","prereq","thru","getFuncName","funcName","getData","isLaziable","plant","createHybrid","partialsRight","holdersRight","argPos","ary","arity","isAry","isBind","isBindKey","isFlip","getHolder","holdersCount","countHolders","newHolders","createRecurry","arrLength","oldArray","reorder","createInverter","toIteratee","baseInverter","createMathOperation","operator","defaultValue","createOver","arrayFunc","createPadding","chars","charsLength","createRange","step","toFinite","baseRange","createRelationalOperation","toNumber","wrapFunc","isCurry","setData","setWrapToString","createRound","toInteger","createToPairs","baseToPairs","createWrap","srcBitmask","newBitmask","isCombo","mergeData","createCurry","createPartial","createBind","customDefaultsAssignIn","customDefaultsMerge","customOmitClone","arrValue","flatten","otherFunc","isKeyable","getValue","stubArray","hasPath","hasFunc","isLength","resolve","ctorString","isMaskable","stubFalse","otherArgs","shortOut","reference","details","insertWrapDetails","updateWrapDetails","getWrapDetails","count","lastCalled","stamp","remaining","memoize","memoizeCapped","quote","subString","difference","differenceBy","differenceWith","findIndex","findLastIndex","head","intersection","mapped","intersectionBy","intersectionWith","pull","pullAll","pullAt","union","unionBy","unionWith","unzip","unzipWith","without","xor","xorBy","xorWith","zip","zipWith","chain","interceptor","wrapperAt","countBy","findLast","forEachRight","groupBy","invokeMap","partition","bindKey","debounce","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","invokeFunc","shouldInvoke","timeSinceLastCall","timerExpired","trailingEdge","timeWaiting","remainingWait","debounced","isInvoking","leadingEdge","cancel","flush","defer","resolver","memoized","Cache","negate","overArgs","transforms","funcsLength","partial","partialRight","rearg","isError","isInteger","isNumber","isString","done","iteratorToArray","remainder","toLength","isBinary","assign","assignIn","assignInWith","assignWith","at","propsIndex","propsLength","defaultsDeep","mergeWith","invertBy","merge","omit","basePick","pickBy","toPairs","toPairsIn","camelCase","upperFirst","kebabCase","lowerCase","lowerFirst","snakeCase","startCase","upperCase","hasUnicodeWord","unicodeWords","asciiWords","attempt","bindAll","flow","flowRight","methodOf","mixin","over","overEvery","overSome","basePropertyDeep","range","rangeRight","augend","addend","dividend","divisor","multiplicand","minuend","subtrahend","castArray","compact","cond","conforms","baseConforms","curry","curryRight","drop","dropRight","dropRightWhile","dropWhile","baseFill","flatMap","flatMapDeep","flatMapDepth","flattenDeep","flattenDepth","flip","fromPairs","functions","functionsIn","initial","mapKeys","matches","matchesProperty","nthArg","omitBy","once","orderBy","propertyOf","pullAllBy","pullAllWith","reject","rest","sampleSize","setWith","shuffle","sortedUniq","sortedUniqBy","separator","limit","spread","tail","take","takeRight","takeRightWhile","takeWhile","tap","throttle","toPath","isArrLike","unary","uniq","uniqBy","uniqWith","unset","update","updateWith","valuesIn","wrap","zipObject","zipObjectDeep","entriesIn","extendWith","clamp","cloneDeep","cloneDeepWith","cloneWith","conformsTo","defaultTo","endsWith","escapeRegExp","every","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","inRange","baseInRange","isBoolean","isElement","isEqual","isEqualWith","isMatch","isMatchWith","isNative","isNil","isNull","isSafeInteger","isUndefined","isWeakMap","isWeakSet","lastIndexOf","strictLastIndexOf","maxBy","mean","meanBy","minBy","stubObject","stubString","stubTrue","nth","noConflict","pad","strLength","padEnd","padStart","radix","floating","reduceRight","sample","some","sortedIndex","sortedIndexBy","sortedIndexOf","sortedLastIndex","sortedLastIndexBy","sortedLastIndexOf","startsWith","sum","sumBy","template","settings","isEscaping","isEvaluating","importsKeys","importsValues","reDelimiters","sourceURL","escapeValue","interpolateValue","esTemplateValue","evaluateValue","times","toLower","toSafeInteger","toUpper","trimEnd","trimStart","truncate","omission","search","newEnd","unescape","each","eachRight","first","VERSION","isFilter","takeName","dropName","checkIteratee","isTaker","lodashFunc","retUnwrapped","isLazy","useLazy","isHybrid","isUnwrapped","onlyLazy","chainName","dir","view","getView","iterLength","takeCount","iterIndex","commit","basic","containerId","images","renderScale","onDomReady","overlayObject","_renderPrint","_upperCanvas","loadImages","lodash_default","domReady","_core_generate_js__WEBPACK_IMPORTED_MODULE_0__","_core_canvas_js__WEBPACK_IMPORTED_MODULE_1__","_core_initialize_js__WEBPACK_IMPORTED_MODULE_2__","_core_lib_js__WEBPACK_IMPORTED_MODULE_3__","generate","ui","init","base64","ieee754","kMaxLength","TYPED_ARRAY_SUPPORT","RangeError","__proto__","encodingOrOffset","fromArrayLike","fromArrayBuffer","isEncoding","actual","write","fromString","checked","val","isnan","assertSize","isView","loweredCase","utf8ToBytes","base64ToBytes","bidirectionalIndexOf","arrayIndexOf","indexSize","valLength","read","buf","readUInt16BE","foundIndex","found","hexWrite","strLen","utf8Write","blitBuffer","asciiWrite","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","base64Slice","fromByteArray","utf8Slice","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","foo","subarray","typedArraySupport","poolSize","_augment","species","allocUnsafeSlow","_isBuffer","compare","list","swap16","swap32","swap64","hexSlice","asciiSlice","latin1Slice","utf16leSlice","equals","inspect","thisStart","thisEnd","thisCopy","targetCopy","_arr","out","bytes","checkOffset","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","INVALID_BASE64_RE","leadSurrogate","toByteArray","stringtrim","base64clean","b64","lens","getLens","validLen","placeHoldersLen","tmp","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","len2","encodeChunk","lookup","tripletToBase64","num","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","LN2","webpackPolyfill","deprecate","children"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n","/* build: `node build.js modules=ALL exclude=gestures,accessors minifier=uglifyjs` */\n/*! Fabric.js Copyright 2008-2015, Printio (Juriy Zaytsev, Maxim Chernyak) */\n\nvar fabric = fabric || { version: '2.0.1' };\n\nif (typeof exports !== 'undefined') {\n  exports.fabric = fabric;\n}\n\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n  fabric.document = document;\n  fabric.window = window;\n}\n// else {\n//   // assume we're running under node.js when document/window are not present\n//   fabric.document = require('jsdom')\n//     .jsdom(\n//       decodeURIComponent('%3C!DOCTYPE%20html%3E%3Chtml%3E%3Chead%3E%3C%2Fhead%3E%3Cbody%3E%3C%2Fbody%3E%3C%2Fhtml%3E'),\n//       { features: {\n//         FetchExternalResources: ['img']\n//       }\n//     });\n//   fabric.jsdomImplForWrapper = require('jsdom/lib/jsdom/living/generated/utils').implForWrapper;\n//   fabric.nodeCanvas = require('jsdom/lib/jsdom/utils').Canvas;\n//   fabric.window = fabric.document.defaultView;\n//   DOMParser = require('xmldom').DOMParser;\n// }\n\n/**\n * True when in environment that supports touch events\n * @type boolean\n */\nfabric.isTouchSupported = 'ontouchstart' in fabric.window;\n\n/**\n * True when in environment that's probably Node.js\n * @type boolean\n */\nfabric.isLikelyNode = typeof Buffer !== 'undefined' &&\n                      typeof window === 'undefined';\n\n/* _FROM_SVG_START_ */\n/**\n * Attributes parsed from all SVG elements\n * @type array\n */\nfabric.SHARED_ATTRIBUTES = [\n  \"display\",\n  \"transform\",\n  \"fill\", \"fill-opacity\", \"fill-rule\",\n  \"opacity\",\n  \"stroke\", \"stroke-dasharray\", \"stroke-linecap\",\n  \"stroke-linejoin\", \"stroke-miterlimit\",\n  \"stroke-opacity\", \"stroke-width\",\n  \"id\", \"paint-order\",\n  \"instantiated_by_use\"\n];\n/* _FROM_SVG_END_ */\n\n/**\n * Pixel per Inch as a default value set to 96. Can be changed for more realistic conversion.\n */\nfabric.DPI = 96;\nfabric.reNum = '(?:[-+]?(?:\\\\d+|\\\\d*\\\\.\\\\d+)(?:e[-+]?\\\\d+)?)';\nfabric.fontPaths = { };\nfabric.iMatrix = [1, 0, 0, 1, 0, 0];\nfabric.canvasModule = 'canvas';\n\n/**\n * Pixel limit for cache canvases. 1Mpx , 4Mpx should be fine.\n * @since 1.7.14\n * @type Number\n * @default\n */\nfabric.perfLimitSizeTotal = 2097152;\n\n/**\n * Pixel limit for cache canvases width or height. IE fixes the maximum at 5000\n * @since 1.7.14\n * @type Number\n * @default\n */\nfabric.maxCacheSideLimit = 4096;\n\n/**\n * Lowest pixel limit for cache canvases, set at 256PX\n * @since 1.7.14\n * @type Number\n * @default\n */\nfabric.minCacheSideLimit = 256;\n\n/**\n * Cache Object for widths of chars in text rendering.\n */\nfabric.charWidthsCache = { };\n\n/**\n * if webgl is enabled and available, textureSize will determine the size\n * of the canvas backend\n * @since 2.0.0\n * @type Number\n * @default\n */\nfabric.textureSize = 2048;\n\n/**\n * Enable webgl for filtering picture is available\n * A filtering backend will be initialized, this will both take memory and\n * time since a default 2048x2048 canvas will be created for the gl context\n * @since 2.0.0\n * @type Boolean\n * @default\n */\nfabric.enableGLFiltering = true;\n\n/**\n * Device Pixel Ratio\n * @see https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/HTML-canvas-guide/SettingUptheCanvas/SettingUptheCanvas.html\n */\nfabric.devicePixelRatio = fabric.window.devicePixelRatio ||\n                          fabric.window.webkitDevicePixelRatio ||\n                          fabric.window.mozDevicePixelRatio ||\n                          1;\n/**\n * Browser-specific constant to adjust CanvasRenderingContext2D.shadowBlur value,\n * which is unitless and not rendered equally across browsers.\n *\n * Values that work quite well (as of October 2017) are:\n * - Chrome: 1.5\n * - Edge: 1.75\n * - Firefox: 0.9\n * - Safari: 0.95\n *\n * @since 2.0.0\n * @type Number\n * @default 1\n */\nfabric.browserShadowBlurConstant = 1;\n\nfabric.initFilterBackend = function() {\n  if (fabric.enableGLFiltering && fabric.isWebglSupported && fabric.isWebglSupported(fabric.textureSize)) {\n    console.log('max texture size: ' + fabric.maxTextureSize);\n    return (new fabric.WebglFilterBackend({ tileSize: fabric.textureSize }));\n  }\n  else if (fabric.Canvas2dFilterBackend) {\n    return (new fabric.Canvas2dFilterBackend());\n  }\n};\n\n\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n  // ensure globality even if entire library were function wrapped (as in Meteor.js packaging system)\n  window.fabric = fabric;\n}\n\n\n(function() {\n\n  /**\n   * @private\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  function _removeEventListener(eventName, handler) {\n    if (!this.__eventListeners[eventName]) {\n      return;\n    }\n    var eventListener = this.__eventListeners[eventName];\n    if (handler) {\n      eventListener[eventListener.indexOf(handler)] = false;\n    }\n    else {\n      fabric.util.array.fill(eventListener, false);\n    }\n  }\n\n  /**\n   * Observes specified event\n   * @deprecated `observe` deprecated since 0.8.34 (use `on` instead)\n   * @memberOf fabric.Observable\n   * @alias on\n   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function that receives a notification when an event of the specified type occurs\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function observe(eventName, handler) {\n    if (!this.__eventListeners) {\n      this.__eventListeners = { };\n    }\n    // one object with key/value pairs was passed\n    if (arguments.length === 1) {\n      for (var prop in eventName) {\n        this.on(prop, eventName[prop]);\n      }\n    }\n    else {\n      if (!this.__eventListeners[eventName]) {\n        this.__eventListeners[eventName] = [];\n      }\n      this.__eventListeners[eventName].push(handler);\n    }\n    return this;\n  }\n\n  /**\n   * Stops event observing for a particular event handler. Calling this method\n   * without arguments removes all handlers for all events\n   * @deprecated `stopObserving` deprecated since 0.8.34 (use `off` instead)\n   * @memberOf fabric.Observable\n   * @alias off\n   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function to be deleted from EventListeners\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function stopObserving(eventName, handler) {\n    if (!this.__eventListeners) {\n      return;\n    }\n\n    // remove all key/value pairs (event name -> event handler)\n    if (arguments.length === 0) {\n      for (eventName in this.__eventListeners) {\n        _removeEventListener.call(this, eventName);\n      }\n    }\n    // one object with key/value pairs was passed\n    else if (arguments.length === 1 && typeof arguments[0] === 'object') {\n      for (var prop in eventName) {\n        _removeEventListener.call(this, prop, eventName[prop]);\n      }\n    }\n    else {\n      _removeEventListener.call(this, eventName, handler);\n    }\n    return this;\n  }\n\n  /**\n   * Fires event with an optional options object\n   * @deprecated `fire` deprecated since 1.0.7 (use `trigger` instead)\n   * @memberOf fabric.Observable\n   * @alias trigger\n   * @param {String} eventName Event name to fire\n   * @param {Object} [options] Options object\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function fire(eventName, options) {\n    if (!this.__eventListeners) {\n      return;\n    }\n\n    var listenersForEvent = this.__eventListeners[eventName];\n    if (!listenersForEvent) {\n      return;\n    }\n\n    for (var i = 0, len = listenersForEvent.length; i < len; i++) {\n      listenersForEvent[i] && listenersForEvent[i].call(this, options || { });\n    }\n    this.__eventListeners[eventName] = listenersForEvent.filter(function(value) {\n      return value !== false;\n    });\n    return this;\n  }\n\n  /**\n   * @namespace fabric.Observable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#events}\n   * @see {@link http://fabricjs.com/events|Events demo}\n   */\n  fabric.Observable = {\n    observe: observe,\n    stopObserving: stopObserving,\n    fire: fire,\n\n    on: observe,\n    off: stopObserving,\n    trigger: fire\n  };\n})();\n\n\n/**\n * @namespace fabric.Collection\n */\nfabric.Collection = {\n\n  _objects: [],\n\n  /**\n   * Adds objects to collection, Canvas or Group, then renders canvas\n   * (if `renderOnAddRemove` is not `false`).\n   * in case of Group no changes to bounding box are made.\n   * Objects should be instances of (or inherit from) fabric.Object\n   * Use of this function is highly discouraged for groups.\n   * you can add a bunch of objects with the add method but then you NEED\n   * to run a addWithUpdate call for the Group class or position/bbox will be wrong.\n   * @param {...fabric.Object} object Zero or more fabric instances\n   * @return {Self} thisArg\n   * @chainable\n   */\n  add: function () {\n    this._objects.push.apply(this._objects, arguments);\n    if (this._onObjectAdded) {\n      for (var i = 0, length = arguments.length; i < length; i++) {\n        this._onObjectAdded(arguments[i]);\n      }\n    }\n    this.renderOnAddRemove && this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Inserts an object into collection at specified index, then renders canvas (if `renderOnAddRemove` is not `false`)\n   * An object should be an instance of (or inherit from) fabric.Object\n   * Use of this function is highly discouraged for groups.\n   * you can add a bunch of objects with the insertAt method but then you NEED\n   * to run a addWithUpdate call for the Group class or position/bbox will be wrong.\n   * @param {Object} object Object to insert\n   * @param {Number} index Index to insert object at\n   * @param {Boolean} nonSplicing When `true`, no splicing (shifting) of objects occurs\n   * @return {Self} thisArg\n   * @chainable\n   */\n  insertAt: function (object, index, nonSplicing) {\n    var objects = this.getObjects();\n    if (nonSplicing) {\n      objects[index] = object;\n    }\n    else {\n      objects.splice(index, 0, object);\n    }\n    this._onObjectAdded && this._onObjectAdded(object);\n    this.renderOnAddRemove && this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Removes objects from a collection, then renders canvas (if `renderOnAddRemove` is not `false`)\n   * @param {...fabric.Object} object Zero or more fabric instances\n   * @return {Self} thisArg\n   * @chainable\n   */\n  remove: function() {\n    var objects = this.getObjects(),\n        index, somethingRemoved = false;\n\n    for (var i = 0, length = arguments.length; i < length; i++) {\n      index = objects.indexOf(arguments[i]);\n\n      // only call onObjectRemoved if an object was actually removed\n      if (index !== -1) {\n        somethingRemoved = true;\n        objects.splice(index, 1);\n        this._onObjectRemoved && this._onObjectRemoved(arguments[i]);\n      }\n    }\n\n    this.renderOnAddRemove && somethingRemoved && this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Executes given function for each object in this group\n   * @param {Function} callback\n   *                   Callback invoked with current object as first argument,\n   *                   index - as second and an array of all objects - as third.\n   *                   Callback is invoked in a context of Global Object (e.g. `window`)\n   *                   when no `context` argument is given\n   *\n   * @param {Object} context Context (aka thisObject)\n   * @return {Self} thisArg\n   * @chainable\n   */\n  forEachObject: function(callback, context) {\n    var objects = this.getObjects();\n    for (var i = 0, len = objects.length; i < len; i++) {\n      callback.call(context, objects[i], i, objects);\n    }\n    return this;\n  },\n\n  /**\n   * Returns an array of children objects of this instance\n   * Type parameter introduced in 1.3.10\n   * @param {String} [type] When specified, only objects of this type are returned\n   * @return {Array}\n   */\n  getObjects: function(type) {\n    if (typeof type === 'undefined') {\n      return this._objects;\n    }\n    return this._objects.filter(function(o) {\n      return o.type === type;\n    });\n  },\n\n  /**\n   * Returns object at specified index\n   * @param {Number} index\n   * @return {Self} thisArg\n   */\n  item: function (index) {\n    return this.getObjects()[index];\n  },\n\n  /**\n   * Returns true if collection contains no objects\n   * @return {Boolean} true if collection is empty\n   */\n  isEmpty: function () {\n    return this.getObjects().length === 0;\n  },\n\n  /**\n   * Returns a size of a collection (i.e: length of an array containing its objects)\n   * @return {Number} Collection size\n   */\n  size: function() {\n    return this.getObjects().length;\n  },\n\n  /**\n   * Returns true if collection contains an object\n   * @param {Object} object Object to check against\n   * @return {Boolean} `true` if collection contains an object\n   */\n  contains: function(object) {\n    return this.getObjects().indexOf(object) > -1;\n  },\n\n  /**\n   * Returns number representation of a collection complexity\n   * @return {Number} complexity\n   */\n  complexity: function () {\n    return this.getObjects().reduce(function (memo, current) {\n      memo += current.complexity ? current.complexity() : 0;\n      return memo;\n    }, 0);\n  }\n};\n\n\n/**\n * @namespace fabric.CommonMethods\n */\nfabric.CommonMethods = {\n\n  /**\n   * Sets object's properties from options\n   * @param {Object} [options] Options object\n   */\n  _setOptions: function(options) {\n    for (var prop in options) {\n      this.set(prop, options[prop]);\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [filler] Options object\n   * @param {String} [property] property to set the Gradient to\n   */\n  _initGradient: function(filler, property) {\n    if (filler && filler.colorStops && !(filler instanceof fabric.Gradient)) {\n      this.set(property, new fabric.Gradient(filler));\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [filler] Options object\n   * @param {String} [property] property to set the Pattern to\n   * @param {Function} [callback] callback to invoke after pattern load\n   */\n  _initPattern: function(filler, property, callback) {\n    if (filler && filler.source && !(filler instanceof fabric.Pattern)) {\n      this.set(property, new fabric.Pattern(filler, callback));\n    }\n    else {\n      callback && callback();\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [options] Options object\n   */\n  _initClipping: function(options) {\n    if (!options.clipTo || typeof options.clipTo !== 'string') {\n      return;\n    }\n\n    var functionBody = fabric.util.getFunctionBody(options.clipTo);\n    if (typeof functionBody !== 'undefined') {\n      this.clipTo = new Function('ctx', functionBody);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _setObject: function(obj) {\n    for (var prop in obj) {\n      this._set(prop, obj[prop]);\n    }\n  },\n\n  /**\n   * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\n   * @param {String|Object} key Property name or object (if object, iterate over the object properties)\n   * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  set: function(key, value) {\n    if (typeof key === 'object') {\n      this._setObject(key);\n    }\n    else {\n      if (typeof value === 'function' && key !== 'clipTo') {\n        this._set(key, value(this.get(key)));\n      }\n      else {\n        this._set(key, value);\n      }\n    }\n    return this;\n  },\n\n  _set: function(key, value) {\n    this[key] = value;\n  },\n\n  /**\n   * Toggles specified property from `true` to `false` or from `false` to `true`\n   * @param {String} property Property to toggle\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  toggle: function(property) {\n    var value = this.get(property);\n    if (typeof value === 'boolean') {\n      this.set(property, !value);\n    }\n    return this;\n  },\n\n  /**\n   * Basic getter\n   * @param {String} property Property name\n   * @return {*} value of a property\n   */\n  get: function(property) {\n    return this[property];\n  }\n};\n\n\n(function(global) {\n\n  var sqrt = Math.sqrt,\n      atan2 = Math.atan2,\n      pow = Math.pow,\n      abs = Math.abs,\n      PiBy180 = Math.PI / 180;\n\n  /**\n   * @namespace fabric.util\n   */\n  fabric.util = {\n\n    /**\n     * Removes value from an array.\n     * Presence of value (and its position in an array) is determined via `Array.prototype.indexOf`\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} array\n     * @param {*} value\n     * @return {Array} original array\n     */\n    removeFromArray: function(array, value) {\n      var idx = array.indexOf(value);\n      if (idx !== -1) {\n        array.splice(idx, 1);\n      }\n      return array;\n    },\n\n    /**\n     * Returns random number between 2 specified ones.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} min lower limit\n     * @param {Number} max upper limit\n     * @return {Number} random value (between min and max)\n     */\n    getRandomInt: function(min, max) {\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n    },\n\n    /**\n     * Transforms degrees to radians.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} degrees value in degrees\n     * @return {Number} value in radians\n     */\n    degreesToRadians: function(degrees) {\n      return degrees * PiBy180;\n    },\n\n    /**\n     * Transforms radians to degrees.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} radians value in radians\n     * @return {Number} value in degrees\n     */\n    radiansToDegrees: function(radians) {\n      return radians / PiBy180;\n    },\n\n    /**\n     * Rotates `point` around `origin` with `radians`\n     * @static\n     * @memberOf fabric.util\n     * @param {fabric.Point} point The point to rotate\n     * @param {fabric.Point} origin The origin of the rotation\n     * @param {Number} radians The radians of the angle for the rotation\n     * @return {fabric.Point} The new rotated point\n     */\n    rotatePoint: function(point, origin, radians) {\n      point.subtractEquals(origin);\n      var v = fabric.util.rotateVector(point, radians);\n      return new fabric.Point(v.x, v.y).addEquals(origin);\n    },\n\n    /**\n     * Rotates `vector` with `radians`\n     * @static\n     * @memberOf fabric.util\n     * @param {Object} vector The vector to rotate (x and y)\n     * @param {Number} radians The radians of the angle for the rotation\n     * @return {Object} The new rotated point\n     */\n    rotateVector: function(vector, radians) {\n      var sin = Math.sin(radians),\n          cos = Math.cos(radians),\n          rx = vector.x * cos - vector.y * sin,\n          ry = vector.x * sin + vector.y * cos;\n      return {\n        x: rx,\n        y: ry\n      };\n    },\n\n    /**\n     * Apply transform t to point p\n     * @static\n     * @memberOf fabric.util\n     * @param  {fabric.Point} p The point to transform\n     * @param  {Array} t The transform\n     * @param  {Boolean} [ignoreOffset] Indicates that the offset should not be applied\n     * @return {fabric.Point} The transformed point\n     */\n    transformPoint: function(p, t, ignoreOffset) {\n      if (ignoreOffset) {\n        return new fabric.Point(\n          t[0] * p.x + t[2] * p.y,\n          t[1] * p.x + t[3] * p.y\n        );\n      }\n      return new fabric.Point(\n        t[0] * p.x + t[2] * p.y + t[4],\n        t[1] * p.x + t[3] * p.y + t[5]\n      );\n    },\n\n    /**\n     * Returns coordinates of points's bounding rectangle (left, top, width, height)\n     * @param {Array} points 4 points array\n     * @return {Object} Object with left, top, width, height properties\n     */\n    makeBoundingBoxFromPoints: function(points) {\n      var xPoints = [points[0].x, points[1].x, points[2].x, points[3].x],\n          minX = fabric.util.array.min(xPoints),\n          maxX = fabric.util.array.max(xPoints),\n          width = maxX - minX,\n          yPoints = [points[0].y, points[1].y, points[2].y, points[3].y],\n          minY = fabric.util.array.min(yPoints),\n          maxY = fabric.util.array.max(yPoints),\n          height = maxY - minY;\n\n      return {\n        left: minX,\n        top: minY,\n        width: width,\n        height: height\n      };\n    },\n\n    /**\n     * Invert transformation t\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} t The transform\n     * @return {Array} The inverted transform\n     */\n    invertTransform: function(t) {\n      var a = 1 / (t[0] * t[3] - t[1] * t[2]),\n          r = [a * t[3], -a * t[1], -a * t[2], a * t[0]],\n          o = fabric.util.transformPoint({ x: t[4], y: t[5] }, r, true);\n      r[4] = -o.x;\n      r[5] = -o.y;\n      return r;\n    },\n\n    /**\n     * A wrapper around Number#toFixed, which contrary to native method returns number, not string.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number|String} number number to operate on\n     * @param {Number} fractionDigits number of fraction digits to \"leave\"\n     * @return {Number}\n     */\n    toFixed: function(number, fractionDigits) {\n      return parseFloat(Number(number).toFixed(fractionDigits));\n    },\n\n    /**\n     * Converts from attribute value to pixel value if applicable.\n     * Returns converted pixels or original value not converted.\n     * @param {Number|String} value number to operate on\n     * @param {Number} fontSize\n     * @return {Number|String}\n     */\n    parseUnit: function(value, fontSize) {\n      var unit = /\\D{0,2}$/.exec(value),\n          number = parseFloat(value);\n      if (!fontSize) {\n        fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n      }\n      switch (unit[0]) {\n        case 'mm':\n          return number * fabric.DPI / 25.4;\n\n        case 'cm':\n          return number * fabric.DPI / 2.54;\n\n        case 'in':\n          return number * fabric.DPI;\n\n        case 'pt':\n          return number * fabric.DPI / 72; // or * 4 / 3\n\n        case 'pc':\n          return number * fabric.DPI / 72 * 12; // or * 16\n\n        case 'em':\n          return number * fontSize;\n\n        default:\n          return number;\n      }\n    },\n\n    /**\n     * Function which always returns `false`.\n     * @static\n     * @memberOf fabric.util\n     * @return {Boolean}\n     */\n    falseFunction: function() {\n      return false;\n    },\n\n    /**\n     * Returns klass \"Class\" object of given namespace\n     * @memberOf fabric.util\n     * @param {String} type Type of object (eg. 'circle')\n     * @param {String} namespace Namespace to get klass \"Class\" object from\n     * @return {Object} klass \"Class\"\n     */\n    getKlass: function(type, namespace) {\n      // capitalize first letter only\n      type = fabric.util.string.camelize(type.charAt(0).toUpperCase() + type.slice(1));\n      return fabric.util.resolveNamespace(namespace)[type];\n    },\n\n    /**\n     * Returns array of attributes for given svg that fabric parses\n     * @memberOf fabric.util\n     * @param {String} type Type of svg element (eg. 'circle')\n     * @return {Array} string names of supported attributes\n     */\n    getSvgAttributes: function(type) {\n      var attributes = [\n        'instantiated_by_use',\n        'style',\n        'id',\n        'class'\n      ];\n      switch (type) {\n        case 'linearGradient':\n          attributes = attributes.concat(['x1', 'y1', 'x2', 'y2', 'gradientUnits', 'gradientTransform']);\n          break;\n        case 'radialGradient':\n          attributes = attributes.concat(['gradientUnits', 'gradientTransform', 'cx', 'cy', 'r', 'fx', 'fy', 'fr']);\n          break;\n        case 'stop':\n          attributes = attributes.concat(['offset', 'stop-color', 'stop-opacity']);\n          break;\n      }\n      return attributes;\n    },\n\n    /**\n     * Returns object of given namespace\n     * @memberOf fabric.util\n     * @param {String} namespace Namespace string e.g. 'fabric.Image.filter' or 'fabric'\n     * @return {Object} Object for given namespace (default fabric)\n     */\n    resolveNamespace: function(namespace) {\n      if (!namespace) {\n        return fabric;\n      }\n\n      var parts = namespace.split('.'),\n          len = parts.length, i,\n          obj = global || fabric.window;\n\n      for (i = 0; i < len; ++i) {\n        obj = obj[parts[i]];\n      }\n\n      return obj;\n    },\n\n    /**\n     * Loads image element from given url and passes it to a callback\n     * @memberOf fabric.util\n     * @param {String} url URL representing an image\n     * @param {Function} callback Callback; invoked with loaded image\n     * @param {*} [context] Context to invoke callback in\n     * @param {Object} [crossOrigin] crossOrigin value to set image element to\n     */\n    loadImage: function(url, callback, context, crossOrigin) {\n      if (!url) {\n        callback && callback.call(context, url);\n        return;\n      }\n\n      var img = fabric.util.createImage();\n\n      /** @ignore */\n      var onLoadCallback = function () {\n        callback && callback.call(context, img);\n        img = img.onload = img.onerror = null;\n      };\n\n      img.onload = onLoadCallback;\n      /** @ignore */\n      img.onerror = function() {\n        fabric.log('Error loading ' + img.src);\n        callback && callback.call(context, null, true);\n        img = img.onload = img.onerror = null;\n      };\n\n      // data-urls appear to be buggy with crossOrigin\n      // https://github.com/kangax/fabric.js/commit/d0abb90f1cd5c5ef9d2a94d3fb21a22330da3e0a#commitcomment-4513767\n      // see https://code.google.com/p/chromium/issues/detail?id=315152\n      //     https://bugzilla.mozilla.org/show_bug.cgi?id=935069\n      if (url.indexOf('data') !== 0 && crossOrigin) {\n        img.crossOrigin = crossOrigin;\n      }\n\n      // IE10 / IE11-Fix: SVG contents from data: URI\n      // will only be available if the IMG is present\n      // in the DOM (and visible)\n      if (url.substring(0,14) === 'data:image/svg') {\n        img.onload = null;\n        fabric.util.loadImageInDom(img, onLoadCallback);\n      }\n\n      img.src = url;\n    },\n\n    /**\n     * Attaches SVG image with data: URL to the dom\n     * @memberOf fabric.util\n     * @param {Object} img Image object with data:image/svg src\n     * @param {Function} callback Callback; invoked with loaded image\n     * @return {Object} DOM element (div containing the SVG image)\n     */\n    loadImageInDom: function(img, onLoadCallback) {\n      var div = fabric.document.createElement('div');\n      div.style.width = div.style.height = '1px';\n      div.style.left = div.style.top = '-100%';\n      div.style.position = 'absolute';\n      div.appendChild(img);\n      fabric.document.querySelector('body').appendChild(div);\n      /**\n       * Wrap in function to:\n       *   1. Call existing callback\n       *   2. Cleanup DOM\n       */\n      img.onload = function () {\n        onLoadCallback();\n        div.parentNode.removeChild(div);\n        div = null;\n      };\n    },\n\n    /**\n     * Creates corresponding fabric instances from their object representations\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} objects Objects to enliven\n     * @param {Function} callback Callback to invoke when all objects are created\n     * @param {String} namespace Namespace to get klass \"Class\" object from\n     * @param {Function} reviver Method for further parsing of object elements,\n     * called after each fabric object created.\n     */\n    enlivenObjects: function(objects, callback, namespace, reviver) {\n      objects = objects || [];\n\n      function onLoaded() {\n        if (++numLoadedObjects === numTotalObjects) {\n          callback && callback(enlivenedObjects);\n        }\n      }\n\n      var enlivenedObjects = [],\n          numLoadedObjects = 0,\n          numTotalObjects = objects.length;\n\n      if (!numTotalObjects) {\n        callback && callback(enlivenedObjects);\n        return;\n      }\n\n      objects.forEach(function (o, index) {\n        // if sparse array\n        if (!o || !o.type) {\n          onLoaded();\n          return;\n        }\n        var klass = fabric.util.getKlass(o.type, namespace);\n        klass.fromObject(o, function (obj, error) {\n          error || (enlivenedObjects[index] = obj);\n          reviver && reviver(o, obj, error);\n          onLoaded();\n        });\n      });\n    },\n\n    /**\n     * Create and wait for loading of patterns\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} patterns Objects to enliven\n     * @param {Function} callback Callback to invoke when all objects are created\n     * called after each fabric object created.\n     */\n    enlivenPatterns: function(patterns, callback) {\n      patterns = patterns || [];\n\n      function onLoaded() {\n        if (++numLoadedPatterns === numPatterns) {\n          callback && callback(enlivenedPatterns);\n        }\n      }\n\n      var enlivenedPatterns = [],\n          numLoadedPatterns = 0,\n          numPatterns = patterns.length;\n\n      if (!numPatterns) {\n        callback && callback(enlivenedPatterns);\n        return;\n      }\n\n      patterns.forEach(function (p, index) {\n        if (p && p.source) {\n          new fabric.Pattern(p, function(pattern) {\n            enlivenedPatterns[index] = pattern;\n            onLoaded();\n          });\n        }\n        else {\n          enlivenedPatterns[index] = p;\n          onLoaded();\n        }\n      });\n    },\n\n    /**\n     * Groups SVG elements (usually those retrieved from SVG document)\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} elements SVG elements to group\n     * @param {Object} [options] Options object\n     * @param {String} path Value to set sourcePath to\n     * @return {fabric.Object|fabric.Group}\n     */\n    groupSVGElements: function(elements, options, path) {\n      var object;\n      if (elements.length === 1) {\n        return elements[0];\n      }\n      if (options) {\n        if (options.width && options.height) {\n          options.centerPoint = {\n            x: options.width / 2,\n            y: options.height / 2\n          };\n        }\n        else {\n          delete options.width;\n          delete options.height;\n        }\n      }\n      object = new fabric.Group(elements, options);\n      if (typeof path !== 'undefined') {\n        object.sourcePath = path;\n      }\n      return object;\n    },\n\n    /**\n     * Populates an object with properties of another object\n     * @static\n     * @memberOf fabric.util\n     * @param {Object} source Source object\n     * @param {Object} destination Destination object\n     * @return {Array} properties Properties names to include\n     */\n    populateWithProperties: function(source, destination, properties) {\n      if (properties && Object.prototype.toString.call(properties) === '[object Array]') {\n        for (var i = 0, len = properties.length; i < len; i++) {\n          if (properties[i] in source) {\n            destination[properties[i]] = source[properties[i]];\n          }\n        }\n      }\n    },\n\n    /**\n     * Draws a dashed line between two points\n     *\n     * This method is used to draw dashed line around selection area.\n     * See <a href=\"http://stackoverflow.com/questions/4576724/dotted-stroke-in-canvas\">dotted stroke in canvas</a>\n     *\n     * @param {CanvasRenderingContext2D} ctx context\n     * @param {Number} x  start x coordinate\n     * @param {Number} y start y coordinate\n     * @param {Number} x2 end x coordinate\n     * @param {Number} y2 end y coordinate\n     * @param {Array} da dash array pattern\n     */\n    drawDashedLine: function(ctx, x, y, x2, y2, da) {\n      var dx = x2 - x,\n          dy = y2 - y,\n          len = sqrt(dx * dx + dy * dy),\n          rot = atan2(dy, dx),\n          dc = da.length,\n          di = 0,\n          draw = true;\n\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.moveTo(0, 0);\n      ctx.rotate(rot);\n\n      x = 0;\n      while (len > x) {\n        x += da[di++ % dc];\n        if (x > len) {\n          x = len;\n        }\n        ctx[draw ? 'lineTo' : 'moveTo'](x, 0);\n        draw = !draw;\n      }\n\n      ctx.restore();\n    },\n\n    /**\n     * Creates canvas element\n     * @static\n     * @memberOf fabric.util\n     * @return {CanvasElement} initialized canvas element\n     */\n    createCanvasElement: function() {\n      return fabric.document.createElement('canvas');\n    },\n\n    /**\n     * Creates image element (works on client and node)\n     * @static\n     * @memberOf fabric.util\n     * @return {HTMLImageElement} HTML image element\n     */\n    createImage: function() {\n      return fabric.document.createElement('img');\n    },\n\n    /**\n     * @static\n     * @memberOf fabric.util\n     * @deprecated since 2.0.0\n     * @param {fabric.Object} receiver Object implementing `clipTo` method\n     * @param {CanvasRenderingContext2D} ctx Context to clip\n     */\n    clipContext: function(receiver, ctx) {\n      ctx.save();\n      ctx.beginPath();\n      receiver.clipTo(ctx);\n      ctx.clip();\n    },\n\n    /**\n     * Multiply matrix A by matrix B to nest transformations\n     * @static\n     * @memberOf fabric.util\n     * @param  {Array} a First transformMatrix\n     * @param  {Array} b Second transformMatrix\n     * @param  {Boolean} is2x2 flag to multiply matrices as 2x2 matrices\n     * @return {Array} The product of the two transform matrices\n     */\n    multiplyTransformMatrices: function(a, b, is2x2) {\n      // Matrix multiply a * b\n      return [\n        a[0] * b[0] + a[2] * b[1],\n        a[1] * b[0] + a[3] * b[1],\n        a[0] * b[2] + a[2] * b[3],\n        a[1] * b[2] + a[3] * b[3],\n        is2x2 ? 0 : a[0] * b[4] + a[2] * b[5] + a[4],\n        is2x2 ? 0 : a[1] * b[4] + a[3] * b[5] + a[5]\n      ];\n    },\n\n    /**\n     * Decomposes standard 2x2 matrix into transform componentes\n     * @static\n     * @memberOf fabric.util\n     * @param  {Array} a transformMatrix\n     * @return {Object} Components of transform\n     */\n    qrDecompose: function(a) {\n      var angle = atan2(a[1], a[0]),\n          denom = pow(a[0], 2) + pow(a[1], 2),\n          scaleX = sqrt(denom),\n          scaleY = (a[0] * a[3] - a[2] * a [1]) / scaleX,\n          skewX = atan2(a[0] * a[2] + a[1] * a [3], denom);\n      return {\n        angle: angle  / PiBy180,\n        scaleX: scaleX,\n        scaleY: scaleY,\n        skewX: skewX / PiBy180,\n        skewY: 0,\n        translateX: a[4],\n        translateY: a[5]\n      };\n    },\n\n    customTransformMatrix: function(scaleX, scaleY, skewX) {\n      var skewMatrixX = [1, 0, abs(Math.tan(skewX * PiBy180)), 1],\n          scaleMatrix = [abs(scaleX), 0, 0, abs(scaleY)];\n      return fabric.util.multiplyTransformMatrices(scaleMatrix, skewMatrixX, true);\n    },\n\n    resetObjectTransform: function (target) {\n      target.scaleX = 1;\n      target.scaleY = 1;\n      target.skewX = 0;\n      target.skewY = 0;\n      target.flipX = false;\n      target.flipY = false;\n      target.rotate(0);\n    },\n\n    /**\n     * Returns string representation of function body\n     * @param {Function} fn Function to get body of\n     * @return {String} Function body\n     */\n    getFunctionBody: function(fn) {\n      return (String(fn).match(/function[^{]*\\{([\\s\\S]*)\\}/) || {})[1];\n    },\n\n    /**\n     * Returns true if context has transparent pixel\n     * at specified location (taking tolerance into account)\n     * @param {CanvasRenderingContext2D} ctx context\n     * @param {Number} x x coordinate\n     * @param {Number} y y coordinate\n     * @param {Number} tolerance Tolerance\n     */\n    isTransparent: function(ctx, x, y, tolerance) {\n\n      // If tolerance is > 0 adjust start coords to take into account.\n      // If moves off Canvas fix to 0\n      if (tolerance > 0) {\n        if (x > tolerance) {\n          x -= tolerance;\n        }\n        else {\n          x = 0;\n        }\n        if (y > tolerance) {\n          y -= tolerance;\n        }\n        else {\n          y = 0;\n        }\n      }\n\n      var _isTransparent = true, i, temp,\n          imageData = ctx.getImageData(x, y, (tolerance * 2) || 1, (tolerance * 2) || 1),\n          l = imageData.data.length;\n\n      // Split image data - for tolerance > 1, pixelDataSize = 4;\n      for (i = 3; i < l; i += 4) {\n        temp = imageData.data[i];\n        _isTransparent = temp <= 0;\n        if (_isTransparent === false) {\n          break; // Stop if colour found\n        }\n      }\n\n      imageData = null;\n\n      return _isTransparent;\n    },\n\n    /**\n     * Parse preserveAspectRatio attribute from element\n     * @param {string} attribute to be parsed\n     * @return {Object} an object containing align and meetOrSlice attribute\n     */\n    parsePreserveAspectRatioAttribute: function(attribute) {\n      var meetOrSlice = 'meet', alignX = 'Mid', alignY = 'Mid',\n          aspectRatioAttrs = attribute.split(' '), align;\n\n      if (aspectRatioAttrs && aspectRatioAttrs.length) {\n        meetOrSlice = aspectRatioAttrs.pop();\n        if (meetOrSlice !== 'meet' && meetOrSlice !== 'slice') {\n          align = meetOrSlice;\n          meetOrSlice = 'meet';\n        }\n        else if (aspectRatioAttrs.length) {\n          align = aspectRatioAttrs.pop();\n        }\n      }\n      //divide align in alignX and alignY\n      alignX = align !== 'none' ? align.slice(1, 4) : 'none';\n      alignY = align !== 'none' ? align.slice(5, 8) : 'none';\n      return {\n        meetOrSlice: meetOrSlice,\n        alignX: alignX,\n        alignY: alignY\n      };\n    },\n\n    /**\n     * Clear char widths cache for a font family.\n     * @memberOf fabric.util\n     * @param {String} [fontFamily] font family to clear\n     */\n    clearFabricFontCache: function(fontFamily) {\n      if (!fontFamily) {\n        fabric.charWidthsCache = { };\n      }\n      else if (fabric.charWidthsCache[fontFamily]) {\n        delete fabric.charWidthsCache[fontFamily];\n      }\n    },\n\n    /**\n     * Clear char widths cache for a font family.\n     * @memberOf fabric.util\n     * @param {Number} ar aspect ratio\n     * @param {Number} maximumArea Maximum area you want to achieve\n     * @return {Object.x} Limited dimensions by X\n     * @return {Object.y} Limited dimensions by Y\n     */\n    limitDimsByArea: function(ar, maximumArea) {\n      var roughWidth = Math.sqrt(maximumArea * ar),\n          perfLimitSizeY = Math.floor(maximumArea / roughWidth);\n      return { x: Math.floor(roughWidth), y: perfLimitSizeY };\n    },\n\n    capValue: function(min, value, max) {\n      return Math.max(min, Math.min(value, max));\n    },\n\n    findScaleToFit: function(source, destination) {\n      return Math.min(destination.width / source.width, destination.height / source.height);\n    },\n\n    findScaleToCover: function(source, destination) {\n      return Math.max(destination.width / source.width, destination.height / source.height);\n    }\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  var arcToSegmentsCache = { },\n      segmentToBezierCache = { },\n      boundsOfCurveCache = { },\n      _join = Array.prototype.join;\n\n  /* Adapted from http://dxr.mozilla.org/mozilla-central/source/content/svg/content/src/nsSVGPathDataParser.cpp\n   * by Andrea Bogazzi code is under MPL. if you don't have a copy of the license you can take it here\n   * http://mozilla.org/MPL/2.0/\n   */\n  function arcToSegments(toX, toY, rx, ry, large, sweep, rotateX) {\n    var argsString = _join.call(arguments);\n    if (arcToSegmentsCache[argsString]) {\n      return arcToSegmentsCache[argsString];\n    }\n\n    var PI = Math.PI, th = rotateX * PI / 180,\n        sinTh = Math.sin(th),\n        cosTh = Math.cos(th),\n        fromX = 0, fromY = 0;\n\n    rx = Math.abs(rx);\n    ry = Math.abs(ry);\n\n    var px = -cosTh * toX * 0.5 - sinTh * toY * 0.5,\n        py = -cosTh * toY * 0.5 + sinTh * toX * 0.5,\n        rx2 = rx * rx, ry2 = ry * ry, py2 = py * py, px2 = px * px,\n        pl = rx2 * ry2 - rx2 * py2 - ry2 * px2,\n        root = 0;\n\n    if (pl < 0) {\n      var s = Math.sqrt(1 - pl / (rx2 * ry2));\n      rx *= s;\n      ry *= s;\n    }\n    else {\n      root = (large === sweep ? -1.0 : 1.0) *\n              Math.sqrt( pl / (rx2 * py2 + ry2 * px2));\n    }\n\n    var cx = root * rx * py / ry,\n        cy = -root * ry * px / rx,\n        cx1 = cosTh * cx - sinTh * cy + toX * 0.5,\n        cy1 = sinTh * cx + cosTh * cy + toY * 0.5,\n        mTheta = calcVectorAngle(1, 0, (px - cx) / rx, (py - cy) / ry),\n        dtheta = calcVectorAngle((px - cx) / rx, (py - cy) / ry, (-px - cx) / rx, (-py - cy) / ry);\n\n    if (sweep === 0 && dtheta > 0) {\n      dtheta -= 2 * PI;\n    }\n    else if (sweep === 1 && dtheta < 0) {\n      dtheta += 2 * PI;\n    }\n\n    // Convert into cubic bezier segments <= 90deg\n    var segments = Math.ceil(Math.abs(dtheta / PI * 2)),\n        result = [], mDelta = dtheta / segments,\n        mT = 8 / 3 * Math.sin(mDelta / 4) * Math.sin(mDelta / 4) / Math.sin(mDelta / 2),\n        th3 = mTheta + mDelta;\n\n    for (var i = 0; i < segments; i++) {\n      result[i] = segmentToBezier(mTheta, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY);\n      fromX = result[i][4];\n      fromY = result[i][5];\n      mTheta = th3;\n      th3 += mDelta;\n    }\n    arcToSegmentsCache[argsString] = result;\n    return result;\n  }\n\n  function segmentToBezier(th2, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY) {\n    var argsString2 = _join.call(arguments);\n    if (segmentToBezierCache[argsString2]) {\n      return segmentToBezierCache[argsString2];\n    }\n\n    var costh2 = Math.cos(th2),\n        sinth2 = Math.sin(th2),\n        costh3 = Math.cos(th3),\n        sinth3 = Math.sin(th3),\n        toX = cosTh * rx * costh3 - sinTh * ry * sinth3 + cx1,\n        toY = sinTh * rx * costh3 + cosTh * ry * sinth3 + cy1,\n        cp1X = fromX + mT * ( -cosTh * rx * sinth2 - sinTh * ry * costh2),\n        cp1Y = fromY + mT * ( -sinTh * rx * sinth2 + cosTh * ry * costh2),\n        cp2X = toX + mT * ( cosTh * rx * sinth3 + sinTh * ry * costh3),\n        cp2Y = toY + mT * ( sinTh * rx * sinth3 - cosTh * ry * costh3);\n\n    segmentToBezierCache[argsString2] = [\n      cp1X, cp1Y,\n      cp2X, cp2Y,\n      toX, toY\n    ];\n    return segmentToBezierCache[argsString2];\n  }\n\n  /*\n   * Private\n   */\n  function calcVectorAngle(ux, uy, vx, vy) {\n    var ta = Math.atan2(uy, ux),\n        tb = Math.atan2(vy, vx);\n    if (tb >= ta) {\n      return tb - ta;\n    }\n    else {\n      return 2 * Math.PI - (ta - tb);\n    }\n  }\n\n  /**\n   * Draws arc\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {Number} fx\n   * @param {Number} fy\n   * @param {Array} coords\n   */\n  fabric.util.drawArc = function(ctx, fx, fy, coords) {\n    var rx = coords[0],\n        ry = coords[1],\n        rot = coords[2],\n        large = coords[3],\n        sweep = coords[4],\n        tx = coords[5],\n        ty = coords[6],\n        segs = [[], [], [], []],\n        segsNorm = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\n    for (var i = 0, len = segsNorm.length; i < len; i++) {\n      segs[i][0] = segsNorm[i][0] + fx;\n      segs[i][1] = segsNorm[i][1] + fy;\n      segs[i][2] = segsNorm[i][2] + fx;\n      segs[i][3] = segsNorm[i][3] + fy;\n      segs[i][4] = segsNorm[i][4] + fx;\n      segs[i][5] = segsNorm[i][5] + fy;\n      ctx.bezierCurveTo.apply(ctx, segs[i]);\n    }\n  };\n\n  /**\n   * Calculate bounding box of a elliptic-arc\n   * @param {Number} fx start point of arc\n   * @param {Number} fy\n   * @param {Number} rx horizontal radius\n   * @param {Number} ry vertical radius\n   * @param {Number} rot angle of horizontal axe\n   * @param {Number} large 1 or 0, whatever the arc is the big or the small on the 2 points\n   * @param {Number} sweep 1 or 0, 1 clockwise or counterclockwise direction\n   * @param {Number} tx end point of arc\n   * @param {Number} ty\n   */\n  fabric.util.getBoundsOfArc = function(fx, fy, rx, ry, rot, large, sweep, tx, ty) {\n\n    var fromX = 0, fromY = 0, bound, bounds = [],\n        segs = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\n    for (var i = 0, len = segs.length; i < len; i++) {\n      bound = getBoundsOfCurve(fromX, fromY, segs[i][0], segs[i][1], segs[i][2], segs[i][3], segs[i][4], segs[i][5]);\n      bounds.push({ x: bound[0].x + fx, y: bound[0].y + fy });\n      bounds.push({ x: bound[1].x + fx, y: bound[1].y + fy });\n      fromX = segs[i][4];\n      fromY = segs[i][5];\n    }\n    return bounds;\n  };\n\n  /**\n   * Calculate bounding box of a beziercurve\n   * @param {Number} x0 starting point\n   * @param {Number} y0\n   * @param {Number} x1 first control point\n   * @param {Number} y1\n   * @param {Number} x2 secondo control point\n   * @param {Number} y2\n   * @param {Number} x3 end of beizer\n   * @param {Number} y3\n   */\n  // taken from http://jsbin.com/ivomiq/56/edit  no credits available for that.\n  function getBoundsOfCurve(x0, y0, x1, y1, x2, y2, x3, y3) {\n    var argsString = _join.call(arguments);\n    if (boundsOfCurveCache[argsString]) {\n      return boundsOfCurveCache[argsString];\n    }\n\n    var sqrt = Math.sqrt,\n        min = Math.min, max = Math.max,\n        abs = Math.abs, tvalues = [],\n        bounds = [[], []],\n        a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n\n    b = 6 * x0 - 12 * x1 + 6 * x2;\n    a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n    c = 3 * x1 - 3 * x0;\n\n    for (var i = 0; i < 2; ++i) {\n      if (i > 0) {\n        b = 6 * y0 - 12 * y1 + 6 * y2;\n        a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n        c = 3 * y1 - 3 * y0;\n      }\n\n      if (abs(a) < 1e-12) {\n        if (abs(b) < 1e-12) {\n          continue;\n        }\n        t = -c / b;\n        if (0 < t && t < 1) {\n          tvalues.push(t);\n        }\n        continue;\n      }\n      b2ac = b * b - 4 * c * a;\n      if (b2ac < 0) {\n        continue;\n      }\n      sqrtb2ac = sqrt(b2ac);\n      t1 = (-b + sqrtb2ac) / (2 * a);\n      if (0 < t1 && t1 < 1) {\n        tvalues.push(t1);\n      }\n      t2 = (-b - sqrtb2ac) / (2 * a);\n      if (0 < t2 && t2 < 1) {\n        tvalues.push(t2);\n      }\n    }\n\n    var x, y, j = tvalues.length, jlen = j, mt;\n    while (j--) {\n      t = tvalues[j];\n      mt = 1 - t;\n      x = (mt * mt * mt * x0) + (3 * mt * mt * t * x1) + (3 * mt * t * t * x2) + (t * t * t * x3);\n      bounds[0][j] = x;\n\n      y = (mt * mt * mt * y0) + (3 * mt * mt * t * y1) + (3 * mt * t * t * y2) + (t * t * t * y3);\n      bounds[1][j] = y;\n    }\n\n    bounds[0][jlen] = x0;\n    bounds[1][jlen] = y0;\n    bounds[0][jlen + 1] = x3;\n    bounds[1][jlen + 1] = y3;\n    var result = [\n      {\n        x: min.apply(null, bounds[0]),\n        y: min.apply(null, bounds[1])\n      },\n      {\n        x: max.apply(null, bounds[0]),\n        y: max.apply(null, bounds[1])\n      }\n    ];\n    boundsOfCurveCache[argsString] = result;\n    return result;\n  }\n\n  fabric.util.getBoundsOfCurve = getBoundsOfCurve;\n\n})();\n\n\n(function() {\n\n  var slice = Array.prototype.slice;\n\n  /**\n   * Invokes method on all items in a given array\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} method Name of a method to invoke\n   * @return {Array}\n   */\n  function invoke(array, method) {\n    var args = slice.call(arguments, 2), result = [];\n    for (var i = 0, len = array.length; i < len; i++) {\n      result[i] = args.length ? array[i][method].apply(array[i], args) : array[i][method].call(array[i]);\n    }\n    return result;\n  }\n\n  /**\n   * Finds maximum value in array (not necessarily \"first\" one)\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} byProperty\n   * @return {*}\n   */\n  function max(array, byProperty) {\n    return find(array, byProperty, function(value1, value2) {\n      return value1 >= value2;\n    });\n  }\n\n  /**\n   * Finds minimum value in array (not necessarily \"first\" one)\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} byProperty\n   * @return {*}\n   */\n  function min(array, byProperty) {\n    return find(array, byProperty, function(value1, value2) {\n      return value1 < value2;\n    });\n  }\n\n  /**\n   * @private\n   */\n  function fill(array, value) {\n    var k = array.length;\n    while (k--) {\n      array[k] = value;\n    }\n    return array;\n  }\n\n  /**\n   * @private\n   */\n  function find(array, byProperty, condition) {\n    if (!array || array.length === 0) {\n      return;\n    }\n\n    var i = array.length - 1,\n        result = byProperty ? array[i][byProperty] : array[i];\n    if (byProperty) {\n      while (i--) {\n        if (condition(array[i][byProperty], result)) {\n          result = array[i][byProperty];\n        }\n      }\n    }\n    else {\n      while (i--) {\n        if (condition(array[i], result)) {\n          result = array[i];\n        }\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @namespace fabric.util.array\n   */\n  fabric.util.array = {\n    fill: fill,\n    invoke: invoke,\n    min: min,\n    max: max\n  };\n\n})();\n\n\n(function() {\n  /**\n   * Copies all enumerable properties of one js object to another\n   * Does not clone or extend fabric.Object subclasses.\n   * @memberOf fabric.util.object\n   * @param {Object} destination Where to copy to\n   * @param {Object} source Where to copy from\n   * @return {Object}\n   */\n\n  function extend(destination, source, deep) {\n    // JScript DontEnum bug is not taken care of\n    // the deep clone is for internal use, is not meant to avoid\n    // javascript traps or cloning html element or self referenced objects.\n    if (deep) {\n      if (!fabric.isLikelyNode && source instanceof Element) {\n        // avoid cloning deep images, canvases,\n        destination = source;\n      }\n      else if (source instanceof Array) {\n        destination = [];\n        for (var i = 0, len = source.length; i < len; i++) {\n          destination[i] = extend({ }, source[i], deep);\n        }\n      }\n      else if (source && typeof source === 'object') {\n        for (var property in source) {\n          if (source.hasOwnProperty(property)) {\n            destination[property] = extend({ }, source[property], deep);\n          }\n        }\n      }\n      else {\n        // this sounds odd for an extend but is ok for recursive use\n        destination = source;\n      }\n    }\n    else {\n      for (var property in source) {\n        destination[property] = source[property];\n      }\n    }\n    return destination;\n  }\n\n  /**\n   * Creates an empty object and copies all enumerable properties of another object to it\n   * @memberOf fabric.util.object\n   * TODO: this function return an empty object if you try to clone null\n   * @param {Object} object Object to clone\n   * @return {Object}\n   */\n  function clone(object, deep) {\n    return extend({ }, object, deep);\n  }\n\n  /** @namespace fabric.util.object */\n  fabric.util.object = {\n    extend: extend,\n    clone: clone\n  };\n  fabric.util.object.extend(fabric.util, fabric.Observable);\n})();\n\n\n(function() {\n\n  /**\n   * Camelizes a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to camelize\n   * @return {String} Camelized version of a string\n   */\n  function camelize(string) {\n    return string.replace(/-+(.)?/g, function(match, character) {\n      return character ? character.toUpperCase() : '';\n    });\n  }\n\n  /**\n   * Capitalizes a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to capitalize\n   * @param {Boolean} [firstLetterOnly] If true only first letter is capitalized\n   * and other letters stay untouched, if false first letter is capitalized\n   * and other letters are converted to lowercase.\n   * @return {String} Capitalized version of a string\n   */\n  function capitalize(string, firstLetterOnly) {\n    return string.charAt(0).toUpperCase() +\n      (firstLetterOnly ? string.slice(1) : string.slice(1).toLowerCase());\n  }\n\n  /**\n   * Escapes XML in a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to escape\n   * @return {String} Escaped version of a string\n   */\n  function escapeXml(string) {\n    return string.replace(/&/g, '&amp;')\n      .replace(/\"/g, '&quot;')\n      .replace(/'/g, '&apos;')\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;');\n  }\n\n  /**\n   * Divide a string in the user perceived single units\n   * @memberOf fabric.util.string\n   * @param {String} textstring String to escape\n   * @return {Array} array containing the graphemes\n   */\n  function graphemeSplit(textstring) {\n    var i = 0, chr, graphemes = [];\n    for (i = 0, chr; i < textstring.length; i++) {\n      if ((chr = getWholeChar(textstring, i)) === false) {\n        continue;\n      }\n      graphemes.push(chr);\n    }\n    return graphemes;\n  }\n\n  // taken from mdn in the charAt doc page.\n  function getWholeChar(str, i) {\n    var code = str.charCodeAt(i);\n\n    if (isNaN(code)) {\n      return ''; // Position not found\n    }\n    if (code < 0xD800 || code > 0xDFFF) {\n      return str.charAt(i);\n    }\n\n    // High surrogate (could change last hex to 0xDB7F to treat high private\n    // surrogates as single characters)\n    if (0xD800 <= code && code <= 0xDBFF) {\n      if (str.length <= (i + 1)) {\n        throw 'High surrogate without following low surrogate';\n      }\n      var next = str.charCodeAt(i + 1);\n      if (0xDC00 > next || next > 0xDFFF) {\n        throw 'High surrogate without following low surrogate';\n      }\n      return str.charAt(i) + str.charAt(i + 1);\n    }\n    // Low surrogate (0xDC00 <= code && code <= 0xDFFF)\n    if (i === 0) {\n      throw 'Low surrogate without preceding high surrogate';\n    }\n    var prev = str.charCodeAt(i - 1);\n\n    // (could change last hex to 0xDB7F to treat high private\n    // surrogates as single characters)\n    if (0xD800 > prev || prev > 0xDBFF) {\n      throw 'Low surrogate without preceding high surrogate';\n    }\n    // We can pass over low surrogates now as the second component\n    // in a pair which we have already processed\n    return false;\n  }\n\n\n  /**\n   * String utilities\n   * @namespace fabric.util.string\n   */\n  fabric.util.string = {\n    camelize: camelize,\n    capitalize: capitalize,\n    escapeXml: escapeXml,\n    graphemeSplit: graphemeSplit\n  };\n})();\n\n\n(function() {\n\n  var slice = Array.prototype.slice, emptyFunction = function() { },\n\n      IS_DONTENUM_BUGGY = (function() {\n        for (var p in { toString: 1 }) {\n          if (p === 'toString') {\n            return false;\n          }\n        }\n        return true;\n      })(),\n\n      /** @ignore */\n      addMethods = function(klass, source, parent) {\n        for (var property in source) {\n\n          if (property in klass.prototype &&\n              typeof klass.prototype[property] === 'function' &&\n              (source[property] + '').indexOf('callSuper') > -1) {\n\n            klass.prototype[property] = (function(property) {\n              return function() {\n\n                var superclass = this.constructor.superclass;\n                this.constructor.superclass = parent;\n                var returnValue = source[property].apply(this, arguments);\n                this.constructor.superclass = superclass;\n\n                if (property !== 'initialize') {\n                  return returnValue;\n                }\n              };\n            })(property);\n          }\n          else {\n            klass.prototype[property] = source[property];\n          }\n\n          if (IS_DONTENUM_BUGGY) {\n            if (source.toString !== Object.prototype.toString) {\n              klass.prototype.toString = source.toString;\n            }\n            if (source.valueOf !== Object.prototype.valueOf) {\n              klass.prototype.valueOf = source.valueOf;\n            }\n          }\n        }\n      };\n\n  function Subclass() { }\n\n  function callSuper(methodName) {\n    var parentMethod = null,\n        _this = this;\n\n    // climb prototype chain to find method not equal to callee's method\n    while (_this.constructor.superclass) {\n      var superClassMethod = _this.constructor.superclass.prototype[methodName];\n      if (_this[methodName] !== superClassMethod) {\n        parentMethod = superClassMethod;\n        break;\n      }\n      // eslint-disable-next-line\n      _this = _this.constructor.superclass.prototype;\n    }\n\n    if (!parentMethod) {\n      return console.log('tried to callSuper ' + methodName + ', method not found in prototype chain', this);\n    }\n\n    return (arguments.length > 1)\n      ? parentMethod.apply(this, slice.call(arguments, 1))\n      : parentMethod.call(this);\n  }\n\n  /**\n   * Helper for creation of \"classes\".\n   * @memberOf fabric.util\n   * @param {Function} [parent] optional \"Class\" to inherit from\n   * @param {Object} [properties] Properties shared by all instances of this class\n   *                  (be careful modifying objects defined here as this would affect all instances)\n   */\n  function createClass() {\n    var parent = null,\n        properties = slice.call(arguments, 0);\n\n    if (typeof properties[0] === 'function') {\n      parent = properties.shift();\n    }\n    function klass() {\n      this.initialize.apply(this, arguments);\n    }\n\n    klass.superclass = parent;\n    klass.subclasses = [];\n\n    if (parent) {\n      Subclass.prototype = parent.prototype;\n      klass.prototype = new Subclass();\n      parent.subclasses.push(klass);\n    }\n    for (var i = 0, length = properties.length; i < length; i++) {\n      addMethods(klass, properties[i], parent);\n    }\n    if (!klass.prototype.initialize) {\n      klass.prototype.initialize = emptyFunction;\n    }\n    klass.prototype.constructor = klass;\n    klass.prototype.callSuper = callSuper;\n    return klass;\n  }\n\n  fabric.util.createClass = createClass;\n})();\n\n\n(function () {\n\n  var unknown = 'unknown';\n\n  /* EVENT HANDLING */\n\n  function areHostMethods(object) {\n    var methodNames = Array.prototype.slice.call(arguments, 1),\n        t, i, len = methodNames.length;\n    for (i = 0; i < len; i++) {\n      t = typeof object[methodNames[i]];\n      if (!(/^(?:function|object|unknown)$/).test(t)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /** @ignore */\n  var getElement,\n      setElement,\n      getUniqueId = (function () {\n        var uid = 0;\n        return function (element) {\n          return element.__uniqueID || (element.__uniqueID = 'uniqueID__' + uid++);\n        };\n      })();\n\n  (function () {\n    var elements = { };\n    /** @ignore */\n    getElement = function (uid) {\n      return elements[uid];\n    };\n    /** @ignore */\n    setElement = function (uid, element) {\n      elements[uid] = element;\n    };\n  })();\n\n  function createListener(uid, handler) {\n    return {\n      handler: handler,\n      wrappedHandler: createWrappedHandler(uid, handler)\n    };\n  }\n\n  function createWrappedHandler(uid, handler) {\n    return function (e) {\n      handler.call(getElement(uid), e || fabric.window.event);\n    };\n  }\n\n  function createDispatcher(uid, eventName) {\n    return function (e) {\n      if (handlers[uid] && handlers[uid][eventName]) {\n        var handlersForEvent = handlers[uid][eventName];\n        for (var i = 0, len = handlersForEvent.length; i < len; i++) {\n          handlersForEvent[i].call(this, e || fabric.window.event);\n        }\n      }\n    };\n  }\n\n  var shouldUseAddListenerRemoveListener = (\n        areHostMethods(fabric.document.documentElement, 'addEventListener', 'removeEventListener') &&\n        areHostMethods(fabric.window, 'addEventListener', 'removeEventListener')),\n\n      shouldUseAttachEventDetachEvent = (\n        areHostMethods(fabric.document.documentElement, 'attachEvent', 'detachEvent') &&\n        areHostMethods(fabric.window, 'attachEvent', 'detachEvent')),\n\n      // IE branch\n      listeners = { },\n\n      // DOM L0 branch\n      handlers = { },\n\n      addListener, removeListener;\n\n  if (shouldUseAddListenerRemoveListener) {\n    /** @ignore */\n    addListener = function (element, eventName, handler, options) {\n      // since ie10 or ie9 can use addEventListener but they do not support options, i need to check\n      element && element.addEventListener(eventName, handler, shouldUseAttachEventDetachEvent ? false : options);\n    };\n    /** @ignore */\n    removeListener = function (element, eventName, handler, options) {\n      element && element.removeEventListener(eventName, handler, shouldUseAttachEventDetachEvent ? false : options);\n    };\n  }\n\n  else if (shouldUseAttachEventDetachEvent) {\n    /** @ignore */\n    addListener = function (element, eventName, handler) {\n      if (!element) {\n        return;\n      }\n      var uid = getUniqueId(element);\n      setElement(uid, element);\n      if (!listeners[uid]) {\n        listeners[uid] = { };\n      }\n      if (!listeners[uid][eventName]) {\n        listeners[uid][eventName] = [];\n\n      }\n      var listener = createListener(uid, handler);\n      listeners[uid][eventName].push(listener);\n      element.attachEvent('on' + eventName, listener.wrappedHandler);\n    };\n    /** @ignore */\n    removeListener = function (element, eventName, handler) {\n      if (!element) {\n        return;\n      }\n      var uid = getUniqueId(element), listener;\n      if (listeners[uid] && listeners[uid][eventName]) {\n        for (var i = 0, len = listeners[uid][eventName].length; i < len; i++) {\n          listener = listeners[uid][eventName][i];\n          if (listener && listener.handler === handler) {\n            element.detachEvent('on' + eventName, listener.wrappedHandler);\n            listeners[uid][eventName][i] = null;\n          }\n        }\n      }\n    };\n  }\n  else {\n    /** @ignore */\n    addListener = function (element, eventName, handler) {\n      if (!element) {\n        return;\n      }\n      var uid = getUniqueId(element);\n      if (!handlers[uid]) {\n        handlers[uid] = { };\n      }\n      if (!handlers[uid][eventName]) {\n        handlers[uid][eventName] = [];\n        var existingHandler = element['on' + eventName];\n        if (existingHandler) {\n          handlers[uid][eventName].push(existingHandler);\n        }\n        element['on' + eventName] = createDispatcher(uid, eventName);\n      }\n      handlers[uid][eventName].push(handler);\n    };\n    /** @ignore */\n    removeListener = function (element, eventName, handler) {\n      if (!element) {\n        return;\n      }\n      var uid = getUniqueId(element);\n      if (handlers[uid] && handlers[uid][eventName]) {\n        var handlersForEvent = handlers[uid][eventName];\n        for (var i = 0, len = handlersForEvent.length; i < len; i++) {\n          if (handlersForEvent[i] === handler) {\n            handlersForEvent.splice(i, 1);\n          }\n        }\n      }\n    };\n  }\n\n  /**\n   * Adds an event listener to an element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  fabric.util.addListener = addListener;\n\n  /**\n   * Removes an event listener from an element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  fabric.util.removeListener = removeListener;\n\n  /**\n   * Cross-browser wrapper for getting event's coordinates\n   * @memberOf fabric.util\n   * @param {Event} event Event object\n   */\n  function getPointer(event) {\n    event || (event = fabric.window.event);\n\n    var element = event.target ||\n                  (typeof event.srcElement !== unknown ? event.srcElement : null),\n\n        scroll = fabric.util.getScrollLeftTop(element);\n\n    return {\n      x: pointerX(event) + scroll.left,\n      y: pointerY(event) + scroll.top\n    };\n  }\n\n  var pointerX = function(event) {\n        return event.clientX;\n      },\n\n      pointerY = function(event) {\n        return event.clientY;\n      };\n\n  function _getPointer(event, pageProp, clientProp) {\n    var touchProp = event.type === 'touchend' ? 'changedTouches' : 'touches';\n\n    return (event[touchProp] && event[touchProp][0]\n      ? (event[touchProp][0][pageProp] - (event[touchProp][0][pageProp] - event[touchProp][0][clientProp]))\n        || event[clientProp]\n      : event[clientProp]);\n  }\n\n  if (fabric.isTouchSupported) {\n    pointerX = function(event) {\n      return _getPointer(event, 'pageX', 'clientX');\n    };\n    pointerY = function(event) {\n      return _getPointer(event, 'pageY', 'clientY');\n    };\n  }\n\n  fabric.util.getPointer = getPointer;\n\n})();\n\n\n(function () {\n\n  /**\n   * Cross-browser wrapper for setting element's style\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {Object} styles\n   * @return {HTMLElement} Element that was passed as a first argument\n   */\n  function setStyle(element, styles) {\n    var elementStyle = element.style;\n    if (!elementStyle) {\n      return element;\n    }\n    if (typeof styles === 'string') {\n      element.style.cssText += ';' + styles;\n      return styles.indexOf('opacity') > -1\n        ? setOpacity(element, styles.match(/opacity:\\s*(\\d?\\.?\\d*)/)[1])\n        : element;\n    }\n    for (var property in styles) {\n      if (property === 'opacity') {\n        setOpacity(element, styles[property]);\n      }\n      else {\n        var normalizedProperty = (property === 'float' || property === 'cssFloat')\n          ? (typeof elementStyle.styleFloat === 'undefined' ? 'cssFloat' : 'styleFloat')\n          : property;\n        elementStyle[normalizedProperty] = styles[property];\n      }\n    }\n    return element;\n  }\n\n  var parseEl = fabric.document.createElement('div'),\n      supportsOpacity = typeof parseEl.style.opacity === 'string',\n      supportsFilters = typeof parseEl.style.filter === 'string',\n      reOpacity = /alpha\\s*\\(\\s*opacity\\s*=\\s*([^\\)]+)\\)/,\n\n      /** @ignore */\n      setOpacity = function (element) { return element; };\n\n  if (supportsOpacity) {\n    /** @ignore */\n    setOpacity = function(element, value) {\n      element.style.opacity = value;\n      return element;\n    };\n  }\n  else if (supportsFilters) {\n    /** @ignore */\n    setOpacity = function(element, value) {\n      var es = element.style;\n      if (element.currentStyle && !element.currentStyle.hasLayout) {\n        es.zoom = 1;\n      }\n      if (reOpacity.test(es.filter)) {\n        value = value >= 0.9999 ? '' : ('alpha(opacity=' + (value * 100) + ')');\n        es.filter = es.filter.replace(reOpacity, value);\n      }\n      else {\n        es.filter += ' alpha(opacity=' + (value * 100) + ')';\n      }\n      return element;\n    };\n  }\n\n  fabric.util.setStyle = setStyle;\n\n})();\n\n\n(function() {\n\n  var _slice = Array.prototype.slice;\n\n  /**\n   * Takes id and returns an element with that id (if one exists in a document)\n   * @memberOf fabric.util\n   * @param {String|HTMLElement} id\n   * @return {HTMLElement|null}\n   */\n  function getById(id) {\n    return typeof id === 'string' ? fabric.document.getElementById(id) : id;\n  }\n\n  var sliceCanConvertNodelists,\n      /**\n       * Converts an array-like object (e.g. arguments or NodeList) to an array\n       * @memberOf fabric.util\n       * @param {Object} arrayLike\n       * @return {Array}\n       */\n      toArray = function(arrayLike) {\n        return _slice.call(arrayLike, 0);\n      };\n\n  try {\n    sliceCanConvertNodelists = toArray(fabric.document.childNodes) instanceof Array;\n  }\n  catch (err) { }\n\n  if (!sliceCanConvertNodelists) {\n    toArray = function(arrayLike) {\n      var arr = new Array(arrayLike.length), i = arrayLike.length;\n      while (i--) {\n        arr[i] = arrayLike[i];\n      }\n      return arr;\n    };\n  }\n\n  /**\n   * Creates specified element with specified attributes\n   * @memberOf fabric.util\n   * @param {String} tagName Type of an element to create\n   * @param {Object} [attributes] Attributes to set on an element\n   * @return {HTMLElement} Newly created element\n   */\n  function makeElement(tagName, attributes) {\n    var el = fabric.document.createElement(tagName);\n    for (var prop in attributes) {\n      if (prop === 'class') {\n        el.className = attributes[prop];\n      }\n      else if (prop === 'for') {\n        el.htmlFor = attributes[prop];\n      }\n      else {\n        el.setAttribute(prop, attributes[prop]);\n      }\n    }\n    return el;\n  }\n\n  /**\n   * Adds class to an element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to add class to\n   * @param {String} className Class to add to an element\n   */\n  function addClass(element, className) {\n    if (element && (' ' + element.className + ' ').indexOf(' ' + className + ' ') === -1) {\n      element.className += (element.className ? ' ' : '') + className;\n    }\n  }\n\n  /**\n   * Wraps element with another element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to wrap\n   * @param {HTMLElement|String} wrapper Element to wrap with\n   * @param {Object} [attributes] Attributes to set on a wrapper\n   * @return {HTMLElement} wrapper\n   */\n  function wrapElement(element, wrapper, attributes) {\n    if (typeof wrapper === 'string') {\n      wrapper = makeElement(wrapper, attributes);\n    }\n    if (element.parentNode) {\n      element.parentNode.replaceChild(wrapper, element);\n    }\n    wrapper.appendChild(element);\n    return wrapper;\n  }\n\n  /**\n   * Returns element scroll offsets\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to operate on\n   * @return {Object} Object with left/top values\n   */\n  function getScrollLeftTop(element) {\n\n    var left = 0,\n        top = 0,\n        docElement = fabric.document.documentElement,\n        body = fabric.document.body || {\n          scrollLeft: 0, scrollTop: 0\n        };\n\n    // While loop checks (and then sets element to) .parentNode OR .host\n    //  to account for ShadowDOM. We still want to traverse up out of ShadowDOM,\n    //  but the .parentNode of a root ShadowDOM node will always be null, instead\n    //  it should be accessed through .host. See http://stackoverflow.com/a/24765528/4383938\n    while (element && (element.parentNode || element.host)) {\n\n      // Set element to element parent, or 'host' in case of ShadowDOM\n      element = element.parentNode || element.host;\n\n      if (element === fabric.document) {\n        left = body.scrollLeft || docElement.scrollLeft || 0;\n        top = body.scrollTop ||  docElement.scrollTop || 0;\n      }\n      else {\n        left += element.scrollLeft || 0;\n        top += element.scrollTop || 0;\n      }\n\n      if (element.nodeType === 1 && element.style.position === 'fixed') {\n        break;\n      }\n    }\n\n    return { left: left, top: top };\n  }\n\n  /**\n   * Returns offset for a given element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to get offset for\n   * @return {Object} Object with \"left\" and \"top\" properties\n   */\n  function getElementOffset(element) {\n    var docElem,\n        doc = element && element.ownerDocument,\n        box = { left: 0, top: 0 },\n        offset = { left: 0, top: 0 },\n        scrollLeftTop,\n        offsetAttributes = {\n          borderLeftWidth: 'left',\n          borderTopWidth:  'top',\n          paddingLeft:     'left',\n          paddingTop:      'top'\n        };\n\n    if (!doc) {\n      return offset;\n    }\n\n    for (var attr in offsetAttributes) {\n      offset[offsetAttributes[attr]] += parseInt(getElementStyle(element, attr), 10) || 0;\n    }\n\n    docElem = doc.documentElement;\n    if ( typeof element.getBoundingClientRect !== 'undefined' ) {\n      box = element.getBoundingClientRect();\n    }\n\n    scrollLeftTop = getScrollLeftTop(element);\n\n    return {\n      left: box.left + scrollLeftTop.left - (docElem.clientLeft || 0) + offset.left,\n      top: box.top + scrollLeftTop.top - (docElem.clientTop || 0)  + offset.top\n    };\n  }\n\n  /**\n   * Returns style attribute value of a given element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to get style attribute for\n   * @param {String} attr Style attribute to get for element\n   * @return {String} Style attribute value of the given element.\n   */\n  var getElementStyle;\n  if (fabric.document.defaultView && fabric.document.defaultView.getComputedStyle) {\n    getElementStyle = function(element, attr) {\n      var style = fabric.document.defaultView.getComputedStyle(element, null);\n      return style ? style[attr] : undefined;\n    };\n  }\n  else {\n    getElementStyle = function(element, attr) {\n      var value = element.style[attr];\n      if (!value && element.currentStyle) {\n        value = element.currentStyle[attr];\n      }\n      return value;\n    };\n  }\n\n  (function () {\n    var style = fabric.document.documentElement.style,\n        selectProp = 'userSelect' in style\n          ? 'userSelect'\n          : 'MozUserSelect' in style\n            ? 'MozUserSelect'\n            : 'WebkitUserSelect' in style\n              ? 'WebkitUserSelect'\n              : 'KhtmlUserSelect' in style\n                ? 'KhtmlUserSelect'\n                : '';\n\n    /**\n     * Makes element unselectable\n     * @memberOf fabric.util\n     * @param {HTMLElement} element Element to make unselectable\n     * @return {HTMLElement} Element that was passed in\n     */\n    function makeElementUnselectable(element) {\n      if (typeof element.onselectstart !== 'undefined') {\n        element.onselectstart = fabric.util.falseFunction;\n      }\n      if (selectProp) {\n        element.style[selectProp] = 'none';\n      }\n      else if (typeof element.unselectable === 'string') {\n        element.unselectable = 'on';\n      }\n      return element;\n    }\n\n    /**\n     * Makes element selectable\n     * @memberOf fabric.util\n     * @param {HTMLElement} element Element to make selectable\n     * @return {HTMLElement} Element that was passed in\n     */\n    function makeElementSelectable(element) {\n      if (typeof element.onselectstart !== 'undefined') {\n        element.onselectstart = null;\n      }\n      if (selectProp) {\n        element.style[selectProp] = '';\n      }\n      else if (typeof element.unselectable === 'string') {\n        element.unselectable = '';\n      }\n      return element;\n    }\n\n    fabric.util.makeElementUnselectable = makeElementUnselectable;\n    fabric.util.makeElementSelectable = makeElementSelectable;\n  })();\n\n  (function() {\n\n    /**\n     * Inserts a script element with a given url into a document; invokes callback, when that script is finished loading\n     * @memberOf fabric.util\n     * @param {String} url URL of a script to load\n     * @param {Function} callback Callback to execute when script is finished loading\n     */\n    function getScript(url, callback) {\n      var headEl = fabric.document.getElementsByTagName('head')[0],\n          scriptEl = fabric.document.createElement('script'),\n          loading = true;\n\n      /** @ignore */\n      scriptEl.onload = /** @ignore */ scriptEl.onreadystatechange = function(e) {\n        if (loading) {\n          if (typeof this.readyState === 'string' &&\n              this.readyState !== 'loaded' &&\n              this.readyState !== 'complete') {\n            return;\n          }\n          loading = false;\n          callback(e || fabric.window.event);\n          scriptEl = scriptEl.onload = scriptEl.onreadystatechange = null;\n        }\n      };\n      scriptEl.src = url;\n      headEl.appendChild(scriptEl);\n      // causes issue in Opera\n      // headEl.removeChild(scriptEl);\n    }\n\n    fabric.util.getScript = getScript;\n  })();\n\n  function getNodeCanvas(element) {\n    var impl = fabric.jsdomImplForWrapper(element);\n    return impl._canvas || impl._image;\n  };\n\n  fabric.util.getById = getById;\n  fabric.util.toArray = toArray;\n  fabric.util.makeElement = makeElement;\n  fabric.util.addClass = addClass;\n  fabric.util.wrapElement = wrapElement;\n  fabric.util.getScrollLeftTop = getScrollLeftTop;\n  fabric.util.getElementOffset = getElementOffset;\n  fabric.util.getElementStyle = getElementStyle;\n  fabric.util.getNodeCanvas = getNodeCanvas;\n\n})();\n\n\n(function() {\n\n  function addParamToUrl(url, param) {\n    return url + (/\\?/.test(url) ? '&' : '?') + param;\n  }\n\n  var makeXHR = (function() {\n    var factories = [\n      function() { return new ActiveXObject('Microsoft.XMLHTTP'); },\n      function() { return new ActiveXObject('Msxml2.XMLHTTP'); },\n      function() { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); },\n      function() { return new XMLHttpRequest(); }\n    ];\n    for (var i = factories.length; i--; ) {\n      try {\n        var req = factories[i]();\n        if (req) {\n          return factories[i];\n        }\n      }\n      catch (err) { }\n    }\n  })();\n\n  function emptyFn() { }\n\n  /**\n   * Cross-browser abstraction for sending XMLHttpRequest\n   * @memberOf fabric.util\n   * @param {String} url URL to send XMLHttpRequest to\n   * @param {Object} [options] Options object\n   * @param {String} [options.method=\"GET\"]\n   * @param {String} [options.parameters] parameters to append to url in GET or in body\n   * @param {String} [options.body] body to send with POST or PUT request\n   * @param {Function} options.onComplete Callback to invoke when request is completed\n   * @return {XMLHttpRequest} request\n   */\n  function request(url, options) {\n\n    options || (options = { });\n\n    var method = options.method ? options.method.toUpperCase() : 'GET',\n        onComplete = options.onComplete || function() { },\n        xhr = makeXHR(),\n        body = options.body || options.parameters;\n\n    /** @ignore */\n    xhr.onreadystatechange = function() {\n      if (xhr.readyState === 4) {\n        onComplete(xhr);\n        xhr.onreadystatechange = emptyFn;\n      }\n    };\n\n    if (method === 'GET') {\n      body = null;\n      if (typeof options.parameters === 'string') {\n        url = addParamToUrl(url, options.parameters);\n      }\n    }\n\n    xhr.open(method, url, true);\n\n    if (method === 'POST' || method === 'PUT') {\n      xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n    }\n\n    xhr.send(body);\n    return xhr;\n  }\n\n  fabric.util.request = request;\n})();\n\n\n/**\n * Wrapper around `console.log` (when available)\n * @param {*} [values] Values to log\n */\nfabric.log = function() { };\n\n/**\n * Wrapper around `console.warn` (when available)\n * @param {*} [values] Values to log as a warning\n */\nfabric.warn = function() { };\n\n/* eslint-disable */\nif (typeof console !== 'undefined') {\n\n  ['log', 'warn'].forEach(function(methodName) {\n\n    if (typeof console[methodName] !== 'undefined' &&\n        typeof console[methodName].apply === 'function') {\n\n      fabric[methodName] = function() {\n        return console[methodName].apply(console, arguments);\n      };\n    }\n  });\n}\n/* eslint-enable */\n\n\n(function() {\n\n  function noop() {\n    return false;\n  }\n\n  /**\n   * Changes value from one to another within certain period of time, invoking callbacks as value is being changed.\n   * @memberOf fabric.util\n   * @param {Object} [options] Animation options\n   * @param {Function} [options.onChange] Callback; invoked on every value change\n   * @param {Function} [options.onComplete] Callback; invoked when value change is completed\n   * @param {Number} [options.startValue=0] Starting value\n   * @param {Number} [options.endValue=100] Ending value\n   * @param {Number} [options.byValue=100] Value to modify the property by\n   * @param {Function} [options.easing] Easing function\n   * @param {Number} [options.duration=500] Duration of change (in ms)\n   */\n  function animate(options) {\n\n    requestAnimFrame(function(timestamp) {\n      options || (options = { });\n\n      var start = timestamp || +new Date(),\n          duration = options.duration || 500,\n          finish = start + duration, time,\n          onChange = options.onChange || noop,\n          abort = options.abort || noop,\n          onComplete = options.onComplete || noop,\n          easing = options.easing || function(t, b, c, d) {return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;},\n          startValue = 'startValue' in options ? options.startValue : 0,\n          endValue = 'endValue' in options ? options.endValue : 100,\n          byValue = options.byValue || endValue - startValue;\n\n      options.onStart && options.onStart();\n\n      (function tick(ticktime) {\n        if (abort()) {\n          onComplete(endValue, 1, 1);\n          return;\n        }\n        time = ticktime || +new Date();\n        var currentTime = time > finish ? duration : (time - start),\n            timePerc = currentTime / duration,\n            current = easing(currentTime, startValue, byValue, duration),\n            valuePerc = Math.abs((current - startValue) / byValue);\n        onChange(current, valuePerc, timePerc);\n        if (time > finish) {\n          options.onComplete && options.onComplete();\n          return;\n        }\n        requestAnimFrame(tick);\n      })(start);\n    });\n\n  }\n\n  var _requestAnimFrame = fabric.window.requestAnimationFrame       ||\n                          fabric.window.webkitRequestAnimationFrame ||\n                          fabric.window.mozRequestAnimationFrame    ||\n                          fabric.window.oRequestAnimationFrame      ||\n                          fabric.window.msRequestAnimationFrame     ||\n                          function(callback) {\n                            return fabric.window.setTimeout(callback, 1000 / 60);\n                          };\n\n  var _cancelAnimFrame = fabric.window.cancelAnimationFrame || fabric.window.clearTimeout;\n\n  /**\n   * requestAnimationFrame polyfill based on http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n   * In order to get a precise start time, `requestAnimFrame` should be called as an entry into the method\n   * @memberOf fabric.util\n   * @param {Function} callback Callback to invoke\n   * @param {DOMElement} element optional Element to associate with animation\n   */\n  function requestAnimFrame() {\n    return _requestAnimFrame.apply(fabric.window, arguments);\n  }\n\n  function cancelAnimFrame() {\n    return _cancelAnimFrame.apply(fabric.window, arguments);\n  }\n\n  fabric.util.animate = animate;\n  fabric.util.requestAnimFrame = requestAnimFrame;\n  fabric.util.cancelAnimFrame = cancelAnimFrame;\n})();\n\n\n(function() {\n  // Calculate an in-between color. Returns a \"rgba()\" string.\n  // Credit: Edwin Martin <edwin@bitstorm.org>\n  //         http://www.bitstorm.org/jquery/color-animation/jquery.animate-colors.js\n  function calculateColor(begin, end, pos) {\n    var color = 'rgba('\n        + parseInt((begin[0] + pos * (end[0] - begin[0])), 10) + ','\n        + parseInt((begin[1] + pos * (end[1] - begin[1])), 10) + ','\n        + parseInt((begin[2] + pos * (end[2] - begin[2])), 10);\n\n    color += ',' + (begin && end ? parseFloat(begin[3] + pos * (end[3] - begin[3])) : 1);\n    color += ')';\n    return color;\n  }\n\n  /**\n   * Changes the color from one to another within certain period of time, invoking callbacks as value is being changed.\n   * @memberOf fabric.util\n   * @param {String} fromColor The starting color in hex or rgb(a) format.\n   * @param {String} toColor The starting color in hex or rgb(a) format.\n   * @param {Number} [duration] Duration of change (in ms).\n   * @param {Object} [options] Animation options\n   * @param {Function} [options.onChange] Callback; invoked on every value change\n   * @param {Function} [options.onComplete] Callback; invoked when value change is completed\n   * @param {Function} [options.colorEasing] Easing function. Note that this function only take two arguments (currentTime, duration). Thus the regular animation easing functions cannot be used.\n   */\n  function animateColor(fromColor, toColor, duration, options) {\n    var startColor = new fabric.Color(fromColor).getSource(),\n        endColor = new fabric.Color(toColor).getSource();\n\n    options = options || {};\n\n    fabric.util.animate(fabric.util.object.extend(options, {\n      duration: duration || 500,\n      startValue: startColor,\n      endValue: endColor,\n      byValue: endColor,\n      easing: function (currentTime, startValue, byValue, duration) {\n        var posValue = options.colorEasing\n          ? options.colorEasing(currentTime, duration)\n          : 1 - Math.cos(currentTime / duration * (Math.PI / 2));\n        return calculateColor(startValue, byValue, posValue);\n      }\n    }));\n  }\n\n  fabric.util.animateColor = animateColor;\n\n})();\n\n\n(function() {\n\n  function normalize(a, c, p, s) {\n    if (a < Math.abs(c)) {\n      a = c;\n      s = p / 4;\n    }\n    else {\n      //handle the 0/0 case:\n      if (c === 0 && a === 0) {\n        s = p / (2 * Math.PI) * Math.asin(1);\n      }\n      else {\n        s = p / (2 * Math.PI) * Math.asin(c / a);\n      }\n    }\n    return { a: a, c: c, p: p, s: s };\n  }\n\n  function elastic(opts, t, d) {\n    return opts.a *\n      Math.pow(2, 10 * (t -= 1)) *\n      Math.sin( (t * d - opts.s) * (2 * Math.PI) / opts.p );\n  }\n\n  /**\n   * Cubic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutCubic(t, b, c, d) {\n    return c * ((t = t / d - 1) * t * t + 1) + b;\n  }\n\n  /**\n   * Cubic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutCubic(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t + b;\n    }\n    return c / 2 * ((t -= 2) * t * t + 2) + b;\n  }\n\n  /**\n   * Quartic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInQuart(t, b, c, d) {\n    return c * (t /= d) * t * t * t + b;\n  }\n\n  /**\n   * Quartic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutQuart(t, b, c, d) {\n    return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n  }\n\n  /**\n   * Quartic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutQuart(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t * t + b;\n    }\n    return -c / 2 * ((t -= 2) * t * t * t - 2) + b;\n  }\n\n  /**\n   * Quintic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInQuint(t, b, c, d) {\n    return c * (t /= d) * t * t * t * t + b;\n  }\n\n  /**\n   * Quintic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutQuint(t, b, c, d) {\n    return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n  }\n\n  /**\n   * Quintic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutQuint(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t * t * t + b;\n    }\n    return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n  }\n\n  /**\n   * Sinusoidal easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInSine(t, b, c, d) {\n    return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\n  }\n\n  /**\n   * Sinusoidal easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutSine(t, b, c, d) {\n    return c * Math.sin(t / d * (Math.PI / 2)) + b;\n  }\n\n  /**\n   * Sinusoidal easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutSine(t, b, c, d) {\n    return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;\n  }\n\n  /**\n   * Exponential easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInExpo(t, b, c, d) {\n    return (t === 0) ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;\n  }\n\n  /**\n   * Exponential easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutExpo(t, b, c, d) {\n    return (t === d) ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\n  }\n\n  /**\n   * Exponential easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutExpo(t, b, c, d) {\n    if (t === 0) {\n      return b;\n    }\n    if (t === d) {\n      return b + c;\n    }\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * Math.pow(2, 10 * (t - 1)) + b;\n    }\n    return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;\n  }\n\n  /**\n   * Circular easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInCirc(t, b, c, d) {\n    return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\n  }\n\n  /**\n   * Circular easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutCirc(t, b, c, d) {\n    return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\n  }\n\n  /**\n   * Circular easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutCirc(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;\n    }\n    return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\n  }\n\n  /**\n   * Elastic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d;\n    if (t === 1) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * 0.3;\n    }\n    var opts = normalize(a, c, p, s);\n    return -elastic(opts, t, d) + b;\n  }\n\n  /**\n   * Elastic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d;\n    if (t === 1) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * 0.3;\n    }\n    var opts = normalize(a, c, p, s);\n    return opts.a * Math.pow(2, -10 * t) * Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) + opts.c + b;\n  }\n\n  /**\n   * Elastic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d / 2;\n    if (t === 2) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * (0.3 * 1.5);\n    }\n    var opts = normalize(a, c, p, s);\n    if (t < 1) {\n      return -0.5 * elastic(opts, t, d) + b;\n    }\n    return opts.a * Math.pow(2, -10 * (t -= 1)) *\n      Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) * 0.5 + opts.c + b;\n  }\n\n  /**\n   * Backwards easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    return c * (t /= d) * t * ((s + 1) * t - s) + b;\n  }\n\n  /**\n   * Backwards easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n  }\n\n  /**\n   * Backwards easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b;\n    }\n    return c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;\n  }\n\n  /**\n   * Bouncing easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInBounce(t, b, c, d) {\n    return c - easeOutBounce (d - t, 0, c, d) + b;\n  }\n\n  /**\n   * Bouncing easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutBounce(t, b, c, d) {\n    if ((t /= d) < (1 / 2.75)) {\n      return c * (7.5625 * t * t) + b;\n    }\n    else if (t < (2 / 2.75)) {\n      return c * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75) + b;\n    }\n    else if (t < (2.5 / 2.75)) {\n      return c * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375) + b;\n    }\n    else {\n      return c * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375) + b;\n    }\n  }\n\n  /**\n   * Bouncing easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutBounce(t, b, c, d) {\n    if (t < d / 2) {\n      return easeInBounce (t * 2, 0, c, d) * 0.5 + b;\n    }\n    return easeOutBounce(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;\n  }\n\n  /**\n   * Easing functions\n   * See <a href=\"http://gizma.com/easing/\">Easing Equations by Robert Penner</a>\n   * @namespace fabric.util.ease\n   */\n  fabric.util.ease = {\n\n    /**\n     * Quadratic easing in\n     * @memberOf fabric.util.ease\n     */\n    easeInQuad: function(t, b, c, d) {\n      return c * (t /= d) * t + b;\n    },\n\n    /**\n     * Quadratic easing out\n     * @memberOf fabric.util.ease\n     */\n    easeOutQuad: function(t, b, c, d) {\n      return -c * (t /= d) * (t - 2) + b;\n    },\n\n    /**\n     * Quadratic easing in and out\n     * @memberOf fabric.util.ease\n     */\n    easeInOutQuad: function(t, b, c, d) {\n      t /= (d / 2);\n      if (t < 1) {\n        return c / 2 * t * t + b;\n      }\n      return -c / 2 * ((--t) * (t - 2) - 1) + b;\n    },\n\n    /**\n     * Cubic easing in\n     * @memberOf fabric.util.ease\n     */\n    easeInCubic: function(t, b, c, d) {\n      return c * (t /= d) * t * t + b;\n    },\n\n    easeOutCubic: easeOutCubic,\n    easeInOutCubic: easeInOutCubic,\n    easeInQuart: easeInQuart,\n    easeOutQuart: easeOutQuart,\n    easeInOutQuart: easeInOutQuart,\n    easeInQuint: easeInQuint,\n    easeOutQuint: easeOutQuint,\n    easeInOutQuint: easeInOutQuint,\n    easeInSine: easeInSine,\n    easeOutSine: easeOutSine,\n    easeInOutSine: easeInOutSine,\n    easeInExpo: easeInExpo,\n    easeOutExpo: easeOutExpo,\n    easeInOutExpo: easeInOutExpo,\n    easeInCirc: easeInCirc,\n    easeOutCirc: easeOutCirc,\n    easeInOutCirc: easeInOutCirc,\n    easeInElastic: easeInElastic,\n    easeOutElastic: easeOutElastic,\n    easeInOutElastic: easeInOutElastic,\n    easeInBack: easeInBack,\n    easeOutBack: easeOutBack,\n    easeInOutBack: easeInOutBack,\n    easeInBounce: easeInBounce,\n    easeOutBounce: easeOutBounce,\n    easeInOutBounce: easeInOutBounce\n  };\n\n})();\n\n\n(function(global) {\n\n  'use strict';\n\n  /**\n   * @name fabric\n   * @namespace\n   */\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      toFixed = fabric.util.toFixed,\n      parseUnit = fabric.util.parseUnit,\n      multiplyTransformMatrices = fabric.util.multiplyTransformMatrices,\n\n      svgValidTagNames = ['path', 'circle', 'polygon', 'polyline', 'ellipse', 'rect', 'line',\n        'image', 'text', 'linearGradient', 'radialGradient', 'stop'],\n      svgViewBoxElements = ['symbol', 'image', 'marker', 'pattern', 'view', 'svg'],\n      svgInvalidAncestors = ['pattern', 'defs', 'symbol', 'metadata', 'clipPath', 'mask', 'desc'],\n      svgValidParents = ['symbol', 'g', 'a', 'svg'],\n\n      attributesMap = {\n        cx:                   'left',\n        x:                    'left',\n        r:                    'radius',\n        cy:                   'top',\n        y:                    'top',\n        display:              'visible',\n        visibility:           'visible',\n        transform:            'transformMatrix',\n        'fill-opacity':       'fillOpacity',\n        'fill-rule':          'fillRule',\n        'font-family':        'fontFamily',\n        'font-size':          'fontSize',\n        'font-style':         'fontStyle',\n        'font-weight':        'fontWeight',\n        'paint-order':        'paintFirst',\n        'stroke-dasharray':   'strokeDashArray',\n        'stroke-linecap':     'strokeLineCap',\n        'stroke-linejoin':    'strokeLineJoin',\n        'stroke-miterlimit':  'strokeMiterLimit',\n        'stroke-opacity':     'strokeOpacity',\n        'stroke-width':       'strokeWidth',\n        'text-decoration':    'textDecoration',\n        'text-anchor':        'textAnchor',\n        opacity:              'opacity'\n      },\n\n      colorAttributes = {\n        stroke: 'strokeOpacity',\n        fill:   'fillOpacity'\n      };\n\n  fabric.svgValidTagNamesRegEx = getSvgRegex(svgValidTagNames);\n  fabric.svgViewBoxElementsRegEx = getSvgRegex(svgViewBoxElements);\n  fabric.svgInvalidAncestorsRegEx = getSvgRegex(svgInvalidAncestors);\n  fabric.svgValidParentsRegEx = getSvgRegex(svgValidParents);\n\n  fabric.cssRules = { };\n  fabric.gradientDefs = { };\n\n  function normalizeAttr(attr) {\n    // transform attribute names\n    if (attr in attributesMap) {\n      return attributesMap[attr];\n    }\n    return attr;\n  }\n\n  function normalizeValue(attr, value, parentAttributes, fontSize) {\n    var isArray = Object.prototype.toString.call(value) === '[object Array]',\n        parsed;\n\n    if ((attr === 'fill' || attr === 'stroke') && value === 'none') {\n      value = '';\n    }\n    else if (attr === 'strokeDashArray') {\n      if (value === 'none') {\n        value = null;\n      }\n      else {\n        value = value.replace(/,/g, ' ').split(/\\s+/).map(function(n) {\n          return parseFloat(n);\n        });\n      }\n    }\n    else if (attr === 'transformMatrix') {\n      if (parentAttributes && parentAttributes.transformMatrix) {\n        value = multiplyTransformMatrices(\n          parentAttributes.transformMatrix, fabric.parseTransformAttribute(value));\n      }\n      else {\n        value = fabric.parseTransformAttribute(value);\n      }\n    }\n    else if (attr === 'visible') {\n      value = value !== 'none' && value !== 'hidden';\n      // display=none on parent element always takes precedence over child element\n      if (parentAttributes && parentAttributes.visible === false) {\n        value = false;\n      }\n    }\n    else if (attr === 'opacity') {\n      value = parseFloat(value);\n      if (parentAttributes && typeof parentAttributes.opacity !== 'undefined') {\n        value *= parentAttributes.opacity;\n      }\n    }\n    else if (attr === 'textAnchor' /* text-anchor */) {\n      value = value === 'start' ? 'left' : value === 'end' ? 'right' : 'center';\n    }\n    else if (attr === 'paintFirst') {\n      var fillIndex = value.indexOf('fill');\n      var strokeIndex = value.indexOf('stroke');\n      var value = 'fill';\n      if (fillIndex > -1 && strokeIndex > -1 && strokeIndex < fillIndex) {\n        value = 'stroke';\n      }\n      else if (fillIndex === -1 && strokeIndex > -1) {\n        value = 'stroke';\n      }\n    }\n    else {\n      parsed = isArray ? value.map(parseUnit) : parseUnit(value, fontSize);\n    }\n\n    return (!isArray && isNaN(parsed) ? value : parsed);\n  }\n\n  /**\n    * @private\n    */\n  function getSvgRegex(arr) {\n    return new RegExp('^(' + arr.join('|') + ')\\\\b', 'i');\n  }\n\n  /**\n   * @private\n   * @param {Object} attributes Array of attributes to parse\n   */\n  function _setStrokeFillOpacity(attributes) {\n    for (var attr in colorAttributes) {\n\n      if (typeof attributes[colorAttributes[attr]] === 'undefined' || attributes[attr] === '') {\n        continue;\n      }\n\n      if (typeof attributes[attr] === 'undefined') {\n        if (!fabric.Object.prototype[attr]) {\n          continue;\n        }\n        attributes[attr] = fabric.Object.prototype[attr];\n      }\n\n      if (attributes[attr].indexOf('url(') === 0) {\n        continue;\n      }\n\n      var color = new fabric.Color(attributes[attr]);\n      attributes[attr] = color.setAlpha(toFixed(color.getAlpha() * attributes[colorAttributes[attr]], 2)).toRgba();\n    }\n    return attributes;\n  }\n\n  /**\n   * @private\n   */\n  function _getMultipleNodes(doc, nodeNames) {\n    var nodeName, nodeArray = [], nodeList, i, len;\n    for (i = 0, len = nodeNames.length; i < len; i++) {\n      nodeName = nodeNames[i];\n      nodeList = doc.getElementsByTagName(nodeName);\n      nodeArray = nodeArray.concat(Array.prototype.slice.call(nodeList));\n    }\n    return nodeArray;\n  }\n\n  /**\n   * Parses \"transform\" attribute, returning an array of values\n   * @static\n   * @function\n   * @memberOf fabric\n   * @param {String} attributeValue String containing attribute value\n   * @return {Array} Array of 6 elements representing transformation matrix\n   */\n  fabric.parseTransformAttribute = (function() {\n    function rotateMatrix(matrix, args) {\n      var cos = Math.cos(args[0]), sin = Math.sin(args[0]),\n          x = 0, y = 0;\n      if (args.length === 3) {\n        x = args[1];\n        y = args[2];\n      }\n\n      matrix[0] = cos;\n      matrix[1] = sin;\n      matrix[2] = -sin;\n      matrix[3] = cos;\n      matrix[4] = x - (cos * x - sin * y);\n      matrix[5] = y - (sin * x + cos * y);\n    }\n\n    function scaleMatrix(matrix, args) {\n      var multiplierX = args[0],\n          multiplierY = (args.length === 2) ? args[1] : args[0];\n\n      matrix[0] = multiplierX;\n      matrix[3] = multiplierY;\n    }\n\n    function skewMatrix(matrix, args, pos) {\n      matrix[pos] = Math.tan(fabric.util.degreesToRadians(args[0]));\n    }\n\n    function translateMatrix(matrix, args) {\n      matrix[4] = args[0];\n      if (args.length === 2) {\n        matrix[5] = args[1];\n      }\n    }\n\n    // identity matrix\n    var iMatrix = [\n          1, // a\n          0, // b\n          0, // c\n          1, // d\n          0, // e\n          0  // f\n        ],\n\n        // == begin transform regexp\n        number = fabric.reNum,\n\n        commaWsp = '(?:\\\\s+,?\\\\s*|,\\\\s*)',\n\n        skewX = '(?:(skewX)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n\n        skewY = '(?:(skewY)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n\n        rotate = '(?:(rotate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + ')' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        scale = '(?:(scale)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        translate = '(?:(translate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        matrix = '(?:(matrix)\\\\s*\\\\(\\\\s*' +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' +\n                  '\\\\s*\\\\))',\n\n        transform = '(?:' +\n                    matrix + '|' +\n                    translate + '|' +\n                    scale + '|' +\n                    rotate + '|' +\n                    skewX + '|' +\n                    skewY +\n                    ')',\n\n        transforms = '(?:' + transform + '(?:' + commaWsp + '*' + transform + ')*' + ')',\n\n        transformList = '^\\\\s*(?:' + transforms + '?)\\\\s*$',\n\n        // http://www.w3.org/TR/SVG/coords.html#TransformAttribute\n        reTransformList = new RegExp(transformList),\n        // == end transform regexp\n\n        reTransform = new RegExp(transform, 'g');\n\n    return function(attributeValue) {\n\n      // start with identity matrix\n      var matrix = iMatrix.concat(),\n          matrices = [];\n\n      // return if no argument was given or\n      // an argument does not match transform attribute regexp\n      if (!attributeValue || (attributeValue && !reTransformList.test(attributeValue))) {\n        return matrix;\n      }\n\n      attributeValue.replace(reTransform, function(match) {\n\n        var m = new RegExp(transform).exec(match).filter(function (match) {\n              // match !== '' && match != null\n              return (!!match);\n            }),\n            operation = m[1],\n            args = m.slice(2).map(parseFloat);\n\n        switch (operation) {\n          case 'translate':\n            translateMatrix(matrix, args);\n            break;\n          case 'rotate':\n            args[0] = fabric.util.degreesToRadians(args[0]);\n            rotateMatrix(matrix, args);\n            break;\n          case 'scale':\n            scaleMatrix(matrix, args);\n            break;\n          case 'skewX':\n            skewMatrix(matrix, args, 2);\n            break;\n          case 'skewY':\n            skewMatrix(matrix, args, 1);\n            break;\n          case 'matrix':\n            matrix = args;\n            break;\n        }\n\n        // snapshot current matrix into matrices array\n        matrices.push(matrix.concat());\n        // reset\n        matrix = iMatrix.concat();\n      });\n\n      var combinedMatrix = matrices[0];\n      while (matrices.length > 1) {\n        matrices.shift();\n        combinedMatrix = fabric.util.multiplyTransformMatrices(combinedMatrix, matrices[0]);\n      }\n      return combinedMatrix;\n    };\n  })();\n\n  /**\n   * @private\n   */\n  function parseStyleString(style, oStyle) {\n    var attr, value;\n    style.replace(/;\\s*$/, '').split(';').forEach(function (chunk) {\n      var pair = chunk.split(':');\n\n      attr = pair[0].trim().toLowerCase();\n      value =  pair[1].trim();\n\n      oStyle[attr] = value;\n    });\n  }\n\n  /**\n   * @private\n   */\n  function parseStyleObject(style, oStyle) {\n    var attr, value;\n    for (var prop in style) {\n      if (typeof style[prop] === 'undefined') {\n        continue;\n      }\n\n      attr = prop.toLowerCase();\n      value = style[prop];\n\n      oStyle[attr] = value;\n    }\n  }\n\n  /**\n   * @private\n   */\n  function getGlobalStylesForElement(element, svgUid) {\n    var styles = { };\n    for (var rule in fabric.cssRules[svgUid]) {\n      if (elementMatchesRule(element, rule.split(' '))) {\n        for (var property in fabric.cssRules[svgUid][rule]) {\n          styles[property] = fabric.cssRules[svgUid][rule][property];\n        }\n      }\n    }\n    return styles;\n  }\n\n  /**\n   * @private\n   */\n  function elementMatchesRule(element, selectors) {\n    var firstMatching, parentMatching = true;\n    //start from rightmost selector.\n    firstMatching = selectorMatches(element, selectors.pop());\n    if (firstMatching && selectors.length) {\n      parentMatching = doesSomeParentMatch(element, selectors);\n    }\n    return firstMatching && parentMatching && (selectors.length === 0);\n  }\n\n  function doesSomeParentMatch(element, selectors) {\n    var selector, parentMatching = true;\n    while (element.parentNode && element.parentNode.nodeType === 1 && selectors.length) {\n      if (parentMatching) {\n        selector = selectors.pop();\n      }\n      element = element.parentNode;\n      parentMatching = selectorMatches(element, selector);\n    }\n    return selectors.length === 0;\n  }\n\n  /**\n   * @private\n   */\n  function selectorMatches(element, selector) {\n    var nodeName = element.nodeName,\n        classNames = element.getAttribute('class'),\n        id = element.getAttribute('id'), matcher, i;\n    // i check if a selector matches slicing away part from it.\n    // if i get empty string i should match\n    matcher = new RegExp('^' + nodeName, 'i');\n    selector = selector.replace(matcher, '');\n    if (id && selector.length) {\n      matcher = new RegExp('#' + id + '(?![a-zA-Z\\\\-]+)', 'i');\n      selector = selector.replace(matcher, '');\n    }\n    if (classNames && selector.length) {\n      classNames = classNames.split(' ');\n      for (i = classNames.length; i--;) {\n        matcher = new RegExp('\\\\.' + classNames[i] + '(?![a-zA-Z\\\\-]+)', 'i');\n        selector = selector.replace(matcher, '');\n      }\n    }\n    return selector.length === 0;\n  }\n\n  /**\n   * @private\n   * to support IE8 missing getElementById on SVGdocument\n   */\n  function elementById(doc, id) {\n    var el;\n    doc.getElementById && (el = doc.getElementById(id));\n    if (el) {\n      return el;\n    }\n    var node, i, len, nodelist = doc.getElementsByTagName('*');\n    for (i = 0, len = nodelist.length; i < len; i++) {\n      node = nodelist[i];\n      if (id === node.getAttribute('id')) {\n        return node;\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  function parseUseDirectives(doc) {\n    var nodelist = _getMultipleNodes(doc, ['use', 'svg:use']), i = 0;\n\n    while (nodelist.length && i < nodelist.length) {\n      var el = nodelist[i],\n          xlink = el.getAttribute('xlink:href').substr(1),\n          x = el.getAttribute('x') || 0,\n          y = el.getAttribute('y') || 0,\n          el2 = elementById(doc, xlink).cloneNode(true),\n          currentTrans = (el2.getAttribute('transform') || '') + ' translate(' + x + ', ' + y + ')',\n          parentNode, oldLength = nodelist.length, attr, j, attrs, len;\n\n      applyViewboxTransform(el2);\n      if (/^svg$/i.test(el2.nodeName)) {\n        var el3 = el2.ownerDocument.createElement('g');\n        for (j = 0, attrs = el2.attributes, len = attrs.length; j < len; j++) {\n          attr = attrs.item(j);\n          el3.setAttribute(attr.nodeName, attr.nodeValue);\n        }\n        // el2.firstChild != null\n        while (el2.firstChild) {\n          el3.appendChild(el2.firstChild);\n        }\n        el2 = el3;\n      }\n\n      for (j = 0, attrs = el.attributes, len = attrs.length; j < len; j++) {\n        attr = attrs.item(j);\n        if (attr.nodeName === 'x' || attr.nodeName === 'y' || attr.nodeName === 'xlink:href') {\n          continue;\n        }\n\n        if (attr.nodeName === 'transform') {\n          currentTrans = attr.nodeValue + ' ' + currentTrans;\n        }\n        else {\n          el2.setAttribute(attr.nodeName, attr.nodeValue);\n        }\n      }\n\n      el2.setAttribute('transform', currentTrans);\n      el2.setAttribute('instantiated_by_use', '1');\n      el2.removeAttribute('id');\n      parentNode = el.parentNode;\n      parentNode.replaceChild(el2, el);\n      // some browsers do not shorten nodelist after replaceChild (IE8)\n      if (nodelist.length === oldLength) {\n        i++;\n      }\n    }\n  }\n\n  // http://www.w3.org/TR/SVG/coords.html#ViewBoxAttribute\n  // matches, e.g.: +14.56e-12, etc.\n  var reViewBoxAttrValue = new RegExp(\n    '^' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*' +\n    '$'\n  );\n\n  /**\n   * Add a <g> element that envelop all child elements and makes the viewbox transformMatrix descend on all elements\n   */\n  function applyViewboxTransform(element) {\n\n    var viewBoxAttr = element.getAttribute('viewBox'),\n        scaleX = 1,\n        scaleY = 1,\n        minX = 0,\n        minY = 0,\n        viewBoxWidth, viewBoxHeight, matrix, el,\n        widthAttr = element.getAttribute('width'),\n        heightAttr = element.getAttribute('height'),\n        x = element.getAttribute('x') || 0,\n        y = element.getAttribute('y') || 0,\n        preserveAspectRatio = element.getAttribute('preserveAspectRatio') || '',\n        missingViewBox = (!viewBoxAttr || !fabric.svgViewBoxElementsRegEx.test(element.nodeName)\n                           || !(viewBoxAttr = viewBoxAttr.match(reViewBoxAttrValue))),\n        missingDimAttr = (!widthAttr || !heightAttr || widthAttr === '100%' || heightAttr === '100%'),\n        toBeParsed = missingViewBox && missingDimAttr,\n        parsedDim = { }, translateMatrix = '';\n\n    parsedDim.width = 0;\n    parsedDim.height = 0;\n    parsedDim.toBeParsed = toBeParsed;\n\n    if (toBeParsed) {\n      return parsedDim;\n    }\n\n    if (missingViewBox) {\n      parsedDim.width = parseUnit(widthAttr);\n      parsedDim.height = parseUnit(heightAttr);\n      return parsedDim;\n    }\n\n    minX = -parseFloat(viewBoxAttr[1]);\n    minY = -parseFloat(viewBoxAttr[2]);\n    viewBoxWidth = parseFloat(viewBoxAttr[3]);\n    viewBoxHeight = parseFloat(viewBoxAttr[4]);\n\n    if (!missingDimAttr) {\n      parsedDim.width = parseUnit(widthAttr);\n      parsedDim.height = parseUnit(heightAttr);\n      scaleX = parsedDim.width / viewBoxWidth;\n      scaleY = parsedDim.height / viewBoxHeight;\n    }\n    else {\n      parsedDim.width = viewBoxWidth;\n      parsedDim.height = viewBoxHeight;\n    }\n\n    // default is to preserve aspect ratio\n    preserveAspectRatio = fabric.util.parsePreserveAspectRatioAttribute(preserveAspectRatio);\n    if (preserveAspectRatio.alignX !== 'none') {\n      //translate all container for the effect of Mid, Min, Max\n      scaleY = scaleX = (scaleX > scaleY ? scaleY : scaleX);\n    }\n\n    if (scaleX === 1 && scaleY === 1 && minX === 0 && minY === 0 && x === 0 && y === 0) {\n      return parsedDim;\n    }\n\n    if (x || y) {\n      translateMatrix = ' translate(' + parseUnit(x) + ' ' + parseUnit(y) + ') ';\n    }\n\n    matrix = translateMatrix + ' matrix(' + scaleX +\n                  ' 0' +\n                  ' 0 ' +\n                  scaleY + ' ' +\n                  (minX * scaleX) + ' ' +\n                  (minY * scaleY) + ') ';\n\n    if (element.nodeName === 'svg') {\n      el = element.ownerDocument.createElement('g');\n      // element.firstChild != null\n      while (element.firstChild) {\n        el.appendChild(element.firstChild);\n      }\n      element.appendChild(el);\n    }\n    else {\n      el = element;\n      matrix = el.getAttribute('transform') + matrix;\n    }\n\n    el.setAttribute('transform', matrix);\n    return parsedDim;\n  }\n\n  function hasAncestorWithNodeName(element, nodeName) {\n    while (element && (element = element.parentNode)) {\n      if (element.nodeName && nodeName.test(element.nodeName.replace('svg:', ''))\n        && !element.getAttribute('instantiated_by_use')) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Parses an SVG document, converts it to an array of corresponding fabric.* instances and passes them to a callback\n   * @static\n   * @function\n   * @memberOf fabric\n   * @param {SVGDocument} doc SVG document to parse\n   * @param {Function} callback Callback to call when parsing is finished;\n   * It's being passed an array of elements (parsed from a document).\n   * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n   * @param {Object} [parsingOptions] options for parsing document\n   * @param {String} [parsingOptions.crossOrigin] crossOrigin settings\n   */\n  fabric.parseSVGDocument = function(doc, callback, reviver, parsingOptions) {\n    if (!doc) {\n      return;\n    }\n\n    parseUseDirectives(doc);\n\n    var svgUid =  fabric.Object.__uid++, i, len,\n        options = applyViewboxTransform(doc),\n        descendants = fabric.util.toArray(doc.getElementsByTagName('*'));\n    options.crossOrigin = parsingOptions && parsingOptions.crossOrigin;\n    options.svgUid = svgUid;\n\n    if (descendants.length === 0 && fabric.isLikelyNode) {\n      // we're likely in node, where \"o3-xml\" library fails to gEBTN(\"*\")\n      // https://github.com/ajaxorg/node-o3-xml/issues/21\n      descendants = doc.selectNodes('//*[name(.)!=\"svg\"]');\n      var arr = [];\n      for (i = 0, len = descendants.length; i < len; i++) {\n        arr[i] = descendants[i];\n      }\n      descendants = arr;\n    }\n\n    var elements = descendants.filter(function(el) {\n      applyViewboxTransform(el);\n      return fabric.svgValidTagNamesRegEx.test(el.nodeName.replace('svg:', '')) &&\n            !hasAncestorWithNodeName(el, fabric.svgInvalidAncestorsRegEx); // http://www.w3.org/TR/SVG/struct.html#DefsElement\n    });\n\n    if (!elements || (elements && !elements.length)) {\n      callback && callback([], {});\n      return;\n    }\n\n    fabric.gradientDefs[svgUid] = fabric.getGradientDefs(doc);\n    fabric.cssRules[svgUid] = fabric.getCSSRules(doc);\n    // Precedence of rules:   style > class > attribute\n    fabric.parseElements(elements, function(instances, elements) {\n      if (callback) {\n        callback(instances, options, elements, descendants);\n      }\n    }, clone(options), reviver, parsingOptions);\n  };\n\n  var reFontDeclaration = new RegExp(\n    '(normal|italic)?\\\\s*(normal|small-caps)?\\\\s*' +\n    '(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)?\\\\s*(' +\n      fabric.reNum +\n    '(?:px|cm|mm|em|pt|pc|in)*)(?:\\\\/(normal|' + fabric.reNum + '))?\\\\s+(.*)');\n\n  extend(fabric, {\n    /**\n     * Parses a short font declaration, building adding its properties to a style object\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {String} value font declaration\n     * @param {Object} oStyle definition\n     */\n    parseFontDeclaration: function(value, oStyle) {\n      var match = value.match(reFontDeclaration);\n\n      if (!match) {\n        return;\n      }\n      var fontStyle = match[1],\n          // font variant is not used\n          // fontVariant = match[2],\n          fontWeight = match[3],\n          fontSize = match[4],\n          lineHeight = match[5],\n          fontFamily = match[6];\n\n      if (fontStyle) {\n        oStyle.fontStyle = fontStyle;\n      }\n      if (fontWeight) {\n        oStyle.fontWeight = isNaN(parseFloat(fontWeight)) ? fontWeight : parseFloat(fontWeight);\n      }\n      if (fontSize) {\n        oStyle.fontSize = parseUnit(fontSize);\n      }\n      if (fontFamily) {\n        oStyle.fontFamily = fontFamily;\n      }\n      if (lineHeight) {\n        oStyle.lineHeight = lineHeight === 'normal' ? 1 : lineHeight;\n      }\n    },\n\n    /**\n     * Parses an SVG document, returning all of the gradient declarations found in it\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {SVGDocument} doc SVG document to parse\n     * @return {Object} Gradient definitions; key corresponds to element id, value -- to gradient definition element\n     */\n    getGradientDefs: function(doc) {\n      var tagArray = [\n            'linearGradient',\n            'radialGradient',\n            'svg:linearGradient',\n            'svg:radialGradient'],\n          elList = _getMultipleNodes(doc, tagArray),\n          el, j = 0, id, xlink,\n          gradientDefs = { }, idsToXlinkMap = { };\n\n      j = elList.length;\n\n      while (j--) {\n        el = elList[j];\n        xlink = el.getAttribute('xlink:href');\n        id = el.getAttribute('id');\n        if (xlink) {\n          idsToXlinkMap[id] = xlink.substr(1);\n        }\n        gradientDefs[id] = el;\n      }\n\n      for (id in idsToXlinkMap) {\n        var el2 = gradientDefs[idsToXlinkMap[id]].cloneNode(true);\n        el = gradientDefs[id];\n        while (el2.firstChild) {\n          el.appendChild(el2.firstChild);\n        }\n      }\n      return gradientDefs;\n    },\n\n    /**\n     * Returns an object of attributes' name/value, given element and an array of attribute names;\n     * Parses parent \"g\" nodes recursively upwards.\n     * @static\n     * @memberOf fabric\n     * @param {DOMElement} element Element to parse\n     * @param {Array} attributes Array of attributes to parse\n     * @return {Object} object containing parsed attributes' names/values\n     */\n    parseAttributes: function(element, attributes, svgUid) {\n\n      if (!element) {\n        return;\n      }\n\n      var value,\n          parentAttributes = { },\n          fontSize;\n\n      if (typeof svgUid === 'undefined') {\n        svgUid = element.getAttribute('svgUid');\n      }\n      // if there's a parent container (`g` or `a` or `symbol` node), parse its attributes recursively upwards\n      if (element.parentNode && fabric.svgValidParentsRegEx.test(element.parentNode.nodeName)) {\n        parentAttributes = fabric.parseAttributes(element.parentNode, attributes, svgUid);\n      }\n      fontSize = (parentAttributes && parentAttributes.fontSize ) ||\n                 element.getAttribute('font-size') || fabric.Text.DEFAULT_SVG_FONT_SIZE;\n\n      var ownAttributes = attributes.reduce(function(memo, attr) {\n        value = element.getAttribute(attr);\n        if (value) { // eslint-disable-line\n          memo[attr] = value;\n        }\n        return memo;\n      }, { });\n      // add values parsed from style, which take precedence over attributes\n      // (see: http://www.w3.org/TR/SVG/styling.html#UsingPresentationAttributes)\n      ownAttributes = extend(ownAttributes,\n        extend(getGlobalStylesForElement(element, svgUid), fabric.parseStyleAttribute(element)));\n\n      var normalizedAttr, normalizedValue, normalizedStyle = {};\n      for (var attr in ownAttributes) {\n        normalizedAttr = normalizeAttr(attr);\n        normalizedValue = normalizeValue(normalizedAttr, ownAttributes[attr], parentAttributes, fontSize);\n        normalizedStyle[normalizedAttr] = normalizedValue;\n      }\n      if (normalizedStyle && normalizedStyle.font) {\n        fabric.parseFontDeclaration(normalizedStyle.font, normalizedStyle);\n      }\n      var mergedAttrs = extend(parentAttributes, normalizedStyle);\n      return fabric.svgValidParentsRegEx.test(element.nodeName) ? mergedAttrs : _setStrokeFillOpacity(mergedAttrs);\n    },\n\n    /**\n     * Transforms an array of svg elements to corresponding fabric.* instances\n     * @static\n     * @memberOf fabric\n     * @param {Array} elements Array of elements to parse\n     * @param {Function} callback Being passed an array of fabric instances (transformed from SVG elements)\n     * @param {Object} [options] Options object\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     */\n    parseElements: function(elements, callback, options, reviver, parsingOptions) {\n      new fabric.ElementsParser(elements, callback, options, reviver, parsingOptions).parse();\n    },\n\n    /**\n     * Parses \"style\" attribute, retuning an object with values\n     * @static\n     * @memberOf fabric\n     * @param {SVGElement} element Element to parse\n     * @return {Object} Objects with values parsed from style attribute of an element\n     */\n    parseStyleAttribute: function(element) {\n      var oStyle = { },\n          style = element.getAttribute('style');\n\n      if (!style) {\n        return oStyle;\n      }\n\n      if (typeof style === 'string') {\n        parseStyleString(style, oStyle);\n      }\n      else {\n        parseStyleObject(style, oStyle);\n      }\n\n      return oStyle;\n    },\n\n    /**\n     * Parses \"points\" attribute, returning an array of values\n     * @static\n     * @memberOf fabric\n     * @param {String} points points attribute string\n     * @return {Array} array of points\n     */\n    parsePointsAttribute: function(points) {\n\n      // points attribute is required and must not be empty\n      if (!points) {\n        return null;\n      }\n\n      // replace commas with whitespace and remove bookending whitespace\n      points = points.replace(/,/g, ' ').trim();\n\n      points = points.split(/\\s+/);\n      var parsedPoints = [], i, len;\n\n      for (i = 0, len = points.length; i < len; i += 2) {\n        parsedPoints.push({\n          x: parseFloat(points[i]),\n          y: parseFloat(points[i + 1])\n        });\n      }\n\n      // odd number of points is an error\n      // if (parsedPoints.length % 2 !== 0) {\n      //   return null;\n      // }\n\n      return parsedPoints;\n    },\n\n    /**\n     * Returns CSS rules for a given SVG document\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {SVGDocument} doc SVG document to parse\n     * @return {Object} CSS rules of this document\n     */\n    getCSSRules: function(doc) {\n      var styles = doc.getElementsByTagName('style'), i, len,\n          allRules = { }, rules;\n\n      // very crude parsing of style contents\n      for (i = 0, len = styles.length; i < len; i++) {\n        // IE9 doesn't support textContent, but provides text instead.\n        var styleContents = styles[i].textContent || styles[i].text;\n\n        // remove comments\n        styleContents = styleContents.replace(/\\/\\*[\\s\\S]*?\\*\\//g, '');\n        if (styleContents.trim() === '') {\n          continue;\n        }\n        rules = styleContents.match(/[^{]*\\{[\\s\\S]*?\\}/g);\n        rules = rules.map(function(rule) { return rule.trim(); });\n        // eslint-disable-next-line no-loop-func\n        rules.forEach(function(rule) {\n\n          var match = rule.match(/([\\s\\S]*?)\\s*\\{([^}]*)\\}/),\n              ruleObj = { }, declaration = match[2].trim(),\n              propertyValuePairs = declaration.replace(/;$/, '').split(/\\s*;\\s*/);\n\n          for (i = 0, len = propertyValuePairs.length; i < len; i++) {\n            var pair = propertyValuePairs[i].split(/\\s*:\\s*/),\n                property = pair[0],\n                value = pair[1];\n            ruleObj[property] = value;\n          }\n          rule = match[1];\n          rule.split(',').forEach(function(_rule) {\n            _rule = _rule.replace(/^svg/i, '').trim();\n            if (_rule === '') {\n              return;\n            }\n            if (allRules[_rule]) {\n              fabric.util.object.extend(allRules[_rule], ruleObj);\n            }\n            else {\n              allRules[_rule] = fabric.util.object.clone(ruleObj);\n            }\n          });\n        });\n      }\n      return allRules;\n    },\n\n    /**\n     * Takes url corresponding to an SVG document, and parses it into a set of fabric objects.\n     * Note that SVG is fetched via XMLHttpRequest, so it needs to conform to SOP (Same Origin Policy)\n     * @memberOf fabric\n     * @param {String} url\n     * @param {Function} callback\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     * @param {Object} [options] Object containing options for parsing\n     * @param {String} [options.crossOrigin] crossOrigin crossOrigin setting to use for external resources\n     */\n    loadSVGFromURL: function(url, callback, reviver, options) {\n\n      url = url.replace(/^\\n\\s*/, '').trim();\n      new fabric.util.request(url, {\n        method: 'get',\n        onComplete: onComplete\n      });\n\n      function onComplete(r) {\n\n        var xml = r.responseXML;\n        if (xml && !xml.documentElement && fabric.window.ActiveXObject && r.responseText) {\n          xml = new ActiveXObject('Microsoft.XMLDOM');\n          xml.async = 'false';\n          //IE chokes on DOCTYPE\n          xml.loadXML(r.responseText.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\n        }\n        if (!xml || !xml.documentElement) {\n          callback && callback(null);\n        }\n\n        fabric.parseSVGDocument(xml.documentElement, function (results, _options, elements, allElements) {\n          callback && callback(results, _options, elements, allElements);\n        }, reviver, options);\n      }\n    },\n\n    /**\n     * Takes string corresponding to an SVG document, and parses it into a set of fabric objects\n     * @memberOf fabric\n     * @param {String} string\n     * @param {Function} callback\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     * @param {Object} [options] Object containing options for parsing\n     * @param {String} [options.crossOrigin] crossOrigin crossOrigin setting to use for external resources\n     */\n    loadSVGFromString: function(string, callback, reviver, options) {\n      string = string.trim();\n      var doc;\n      if (typeof DOMParser !== 'undefined') {\n        var parser = new DOMParser();\n        if (parser && parser.parseFromString) {\n          doc = parser.parseFromString(string, 'text/xml');\n        }\n      }\n      else if (fabric.window.ActiveXObject) {\n        doc = new ActiveXObject('Microsoft.XMLDOM');\n        doc.async = 'false';\n        // IE chokes on DOCTYPE\n        doc.loadXML(string.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\n      }\n\n      fabric.parseSVGDocument(doc.documentElement, function (results, _options, elements, allElements) {\n        callback(results, _options, elements, allElements);\n      }, reviver, options);\n    }\n  });\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\nfabric.ElementsParser = function(elements, callback, options, reviver, parsingOptions) {\n  this.elements = elements;\n  this.callback = callback;\n  this.options = options;\n  this.reviver = reviver;\n  this.svgUid = (options && options.svgUid) || 0;\n  this.parsingOptions = parsingOptions;\n};\n\nfabric.ElementsParser.prototype.parse = function() {\n  this.instances = new Array(this.elements.length);\n  this.numElements = this.elements.length;\n\n  this.createObjects();\n};\n\nfabric.ElementsParser.prototype.createObjects = function() {\n  for (var i = 0, len = this.elements.length; i < len; i++) {\n    this.elements[i].setAttribute('svgUid', this.svgUid);\n    (function(_obj, i) {\n      setTimeout(function() {\n        _obj.createObject(_obj.elements[i], i);\n      }, 0);\n    })(this, i);\n  }\n};\n\nfabric.ElementsParser.prototype.createObject = function(el, index) {\n  var klass = fabric[fabric.util.string.capitalize(el.tagName.replace('svg:', ''))];\n  if (klass && klass.fromElement) {\n    try {\n      this._createObject(klass, el, index);\n    }\n    catch (err) {\n      fabric.log(err);\n    }\n  }\n  else {\n    this.checkIfDone();\n  }\n};\n\nfabric.ElementsParser.prototype._createObject = function(klass, el, index) {\n  klass.fromElement(el, this.createCallback(index, el), this.options);\n};\n\nfabric.ElementsParser.prototype.createCallback = function(index, el) {\n  var _this = this;\n  return function(obj) {\n    var _options;\n    _this.resolveGradient(obj, 'fill');\n    _this.resolveGradient(obj, 'stroke');\n    if (obj instanceof fabric.Image) {\n      _options = obj.parsePreserveAspectRatioAttribute(el);\n    }\n    obj._removeTransformMatrix(_options);\n    _this.reviver && _this.reviver(el, obj);\n    _this.instances[index] = obj;\n    _this.checkIfDone();\n  };\n};\n\nfabric.ElementsParser.prototype.resolveGradient = function(obj, property) {\n\n  var instanceFillValue = obj.get(property);\n  if (!(/^url\\(/).test(instanceFillValue)) {\n    return;\n  }\n  var gradientId = instanceFillValue.slice(5, instanceFillValue.length - 1);\n  if (fabric.gradientDefs[this.svgUid][gradientId]) {\n    obj.set(property,\n      fabric.Gradient.fromElement(fabric.gradientDefs[this.svgUid][gradientId], obj));\n  }\n};\n\nfabric.ElementsParser.prototype.checkIfDone = function() {\n  if (--this.numElements === 0) {\n    this.instances = this.instances.filter(function(el) {\n      // eslint-disable-next-line no-eq-null, eqeqeq\n      return el != null;\n    });\n    this.callback(this.instances, this.elements);\n  }\n};\n\n\n(function(global) {\n\n  'use strict';\n\n  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Point) {\n    fabric.warn('fabric.Point is already defined');\n    return;\n  }\n\n  fabric.Point = Point;\n\n  /**\n   * Point class\n   * @class fabric.Point\n   * @memberOf fabric\n   * @constructor\n   * @param {Number} x\n   * @param {Number} y\n   * @return {fabric.Point} thisArg\n   */\n  function Point(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  Point.prototype = /** @lends fabric.Point.prototype */ {\n\n    type: 'point',\n\n    constructor: Point,\n\n    /**\n     * Adds another point to this one and returns another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} new Point instance with added values\n     */\n    add: function (that) {\n      return new Point(this.x + that.x, this.y + that.y);\n    },\n\n    /**\n     * Adds another point to this one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    addEquals: function (that) {\n      this.x += that.x;\n      this.y += that.y;\n      return this;\n    },\n\n    /**\n     * Adds value to this point and returns a new one\n     * @param {Number} scalar\n     * @return {fabric.Point} new Point with added value\n     */\n    scalarAdd: function (scalar) {\n      return new Point(this.x + scalar, this.y + scalar);\n    },\n\n    /**\n     * Adds value to this point\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    scalarAddEquals: function (scalar) {\n      this.x += scalar;\n      this.y += scalar;\n      return this;\n    },\n\n    /**\n     * Subtracts another point from this point and returns a new one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} new Point object with subtracted values\n     */\n    subtract: function (that) {\n      return new Point(this.x - that.x, this.y - that.y);\n    },\n\n    /**\n     * Subtracts another point from this point\n     * @param {fabric.Point} that\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    subtractEquals: function (that) {\n      this.x -= that.x;\n      this.y -= that.y;\n      return this;\n    },\n\n    /**\n     * Subtracts value from this point and returns a new one\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    scalarSubtract: function (scalar) {\n      return new Point(this.x - scalar, this.y - scalar);\n    },\n\n    /**\n     * Subtracts value from this point\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    scalarSubtractEquals: function (scalar) {\n      this.x -= scalar;\n      this.y -= scalar;\n      return this;\n    },\n\n    /**\n     * Multiplies this point by a value and returns a new one\n     * TODO: rename in scalarMultiply in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    multiply: function (scalar) {\n      return new Point(this.x * scalar, this.y * scalar);\n    },\n\n    /**\n     * Multiplies this point by a value\n     * TODO: rename in scalarMultiplyEquals in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    multiplyEquals: function (scalar) {\n      this.x *= scalar;\n      this.y *= scalar;\n      return this;\n    },\n\n    /**\n     * Divides this point by a value and returns a new one\n     * TODO: rename in scalarDivide in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    divide: function (scalar) {\n      return new Point(this.x / scalar, this.y / scalar);\n    },\n\n    /**\n     * Divides this point by a value\n     * TODO: rename in scalarDivideEquals in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    divideEquals: function (scalar) {\n      this.x /= scalar;\n      this.y /= scalar;\n      return this;\n    },\n\n    /**\n     * Returns true if this point is equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    eq: function (that) {\n      return (this.x === that.x && this.y === that.y);\n    },\n\n    /**\n     * Returns true if this point is less than another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    lt: function (that) {\n      return (this.x < that.x && this.y < that.y);\n    },\n\n    /**\n     * Returns true if this point is less than or equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    lte: function (that) {\n      return (this.x <= that.x && this.y <= that.y);\n    },\n\n    /**\n\n     * Returns true if this point is greater another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    gt: function (that) {\n      return (this.x > that.x && this.y > that.y);\n    },\n\n    /**\n     * Returns true if this point is greater than or equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    gte: function (that) {\n      return (this.x >= that.x && this.y >= that.y);\n    },\n\n    /**\n     * Returns new point which is the result of linear interpolation with this one and another one\n     * @param {fabric.Point} that\n     * @param {Number} t , position of interpolation, between 0 and 1 default 0.5\n     * @return {fabric.Point}\n     */\n    lerp: function (that, t) {\n      if (typeof t === 'undefined') {\n        t = 0.5;\n      }\n      t = Math.max(Math.min(1, t), 0);\n      return new Point(this.x + (that.x - this.x) * t, this.y + (that.y - this.y) * t);\n    },\n\n    /**\n     * Returns distance from this point and another one\n     * @param {fabric.Point} that\n     * @return {Number}\n     */\n    distanceFrom: function (that) {\n      var dx = this.x - that.x,\n          dy = this.y - that.y;\n      return Math.sqrt(dx * dx + dy * dy);\n    },\n\n    /**\n     * Returns the point between this point and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    midPointFrom: function (that) {\n      return this.lerp(that);\n    },\n\n    /**\n     * Returns a new point which is the min of this and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    min: function (that) {\n      return new Point(Math.min(this.x, that.x), Math.min(this.y, that.y));\n    },\n\n    /**\n     * Returns a new point which is the max of this and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    max: function (that) {\n      return new Point(Math.max(this.x, that.x), Math.max(this.y, that.y));\n    },\n\n    /**\n     * Returns string representation of this point\n     * @return {String}\n     */\n    toString: function () {\n      return this.x + ',' + this.y;\n    },\n\n    /**\n     * Sets x/y of this point\n     * @param {Number} x\n     * @param {Number} y\n     * @chainable\n     */\n    setXY: function (x, y) {\n      this.x = x;\n      this.y = y;\n      return this;\n    },\n\n    /**\n     * Sets x of this point\n     * @param {Number} x\n     * @chainable\n     */\n    setX: function (x) {\n      this.x = x;\n      return this;\n    },\n\n    /**\n     * Sets y of this point\n     * @param {Number} y\n     * @chainable\n     */\n    setY: function (y) {\n      this.y = y;\n      return this;\n    },\n\n    /**\n     * Sets x/y of this point from another point\n     * @param {fabric.Point} that\n     * @chainable\n     */\n    setFromPoint: function (that) {\n      this.x = that.x;\n      this.y = that.y;\n      return this;\n    },\n\n    /**\n     * Swaps x/y of this point and another point\n     * @param {fabric.Point} that\n     */\n    swap: function (that) {\n      var x = this.x,\n          y = this.y;\n      this.x = that.x;\n      this.y = that.y;\n      that.x = x;\n      that.y = y;\n    },\n\n    /**\n     * return a cloned instance of the point\n     * @return {fabric.Point}\n     */\n    clone: function () {\n      return new Point(this.x, this.y);\n    }\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Intersection) {\n    fabric.warn('fabric.Intersection is already defined');\n    return;\n  }\n\n  /**\n   * Intersection class\n   * @class fabric.Intersection\n   * @memberOf fabric\n   * @constructor\n   */\n  function Intersection(status) {\n    this.status = status;\n    this.points = [];\n  }\n\n  fabric.Intersection = Intersection;\n\n  fabric.Intersection.prototype = /** @lends fabric.Intersection.prototype */ {\n\n    constructor: Intersection,\n\n    /**\n     * Appends a point to intersection\n     * @param {fabric.Point} point\n     * @return {fabric.Intersection} thisArg\n     * @chainable\n     */\n    appendPoint: function (point) {\n      this.points.push(point);\n      return this;\n    },\n\n    /**\n     * Appends points to intersection\n     * @param {Array} points\n     * @return {fabric.Intersection} thisArg\n     * @chainable\n     */\n    appendPoints: function (points) {\n      this.points = this.points.concat(points);\n      return this;\n    }\n  };\n\n  /**\n   * Checks if one line intersects another\n   * TODO: rename in intersectSegmentSegment\n   * @static\n   * @param {fabric.Point} a1\n   * @param {fabric.Point} a2\n   * @param {fabric.Point} b1\n   * @param {fabric.Point} b2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectLineLine = function (a1, a2, b1, b2) {\n    var result,\n        uaT = (b2.x - b1.x) * (a1.y - b1.y) - (b2.y - b1.y) * (a1.x - b1.x),\n        ubT = (a2.x - a1.x) * (a1.y - b1.y) - (a2.y - a1.y) * (a1.x - b1.x),\n        uB = (b2.y - b1.y) * (a2.x - a1.x) - (b2.x - b1.x) * (a2.y - a1.y);\n    if (uB !== 0) {\n      var ua = uaT / uB,\n          ub = ubT / uB;\n      if (0 <= ua && ua <= 1 && 0 <= ub && ub <= 1) {\n        result = new Intersection('Intersection');\n        result.appendPoint(new fabric.Point(a1.x + ua * (a2.x - a1.x), a1.y + ua * (a2.y - a1.y)));\n      }\n      else {\n        result = new Intersection();\n      }\n    }\n    else {\n      if (uaT === 0 || ubT === 0) {\n        result = new Intersection('Coincident');\n      }\n      else {\n        result = new Intersection('Parallel');\n      }\n    }\n    return result;\n  };\n\n  /**\n   * Checks if line intersects polygon\n   * TODO: rename in intersectSegmentPolygon\n   * fix detection of coincident\n   * @static\n   * @param {fabric.Point} a1\n   * @param {fabric.Point} a2\n   * @param {Array} points\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectLinePolygon = function(a1, a2, points) {\n    var result = new Intersection(),\n        length = points.length,\n        b1, b2, inter, i;\n\n    for (i = 0; i < length; i++) {\n      b1 = points[i];\n      b2 = points[(i + 1) % length];\n      inter = Intersection.intersectLineLine(a1, a2, b1, b2);\n\n      result.appendPoints(inter.points);\n    }\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n  /**\n   * Checks if polygon intersects another polygon\n   * @static\n   * @param {Array} points1\n   * @param {Array} points2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectPolygonPolygon = function (points1, points2) {\n    var result = new Intersection(),\n        length = points1.length, i;\n\n    for (i = 0; i < length; i++) {\n      var a1 = points1[i],\n          a2 = points1[(i + 1) % length],\n          inter = Intersection.intersectLinePolygon(a1, a2, points2);\n\n      result.appendPoints(inter.points);\n    }\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n  /**\n   * Checks if polygon intersects rectangle\n   * @static\n   * @param {Array} points\n   * @param {fabric.Point} r1\n   * @param {fabric.Point} r2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectPolygonRectangle = function (points, r1, r2) {\n    var min = r1.min(r2),\n        max = r1.max(r2),\n        topRight = new fabric.Point(max.x, min.y),\n        bottomLeft = new fabric.Point(min.x, max.y),\n        inter1 = Intersection.intersectLinePolygon(min, topRight, points),\n        inter2 = Intersection.intersectLinePolygon(topRight, max, points),\n        inter3 = Intersection.intersectLinePolygon(max, bottomLeft, points),\n        inter4 = Intersection.intersectLinePolygon(bottomLeft, min, points),\n        result = new Intersection();\n\n    result.appendPoints(inter1.points);\n    result.appendPoints(inter2.points);\n    result.appendPoints(inter3.points);\n    result.appendPoints(inter4.points);\n\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Color) {\n    fabric.warn('fabric.Color is already defined.');\n    return;\n  }\n\n  /**\n   * Color class\n   * The purpose of {@link fabric.Color} is to abstract and encapsulate common color operations;\n   * {@link fabric.Color} is a constructor and creates instances of {@link fabric.Color} objects.\n   *\n   * @class fabric.Color\n   * @param {String} color optional in hex or rgb(a) or hsl format or from known color list\n   * @return {fabric.Color} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2/#colors}\n   */\n  function Color(color) {\n    if (!color) {\n      this.setSource([0, 0, 0, 1]);\n    }\n    else {\n      this._tryParsingColor(color);\n    }\n  }\n\n  fabric.Color = Color;\n\n  fabric.Color.prototype = /** @lends fabric.Color.prototype */ {\n\n    /**\n     * @private\n     * @param {String|Array} color Color value to parse\n     */\n    _tryParsingColor: function(color) {\n      var source;\n\n      if (color in Color.colorNameMap) {\n        color = Color.colorNameMap[color];\n      }\n\n      if (color === 'transparent') {\n        source = [255, 255, 255, 0];\n      }\n\n      if (!source) {\n        source = Color.sourceFromHex(color);\n      }\n      if (!source) {\n        source = Color.sourceFromRgb(color);\n      }\n      if (!source) {\n        source = Color.sourceFromHsl(color);\n      }\n      if (!source) {\n        //if color is not recognize let's make black as canvas does\n        source = [0, 0, 0, 1];\n      }\n      if (source) {\n        this.setSource(source);\n      }\n    },\n\n    /**\n     * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n     * @private\n     * @param {Number} r Red color value\n     * @param {Number} g Green color value\n     * @param {Number} b Blue color value\n     * @return {Array} Hsl color\n     */\n    _rgbToHsl: function(r, g, b) {\n      r /= 255; g /= 255; b /= 255;\n\n      var h, s, l,\n          max = fabric.util.array.max([r, g, b]),\n          min = fabric.util.array.min([r, g, b]);\n\n      l = (max + min) / 2;\n\n      if (max === min) {\n        h = s = 0; // achromatic\n      }\n      else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n          case r:\n            h = (g - b) / d + (g < b ? 6 : 0);\n            break;\n          case g:\n            h = (b - r) / d + 2;\n            break;\n          case b:\n            h = (r - g) / d + 4;\n            break;\n        }\n        h /= 6;\n      }\n\n      return [\n        Math.round(h * 360),\n        Math.round(s * 100),\n        Math.round(l * 100)\n      ];\n    },\n\n    /**\n     * Returns source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n     * @return {Array}\n     */\n    getSource: function() {\n      return this._source;\n    },\n\n    /**\n     * Sets source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n     * @param {Array} source\n     */\n    setSource: function(source) {\n      this._source = source;\n    },\n\n    /**\n     * Returns color representation in RGB format\n     * @return {String} ex: rgb(0-255,0-255,0-255)\n     */\n    toRgb: function() {\n      var source = this.getSource();\n      return 'rgb(' + source[0] + ',' + source[1] + ',' + source[2] + ')';\n    },\n\n    /**\n     * Returns color representation in RGBA format\n     * @return {String} ex: rgba(0-255,0-255,0-255,0-1)\n     */\n    toRgba: function() {\n      var source = this.getSource();\n      return 'rgba(' + source[0] + ',' + source[1] + ',' + source[2] + ',' + source[3] + ')';\n    },\n\n    /**\n     * Returns color representation in HSL format\n     * @return {String} ex: hsl(0-360,0%-100%,0%-100%)\n     */\n    toHsl: function() {\n      var source = this.getSource(),\n          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\n      return 'hsl(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%)';\n    },\n\n    /**\n     * Returns color representation in HSLA format\n     * @return {String} ex: hsla(0-360,0%-100%,0%-100%,0-1)\n     */\n    toHsla: function() {\n      var source = this.getSource(),\n          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\n      return 'hsla(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%,' + source[3] + ')';\n    },\n\n    /**\n     * Returns color representation in HEX format\n     * @return {String} ex: FF5555\n     */\n    toHex: function() {\n      var source = this.getSource(), r, g, b;\n\n      r = source[0].toString(16);\n      r = (r.length === 1) ? ('0' + r) : r;\n\n      g = source[1].toString(16);\n      g = (g.length === 1) ? ('0' + g) : g;\n\n      b = source[2].toString(16);\n      b = (b.length === 1) ? ('0' + b) : b;\n\n      return r.toUpperCase() + g.toUpperCase() + b.toUpperCase();\n    },\n\n    /**\n     * Returns color representation in HEXA format\n     * @return {String} ex: FF5555CC\n     */\n    toHexa: function() {\n      var source = this.getSource(), a;\n\n      a = Math.round(source[3] * 255);\n      a = a.toString(16);\n      a = (a.length === 1) ? ('0' + a) : a;\n\n      return this.toHex() + a.toUpperCase();\n    },\n\n    /**\n     * Gets value of alpha channel for this color\n     * @return {Number} 0-1\n     */\n    getAlpha: function() {\n      return this.getSource()[3];\n    },\n\n    /**\n     * Sets value of alpha channel for this color\n     * @param {Number} alpha Alpha value 0-1\n     * @return {fabric.Color} thisArg\n     */\n    setAlpha: function(alpha) {\n      var source = this.getSource();\n      source[3] = alpha;\n      this.setSource(source);\n      return this;\n    },\n\n    /**\n     * Transforms color to its grayscale representation\n     * @return {fabric.Color} thisArg\n     */\n    toGrayscale: function() {\n      var source = this.getSource(),\n          average = parseInt((source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0), 10),\n          currentAlpha = source[3];\n      this.setSource([average, average, average, currentAlpha]);\n      return this;\n    },\n\n    /**\n     * Transforms color to its black and white representation\n     * @param {Number} threshold\n     * @return {fabric.Color} thisArg\n     */\n    toBlackWhite: function(threshold) {\n      var source = this.getSource(),\n          average = (source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0),\n          currentAlpha = source[3];\n\n      threshold = threshold || 127;\n\n      average = (Number(average) < Number(threshold)) ? 0 : 255;\n      this.setSource([average, average, average, currentAlpha]);\n      return this;\n    },\n\n    /**\n     * Overlays color with another color\n     * @param {String|fabric.Color} otherColor\n     * @return {fabric.Color} thisArg\n     */\n    overlayWith: function(otherColor) {\n      if (!(otherColor instanceof Color)) {\n        otherColor = new Color(otherColor);\n      }\n\n      var result = [],\n          alpha = this.getAlpha(),\n          otherAlpha = 0.5,\n          source = this.getSource(),\n          otherSource = otherColor.getSource(), i;\n\n      for (i = 0; i < 3; i++) {\n        result.push(Math.round((source[i] * (1 - otherAlpha)) + (otherSource[i] * otherAlpha)));\n      }\n\n      result[3] = alpha;\n      this.setSource(result);\n      return this;\n    }\n  };\n\n  /**\n   * Regex matching color in RGB or RGBA formats (ex: rgb(0, 0, 0), rgba(255, 100, 10, 0.5), rgba( 255 , 100 , 10 , 0.5 ), rgb(1,1,1), rgba(100%, 60%, 10%, 0.5))\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  // eslint-disable-next-line max-len\n  fabric.Color.reRGBa = /^rgba?\\(\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*(?:\\s*,\\s*((?:\\d*\\.?\\d+)?)\\s*)?\\)$/;\n\n  /**\n   * Regex matching color in HSL or HSLA formats (ex: hsl(200, 80%, 10%), hsla(300, 50%, 80%, 0.5), hsla( 300 , 50% , 80% , 0.5 ))\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  fabric.Color.reHSLa = /^hsla?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3}\\%)\\s*,\\s*(\\d{1,3}\\%)\\s*(?:\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)$/;\n\n  /**\n   * Regex matching color in HEX format (ex: #FF5544CC, #FF5555, 010155, aff)\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  fabric.Color.reHex = /^#?([0-9a-f]{8}|[0-9a-f]{6}|[0-9a-f]{4}|[0-9a-f]{3})$/i;\n\n  /**\n   * Map of the 148 color names with HEX code\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   * @see: https://www.w3.org/TR/css3-color/#svg-color\n   */\n  fabric.Color.colorNameMap = {\n    aliceblue:            '#F0F8FF',\n    antiquewhite:         '#FAEBD7',\n    aqua:                 '#00FFFF',\n    aquamarine:           '#7FFFD4',\n    azure:                '#F0FFFF',\n    beige:                '#F5F5DC',\n    bisque:               '#FFE4C4',\n    black:                '#000000',\n    blanchedalmond:       '#FFEBCD',\n    blue:                 '#0000FF',\n    blueviolet:           '#8A2BE2',\n    brown:                '#A52A2A',\n    burlywood:            '#DEB887',\n    cadetblue:            '#5F9EA0',\n    chartreuse:           '#7FFF00',\n    chocolate:            '#D2691E',\n    coral:                '#FF7F50',\n    cornflowerblue:       '#6495ED',\n    cornsilk:             '#FFF8DC',\n    crimson:              '#DC143C',\n    cyan:                 '#00FFFF',\n    darkblue:             '#00008B',\n    darkcyan:             '#008B8B',\n    darkgoldenrod:        '#B8860B',\n    darkgray:             '#A9A9A9',\n    darkgrey:             '#A9A9A9',\n    darkgreen:            '#006400',\n    darkkhaki:            '#BDB76B',\n    darkmagenta:          '#8B008B',\n    darkolivegreen:       '#556B2F',\n    darkorange:           '#FF8C00',\n    darkorchid:           '#9932CC',\n    darkred:              '#8B0000',\n    darksalmon:           '#E9967A',\n    darkseagreen:         '#8FBC8F',\n    darkslateblue:        '#483D8B',\n    darkslategray:        '#2F4F4F',\n    darkslategrey:        '#2F4F4F',\n    darkturquoise:        '#00CED1',\n    darkviolet:           '#9400D3',\n    deeppink:             '#FF1493',\n    deepskyblue:          '#00BFFF',\n    dimgray:              '#696969',\n    dimgrey:              '#696969',\n    dodgerblue:           '#1E90FF',\n    firebrick:            '#B22222',\n    floralwhite:          '#FFFAF0',\n    forestgreen:          '#228B22',\n    fuchsia:              '#FF00FF',\n    gainsboro:            '#DCDCDC',\n    ghostwhite:           '#F8F8FF',\n    gold:                 '#FFD700',\n    goldenrod:            '#DAA520',\n    gray:                 '#808080',\n    grey:                 '#808080',\n    green:                '#008000',\n    greenyellow:          '#ADFF2F',\n    honeydew:             '#F0FFF0',\n    hotpink:              '#FF69B4',\n    indianred:            '#CD5C5C',\n    indigo:               '#4B0082',\n    ivory:                '#FFFFF0',\n    khaki:                '#F0E68C',\n    lavender:             '#E6E6FA',\n    lavenderblush:        '#FFF0F5',\n    lawngreen:            '#7CFC00',\n    lemonchiffon:         '#FFFACD',\n    lightblue:            '#ADD8E6',\n    lightcoral:           '#F08080',\n    lightcyan:            '#E0FFFF',\n    lightgoldenrodyellow: '#FAFAD2',\n    lightgray:            '#D3D3D3',\n    lightgrey:            '#D3D3D3',\n    lightgreen:           '#90EE90',\n    lightpink:            '#FFB6C1',\n    lightsalmon:          '#FFA07A',\n    lightseagreen:        '#20B2AA',\n    lightskyblue:         '#87CEFA',\n    lightslategray:       '#778899',\n    lightslategrey:       '#778899',\n    lightsteelblue:       '#B0C4DE',\n    lightyellow:          '#FFFFE0',\n    lime:                 '#00FF00',\n    limegreen:            '#32CD32',\n    linen:                '#FAF0E6',\n    magenta:              '#FF00FF',\n    maroon:               '#800000',\n    mediumaquamarine:     '#66CDAA',\n    mediumblue:           '#0000CD',\n    mediumorchid:         '#BA55D3',\n    mediumpurple:         '#9370DB',\n    mediumseagreen:       '#3CB371',\n    mediumslateblue:      '#7B68EE',\n    mediumspringgreen:    '#00FA9A',\n    mediumturquoise:      '#48D1CC',\n    mediumvioletred:      '#C71585',\n    midnightblue:         '#191970',\n    mintcream:            '#F5FFFA',\n    mistyrose:            '#FFE4E1',\n    moccasin:             '#FFE4B5',\n    navajowhite:          '#FFDEAD',\n    navy:                 '#000080',\n    oldlace:              '#FDF5E6',\n    olive:                '#808000',\n    olivedrab:            '#6B8E23',\n    orange:               '#FFA500',\n    orangered:            '#FF4500',\n    orchid:               '#DA70D6',\n    palegoldenrod:        '#EEE8AA',\n    palegreen:            '#98FB98',\n    paleturquoise:        '#AFEEEE',\n    palevioletred:        '#DB7093',\n    papayawhip:           '#FFEFD5',\n    peachpuff:            '#FFDAB9',\n    peru:                 '#CD853F',\n    pink:                 '#FFC0CB',\n    plum:                 '#DDA0DD',\n    powderblue:           '#B0E0E6',\n    purple:               '#800080',\n    rebeccapurple:        '#663399',\n    red:                  '#FF0000',\n    rosybrown:            '#BC8F8F',\n    royalblue:            '#4169E1',\n    saddlebrown:          '#8B4513',\n    salmon:               '#FA8072',\n    sandybrown:           '#F4A460',\n    seagreen:             '#2E8B57',\n    seashell:             '#FFF5EE',\n    sienna:               '#A0522D',\n    silver:               '#C0C0C0',\n    skyblue:              '#87CEEB',\n    slateblue:            '#6A5ACD',\n    slategray:            '#708090',\n    slategrey:            '#708090',\n    snow:                 '#FFFAFA',\n    springgreen:          '#00FF7F',\n    steelblue:            '#4682B4',\n    tan:                  '#D2B48C',\n    teal:                 '#008080',\n    thistle:              '#D8BFD8',\n    tomato:               '#FF6347',\n    turquoise:            '#40E0D0',\n    violet:               '#EE82EE',\n    wheat:                '#F5DEB3',\n    white:                '#FFFFFF',\n    whitesmoke:           '#F5F5F5',\n    yellow:               '#FFFF00',\n    yellowgreen:          '#9ACD32'\n  };\n\n  /**\n   * @private\n   * @param {Number} p\n   * @param {Number} q\n   * @param {Number} t\n   * @return {Number}\n   */\n  function hue2rgb(p, q, t) {\n    if (t < 0) {\n      t += 1;\n    }\n    if (t > 1) {\n      t -= 1;\n    }\n    if (t < 1 / 6) {\n      return p + (q - p) * 6 * t;\n    }\n    if (t < 1 / 2) {\n      return q;\n    }\n    if (t < 2 / 3) {\n      return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n  }\n\n  /**\n   * Returns new color object, when given a color in RGB format\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255)\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromRgb = function(color) {\n    return Color.fromSource(Color.sourceFromRgb(color));\n  };\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in RGB or RGBA format\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255), rgb(0%-100%,0%-100%,0%-100%)\n   * @return {Array} source\n   */\n  fabric.Color.sourceFromRgb = function(color) {\n    var match = color.match(Color.reRGBa);\n    if (match) {\n      var r = parseInt(match[1], 10) / (/%$/.test(match[1]) ? 100 : 1) * (/%$/.test(match[1]) ? 255 : 1),\n          g = parseInt(match[2], 10) / (/%$/.test(match[2]) ? 100 : 1) * (/%$/.test(match[2]) ? 255 : 1),\n          b = parseInt(match[3], 10) / (/%$/.test(match[3]) ? 100 : 1) * (/%$/.test(match[3]) ? 255 : 1);\n\n      return [\n        parseInt(r, 10),\n        parseInt(g, 10),\n        parseInt(b, 10),\n        match[4] ? parseFloat(match[4]) : 1\n      ];\n    }\n  };\n\n  /**\n   * Returns new color object, when given a color in RGBA format\n   * @static\n   * @function\n   * @memberOf fabric.Color\n   * @param {String} color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromRgba = Color.fromRgb;\n\n  /**\n   * Returns new color object, when given a color in HSL format\n   * @param {String} color Color value ex: hsl(0-260,0%-100%,0%-100%)\n   * @memberOf fabric.Color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHsl = function(color) {\n    return Color.fromSource(Color.sourceFromHsl(color));\n  };\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HSL or HSLA format.\n   * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: hsl(0-360,0%-100%,0%-100%) or hsla(0-360,0%-100%,0%-100%, 0-1)\n   * @return {Array} source\n   * @see http://http://www.w3.org/TR/css3-color/#hsl-color\n   */\n  fabric.Color.sourceFromHsl = function(color) {\n    var match = color.match(Color.reHSLa);\n    if (!match) {\n      return;\n    }\n\n    var h = (((parseFloat(match[1]) % 360) + 360) % 360) / 360,\n        s = parseFloat(match[2]) / (/%$/.test(match[2]) ? 100 : 1),\n        l = parseFloat(match[3]) / (/%$/.test(match[3]) ? 100 : 1),\n        r, g, b;\n\n    if (s === 0) {\n      r = g = b = l;\n    }\n    else {\n      var q = l <= 0.5 ? l * (s + 1) : l + s - l * s,\n          p = l * 2 - q;\n\n      r = hue2rgb(p, q, h + 1 / 3);\n      g = hue2rgb(p, q, h);\n      b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [\n      Math.round(r * 255),\n      Math.round(g * 255),\n      Math.round(b * 255),\n      match[4] ? parseFloat(match[4]) : 1\n    ];\n  };\n\n  /**\n   * Returns new color object, when given a color in HSLA format\n   * @static\n   * @function\n   * @memberOf fabric.Color\n   * @param {String} color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHsla = Color.fromHsl;\n\n  /**\n   * Returns new color object, when given a color in HEX format\n   * @static\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: FF5555\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHex = function(color) {\n    return Color.fromSource(Color.sourceFromHex(color));\n  };\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HEX format\n   * @static\n   * @memberOf fabric.Color\n   * @param {String} color ex: FF5555 or FF5544CC (RGBa)\n   * @return {Array} source\n   */\n  fabric.Color.sourceFromHex = function(color) {\n    if (color.match(Color.reHex)) {\n      var value = color.slice(color.indexOf('#') + 1),\n          isShortNotation = (value.length === 3 || value.length === 4),\n          isRGBa = (value.length === 8 || value.length === 4),\n          r = isShortNotation ? (value.charAt(0) + value.charAt(0)) : value.substring(0, 2),\n          g = isShortNotation ? (value.charAt(1) + value.charAt(1)) : value.substring(2, 4),\n          b = isShortNotation ? (value.charAt(2) + value.charAt(2)) : value.substring(4, 6),\n          a = isRGBa ? (isShortNotation ? (value.charAt(3) + value.charAt(3)) : value.substring(6, 8)) : 'FF';\n\n      return [\n        parseInt(r, 16),\n        parseInt(g, 16),\n        parseInt(b, 16),\n        parseFloat((parseInt(a, 16) / 255).toFixed(2))\n      ];\n    }\n  };\n\n  /**\n   * Returns new color object, when given color in array representation (ex: [200, 100, 100, 0.5])\n   * @static\n   * @memberOf fabric.Color\n   * @param {Array} source\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromSource = function(source) {\n    var oColor = new Color();\n    oColor.setSource(source);\n    return oColor;\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  /* _FROM_SVG_START_ */\n  function getColorStop(el) {\n    var style = el.getAttribute('style'),\n        offset = el.getAttribute('offset') || 0,\n        color, colorAlpha, opacity, i;\n\n    // convert percents to absolute values\n    offset = parseFloat(offset) / (/%$/.test(offset) ? 100 : 1);\n    offset = offset < 0 ? 0 : offset > 1 ? 1 : offset;\n    if (style) {\n      var keyValuePairs = style.split(/\\s*;\\s*/);\n\n      if (keyValuePairs[keyValuePairs.length - 1] === '') {\n        keyValuePairs.pop();\n      }\n\n      for (i = keyValuePairs.length; i--; ) {\n\n        var split = keyValuePairs[i].split(/\\s*:\\s*/),\n            key = split[0].trim(),\n            value = split[1].trim();\n\n        if (key === 'stop-color') {\n          color = value;\n        }\n        else if (key === 'stop-opacity') {\n          opacity = value;\n        }\n      }\n    }\n\n    if (!color) {\n      color = el.getAttribute('stop-color') || 'rgb(0,0,0)';\n    }\n    if (!opacity) {\n      opacity = el.getAttribute('stop-opacity');\n    }\n\n    color = new fabric.Color(color);\n    colorAlpha = color.getAlpha();\n    opacity = isNaN(parseFloat(opacity)) ? 1 : parseFloat(opacity);\n    opacity *= colorAlpha;\n\n    return {\n      offset: offset,\n      color: color.toRgb(),\n      opacity: opacity\n    };\n  }\n\n  function getLinearCoords(el) {\n    return {\n      x1: el.getAttribute('x1') || 0,\n      y1: el.getAttribute('y1') || 0,\n      x2: el.getAttribute('x2') || '100%',\n      y2: el.getAttribute('y2') || 0\n    };\n  }\n\n  function getRadialCoords(el) {\n    return {\n      x1: el.getAttribute('fx') || el.getAttribute('cx') || '50%',\n      y1: el.getAttribute('fy') || el.getAttribute('cy') || '50%',\n      r1: 0,\n      x2: el.getAttribute('cx') || '50%',\n      y2: el.getAttribute('cy') || '50%',\n      r2: el.getAttribute('r') || '50%'\n    };\n  }\n  /* _FROM_SVG_END_ */\n\n  var clone = fabric.util.object.clone;\n\n  /**\n   * Gradient class\n   * @class fabric.Gradient\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#gradients}\n   * @see {@link fabric.Gradient#initialize} for constructor definition\n   */\n  fabric.Gradient = fabric.util.createClass(/** @lends fabric.Gradient.prototype */ {\n\n    /**\n     * Horizontal offset for aligning gradients coming from SVG when outside pathgroups\n     * @type Number\n     * @default 0\n     */\n    offsetX: 0,\n\n    /**\n     * Vertical offset for aligning gradients coming from SVG when outside pathgroups\n     * @type Number\n     * @default 0\n     */\n    offsetY: 0,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object with type, coords, gradientUnits and colorStops\n     * @return {fabric.Gradient} thisArg\n     */\n    initialize: function(options) {\n      options || (options = { });\n\n      var coords = { };\n\n      this.id = fabric.Object.__uid++;\n      this.type = options.type || 'linear';\n\n      coords = {\n        x1: options.coords.x1 || 0,\n        y1: options.coords.y1 || 0,\n        x2: options.coords.x2 || 0,\n        y2: options.coords.y2 || 0\n      };\n\n      if (this.type === 'radial') {\n        coords.r1 = options.coords.r1 || 0;\n        coords.r2 = options.coords.r2 || 0;\n      }\n      this.coords = coords;\n      this.colorStops = options.colorStops.slice();\n      if (options.gradientTransform) {\n        this.gradientTransform = options.gradientTransform;\n      }\n      this.offsetX = options.offsetX || this.offsetX;\n      this.offsetY = options.offsetY || this.offsetY;\n    },\n\n    /**\n     * Adds another colorStop\n     * @param {Object} colorStop Object with offset and color\n     * @return {fabric.Gradient} thisArg\n     */\n    addColorStop: function(colorStops) {\n      for (var position in colorStops) {\n        var color = new fabric.Color(colorStops[position]);\n        this.colorStops.push({\n          offset: parseFloat(position),\n          color: color.toRgb(),\n          opacity: color.getAlpha()\n        });\n      }\n      return this;\n    },\n\n    /**\n     * Returns object representation of a gradient\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object}\n     */\n    toObject: function(propertiesToInclude) {\n      var object = {\n        type: this.type,\n        coords: this.coords,\n        colorStops: this.colorStops,\n        offsetX: this.offsetX,\n        offsetY: this.offsetY,\n        gradientTransform: this.gradientTransform ? this.gradientTransform.concat() : this.gradientTransform\n      };\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n\n      return object;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an gradient\n     * @param {Object} object Object to create a gradient for\n     * @return {String} SVG representation of an gradient (linear/radial)\n     */\n    toSVG: function(object) {\n      var coords = clone(this.coords, true), i, len,\n          markup, commonAttributes, colorStops = clone(this.colorStops, true),\n          needsSwap = coords.r1 > coords.r2,\n          offsetX = object.width / 2, offsetY = object.height / 2;\n      // colorStops must be sorted ascending\n      colorStops.sort(function(a, b) {\n        return a.offset - b.offset;\n      });\n      if (object.type === 'path') {\n        offsetX -= object.pathOffset.x;\n        offsetY -= object.pathOffset.y;\n      }\n      for (var prop in coords) {\n        if (prop === 'x1' || prop === 'x2') {\n          coords[prop] += this.offsetX - offsetX;\n        }\n        else if (prop === 'y1' || prop === 'y2') {\n          coords[prop] += this.offsetY - offsetY;\n        }\n      }\n\n      commonAttributes = 'id=\"SVGID_' + this.id +\n                     '\" gradientUnits=\"userSpaceOnUse\"';\n      if (this.gradientTransform) {\n        commonAttributes += ' gradientTransform=\"matrix(' + this.gradientTransform.join(' ') + ')\" ';\n      }\n      if (this.type === 'linear') {\n        markup = [\n          '<linearGradient ',\n          commonAttributes,\n          ' x1=\"', coords.x1,\n          '\" y1=\"', coords.y1,\n          '\" x2=\"', coords.x2,\n          '\" y2=\"', coords.y2,\n          '\">\\n'\n        ];\n      }\n      else if (this.type === 'radial') {\n        // svg radial gradient has just 1 radius. the biggest.\n        markup = [\n          '<radialGradient ',\n          commonAttributes,\n          ' cx=\"', needsSwap ? coords.x1 : coords.x2,\n          '\" cy=\"', needsSwap ? coords.y1 : coords.y2,\n          '\" r=\"', needsSwap ? coords.r1 : coords.r2,\n          '\" fx=\"', needsSwap ? coords.x2 : coords.x1,\n          '\" fy=\"', needsSwap ? coords.y2 : coords.y1,\n          '\">\\n'\n        ];\n      }\n\n      if (this.type === 'radial') {\n        if (needsSwap) {\n          // svg goes from internal to external radius. if radius are inverted, swap color stops.\n          colorStops = colorStops.concat();\n          colorStops.reverse();\n          for (i = 0, len = colorStops.length; i < len; i++) {\n            colorStops[i].offset = 1 - colorStops[i].offset;\n          }\n        }\n        var minRadius = Math.min(coords.r1, coords.r2);\n        if (minRadius > 0) {\n          // i have to shift all colorStops and add new one in 0.\n          var maxRadius = Math.max(coords.r1, coords.r2),\n              percentageShift = minRadius / maxRadius;\n          for (i = 0, len = colorStops.length; i < len; i++) {\n            colorStops[i].offset += percentageShift * (1 - colorStops[i].offset);\n          }\n        }\n      }\n\n      for (i = 0, len = colorStops.length; i < len; i++) {\n        var colorStop = colorStops[i];\n        markup.push(\n          '<stop ',\n          'offset=\"', (colorStop.offset * 100) + '%',\n          '\" style=\"stop-color:', colorStop.color,\n          (colorStop.opacity !== null ? ';stop-opacity: ' + colorStop.opacity : ';'),\n          '\"/>\\n'\n        );\n      }\n\n      markup.push((this.type === 'linear' ? '</linearGradient>\\n' : '</radialGradient>\\n'));\n\n      return markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns an instance of CanvasGradient\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @return {CanvasGradient}\n     */\n    toLive: function(ctx) {\n      var gradient, coords = fabric.util.object.clone(this.coords), i, len;\n\n      if (!this.type) {\n        return;\n      }\n\n      if (this.type === 'linear') {\n        gradient = ctx.createLinearGradient(\n          coords.x1, coords.y1, coords.x2, coords.y2);\n      }\n      else if (this.type === 'radial') {\n        gradient = ctx.createRadialGradient(\n          coords.x1, coords.y1, coords.r1, coords.x2, coords.y2, coords.r2);\n      }\n\n      for (i = 0, len = this.colorStops.length; i < len; i++) {\n        var color = this.colorStops[i].color,\n            opacity = this.colorStops[i].opacity,\n            offset = this.colorStops[i].offset;\n\n        if (typeof opacity !== 'undefined') {\n          color = new fabric.Color(color).setAlpha(opacity).toRgba();\n        }\n        gradient.addColorStop(offset, color);\n      }\n\n      return gradient;\n    }\n  });\n\n  fabric.util.object.extend(fabric.Gradient, {\n\n    /* _FROM_SVG_START_ */\n    /**\n     * Returns {@link fabric.Gradient} instance from an SVG element\n     * @static\n     * @memberOf fabric.Gradient\n     * @param {SVGGradientElement} el SVG gradient element\n     * @param {fabric.Object} instance\n     * @return {fabric.Gradient} Gradient instance\n     * @see http://www.w3.org/TR/SVG/pservers.html#LinearGradientElement\n     * @see http://www.w3.org/TR/SVG/pservers.html#RadialGradientElement\n     */\n    fromElement: function(el, instance) {\n\n      /**\n       *  @example:\n       *\n       *  <linearGradient id=\"linearGrad1\">\n       *    <stop offset=\"0%\" stop-color=\"white\"/>\n       *    <stop offset=\"100%\" stop-color=\"black\"/>\n       *  </linearGradient>\n       *\n       *  OR\n       *\n       *  <linearGradient id=\"linearGrad2\">\n       *    <stop offset=\"0\" style=\"stop-color:rgb(255,255,255)\"/>\n       *    <stop offset=\"1\" style=\"stop-color:rgb(0,0,0)\"/>\n       *  </linearGradient>\n       *\n       *  OR\n       *\n       *  <radialGradient id=\"radialGrad1\">\n       *    <stop offset=\"0%\" stop-color=\"white\" stop-opacity=\"1\" />\n       *    <stop offset=\"50%\" stop-color=\"black\" stop-opacity=\"0.5\" />\n       *    <stop offset=\"100%\" stop-color=\"white\" stop-opacity=\"1\" />\n       *  </radialGradient>\n       *\n       *  OR\n       *\n       *  <radialGradient id=\"radialGrad2\">\n       *    <stop offset=\"0\" stop-color=\"rgb(255,255,255)\" />\n       *    <stop offset=\"0.5\" stop-color=\"rgb(0,0,0)\" />\n       *    <stop offset=\"1\" stop-color=\"rgb(255,255,255)\" />\n       *  </radialGradient>\n       *\n       */\n\n      var colorStopEls = el.getElementsByTagName('stop'),\n          type,\n          gradientUnits = el.getAttribute('gradientUnits') || 'objectBoundingBox',\n          gradientTransform = el.getAttribute('gradientTransform'),\n          colorStops = [],\n          coords, ellipseMatrix, i;\n\n      if (el.nodeName === 'linearGradient' || el.nodeName === 'LINEARGRADIENT') {\n        type = 'linear';\n      }\n      else {\n        type = 'radial';\n      }\n\n      if (type === 'linear') {\n        coords = getLinearCoords(el);\n      }\n      else if (type === 'radial') {\n        coords = getRadialCoords(el);\n      }\n\n      for (i = colorStopEls.length; i--; ) {\n        colorStops.push(getColorStop(colorStopEls[i]));\n      }\n\n      ellipseMatrix = _convertPercentUnitsToValues(instance, coords, gradientUnits);\n\n      var gradient = new fabric.Gradient({\n        type: type,\n        coords: coords,\n        colorStops: colorStops,\n        offsetX: -instance.left,\n        offsetY: -instance.top\n      });\n\n      if (gradientTransform || ellipseMatrix !== '') {\n        gradient.gradientTransform = fabric.parseTransformAttribute((gradientTransform || '') + ellipseMatrix);\n      }\n\n      return gradient;\n    },\n    /* _FROM_SVG_END_ */\n\n    /**\n     * Returns {@link fabric.Gradient} instance from its object representation\n     * @static\n     * @memberOf fabric.Gradient\n     * @param {Object} obj\n     * @param {Object} [options] Options object\n     */\n    forObject: function(obj, options) {\n      options || (options = { });\n      _convertPercentUnitsToValues(obj, options.coords, 'userSpaceOnUse');\n      return new fabric.Gradient(options);\n    }\n  });\n\n  /**\n   * @private\n   */\n  function _convertPercentUnitsToValues(object, options, gradientUnits) {\n    var propValue, addFactor = 0, multFactor = 1, ellipseMatrix = '';\n    for (var prop in options) {\n      if (options[prop] === 'Infinity') {\n        options[prop] = 1;\n      }\n      else if (options[prop] === '-Infinity') {\n        options[prop] = 0;\n      }\n      propValue = parseFloat(options[prop], 10);\n      if (typeof options[prop] === 'string' && /^(\\d+\\.\\d+)%|(\\d+)%$/.test(options[prop])) {\n        multFactor = 0.01;\n      }\n      else {\n        multFactor = 1;\n      }\n      if (prop === 'x1' || prop === 'x2' || prop === 'r2') {\n        multFactor *= gradientUnits === 'objectBoundingBox' ? object.width : 1;\n        addFactor = gradientUnits === 'objectBoundingBox' ? object.left || 0 : 0;\n      }\n      else if (prop === 'y1' || prop === 'y2') {\n        multFactor *= gradientUnits === 'objectBoundingBox' ? object.height : 1;\n        addFactor = gradientUnits === 'objectBoundingBox' ? object.top || 0 : 0;\n      }\n      options[prop] = propValue * multFactor + addFactor;\n    }\n    if (object.type === 'ellipse' &&\n        options.r2 !== null &&\n        gradientUnits === 'objectBoundingBox' &&\n        object.rx !== object.ry) {\n\n      var scaleFactor = object.ry / object.rx;\n      ellipseMatrix = ' scale(1, ' + scaleFactor + ')';\n      if (options.y1) {\n        options.y1 /= scaleFactor;\n      }\n      if (options.y2) {\n        options.y2 /= scaleFactor;\n      }\n    }\n    return ellipseMatrix;\n  }\n})();\n\n\n(function() {\n\n  'use strict';\n\n  var toFixed = fabric.util.toFixed;\n\n  /**\n   * Pattern class\n   * @class fabric.Pattern\n   * @see {@link http://fabricjs.com/patterns|Pattern demo}\n   * @see {@link http://fabricjs.com/dynamic-patterns|DynamicPattern demo}\n   * @see {@link fabric.Pattern#initialize} for constructor definition\n   */\n\n\n  fabric.Pattern = fabric.util.createClass(/** @lends fabric.Pattern.prototype */ {\n\n    /**\n     * Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n     * @type String\n     * @default\n     */\n    repeat: 'repeat',\n\n    /**\n     * Pattern horizontal offset from object's left/top corner\n     * @type Number\n     * @default\n     */\n    offsetX: 0,\n\n    /**\n     * Pattern vertical offset from object's left/top corner\n     * @type Number\n     * @default\n     */\n    offsetY: 0,\n\n    /**\n     * crossOrigin value (one of \"\", \"anonymous\", \"use-credentials\")\n     * @see https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes\n     * @type String\n     * @default\n     */\n    crossOrigin: '',\n\n    /**\n     * transform matrix to change the pattern, imported from svgs.\n     * @type Array\n     * @default\n     */\n    patternTransform: null,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @param {Function} [callback] function to invoke after callback init.\n     * @return {fabric.Pattern} thisArg\n     */\n    initialize: function(options, callback) {\n      options || (options = { });\n\n      this.id = fabric.Object.__uid++;\n      this.setOptions(options);\n      if (!options.source || (options.source && typeof options.source !== 'string')) {\n        callback && callback(this);\n        return;\n      }\n      // function string\n      if (typeof fabric.util.getFunctionBody(options.source) !== 'undefined') {\n        this.source = new Function(fabric.util.getFunctionBody(options.source));\n        callback && callback(this);\n      }\n      else {\n        // img src string\n        var _this = this;\n        this.source = fabric.util.createImage();\n        fabric.util.loadImage(options.source, function(img) {\n          _this.source = img;\n          callback && callback(_this);\n        }, null, this.crossOrigin);\n      }\n    },\n\n    /**\n     * Returns object representation of a pattern\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of a pattern instance\n     */\n    toObject: function(propertiesToInclude) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n          source, object;\n\n      // callback\n      if (typeof this.source === 'function') {\n        source = String(this.source);\n      }\n      // <img> element\n      else if (typeof this.source.src === 'string') {\n        source = this.source.src;\n      }\n      // <canvas> element\n      else if (typeof this.source === 'object' && this.source.toDataURL) {\n        source = this.source.toDataURL();\n      }\n\n      object = {\n        type: 'pattern',\n        source: source,\n        repeat: this.repeat,\n        crossOrigin: this.crossOrigin,\n        offsetX: toFixed(this.offsetX, NUM_FRACTION_DIGITS),\n        offsetY: toFixed(this.offsetY, NUM_FRACTION_DIGITS),\n        patternTransform: this.patternTransform ? this.patternTransform.concat() : null\n      };\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n\n      return object;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of a pattern\n     * @param {fabric.Object} object\n     * @return {String} SVG representation of a pattern\n     */\n    toSVG: function(object) {\n      var patternSource = typeof this.source === 'function' ? this.source() : this.source,\n          patternWidth = patternSource.width / object.width,\n          patternHeight = patternSource.height / object.height,\n          patternOffsetX = this.offsetX / object.width,\n          patternOffsetY = this.offsetY / object.height,\n          patternImgSrc = '';\n      if (this.repeat === 'repeat-x' || this.repeat === 'no-repeat') {\n        patternHeight = 1;\n      }\n      if (this.repeat === 'repeat-y' || this.repeat === 'no-repeat') {\n        patternWidth = 1;\n      }\n      if (patternSource.src) {\n        patternImgSrc = patternSource.src;\n      }\n      else if (patternSource.toDataURL) {\n        patternImgSrc = patternSource.toDataURL();\n      }\n\n      return '<pattern id=\"SVGID_' + this.id +\n                    '\" x=\"' + patternOffsetX +\n                    '\" y=\"' + patternOffsetY +\n                    '\" width=\"' + patternWidth +\n                    '\" height=\"' + patternHeight + '\">\\n' +\n               '<image x=\"0\" y=\"0\"' +\n                      ' width=\"' + patternSource.width +\n                      '\" height=\"' + patternSource.height +\n                      '\" xlink:href=\"' + patternImgSrc +\n               '\"></image>\\n' +\n             '</pattern>\\n';\n    },\n    /* _TO_SVG_END_ */\n\n    setOptions: function(options) {\n      for (var prop in options) {\n        this[prop] = options[prop];\n      }\n    },\n\n    /**\n     * Returns an instance of CanvasPattern\n     * @param {CanvasRenderingContext2D} ctx Context to create pattern\n     * @return {CanvasPattern}\n     */\n    toLive: function(ctx) {\n      var source = typeof this.source === 'function' ? this.source() : this.source;\n\n      // if the image failed to load, return, and allow rest to continue loading\n      if (!source) {\n        return '';\n      }\n\n      // if an image\n      if (typeof source.src !== 'undefined') {\n        if (!source.complete) {\n          return '';\n        }\n        if (source.naturalWidth === 0 || source.naturalHeight === 0) {\n          return '';\n        }\n      }\n      return ctx.createPattern(source, this.repeat);\n    }\n  });\n})();\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      toFixed = fabric.util.toFixed;\n\n  if (fabric.Shadow) {\n    fabric.warn('fabric.Shadow is already defined.');\n    return;\n  }\n\n  /**\n   * Shadow class\n   * @class fabric.Shadow\n   * @see {@link http://fabricjs.com/shadows|Shadow demo}\n   * @see {@link fabric.Shadow#initialize} for constructor definition\n   */\n  fabric.Shadow = fabric.util.createClass(/** @lends fabric.Shadow.prototype */ {\n\n    /**\n     * Shadow color\n     * @type String\n     * @default\n     */\n    color: 'rgb(0,0,0)',\n\n    /**\n     * Shadow blur\n     * @type Number\n     */\n    blur: 0,\n\n    /**\n     * Shadow horizontal offset\n     * @type Number\n     * @default\n     */\n    offsetX: 0,\n\n    /**\n     * Shadow vertical offset\n     * @type Number\n     * @default\n     */\n    offsetY: 0,\n\n    /**\n     * Whether the shadow should affect stroke operations\n     * @type Boolean\n     * @default\n     */\n    affectStroke: false,\n\n    /**\n     * Indicates whether toObject should include default values\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues: true,\n\n    /**\n     * Constructor\n     * @param {Object|String} [options] Options object with any of color, blur, offsetX, offsetY properties or string (e.g. \"rgba(0,0,0,0.2) 2px 2px 10px\")\n     * @return {fabric.Shadow} thisArg\n     */\n    initialize: function(options) {\n\n      if (typeof options === 'string') {\n        options = this._parseShadow(options);\n      }\n\n      for (var prop in options) {\n        this[prop] = options[prop];\n      }\n\n      this.id = fabric.Object.__uid++;\n    },\n\n    /**\n     * @private\n     * @param {String} shadow Shadow value to parse\n     * @return {Object} Shadow object with color, offsetX, offsetY and blur\n     */\n    _parseShadow: function(shadow) {\n      var shadowStr = shadow.trim(),\n          offsetsAndBlur = fabric.Shadow.reOffsetsAndBlur.exec(shadowStr) || [],\n          color = shadowStr.replace(fabric.Shadow.reOffsetsAndBlur, '') || 'rgb(0,0,0)';\n\n      return {\n        color: color.trim(),\n        offsetX: parseInt(offsetsAndBlur[1], 10) || 0,\n        offsetY: parseInt(offsetsAndBlur[2], 10) || 0,\n        blur: parseInt(offsetsAndBlur[3], 10) || 0\n      };\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @see http://www.w3.org/TR/css-text-decor-3/#text-shadow\n     * @return {String} Returns CSS3 text-shadow declaration\n     */\n    toString: function() {\n      return [this.offsetX, this.offsetY, this.blur, this.color].join('px ');\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of a shadow\n     * @param {fabric.Object} object\n     * @return {String} SVG representation of a shadow\n     */\n    toSVG: function(object) {\n      var fBoxX = 40, fBoxY = 40, NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n          offset = fabric.util.rotateVector(\n            { x: this.offsetX, y: this.offsetY },\n            fabric.util.degreesToRadians(-object.angle)),\n          BLUR_BOX = 20;\n\n      if (object.width && object.height) {\n        //http://www.w3.org/TR/SVG/filters.html#FilterEffectsRegion\n        // we add some extra space to filter box to contain the blur ( 20 )\n        fBoxX = toFixed((Math.abs(offset.x) + this.blur) / object.width, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n        fBoxY = toFixed((Math.abs(offset.y) + this.blur) / object.height, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n      }\n      if (object.flipX) {\n        offset.x *= -1;\n      }\n      if (object.flipY) {\n        offset.y *= -1;\n      }\n      return (\n        '<filter id=\"SVGID_' + this.id + '\" y=\"-' + fBoxY + '%\" height=\"' + (100 + 2 * fBoxY) + '%\" ' +\n          'x=\"-' + fBoxX + '%\" width=\"' + (100 + 2 * fBoxX) + '%\" ' + '>\\n' +\n          '\\t<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"' +\n            toFixed(this.blur ? this.blur / 2 : 0, NUM_FRACTION_DIGITS) + '\"></feGaussianBlur>\\n' +\n          '\\t<feOffset dx=\"' + toFixed(offset.x, NUM_FRACTION_DIGITS) +\n          '\" dy=\"' + toFixed(offset.y, NUM_FRACTION_DIGITS) + '\" result=\"oBlur\" ></feOffset>\\n' +\n          '\\t<feFlood flood-color=\"' + this.color + '\"/>\\n' +\n          '\\t<feComposite in2=\"oBlur\" operator=\"in\" />\\n' +\n          '\\t<feMerge>\\n' +\n            '\\t\\t<feMergeNode></feMergeNode>\\n' +\n            '\\t\\t<feMergeNode in=\"SourceGraphic\"></feMergeNode>\\n' +\n          '\\t</feMerge>\\n' +\n        '</filter>\\n');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns object representation of a shadow\n     * @return {Object} Object representation of a shadow instance\n     */\n    toObject: function() {\n      if (this.includeDefaultValues) {\n        return {\n          color: this.color,\n          blur: this.blur,\n          offsetX: this.offsetX,\n          offsetY: this.offsetY,\n          affectStroke: this.affectStroke\n        };\n      }\n      var obj = { }, proto = fabric.Shadow.prototype;\n\n      ['color', 'blur', 'offsetX', 'offsetY', 'affectStroke'].forEach(function(prop) {\n        if (this[prop] !== proto[prop]) {\n          obj[prop] = this[prop];\n        }\n      }, this);\n\n      return obj;\n    }\n  });\n\n  /**\n   * Regex matching shadow offsetX, offsetY and blur (ex: \"2px 2px 10px rgba(0,0,0,0.2)\", \"rgb(0,255,0) 2px 2px\")\n   * @static\n   * @field\n   * @memberOf fabric.Shadow\n   */\n  // eslint-disable-next-line max-len\n  fabric.Shadow.reOffsetsAndBlur = /(?:\\s|^)(-?\\d+(?:px)?(?:\\s?|$))?(-?\\d+(?:px)?(?:\\s?|$))?(\\d+(?:px)?)?(?:\\s?|$)(?:$|\\s)/;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function () {\n\n  'use strict';\n\n  if (fabric.StaticCanvas) {\n    fabric.warn('fabric.StaticCanvas is already defined.');\n    return;\n  }\n\n  // aliases for faster resolution\n  var extend = fabric.util.object.extend,\n      getElementOffset = fabric.util.getElementOffset,\n      removeFromArray = fabric.util.removeFromArray,\n      toFixed = fabric.util.toFixed,\n      transformPoint = fabric.util.transformPoint,\n      invertTransform = fabric.util.invertTransform,\n\n      CANVAS_INIT_ERROR = new Error('Could not initialize `canvas` element');\n\n  /**\n   * Static canvas class\n   * @class fabric.StaticCanvas\n   * @mixes fabric.Collection\n   * @mixes fabric.Observable\n   * @see {@link http://fabricjs.com/static_canvas|StaticCanvas demo}\n   * @see {@link fabric.StaticCanvas#initialize} for constructor definition\n   * @fires before:render\n   * @fires after:render\n   * @fires canvas:cleared\n   * @fires object:added\n   * @fires object:removed\n   */\n  fabric.StaticCanvas = fabric.util.createClass(fabric.CommonMethods, /** @lends fabric.StaticCanvas.prototype */ {\n\n    /**\n     * Constructor\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(el, options) {\n      options || (options = { });\n      this.renderAndResetBound = this.renderAndReset.bind(this);\n      this.requestRenderAllBound = this.requestRenderAll.bind(this);\n      this._initStatic(el, options);\n    },\n\n    /**\n     * Background color of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setBackgroundColor}.\n     * @type {(String|fabric.Pattern)}\n     * @default\n     */\n    backgroundColor: '',\n\n    /**\n     * Background image of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setBackgroundImage}.\n     * <b>Backwards incompatibility note:</b> The \"backgroundImageOpacity\"\n     * and \"backgroundImageStretch\" properties are deprecated since 1.3.9.\n     * Use {@link fabric.Image#opacity}, {@link fabric.Image#width} and {@link fabric.Image#height}.\n     * @type fabric.Image\n     * @default\n     */\n    backgroundImage: null,\n\n    /**\n     * Overlay color of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setOverlayColor}\n     * @since 1.3.9\n     * @type {(String|fabric.Pattern)}\n     * @default\n     */\n    overlayColor: '',\n\n    /**\n     * Overlay image of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setOverlayImage}.\n     * <b>Backwards incompatibility note:</b> The \"overlayImageLeft\"\n     * and \"overlayImageTop\" properties are deprecated since 1.3.9.\n     * Use {@link fabric.Image#left} and {@link fabric.Image#top}.\n     * @type fabric.Image\n     * @default\n     */\n    overlayImage: null,\n\n    /**\n     * Indicates whether toObject/toDatalessObject should include default values\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues: true,\n\n    /**\n     * Indicates whether objects' state should be saved\n     * @type Boolean\n     * @default\n     */\n    stateful: false,\n\n    /**\n     * Indicates whether {@link fabric.Collection.add}, {@link fabric.Collection.insertAt} and {@link fabric.Collection.remove},\n     * {@link fabric.StaticCanvas.moveTo}, {@link fabric.StaticCanvas.clear} and many more, should also re-render canvas.\n     * Disabling this option will not give a performance boost when adding/removing a lot of objects to/from canvas at once\n     * since the renders are quequed and executed one per frame.\n     * Disabling is suggested anyway and managing the renders of the app manually is not a big effort ( canvas.requestRenderAll() )\n     * Left default to true to do not break documentation and old app, fiddles.\n     * @type Boolean\n     * @default\n     */\n    renderOnAddRemove: true,\n\n    /**\n     * Function that determines clipping of entire canvas area\n     * Being passed context as first argument. See clipping canvas area in {@link https://github.com/kangax/fabric.js/wiki/FAQ}\n     * @deprecated since 2.0.0\n     * @type Function\n     * @default\n     */\n    clipTo: null,\n\n    /**\n     * Indicates whether object controls (borders/controls) are rendered above overlay image\n     * @type Boolean\n     * @default\n     */\n    controlsAboveOverlay: false,\n\n    /**\n     * Indicates whether the browser can be scrolled when using a touchscreen and dragging on the canvas\n     * @type Boolean\n     * @default\n     */\n    allowTouchScrolling: false,\n\n    /**\n     * Indicates whether this canvas will use image smoothing, this is on by default in browsers\n     * @type Boolean\n     * @default\n     */\n    imageSmoothingEnabled: true,\n\n    /**\n     * The transformation (in the format of Canvas transform) which focuses the viewport\n     * @type Array\n     * @default\n     */\n    viewportTransform: fabric.iMatrix.concat(),\n\n    /**\n     * if set to false background image is not affected by viewport transform\n     * @since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    backgroundVpt: true,\n\n    /**\n     * if set to false overlya image is not affected by viewport transform\n     * @since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    overlayVpt: true,\n\n    /**\n     * Callback; invoked right before object is about to be scaled/rotated\n     */\n    onBeforeScaleRotate: function () {\n      /* NOOP */\n    },\n\n    /**\n     * When true, canvas is scaled by devicePixelRatio for better rendering on retina screens\n     * @type Boolean\n     * @default\n     */\n    enableRetinaScaling: true,\n\n    /**\n     * Describe canvas element extension over design\n     * properties are tl,tr,bl,br.\n     * if canvas is not zoomed/panned those points are the four corner of canvas\n     * if canvas is viewportTransformed you those points indicate the extension\n     * of canvas element in plain untrasformed coordinates\n     * The coordinates get updated with @method calcViewportBoundaries.\n     * @memberOf fabric.StaticCanvas.prototype\n     */\n    vptCoords: { },\n\n    /**\n     * Based on vptCoords and object.aCoords, skip rendering of objects that\n     * are not included in current viewport.\n     * May greatly help in applications with crowded canvas and use of zoom/pan\n     * If One of the corner of the bounding box of the object is on the canvas\n     * the objects get rendered.\n     * @memberOf fabric.StaticCanvas.prototype\n     * @type Boolean\n     * @default\n     */\n    skipOffscreen: true,\n\n    /**\n     * @private\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     */\n    _initStatic: function(el, options) {\n      var cb = this.requestRenderAllBound;\n      this._objects = [];\n      this._createLowerCanvas(el);\n      this._initOptions(options);\n      this._setImageSmoothing();\n      // only initialize retina scaling once\n      if (!this.interactive) {\n        this._initRetinaScaling();\n      }\n\n      if (options.overlayImage) {\n        this.setOverlayImage(options.overlayImage, cb);\n      }\n      if (options.backgroundImage) {\n        this.setBackgroundImage(options.backgroundImage, cb);\n      }\n      if (options.backgroundColor) {\n        this.setBackgroundColor(options.backgroundColor, cb);\n      }\n      if (options.overlayColor) {\n        this.setOverlayColor(options.overlayColor, cb);\n      }\n      this.calcOffset();\n    },\n\n    /**\n     * @private\n     */\n    _isRetinaScaling: function() {\n      return (fabric.devicePixelRatio !== 1 && this.enableRetinaScaling);\n    },\n\n    /**\n     * @private\n     * @return {Number} retinaScaling if applied, otherwise 1;\n     */\n    getRetinaScaling: function() {\n      return this._isRetinaScaling() ? fabric.devicePixelRatio : 1;\n    },\n\n    /**\n     * @private\n     */\n    _initRetinaScaling: function() {\n      if (!this._isRetinaScaling()) {\n        return;\n      }\n      this.lowerCanvasEl.setAttribute('width', this.width * fabric.devicePixelRatio);\n      this.lowerCanvasEl.setAttribute('height', this.height * fabric.devicePixelRatio);\n\n      this.contextContainer.scale(fabric.devicePixelRatio, fabric.devicePixelRatio);\n    },\n\n    /**\n     * Calculates canvas element offset relative to the document\n     * This method is also attached as \"resize\" event handler of window\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    calcOffset: function () {\n      this._offset = getElementOffset(this.lowerCanvasEl);\n      return this;\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#overlayImage|overlay image} for this canvas\n     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set overlay to\n     * @param {Function} callback callback to invoke when image is loaded and set as an overlay\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|overlay image}.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/MnzHT/|jsFiddle demo}\n     * @example <caption>Normal overlayImage with left/top = 0</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   // Needed to position overlayImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>overlayImage with different properties</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>Stretched overlayImage #1 - width/height correspond to canvas width/height</caption>\n     * fabric.Image.fromURL('http://fabricjs.com/assets/jail_cell_bars.png', function(img) {\n     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n     *    canvas.setOverlayImage(img, canvas.renderAll.bind(canvas));\n     * });\n     * @example <caption>Stretched overlayImage #2 - width/height correspond to canvas width/height</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   width: canvas.width,\n     *   height: canvas.height,\n     *   // Needed to position overlayImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>overlayImage loaded from cross-origin</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top',\n     *   crossOrigin: 'anonymous'\n     * });\n     */\n    setOverlayImage: function (image, callback, options) {\n      return this.__setBgOverlayImage('overlayImage', image, callback, options);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#backgroundImage|background image} for this canvas\n     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set background to\n     * @param {Function} callback Callback to invoke when image is loaded and set as background\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|background image}.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/YH9yD/|jsFiddle demo}\n     * @example <caption>Normal backgroundImage with left/top = 0</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   // Needed to position backgroundImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>backgroundImage with different properties</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>Stretched backgroundImage #1 - width/height correspond to canvas width/height</caption>\n     * fabric.Image.fromURL('http://fabricjs.com/assets/honey_im_subtle.png', function(img) {\n     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n     *    canvas.setBackgroundImage(img, canvas.renderAll.bind(canvas));\n     * });\n     * @example <caption>Stretched backgroundImage #2 - width/height correspond to canvas width/height</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   width: canvas.width,\n     *   height: canvas.height,\n     *   // Needed to position backgroundImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>backgroundImage loaded from cross-origin</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top',\n     *   crossOrigin: 'anonymous'\n     * });\n     */\n    setBackgroundImage: function (image, callback, options) {\n      return this.__setBgOverlayImage('backgroundImage', image, callback, options);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#overlayColor|foreground color} for this canvas\n     * @param {(String|fabric.Pattern)} overlayColor Color or pattern to set foreground color to\n     * @param {Function} callback Callback to invoke when foreground color is set\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/pB55h/|jsFiddle demo}\n     * @example <caption>Normal overlayColor - color value</caption>\n     * canvas.setOverlayColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as overlayColor</caption>\n     * canvas.setOverlayColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n     * }, canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as overlayColor with repeat and offset</caption>\n     * canvas.setOverlayColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat',\n     *   offsetX: 200,\n     *   offsetY: 100\n     * }, canvas.renderAll.bind(canvas));\n     */\n    setOverlayColor: function(overlayColor, callback) {\n      return this.__setBgOverlayColor('overlayColor', overlayColor, callback);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#backgroundColor|background color} for this canvas\n     * @param {(String|fabric.Pattern)} backgroundColor Color or pattern to set background color to\n     * @param {Function} callback Callback to invoke when background color is set\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/hXzvk/|jsFiddle demo}\n     * @example <caption>Normal backgroundColor - color value</caption>\n     * canvas.setBackgroundColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as backgroundColor</caption>\n     * canvas.setBackgroundColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n     * }, canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as backgroundColor with repeat and offset</caption>\n     * canvas.setBackgroundColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat',\n     *   offsetX: 200,\n     *   offsetY: 100\n     * }, canvas.renderAll.bind(canvas));\n     */\n    setBackgroundColor: function(backgroundColor, callback) {\n      return this.__setBgOverlayColor('backgroundColor', backgroundColor, callback);\n    },\n\n    /**\n     * @private\n     * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-imagesmoothingenabled|WhatWG Canvas Standard}\n     */\n    _setImageSmoothing: function() {\n      var ctx = this.getContext();\n\n      ctx.imageSmoothingEnabled = ctx.imageSmoothingEnabled || ctx.webkitImageSmoothingEnabled\n        || ctx.mozImageSmoothingEnabled || ctx.msImageSmoothingEnabled || ctx.oImageSmoothingEnabled;\n      ctx.imageSmoothingEnabled = this.imageSmoothingEnabled;\n    },\n\n    /**\n     * @private\n     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundImage|backgroundImage}\n     * or {@link fabric.StaticCanvas#overlayImage|overlayImage})\n     * @param {(fabric.Image|String|null)} image fabric.Image instance, URL of an image or null to set background or overlay to\n     * @param {Function} callback Callback to invoke when image is loaded and set as background or overlay\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|image}.\n     */\n    __setBgOverlayImage: function(property, image, callback, options) {\n      if (typeof image === 'string') {\n        fabric.util.loadImage(image, function(img) {\n          img && (this[property] = new fabric.Image(img, options));\n          callback && callback(img);\n        }, this, options && options.crossOrigin);\n      }\n      else {\n        options && image.setOptions(options);\n        this[property] = image;\n        callback && callback(image);\n      }\n\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundColor|backgroundColor}\n     * or {@link fabric.StaticCanvas#overlayColor|overlayColor})\n     * @param {(Object|String|null)} color Object with pattern information, color value or null\n     * @param {Function} [callback] Callback is invoked when color is set\n     */\n    __setBgOverlayColor: function(property, color, callback) {\n      this[property] = color;\n      this._initGradient(color, property);\n      this._initPattern(color, property, callback);\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _createCanvasElement: function() {\n      var element = fabric.util.createCanvasElement();\n      if (!element) {\n        throw CANVAS_INIT_ERROR;\n      }\n      if (!element.style) {\n        element.style = { };\n      }\n      if (typeof element.getContext === 'undefined') {\n        throw CANVAS_INIT_ERROR;\n      }\n      return element;\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initOptions: function (options) {\n      this._setOptions(options);\n\n      this.width = this.width || parseInt(this.lowerCanvasEl.width, 10) || 0;\n      this.height = this.height || parseInt(this.lowerCanvasEl.height, 10) || 0;\n\n      if (!this.lowerCanvasEl.style) {\n        return;\n      }\n\n      this.lowerCanvasEl.width = this.width;\n      this.lowerCanvasEl.height = this.height;\n\n      this.lowerCanvasEl.style.width = this.width + 'px';\n      this.lowerCanvasEl.style.height = this.height + 'px';\n\n      this.viewportTransform = this.viewportTransform.slice();\n    },\n\n    /**\n     * Creates a bottom canvas\n     * @private\n     * @param {HTMLElement} [canvasEl]\n     */\n    _createLowerCanvas: function (canvasEl) {\n      // canvasEl === 'HTMLCanvasElement' does not work on jsdom/node\n      if (canvasEl && canvasEl.getContext) {\n        this.lowerCanvasEl = canvasEl;\n      }\n      else {\n        this.lowerCanvasEl = fabric.util.getById(canvasEl) || this._createCanvasElement();\n      }\n\n      fabric.util.addClass(this.lowerCanvasEl, 'lower-canvas');\n\n      if (this.interactive) {\n        this._applyCanvasStyle(this.lowerCanvasEl);\n      }\n\n      this.contextContainer = this.lowerCanvasEl.getContext('2d');\n    },\n\n    /**\n     * Returns canvas width (in px)\n     * @return {Number}\n     */\n    getWidth: function () {\n      return this.width;\n    },\n\n    /**\n     * Returns canvas height (in px)\n     * @return {Number}\n     */\n    getHeight: function () {\n      return this.height;\n    },\n\n    /**\n     * Sets width of this canvas instance\n     * @param {Number|String} value                         Value to set width to\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setWidth: function (value, options) {\n      return this.setDimensions({ width: value }, options);\n    },\n\n    /**\n     * Sets height of this canvas instance\n     * @param {Number|String} value                         Value to set height to\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setHeight: function (value, options) {\n      return this.setDimensions({ height: value }, options);\n    },\n\n    /**\n     * Sets dimensions (width, height) of this canvas instance. when options.cssOnly flag active you should also supply the unit of measure (px/%/em)\n     * @param {Object}        dimensions                    Object with width/height properties\n     * @param {Number|String} [dimensions.width]            Width of canvas element\n     * @param {Number|String} [dimensions.height]           Height of canvas element\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    setDimensions: function (dimensions, options) {\n      var cssValue;\n\n      options = options || {};\n\n      for (var prop in dimensions) {\n        cssValue = dimensions[prop];\n\n        if (!options.cssOnly) {\n          this._setBackstoreDimension(prop, dimensions[prop]);\n          cssValue += 'px';\n        }\n\n        if (!options.backstoreOnly) {\n          this._setCssDimension(prop, cssValue);\n        }\n      }\n      if (this._isCurrentlyDrawing) {\n        this.freeDrawingBrush && this.freeDrawingBrush._setBrushStyles();\n      }\n      this._initRetinaScaling();\n      this._setImageSmoothing();\n      this.calcOffset();\n\n      if (!options.cssOnly) {\n        this.requestRenderAll();\n      }\n\n      return this;\n    },\n\n    /**\n     * Helper for setting width/height\n     * @private\n     * @param {String} prop property (width|height)\n     * @param {Number} value value to set property to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    _setBackstoreDimension: function (prop, value) {\n      this.lowerCanvasEl[prop] = value;\n\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl[prop] = value;\n      }\n\n      if (this.cacheCanvasEl) {\n        this.cacheCanvasEl[prop] = value;\n      }\n\n      this[prop] = value;\n\n      return this;\n    },\n\n    /**\n     * Helper for setting css width/height\n     * @private\n     * @param {String} prop property (width|height)\n     * @param {String} value value to set property to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    _setCssDimension: function (prop, value) {\n      this.lowerCanvasEl.style[prop] = value;\n\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl.style[prop] = value;\n      }\n\n      if (this.wrapperEl) {\n        this.wrapperEl.style[prop] = value;\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns canvas zoom level\n     * @return {Number}\n     */\n    getZoom: function () {\n      return this.viewportTransform[0];\n    },\n\n    /**\n     * Sets viewport transform of this canvas instance\n     * @param {Array} vpt the transform in the form of context.transform\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setViewportTransform: function (vpt) {\n      var activeObject = this._activeObject, object, ignoreVpt = false, skipAbsolute = true, i, len;\n      this.viewportTransform = vpt;\n      for (i = 0, len = this._objects.length; i < len; i++) {\n        object = this._objects[i];\n        object.group || object.setCoords(ignoreVpt, skipAbsolute);\n      }\n      if (activeObject && activeObject.type === 'activeSelection') {\n        activeObject.setCoords(ignoreVpt, skipAbsolute);\n      }\n      this.calcViewportBoundaries();\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Sets zoom level of this canvas instance, zoom centered around point\n     * @param {fabric.Point} point to zoom with respect to\n     * @param {Number} value to set zoom to, less than 1 zooms out\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    zoomToPoint: function (point, value) {\n      // TODO: just change the scale, preserve other transformations\n      var before = point, vpt = this.viewportTransform.slice(0);\n      point = transformPoint(point, invertTransform(this.viewportTransform));\n      vpt[0] = value;\n      vpt[3] = value;\n      var after = transformPoint(point, vpt);\n      vpt[4] += before.x - after.x;\n      vpt[5] += before.y - after.y;\n      return this.setViewportTransform(vpt);\n    },\n\n    /**\n     * Sets zoom level of this canvas instance\n     * @param {Number} value to set zoom to, less than 1 zooms out\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setZoom: function (value) {\n      this.zoomToPoint(new fabric.Point(0, 0), value);\n      return this;\n    },\n\n    /**\n     * Pan viewport so as to place point at top left corner of canvas\n     * @param {fabric.Point} point to move to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    absolutePan: function (point) {\n      var vpt = this.viewportTransform.slice(0);\n      vpt[4] = -point.x;\n      vpt[5] = -point.y;\n      return this.setViewportTransform(vpt);\n    },\n\n    /**\n     * Pans viewpoint relatively\n     * @param {fabric.Point} point (position vector) to move by\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    relativePan: function (point) {\n      return this.absolutePan(new fabric.Point(\n        -point.x - this.viewportTransform[4],\n        -point.y - this.viewportTransform[5]\n      ));\n    },\n\n    /**\n     * Returns &lt;canvas> element corresponding to this instance\n     * @return {HTMLCanvasElement}\n     */\n    getElement: function () {\n      return this.lowerCanvasEl;\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was added\n     */\n    _onObjectAdded: function(obj) {\n      this.stateful && obj.setupState();\n      obj._set('canvas', this);\n      obj.setCoords();\n      this.fire('object:added', { target: obj });\n      obj.fire('added');\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was removed\n     */\n    _onObjectRemoved: function(obj) {\n      this.fire('object:removed', { target: obj });\n      obj.fire('removed');\n      delete obj.canvas;\n    },\n\n    /**\n     * Clears specified context of canvas element\n     * @param {CanvasRenderingContext2D} ctx Context to clear\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clearContext: function(ctx) {\n      ctx.clearRect(0, 0, this.width, this.height);\n      return this;\n    },\n\n    /**\n     * Returns context of canvas where objects are drawn\n     * @return {CanvasRenderingContext2D}\n     */\n    getContext: function () {\n      return this.contextContainer;\n    },\n\n    /**\n     * Clears all contexts (background, main, top) of an instance\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clear: function () {\n      this._objects.length = 0;\n      this.backgroundImage = null;\n      this.overlayImage = null;\n      this.backgroundColor = '';\n      this.overlayColor = '';\n      if (this._hasITextHandlers) {\n        this.off('mouse:up', this._mouseUpITextHandler);\n        this._iTextInstances = null;\n        this._hasITextHandlers = false;\n      }\n      this.clearContext(this.contextContainer);\n      this.fire('canvas:cleared');\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Renders the canvas\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAll: function () {\n      var canvasToDrawOn = this.contextContainer;\n      this.renderCanvas(canvasToDrawOn, this._objects);\n      return this;\n    },\n\n    /**\n     * Function created to be instance bound at initialization\n     * used in requestAnimationFrame rendering\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAndReset: function() {\n      this.isRendering = 0;\n      this.renderAll();\n    },\n\n    /**\n     * Append a renderAll request to next animation frame.\n     * a boolean flag will avoid appending more.\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    requestRenderAll: function () {\n      if (!this.isRendering) {\n        this.isRendering = fabric.util.requestAnimFrame(this.renderAndResetBound);\n      }\n      return this;\n    },\n\n    /**\n     * Calculate the position of the 4 corner of canvas with current viewportTransform.\n     * helps to determinate when an object is in the current rendering viewport using\n     * object absolute coordinates ( aCoords )\n     * @return {Object} points.tl\n     * @chainable\n     */\n    calcViewportBoundaries: function() {\n      var points = { }, width = this.width, height = this.height,\n          iVpt = invertTransform(this.viewportTransform);\n      points.tl = transformPoint({ x: 0, y: 0 }, iVpt);\n      points.br = transformPoint({ x: width, y: height }, iVpt);\n      points.tr = new fabric.Point(points.br.x, points.tl.y);\n      points.bl = new fabric.Point(points.tl.x, points.br.y);\n      this.vptCoords = points;\n      return points;\n    },\n\n    /**\n     * Renders background, objects, overlay and controls.\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {Array} objects to render\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderCanvas: function(ctx, objects) {\n      var v = this.viewportTransform;\n      if (this.isRendering) {\n        fabric.util.cancelAnimFrame(this.isRendering);\n        this.isRendering = 0;\n      }\n      this.calcViewportBoundaries();\n      this.clearContext(ctx);\n      this.fire('before:render');\n      if (this.clipTo) {\n        fabric.util.clipContext(this, ctx);\n      }\n      this._renderBackground(ctx);\n\n      ctx.save();\n      //apply viewport transform once for all rendering process\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n      this._renderObjects(ctx, objects);\n      ctx.restore();\n      if (!this.controlsAboveOverlay && this.interactive) {\n        this.drawControls(ctx);\n      }\n      if (this.clipTo) {\n        ctx.restore();\n      }\n      this._renderOverlay(ctx);\n      if (this.controlsAboveOverlay && this.interactive) {\n        this.drawControls(ctx);\n      }\n      this.fire('after:render');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Array} objects to render\n     */\n    _renderObjects: function(ctx, objects) {\n      var i, len;\n      for (i = 0, len = objects.length; i < len; ++i) {\n        objects[i] && objects[i].render(ctx);\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {string} property 'background' or 'overlay'\n     */\n    _renderBackgroundOrOverlay: function(ctx, property) {\n      var object = this[property + 'Color'], v;\n      if (object) {\n        ctx.fillStyle = object.toLive\n          ? object.toLive(ctx, this)\n          : object;\n\n        ctx.fillRect(\n          object.offsetX || 0,\n          object.offsetY || 0,\n          this.width,\n          this.height);\n      }\n      object = this[property + 'Image'];\n      if (object) {\n        if (this[property + 'Vpt']) {\n          v = this.viewportTransform;\n          ctx.save();\n          ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n        }\n        object.render(ctx);\n        this[property + 'Vpt'] && ctx.restore();\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderBackground: function(ctx) {\n      this._renderBackgroundOrOverlay(ctx, 'background');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderOverlay: function(ctx) {\n      this._renderBackgroundOrOverlay(ctx, 'overlay');\n    },\n\n    /**\n     * Returns coordinates of a center of canvas.\n     * Returned value is an object with top and left properties\n     * @return {Object} object with \"top\" and \"left\" number values\n     */\n    getCenter: function () {\n      return {\n        top: this.height / 2,\n        left: this.width / 2\n      };\n    },\n\n    /**\n     * Centers object horizontally in the canvas\n     * @param {fabric.Object} object Object to center horizontally\n     * @return {fabric.Canvas} thisArg\n     */\n    centerObjectH: function (object) {\n      return this._centerObject(object, new fabric.Point(this.getCenter().left, object.getCenterPoint().y));\n    },\n\n    /**\n     * Centers object vertically in the canvas\n     * @param {fabric.Object} object Object to center vertically\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    centerObjectV: function (object) {\n      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, this.getCenter().top));\n    },\n\n    /**\n     * Centers object vertically and horizontally in the canvas\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    centerObject: function(object) {\n      var center = this.getCenter();\n\n      return this._centerObject(object, new fabric.Point(center.left, center.top));\n    },\n\n    /**\n     * Centers object vertically and horizontally in the viewport\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObject: function(object) {\n      var vpCenter = this.getVpCenter();\n\n      return this._centerObject(object, vpCenter);\n    },\n\n    /**\n     * Centers object horizontally in the viewport, object.top is unchanged\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObjectH: function(object) {\n      var vpCenter = this.getVpCenter();\n      this._centerObject(object, new fabric.Point(vpCenter.x, object.getCenterPoint().y));\n      return this;\n    },\n\n    /**\n     * Centers object Vertically in the viewport, object.top is unchanged\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObjectV: function(object) {\n      var vpCenter = this.getVpCenter();\n\n      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, vpCenter.y));\n    },\n\n    /**\n     * Calculate the point in canvas that correspond to the center of actual viewport.\n     * @return {fabric.Point} vpCenter, viewport center\n     * @chainable\n     */\n    getVpCenter: function() {\n      var center = this.getCenter(),\n          iVpt = invertTransform(this.viewportTransform);\n      return transformPoint({ x: center.left, y: center.top }, iVpt);\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} object Object to center\n     * @param {fabric.Point} center Center point\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    _centerObject: function(object, center) {\n      object.setPositionByOrigin(center, 'center', 'center');\n      object.setCoords();\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Returs dataless JSON representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {String} json string\n     */\n    toDatalessJSON: function (propertiesToInclude) {\n      return this.toDatalessObject(propertiesToInclude);\n    },\n\n    /**\n     * Returns object representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function (propertiesToInclude) {\n      return this._toObjectMethod('toObject', propertiesToInclude);\n    },\n\n    /**\n     * Returns dataless object representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function (propertiesToInclude) {\n      return this._toObjectMethod('toDatalessObject', propertiesToInclude);\n    },\n\n    /**\n     * @private\n     */\n    _toObjectMethod: function (methodName, propertiesToInclude) {\n\n      var data = {\n        version: fabric.version,\n        objects: this._toObjects(methodName, propertiesToInclude)\n      };\n\n      extend(data, this.__serializeBgOverlay(methodName, propertiesToInclude));\n\n      fabric.util.populateWithProperties(this, data, propertiesToInclude);\n\n      return data;\n    },\n\n    /**\n     * @private\n     */\n    _toObjects: function(methodName, propertiesToInclude) {\n      return this.getObjects().filter(function(object) {\n        return !object.excludeFromExport;\n      }).map(function(instance) {\n        return this._toObject(instance, methodName, propertiesToInclude);\n      }, this);\n    },\n\n    /**\n     * @private\n     */\n    _toObject: function(instance, methodName, propertiesToInclude) {\n      var originalValue;\n\n      if (!this.includeDefaultValues) {\n        originalValue = instance.includeDefaultValues;\n        instance.includeDefaultValues = false;\n      }\n\n      var object = instance[methodName](propertiesToInclude);\n      if (!this.includeDefaultValues) {\n        instance.includeDefaultValues = originalValue;\n      }\n      return object;\n    },\n\n    /**\n     * @private\n     */\n    __serializeBgOverlay: function(methodName, propertiesToInclude) {\n      var data = { }, bgImage = this.backgroundImage, overlay = this.overlayImage;\n\n      if (this.backgroundColor) {\n        data.background = this.backgroundColor.toObject\n          ? this.backgroundColor.toObject(propertiesToInclude)\n          : this.backgroundColor;\n      }\n\n      if (this.overlayColor) {\n        data.overlay = this.overlayColor.toObject\n          ? this.overlayColor.toObject(propertiesToInclude)\n          : this.overlayColor;\n      }\n      if (bgImage && !bgImage.excludeFromExport) {\n        data.backgroundImage = this._toObject(bgImage, methodName, propertiesToInclude);\n      }\n      if (overlay && !overlay.excludeFromExport) {\n        data.overlayImage = this._toObject(overlay, methodName, propertiesToInclude);\n      }\n\n      return data;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * When true, getSvgTransform() will apply the StaticCanvas.viewportTransform to the SVG transformation. When true,\n     * a zoomed canvas will then produce zoomed SVG output.\n     * @type Boolean\n     * @default\n     */\n    svgViewportTransformation: true,\n\n    /**\n     * Returns SVG representation of canvas\n     * @function\n     * @param {Object} [options] Options object for SVG output\n     * @param {Boolean} [options.suppressPreamble=false] If true xml tag is not included\n     * @param {Object} [options.viewBox] SVG viewbox object\n     * @param {Number} [options.viewBox.x] x-cooridnate of viewbox\n     * @param {Number} [options.viewBox.y] y-coordinate of viewbox\n     * @param {Number} [options.viewBox.width] Width of viewbox\n     * @param {Number} [options.viewBox.height] Height of viewbox\n     * @param {String} [options.encoding=UTF-8] Encoding of SVG output\n     * @param {String} [options.width] desired width of svg with or without units\n     * @param {String} [options.height] desired height of svg with or without units\n     * @param {Function} [reviver] Method for further parsing of svg elements, called after each fabric object converted into svg representation.\n     * @return {String} SVG string\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n     * @see {@link http://jsfiddle.net/fabricjs/jQ3ZZ/|jsFiddle demo}\n     * @example <caption>Normal SVG output</caption>\n     * var svg = canvas.toSVG();\n     * @example <caption>SVG output without preamble (without &lt;?xml ../>)</caption>\n     * var svg = canvas.toSVG({suppressPreamble: true});\n     * @example <caption>SVG output with viewBox attribute</caption>\n     * var svg = canvas.toSVG({\n     *   viewBox: {\n     *     x: 100,\n     *     y: 100,\n     *     width: 200,\n     *     height: 300\n     *   }\n     * });\n     * @example <caption>SVG output with different encoding (default: UTF-8)</caption>\n     * var svg = canvas.toSVG({encoding: 'ISO-8859-1'});\n     * @example <caption>Modify SVG output with reviver function</caption>\n     * var svg = canvas.toSVG(null, function(svg) {\n     *   return svg.replace('stroke-dasharray: ; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; ', '');\n     * });\n     */\n    toSVG: function(options, reviver) {\n      options || (options = { });\n\n      var markup = [];\n\n      this._setSVGPreamble(markup, options);\n      this._setSVGHeader(markup, options);\n\n      this._setSVGBgOverlayColor(markup, 'backgroundColor');\n      this._setSVGBgOverlayImage(markup, 'backgroundImage', reviver);\n\n      this._setSVGObjects(markup, reviver);\n\n      this._setSVGBgOverlayColor(markup, 'overlayColor');\n      this._setSVGBgOverlayImage(markup, 'overlayImage', reviver);\n\n      markup.push('</svg>');\n\n      return markup.join('');\n    },\n\n    /**\n     * @private\n     */\n    _setSVGPreamble: function(markup, options) {\n      if (options.suppressPreamble) {\n        return;\n      }\n      markup.push(\n        '<?xml version=\"1.0\" encoding=\"', (options.encoding || 'UTF-8'), '\" standalone=\"no\" ?>\\n',\n        '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" ',\n        '\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n'\n      );\n    },\n\n    /**\n     * @private\n     */\n    _setSVGHeader: function(markup, options) {\n      var width = options.width || this.width,\n          height = options.height || this.height,\n          vpt, viewBox = 'viewBox=\"0 0 ' + this.width + ' ' + this.height + '\" ',\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n      if (options.viewBox) {\n        viewBox = 'viewBox=\"' +\n                options.viewBox.x + ' ' +\n                options.viewBox.y + ' ' +\n                options.viewBox.width + ' ' +\n                options.viewBox.height + '\" ';\n      }\n      else {\n        if (this.svgViewportTransformation) {\n          vpt = this.viewportTransform;\n          viewBox = 'viewBox=\"' +\n                  toFixed(-vpt[4] / vpt[0], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(-vpt[5] / vpt[3], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(this.width / vpt[0], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(this.height / vpt[3], NUM_FRACTION_DIGITS) + '\" ';\n        }\n      }\n\n      markup.push(\n        '<svg ',\n        'xmlns=\"http://www.w3.org/2000/svg\" ',\n        'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ',\n        'version=\"1.1\" ',\n        'width=\"', width, '\" ',\n        'height=\"', height, '\" ',\n        viewBox,\n        'xml:space=\"preserve\">\\n',\n        '<desc>Created with Fabric.js ', fabric.version, '</desc>\\n',\n        '<defs>\\n',\n        this.createSVGFontFacesMarkup(),\n        this.createSVGRefElementsMarkup(),\n        '</defs>\\n'\n      );\n    },\n\n    /**\n     * Creates markup containing SVG referenced elements like patterns, gradients etc.\n     * @return {String}\n     */\n    createSVGRefElementsMarkup: function() {\n      var _this = this,\n          markup = ['backgroundColor', 'overlayColor'].map(function(prop) {\n            var fill = _this[prop];\n            if (fill && fill.toLive) {\n              return fill.toSVG(_this, false);\n            }\n          });\n      return markup.join('');\n    },\n\n    /**\n     * Creates markup containing SVG font faces,\n     * font URLs for font faces must be collected by developers\n     * and are not extracted from the DOM by fabricjs\n     * @param {Array} objects Array of fabric objects\n     * @return {String}\n     */\n    createSVGFontFacesMarkup: function() {\n      var markup = '', fontList = { }, obj, fontFamily,\n          style, row, rowIndex, _char, charIndex, i, len,\n          fontPaths = fabric.fontPaths, objects = this.getObjects();\n\n      for (i = 0, len = objects.length; i < len; i++) {\n        obj = objects[i];\n        fontFamily = obj.fontFamily;\n        if (obj.type.indexOf('text') === -1 || fontList[fontFamily] || !fontPaths[fontFamily]) {\n          continue;\n        }\n        fontList[fontFamily] = true;\n        if (!obj.styles) {\n          continue;\n        }\n        style = obj.styles;\n        for (rowIndex in style) {\n          row = style[rowIndex];\n          for (charIndex in row) {\n            _char = row[charIndex];\n            fontFamily = _char.fontFamily;\n            if (!fontList[fontFamily] && fontPaths[fontFamily]) {\n              fontList[fontFamily] = true;\n            }\n          }\n        }\n      }\n\n      for (var j in fontList) {\n        markup += [\n          '\\t\\t@font-face {\\n',\n          '\\t\\t\\tfont-family: \\'', j, '\\';\\n',\n          '\\t\\t\\tsrc: url(\\'', fontPaths[j], '\\');\\n',\n          '\\t\\t}\\n'\n        ].join('');\n      }\n\n      if (markup) {\n        markup = [\n          '\\t<style type=\"text/css\">',\n          '<![CDATA[\\n',\n          markup,\n          ']]>',\n          '</style>\\n'\n        ].join('');\n      }\n\n      return markup;\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObjects: function(markup, reviver) {\n      var instance, i, len, objects = this.getObjects();\n      for (i = 0, len = objects.length; i < len; i++) {\n        instance = objects[i];\n        if (instance.excludeFromExport) {\n          continue;\n        }\n        this._setSVGObject(markup, instance, reviver);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObject: function(markup, instance, reviver) {\n      markup.push(instance.toSVG(reviver));\n    },\n\n    /**\n     * @private\n     */\n    _setSVGBgOverlayImage: function(markup, property, reviver) {\n      if (this[property] && this[property].toSVG) {\n        markup.push(this[property].toSVG(reviver));\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGBgOverlayColor: function(markup, property) {\n      var filler = this[property];\n      if (!filler) {\n        return;\n      }\n      if (filler.toLive) {\n        var repeat = filler.repeat;\n        markup.push(\n          '<rect transform=\"translate(', this.width / 2, ',', this.height / 2, ')\"',\n          ' x=\"', filler.offsetX - this.width / 2, '\" y=\"', filler.offsetY - this.height / 2, '\" ',\n          'width=\"',\n          (repeat === 'repeat-y' || repeat === 'no-repeat'\n            ? filler.source.width\n            : this.width),\n          '\" height=\"',\n          (repeat === 'repeat-x' || repeat === 'no-repeat'\n            ? filler.source.height\n            : this.height),\n          '\" fill=\"url(#SVGID_' + filler.id + ')\"',\n          '></rect>\\n'\n        );\n      }\n      else {\n        markup.push(\n          '<rect x=\"0\" y=\"0\" ',\n          'width=\"', this.width,\n          '\" height=\"', this.height,\n          '\" fill=\"', this[property], '\"',\n          '></rect>\\n'\n        );\n      }\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Moves an object or the objects of a multiple selection\n     * to the bottom of the stack of drawn objects\n     * @param {fabric.Object} object Object to send to back\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    sendToBack: function (object) {\n      if (!object) {\n        return this;\n      }\n      var activeSelection = this._activeObject,\n          i, obj, objs;\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n        for (i = objs.length; i--;) {\n          obj = objs[i];\n          removeFromArray(this._objects, obj);\n          this._objects.unshift(obj);\n        }\n      }\n      else {\n        removeFromArray(this._objects, object);\n        this._objects.unshift(object);\n      }\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Moves an object or the objects of a multiple selection\n     * to the top of the stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    bringToFront: function (object) {\n      if (!object) {\n        return this;\n      }\n      var activeSelection = this._activeObject,\n          i, obj, objs;\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n        for (i = 0; i < objs.length; i++) {\n          obj = objs[i];\n          removeFromArray(this._objects, obj);\n          this._objects.push(obj);\n        }\n      }\n      else {\n        removeFromArray(this._objects, object);\n        this._objects.push(object);\n      }\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Moves an object or a selection down in stack of drawn objects\n     * An optional paramter, intersecting allowes to move the object in behind\n     * the first intersecting object. Where intersection is calculated with\n     * bounding box. If no intersection is found, there will not be change in the\n     * stack.\n     * @param {fabric.Object} object Object to send\n     * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    sendBackwards: function (object, intersecting) {\n      if (!object) {\n        return this;\n      }\n      var activeSelection = this._activeObject,\n          i, obj, idx, newIdx, objs, objsMoved = 0;\n\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n        for (i = 0; i < objs.length; i++) {\n          obj = objs[i];\n          idx = this._objects.indexOf(obj);\n          if (idx > 0 + objsMoved) {\n            newIdx = idx - 1;\n            removeFromArray(this._objects, obj);\n            this._objects.splice(newIdx, 0, obj);\n          }\n          objsMoved++;\n        }\n      }\n      else {\n        idx = this._objects.indexOf(object);\n        if (idx !== 0) {\n          // if object is not on the bottom of stack\n          newIdx = this._findNewLowerIndex(object, idx, intersecting);\n          removeFromArray(this._objects, object);\n          this._objects.splice(newIdx, 0, object);\n        }\n      }\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _findNewLowerIndex: function(object, idx, intersecting) {\n      var newIdx, i;\n\n      if (intersecting) {\n        newIdx = idx;\n\n        // traverse down the stack looking for the nearest intersecting object\n        for (i = idx - 1; i >= 0; --i) {\n\n          var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\n                               object.isContainedWithinObject(this._objects[i]) ||\n                               this._objects[i].isContainedWithinObject(object);\n\n          if (isIntersecting) {\n            newIdx = i;\n            break;\n          }\n        }\n      }\n      else {\n        newIdx = idx - 1;\n      }\n\n      return newIdx;\n    },\n\n    /**\n     * Moves an object or a selection up in stack of drawn objects\n     * An optional paramter, intersecting allowes to move the object in front\n     * of the first intersecting object. Where intersection is calculated with\n     * bounding box. If no intersection is found, there will not be change in the\n     * stack.\n     * @param {fabric.Object} object Object to send\n     * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    bringForward: function (object, intersecting) {\n      if (!object) {\n        return this;\n      }\n      var activeSelection = this._activeObject,\n          i, obj, idx, newIdx, objs, objsMoved = 0;\n\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n        for (i = objs.length; i--;) {\n          obj = objs[i];\n          idx = this._objects.indexOf(obj);\n          if (idx < this._objects.length - 1 - objsMoved) {\n            newIdx = idx + 1;\n            removeFromArray(this._objects, obj);\n            this._objects.splice(newIdx, 0, obj);\n          }\n          objsMoved++;\n        }\n      }\n      else {\n        idx = this._objects.indexOf(object);\n        if (idx !== this._objects.length - 1) {\n          // if object is not on top of stack (last item in an array)\n          newIdx = this._findNewUpperIndex(object, idx, intersecting);\n          removeFromArray(this._objects, object);\n          this._objects.splice(newIdx, 0, object);\n        }\n      }\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _findNewUpperIndex: function(object, idx, intersecting) {\n      var newIdx, i, len;\n\n      if (intersecting) {\n        newIdx = idx;\n\n        // traverse up the stack looking for the nearest intersecting object\n        for (i = idx + 1, len = this._objects.length; i < len; ++i) {\n\n          var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\n                               object.isContainedWithinObject(this._objects[i]) ||\n                               this._objects[i].isContainedWithinObject(object);\n\n          if (isIntersecting) {\n            newIdx = i;\n            break;\n          }\n        }\n      }\n      else {\n        newIdx = idx + 1;\n      }\n\n      return newIdx;\n    },\n\n    /**\n     * Moves an object to specified level in stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @param {Number} index Position to move to\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    moveTo: function (object, index) {\n      removeFromArray(this._objects, object);\n      this._objects.splice(index, 0, object);\n      return this.renderOnAddRemove && this.requestRenderAll();\n    },\n\n    /**\n     * Clears a canvas element and dispose objects\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    dispose: function () {\n      this.forEachObject(function(object) {\n        object.dispose && object.dispose();\n      });\n      this._objects = [];\n      this.backgroundImage = null;\n      this.overlayImage = null;\n      this._iTextInstances = null;\n      this.lowerCanvasEl = null;\n      this.cacheCanvasEl = null;\n      return this;\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @return {String} string representation of an instance\n     */\n    toString: function () {\n      return '#<fabric.Canvas (' + this.complexity() + '): ' +\n               '{ objects: ' + this.getObjects().length + ' }>';\n    }\n  });\n\n  extend(fabric.StaticCanvas.prototype, fabric.Observable);\n  extend(fabric.StaticCanvas.prototype, fabric.Collection);\n  extend(fabric.StaticCanvas.prototype, fabric.DataURLExporter);\n\n  extend(fabric.StaticCanvas, /** @lends fabric.StaticCanvas */ {\n\n    /**\n     * @static\n     * @type String\n     * @default\n     */\n    EMPTY_JSON: '{\"objects\": [], \"background\": \"white\"}',\n\n    /**\n     * Provides a way to check support of some of the canvas methods\n     * (either those of HTMLCanvasElement itself, or rendering context)\n     *\n     * @param {String} methodName Method to check support for;\n     *                            Could be one of \"getImageData\", \"toDataURL\", \"toDataURLWithQuality\" or \"setLineDash\"\n     * @return {Boolean | null} `true` if method is supported (or at least exists),\n     *                          `null` if canvas element or context can not be initialized\n     */\n    supports: function (methodName) {\n      var el = fabric.util.createCanvasElement();\n\n      if (!el || !el.getContext) {\n        return null;\n      }\n\n      var ctx = el.getContext('2d');\n      if (!ctx) {\n        return null;\n      }\n\n      switch (methodName) {\n\n        case 'getImageData':\n          return typeof ctx.getImageData !== 'undefined';\n\n        case 'setLineDash':\n          return typeof ctx.setLineDash !== 'undefined';\n\n        case 'toDataURL':\n          return typeof el.toDataURL !== 'undefined';\n\n        case 'toDataURLWithQuality':\n          try {\n            el.toDataURL('image/jpeg', 0);\n            return true;\n          }\n          catch (e) { }\n          return false;\n\n        default:\n          return null;\n      }\n    }\n  });\n\n  /**\n   * Returns JSON representation of canvas\n   * @function\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {String} JSON string\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n   * @see {@link http://jsfiddle.net/fabricjs/pec86/|jsFiddle demo}\n   * @example <caption>JSON without additional properties</caption>\n   * var json = canvas.toJSON();\n   * @example <caption>JSON with additional properties included</caption>\n   * var json = canvas.toJSON(['lockMovementX', 'lockMovementY', 'lockRotation', 'lockScalingX', 'lockScalingY', 'lockUniScaling']);\n   * @example <caption>JSON without default values</caption>\n   * canvas.includeDefaultValues = false;\n   * var json = canvas.toJSON();\n   */\n  fabric.StaticCanvas.prototype.toJSON = fabric.StaticCanvas.prototype.toObject;\n\n  if (fabric.isLikelyNode) {\n    fabric.StaticCanvas.prototype.createPNGStream = function() {\n      var impl = fabric.util.getNodeCanvas(this.lowerCanvasEl);\n      return impl && impl.createPNGStream();\n    };\n    fabric.StaticCanvas.prototype.createJPEGStream = function(opts) {\n      var impl = fabric.util.getNodeCanvas(this.lowerCanvasEl);\n      return impl && impl.createJPEGStream(opts);\n    };\n  }\n})();\n\n\n/**\n * BaseBrush class\n * @class fabric.BaseBrush\n * @see {@link http://fabricjs.com/freedrawing|Freedrawing demo}\n */\nfabric.BaseBrush = fabric.util.createClass(/** @lends fabric.BaseBrush.prototype */ {\n\n  /**\n   * Color of a brush\n   * @type String\n   * @default\n   */\n  color: 'rgb(0, 0, 0)',\n\n  /**\n   * Width of a brush, has to be a Number, no string literals\n   * @type Number\n   * @default\n   */\n  width: 1,\n\n  /**\n   * Shadow object representing shadow of this shape.\n   * <b>Backwards incompatibility note:</b> This property replaces \"shadowColor\" (String), \"shadowOffsetX\" (Number),\n   * \"shadowOffsetY\" (Number) and \"shadowBlur\" (Number) since v1.2.12\n   * @type fabric.Shadow\n   * @default\n   */\n  shadow: null,\n\n  /**\n   * Line endings style of a brush (one of \"butt\", \"round\", \"square\")\n   * @type String\n   * @default\n   */\n  strokeLineCap: 'round',\n\n  /**\n   * Corner style of a brush (one of \"bevel\", \"round\", \"miter\")\n   * @type String\n   * @default\n   */\n  strokeLineJoin: 'round',\n\n  /**\n   * Maximum miter length (used for strokeLineJoin = \"miter\") of a brush's\n   * @type Number\n   * @default\n   */\n  strokeMiterLimit:         10,\n\n  /**\n   * Stroke Dash Array.\n   * @type Array\n   * @default\n   */\n  strokeDashArray: null,\n\n  /**\n   * Sets shadow of an object\n   * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  setShadow: function(options) {\n    this.shadow = new fabric.Shadow(options);\n    return this;\n  },\n\n  /**\n   * Sets brush styles\n   * @private\n   */\n  _setBrushStyles: function() {\n    var ctx = this.canvas.contextTop;\n    ctx.strokeStyle = this.color;\n    ctx.lineWidth = this.width;\n    ctx.lineCap = this.strokeLineCap;\n    ctx.miterLimit = this.strokeMiterLimit;\n    ctx.lineJoin = this.strokeLineJoin;\n    if (this.strokeDashArray && fabric.StaticCanvas.supports('setLineDash')) {\n      ctx.setLineDash(this.strokeDashArray);\n    }\n  },\n\n  /**\n   * Sets the transformation on given context\n   * @param {RenderingContext2d} ctx context to render on\n   * @private\n   */\n  _saveAndTransform: function(ctx) {\n    var v = this.canvas.viewportTransform;\n    ctx.save();\n    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n  },\n\n  /**\n   * Sets brush shadow styles\n   * @private\n   */\n  _setShadow: function() {\n    if (!this.shadow) {\n      return;\n    }\n\n    var ctx = this.canvas.contextTop,\n        zoom = this.canvas.getZoom();\n\n    ctx.shadowColor = this.shadow.color;\n    ctx.shadowBlur = this.shadow.blur * zoom;\n    ctx.shadowOffsetX = this.shadow.offsetX * zoom;\n    ctx.shadowOffsetY = this.shadow.offsetY * zoom;\n  },\n\n  /**\n   * Removes brush shadow styles\n   * @private\n   */\n  _resetShadow: function() {\n    var ctx = this.canvas.contextTop;\n\n    ctx.shadowColor = '';\n    ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n  }\n});\n\n\n(function() {\n\n  /**\n   * PencilBrush class\n   * @class fabric.PencilBrush\n   * @extends fabric.BaseBrush\n   */\n  fabric.PencilBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.PencilBrush.prototype */ {\n\n    /**\n     * Constructor\n     * @param {fabric.Canvas} canvas\n     * @return {fabric.PencilBrush} Instance of a pencil brush\n     */\n    initialize: function(canvas) {\n      this.canvas = canvas;\n      this._points = [];\n    },\n\n    /**\n     * Inovoked on mouse down\n     * @param {Object} pointer\n     */\n    onMouseDown: function(pointer) {\n      this._prepareForDrawing(pointer);\n      // capture coordinates immediately\n      // this allows to draw dots (when movement never occurs)\n      this._captureDrawingPath(pointer);\n      this._render();\n    },\n\n    /**\n     * Inovoked on mouse move\n     * @param {Object} pointer\n     */\n    onMouseMove: function(pointer) {\n      this._captureDrawingPath(pointer);\n      // redraw curve\n      // clear top canvas\n      this.canvas.clearContext(this.canvas.contextTop);\n      this._render();\n    },\n\n    /**\n     * Invoked on mouse up\n     */\n    onMouseUp: function() {\n      this._finalizeAndAddPath();\n    },\n\n    /**\n     * @private\n     * @param {Object} pointer Actual mouse position related to the canvas.\n     */\n    _prepareForDrawing: function(pointer) {\n\n      var p = new fabric.Point(pointer.x, pointer.y);\n\n      this._reset();\n      this._addPoint(p);\n\n      this.canvas.contextTop.moveTo(p.x, p.y);\n    },\n\n    /**\n     * @private\n     * @param {fabric.Point} point Point to be added to points array\n     */\n    _addPoint: function(point) {\n      if (this._points.length > 1 && point.eq(this._points[this._points.length - 1])) {\n        return;\n      }\n      this._points.push(point);\n    },\n\n    /**\n     * Clear points array and set contextTop canvas style.\n     * @private\n     */\n    _reset: function() {\n      this._points.length = 0;\n\n      this._setBrushStyles();\n      this._setShadow();\n    },\n\n    /**\n     * @private\n     * @param {Object} pointer Actual mouse position related to the canvas.\n     */\n    _captureDrawingPath: function(pointer) {\n      var pointerPoint = new fabric.Point(pointer.x, pointer.y);\n      this._addPoint(pointerPoint);\n    },\n\n    /**\n     * Draw a smooth path on the topCanvas using quadraticCurveTo\n     * @private\n     */\n    _render: function() {\n      var ctx  = this.canvas.contextTop, i, len,\n          p1 = this._points[0],\n          p2 = this._points[1];\n\n      this._saveAndTransform(ctx);\n      ctx.beginPath();\n      //if we only have 2 points in the path and they are the same\n      //it means that the user only clicked the canvas without moving the mouse\n      //then we should be drawing a dot. A path isn't drawn between two identical dots\n      //that's why we set them apart a bit\n      if (this._points.length === 2 && p1.x === p2.x && p1.y === p2.y) {\n        var width = this.width / 1000;\n        p1 = new fabric.Point(p1.x, p1.y);\n        p2 = new fabric.Point(p2.x, p2.y);\n        p1.x -= width;\n        p2.x += width;\n      }\n      ctx.moveTo(p1.x, p1.y);\n\n      for (i = 1, len = this._points.length; i < len; i++) {\n        // we pick the point between pi + 1 & pi + 2 as the\n        // end point and p1 as our control point.\n        var midPoint = p1.midPointFrom(p2);\n        ctx.quadraticCurveTo(p1.x, p1.y, midPoint.x, midPoint.y);\n\n        p1 = this._points[i];\n        p2 = this._points[i + 1];\n      }\n      // Draw last line as a straight line while\n      // we wait for the next point to be able to calculate\n      // the bezier control point\n      ctx.lineTo(p1.x, p1.y);\n      ctx.stroke();\n      ctx.restore();\n    },\n\n    /**\n     * Converts points to SVG path\n     * @param {Array} points Array of points\n     * @return {String} SVG path\n     */\n    convertPointsToSVGPath: function(points) {\n      var path = [], i, width = this.width / 1000,\n          p1 = new fabric.Point(points[0].x, points[0].y),\n          p2 = new fabric.Point(points[1].x, points[1].y),\n          len = points.length, multSignX = 1, multSignY = 1, manyPoints = len > 2;\n\n      if (manyPoints) {\n        multSignX = points[2].x < p2.x ? -1 : points[2].x === p2.x ? 0 : 1;\n        multSignY = points[2].y < p2.y ? -1 : points[2].y === p2.y ? 0 : 1;\n      }\n      path.push('M ', p1.x - multSignX * width, ' ', p1.y - multSignY * width, ' ');\n      for (i = 1; i < len; i++) {\n        if (!p1.eq(p2)) {\n          var midPoint = p1.midPointFrom(p2);\n          // p1 is our bezier control point\n          // midpoint is our endpoint\n          // start point is p(i-1) value.\n          path.push('Q ', p1.x, ' ', p1.y, ' ', midPoint.x, ' ', midPoint.y, ' ');\n        }\n        p1 = points[i];\n        if ((i + 1) < points.length) {\n          p2 = points[i + 1];\n        }\n      }\n      if (manyPoints) {\n        multSignX = p1.x > points[i - 2].x ? 1 : p1.x === points[i - 2].x ? 0 : -1;\n        multSignY = p1.y > points[i - 2].y ? 1 : p1.y === points[i - 2].y ? 0 : -1;\n      }\n      path.push('L ', p1.x + multSignX * width, ' ', p1.y + multSignY * width);\n      return path;\n    },\n\n    /**\n     * Creates fabric.Path object to add on canvas\n     * @param {String} pathData Path data\n     * @return {fabric.Path} Path to add on canvas\n     */\n    createPath: function(pathData) {\n      var path = new fabric.Path(pathData, {\n        fill: null,\n        stroke: this.color,\n        strokeWidth: this.width,\n        strokeLineCap: this.strokeLineCap,\n        strokeMiterLimit: this.strokeMiterLimit,\n        strokeLineJoin: this.strokeLineJoin,\n        strokeDashArray: this.strokeDashArray,\n      });\n      var position = new fabric.Point(path.left + path.width / 2, path.top + path.height / 2);\n      position = path.translateToGivenOrigin(position, 'center', 'center', path.originX, path.originY);\n      path.top = position.y;\n      path.left = position.x;\n      if (this.shadow) {\n        this.shadow.affectStroke = true;\n        path.setShadow(this.shadow);\n      }\n\n      return path;\n    },\n\n    /**\n     * On mouseup after drawing the path on contextTop canvas\n     * we use the points captured to create an new fabric path object\n     * and add it to the fabric canvas.\n     */\n    _finalizeAndAddPath: function() {\n      var ctx = this.canvas.contextTop;\n      ctx.closePath();\n\n      var pathData = this.convertPointsToSVGPath(this._points).join('');\n      if (pathData === 'M 0 0 Q 0 0 0 0 L 0 0') {\n        // do not create 0 width/height paths, as they are\n        // rendered inconsistently across browsers\n        // Firefox 4, for example, renders a dot,\n        // whereas Chrome 10 renders nothing\n        this.canvas.requestRenderAll();\n        return;\n      }\n\n      var path = this.createPath(pathData);\n      this.canvas.clearContext(this.canvas.contextTop);\n      this.canvas.add(path);\n      this.canvas.renderAll();\n      path.setCoords();\n      this._resetShadow();\n\n\n      // fire event 'path' created\n      this.canvas.fire('path:created', { path: path });\n    }\n  });\n})();\n\n\n/**\n * CircleBrush class\n * @class fabric.CircleBrush\n */\nfabric.CircleBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.CircleBrush.prototype */ {\n\n  /**\n   * Width of a brush\n   * @type Number\n   * @default\n   */\n  width: 10,\n\n  /**\n   * Constructor\n   * @param {fabric.Canvas} canvas\n   * @return {fabric.CircleBrush} Instance of a circle brush\n   */\n  initialize: function(canvas) {\n    this.canvas = canvas;\n    this.points = [];\n  },\n\n  /**\n   * Invoked inside on mouse down and mouse move\n   * @param {Object} pointer\n   */\n  drawDot: function(pointer) {\n    var point = this.addPoint(pointer),\n        ctx = this.canvas.contextTop;\n    this._saveAndTransform(ctx);\n    ctx.fillStyle = point.fill;\n    ctx.beginPath();\n    ctx.arc(point.x, point.y, point.radius, 0, Math.PI * 2, false);\n    ctx.closePath();\n    ctx.fill();\n\n    ctx.restore();\n  },\n\n  /**\n   * Invoked on mouse down\n   */\n  onMouseDown: function(pointer) {\n    this.points.length = 0;\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._setShadow();\n    this.drawDot(pointer);\n  },\n\n  /**\n   * Render the full state of the brush\n   * @private\n   */\n  _render: function() {\n    var ctx  = this.canvas.contextTop, i, len,\n        points = this.points, point;\n    this._saveAndTransform(ctx);\n    for (i = 0, len = points.length; i < len; i++) {\n      point = points[i];\n      ctx.fillStyle = point.fill;\n      ctx.beginPath();\n      ctx.arc(point.x, point.y, point.radius, 0, Math.PI * 2, false);\n      ctx.closePath();\n      ctx.fill();\n    }\n    ctx.restore();\n  },\n\n  /**\n   * Invoked on mouse move\n   * @param {Object} pointer\n   */\n  onMouseMove: function(pointer) {\n    this.drawDot(pointer);\n  },\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp: function() {\n    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove, i, len;\n    this.canvas.renderOnAddRemove = false;\n\n    var circles = [];\n\n    for (i = 0, len = this.points.length; i < len; i++) {\n      var point = this.points[i],\n          circle = new fabric.Circle({\n            radius: point.radius,\n            left: point.x,\n            top: point.y,\n            originX: 'center',\n            originY: 'center',\n            fill: point.fill\n          });\n\n      this.shadow && circle.setShadow(this.shadow);\n\n      circles.push(circle);\n    }\n    var group = new fabric.Group(circles, { originX: 'center', originY: 'center' });\n    group.canvas = this.canvas;\n\n    this.canvas.add(group);\n    this.canvas.fire('path:created', { path: group });\n\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._resetShadow();\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n    this.canvas.requestRenderAll();\n  },\n\n  /**\n   * @param {Object} pointer\n   * @return {fabric.Point} Just added pointer point\n   */\n  addPoint: function(pointer) {\n    var pointerPoint = new fabric.Point(pointer.x, pointer.y),\n\n        circleRadius = fabric.util.getRandomInt(\n          Math.max(0, this.width - 20), this.width + 20) / 2,\n\n        circleColor = new fabric.Color(this.color)\n          .setAlpha(fabric.util.getRandomInt(0, 100) / 100)\n          .toRgba();\n\n    pointerPoint.radius = circleRadius;\n    pointerPoint.fill = circleColor;\n\n    this.points.push(pointerPoint);\n\n    return pointerPoint;\n  }\n});\n\n\n/**\n * SprayBrush class\n * @class fabric.SprayBrush\n */\nfabric.SprayBrush = fabric.util.createClass( fabric.BaseBrush, /** @lends fabric.SprayBrush.prototype */ {\n\n  /**\n   * Width of a spray\n   * @type Number\n   * @default\n   */\n  width:              10,\n\n  /**\n   * Density of a spray (number of dots per chunk)\n   * @type Number\n   * @default\n   */\n  density:            20,\n\n  /**\n   * Width of spray dots\n   * @type Number\n   * @default\n   */\n  dotWidth:           1,\n\n  /**\n   * Width variance of spray dots\n   * @type Number\n   * @default\n   */\n  dotWidthVariance:   1,\n\n  /**\n   * Whether opacity of a dot should be random\n   * @type Boolean\n   * @default\n   */\n  randomOpacity:        false,\n\n  /**\n   * Whether overlapping dots (rectangles) should be removed (for performance reasons)\n   * @type Boolean\n   * @default\n   */\n  optimizeOverlapping:  true,\n\n  /**\n   * Constructor\n   * @param {fabric.Canvas} canvas\n   * @return {fabric.SprayBrush} Instance of a spray brush\n   */\n  initialize: function(canvas) {\n    this.canvas = canvas;\n    this.sprayChunks = [];\n  },\n\n  /**\n   * Invoked on mouse down\n   * @param {Object} pointer\n   */\n  onMouseDown: function(pointer) {\n    this.sprayChunks.length = 0;\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._setShadow();\n\n    this.addSprayChunk(pointer);\n    this.render(this.sprayChunkPoints);\n  },\n\n  /**\n   * Invoked on mouse move\n   * @param {Object} pointer\n   */\n  onMouseMove: function(pointer) {\n    this.addSprayChunk(pointer);\n    this.render(this.sprayChunkPoints);\n  },\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp: function() {\n    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\n    this.canvas.renderOnAddRemove = false;\n\n    var rects = [];\n\n    for (var i = 0, ilen = this.sprayChunks.length; i < ilen; i++) {\n      var sprayChunk = this.sprayChunks[i];\n\n      for (var j = 0, jlen = sprayChunk.length; j < jlen; j++) {\n\n        var rect = new fabric.Rect({\n          width: sprayChunk[j].width,\n          height: sprayChunk[j].width,\n          left: sprayChunk[j].x + 1,\n          top: sprayChunk[j].y + 1,\n          originX: 'center',\n          originY: 'center',\n          fill: this.color\n        });\n        rects.push(rect);\n      }\n    }\n\n    if (this.optimizeOverlapping) {\n      rects = this._getOptimizedRects(rects);\n    }\n\n    var group = new fabric.Group(rects, { originX: 'center', originY: 'center' });\n    this.shadow && group.setShadow(this.shadow);\n    this.canvas.add(group);\n    this.canvas.fire('path:created', { path: group });\n\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._resetShadow();\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n    this.canvas.requestRenderAll();\n  },\n\n  /**\n   * @private\n   * @param {Array} rects\n   */\n  _getOptimizedRects: function(rects) {\n\n    // avoid creating duplicate rects at the same coordinates\n    var uniqueRects = { }, key, i, len;\n\n    for (i = 0, len = rects.length; i < len; i++) {\n      key = rects[i].left + '' + rects[i].top;\n      if (!uniqueRects[key]) {\n        uniqueRects[key] = rects[i];\n      }\n    }\n    var uniqueRectsArray = [];\n    for (key in uniqueRects) {\n      uniqueRectsArray.push(uniqueRects[key]);\n    }\n\n    return uniqueRectsArray;\n  },\n\n  /**\n   * Render new chunk of spray brush\n   */\n  render: function(sprayChunk) {\n    var ctx = this.canvas.contextTop, i, len;\n    ctx.fillStyle = this.color;\n\n    this._saveAndTransform(ctx);\n\n    for (i = 0, len = sprayChunk.length; i < len; i++) {\n      var point = sprayChunk[i];\n      if (typeof point.opacity !== 'undefined') {\n        ctx.globalAlpha = point.opacity;\n      }\n      ctx.fillRect(point.x, point.y, point.width, point.width);\n    }\n    ctx.restore();\n  },\n\n  /**\n   * Render all spray chunks\n   */\n  _render: function() {\n    var ctx = this.canvas.contextTop, i, ilen;\n    ctx.fillStyle = this.color;\n\n    this._saveAndTransform(ctx);\n\n    for (i = 0, ilen = this.sprayChunks.length; i < ilen; i++) {\n      this.render(this.sprayChunks[i]);\n    }\n    ctx.restore();\n  },\n\n  /**\n   * @param {Object} pointer\n   */\n  addSprayChunk: function(pointer) {\n    this.sprayChunkPoints = [];\n\n    var x, y, width, radius = this.width / 2, i;\n\n    for (i = 0; i < this.density; i++) {\n\n      x = fabric.util.getRandomInt(pointer.x - radius, pointer.x + radius);\n      y = fabric.util.getRandomInt(pointer.y - radius, pointer.y + radius);\n\n      if (this.dotWidthVariance) {\n        width = fabric.util.getRandomInt(\n          // bottom clamp width to 1\n          Math.max(1, this.dotWidth - this.dotWidthVariance),\n          this.dotWidth + this.dotWidthVariance);\n      }\n      else {\n        width = this.dotWidth;\n      }\n\n      var point = new fabric.Point(x, y);\n      point.width = width;\n\n      if (this.randomOpacity) {\n        point.opacity = fabric.util.getRandomInt(0, 100) / 100;\n      }\n\n      this.sprayChunkPoints.push(point);\n    }\n\n    this.sprayChunks.push(this.sprayChunkPoints);\n  }\n});\n\n\n/**\n * PatternBrush class\n * @class fabric.PatternBrush\n * @extends fabric.BaseBrush\n */\nfabric.PatternBrush = fabric.util.createClass(fabric.PencilBrush, /** @lends fabric.PatternBrush.prototype */ {\n\n  getPatternSrc: function() {\n\n    var dotWidth = 20,\n        dotDistance = 5,\n        patternCanvas = fabric.document.createElement('canvas'),\n        patternCtx = patternCanvas.getContext('2d');\n\n    patternCanvas.width = patternCanvas.height = dotWidth + dotDistance;\n\n    patternCtx.fillStyle = this.color;\n    patternCtx.beginPath();\n    patternCtx.arc(dotWidth / 2, dotWidth / 2, dotWidth / 2, 0, Math.PI * 2, false);\n    patternCtx.closePath();\n    patternCtx.fill();\n\n    return patternCanvas;\n  },\n\n  getPatternSrcFunction: function() {\n    return String(this.getPatternSrc).replace('this.color', '\"' + this.color + '\"');\n  },\n\n  /**\n   * Creates \"pattern\" instance property\n   */\n  getPattern: function() {\n    return this.canvas.contextTop.createPattern(this.source || this.getPatternSrc(), 'repeat');\n  },\n\n  /**\n   * Sets brush styles\n   */\n  _setBrushStyles: function() {\n    this.callSuper('_setBrushStyles');\n    this.canvas.contextTop.strokeStyle = this.getPattern();\n  },\n\n  /**\n   * Creates path\n   */\n  createPath: function(pathData) {\n    var path = this.callSuper('createPath', pathData),\n        topLeft = path._getLeftTopCoords().scalarAdd(path.strokeWidth / 2);\n\n    path.stroke = new fabric.Pattern({\n      source: this.source || this.getPatternSrcFunction(),\n      offsetX: -topLeft.x,\n      offsetY: -topLeft.y\n    });\n    return path;\n  }\n});\n\n\n(function() {\n\n  var getPointer = fabric.util.getPointer,\n      degreesToRadians = fabric.util.degreesToRadians,\n      radiansToDegrees = fabric.util.radiansToDegrees,\n      atan2 = Math.atan2,\n      abs = Math.abs,\n      supportLineDash = fabric.StaticCanvas.supports('setLineDash'),\n\n      STROKE_OFFSET = 0.5;\n\n  /**\n   * Canvas class\n   * @class fabric.Canvas\n   * @extends fabric.StaticCanvas\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#canvas}\n   * @see {@link fabric.Canvas#initialize} for constructor definition\n   *\n   * @fires object:added\n   * @fires object:removed\n   * @fires object:modified\n   * @fires object:rotating\n   * @fires object:scaling\n   * @fires object:moving\n   * @fires object:selected this event is deprecated. use selection:created\n   *\n   * @fires before:selection:cleared\n   * @fires selection:cleared\n   * @fires selection:updated\n   * @fires selection:created\n   *\n   * @fires path:created\n   * @fires mouse:down\n   * @fires mouse:move\n   * @fires mouse:up\n   * @fires mouse:over\n   * @fires mouse:out\n   * @fires mouse:dblclick\n   *\n   */\n  fabric.Canvas = fabric.util.createClass(fabric.StaticCanvas, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * Constructor\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(el, options) {\n      options || (options = { });\n      this.renderAndResetBound = this.renderAndReset.bind(this);\n      this._initStatic(el, options);\n      this._initInteractive();\n      this._createCacheCanvas();\n    },\n\n    /**\n     * When true, objects can be transformed by one side (unproportionally)\n     * @type Boolean\n     * @default\n     */\n    uniScaleTransform:      false,\n\n    /**\n     * Indicates which key enable unproportional scaling\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    uniScaleKey:           'shiftKey',\n\n    /**\n     * When true, objects use center point as the origin of scale transformation.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredScaling:        false,\n\n    /**\n     * When true, objects use center point as the origin of rotate transformation.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredRotation:       false,\n\n    /**\n     * Indicates which key enable centered Transform\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    centeredKey:           'altKey',\n\n    /**\n     * Indicates which key enable alternate action on corner\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    altActionKey:           'shiftKey',\n\n    /**\n     * Indicates that canvas is interactive. This property should not be changed.\n     * @type Boolean\n     * @default\n     */\n    interactive:            true,\n\n    /**\n     * Indicates whether group selection should be enabled\n     * @type Boolean\n     * @default\n     */\n    selection:              true,\n\n    /**\n     * Indicates which key or keys enable multiple click selection\n     * Pass value as a string or array of strings\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or empty or containing any other string that is not a modifier key\n     * feature is disabled.\n     * @since 1.6.2\n     * @type String|Array\n     * @default\n     */\n    selectionKey:           'shiftKey',\n\n    /**\n     * Indicates which key enable alternative selection\n     * in case of target overlapping with active object\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.5\n     * @type null|String\n     * @default\n     */\n    altSelectionKey:           null,\n\n    /**\n     * Color of selection\n     * @type String\n     * @default\n     */\n    selectionColor:         'rgba(100, 100, 255, 0.3)', // blue\n\n    /**\n     * Default dash array pattern\n     * If not empty the selection border is dashed\n     * @type Array\n     */\n    selectionDashArray:     [],\n\n    /**\n     * Color of the border of selection (usually slightly darker than color of selection itself)\n     * @type String\n     * @default\n     */\n    selectionBorderColor:   'rgba(255, 255, 255, 0.3)',\n\n    /**\n     * Width of a line used in object/group selection\n     * @type Number\n     * @default\n     */\n    selectionLineWidth:     1,\n\n    /**\n     * Select only shapes that are fully contained in the dragged selection rectangle.\n     * @type Boolean\n     * @default\n     */\n    selectionFullyContained: false,\n\n    /**\n     * Default cursor value used when hovering over an object on canvas\n     * @type String\n     * @default\n     */\n    hoverCursor:            'move',\n\n    /**\n     * Default cursor value used when moving an object on canvas\n     * @type String\n     * @default\n     */\n    moveCursor:             'move',\n\n    /**\n     * Default cursor value used for the entire canvas\n     * @type String\n     * @default\n     */\n    defaultCursor:          'default',\n\n    /**\n     * Cursor value used during free drawing\n     * @type String\n     * @default\n     */\n    freeDrawingCursor:      'crosshair',\n\n    /**\n     * Cursor value used for rotation point\n     * @type String\n     * @default\n     */\n    rotationCursor:         'crosshair',\n\n    /**\n     * Cursor value used for disabled elements ( corners with disabled action )\n     * @type String\n     * @since 2.0.0\n     * @default\n     */\n    notAllowedCursor:         'not-allowed',\n\n    /**\n     * Default element class that's given to wrapper (div) element of canvas\n     * @type String\n     * @default\n     */\n    containerClass:         'canvas-container',\n\n    /**\n     * When true, object detection happens on per-pixel basis rather than on per-bounding-box\n     * @type Boolean\n     * @default\n     */\n    perPixelTargetFind:     false,\n\n    /**\n     * Number of pixels around target pixel to tolerate (consider active) during object detection\n     * @type Number\n     * @default\n     */\n    targetFindTolerance:    0,\n\n    /**\n     * When true, target detection is skipped when hovering over canvas. This can be used to improve performance.\n     * @type Boolean\n     * @default\n     */\n    skipTargetFind:         false,\n\n    /**\n     * When true, mouse events on canvas (mousedown/mousemove/mouseup) result in free drawing.\n     * After mousedown, mousemove creates a shape,\n     * and then mouseup finalizes it and adds an instance of `fabric.Path` onto canvas.\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-4#free_drawing}\n     * @type Boolean\n     * @default\n     */\n    isDrawingMode:          false,\n\n    /**\n     * Indicates whether objects should remain in current stack position when selected.\n     * When false objects are brought to top and rendered as part of the selection group\n     * @type Boolean\n     * @default\n     */\n    preserveObjectStacking: false,\n\n    /**\n     * Indicates the angle that an object will lock to while rotating.\n     * @type Number\n     * @since 1.6.7\n     * @default\n     */\n    snapAngle: 0,\n\n    /**\n     * Indicates the distance from the snapAngle the rotation will lock to the snapAngle.\n     * When `null`, the snapThreshold will default to the snapAngle.\n     * @type null|Number\n     * @since 1.6.7\n     * @default\n     */\n    snapThreshold: null,\n\n    /**\n     * Indicates if the right click on canvas can output the context menu or not\n     * @type Boolean\n     * @since 1.6.5\n     * @default\n     */\n    stopContextMenu: false,\n\n    /**\n     * Indicates if the canvas can fire right click events\n     * @type Boolean\n     * @since 1.6.5\n     * @default\n     */\n    fireRightClick: false,\n\n    /**\n     * Indicates if the canvas can fire middle click events\n     * @type Boolean\n     * @since 1.7.8\n     * @default\n     */\n    fireMiddleClick: false,\n\n    /**\n     * @private\n     */\n    _initInteractive: function() {\n      this._currentTransform = null;\n      this._groupSelector = null;\n      this._initWrapperElement();\n      this._createUpperCanvas();\n      this._initEventListeners();\n\n      this._initRetinaScaling();\n\n      this.freeDrawingBrush = fabric.PencilBrush && new fabric.PencilBrush(this);\n\n      this.calcOffset();\n    },\n\n    /**\n     * Divides objects in two groups, one to render immediately\n     * and one to render as activeGroup.\n     * @return {Array} objects to render immediately and pushes the other in the activeGroup.\n     */\n    _chooseObjectsToRender: function() {\n      var activeObjects = this.getActiveObjects(),\n          object, objsToRender, activeGroupObjects;\n\n      if (activeObjects.length > 0 && !this.preserveObjectStacking) {\n        objsToRender = [];\n        activeGroupObjects = [];\n        for (var i = 0, length = this._objects.length; i < length; i++) {\n          object = this._objects[i];\n          if (activeObjects.indexOf(object) === -1 ) {\n            objsToRender.push(object);\n          }\n          else {\n            activeGroupObjects.push(object);\n          }\n        }\n        if (activeObjects.length > 1) {\n          this._activeObject._objects = activeGroupObjects;\n        }\n        objsToRender.push.apply(objsToRender, activeGroupObjects);\n      }\n      else {\n        objsToRender = this._objects;\n      }\n\n      objsToRender = _.sortBy(objsToRender, function(object) {\n        return object.zIndex || 0;\n      });\n\n      return objsToRender;\n    },\n\n    /**\n     * Renders both the top canvas and the secondary container canvas.\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAll: function () {\n      if (this.contextTopDirty && !this._groupSelector && !this.isDrawingMode) {\n        this.clearContext(this.contextTop);\n        this.contextTopDirty = false;\n      }\n      if (this.isDrawingMode && this._isCurrentlyDrawing) {\n        this.freeDrawingBrush && this.freeDrawingBrush._render();\n      }\n      var canvasToDrawOn = this.contextContainer;\n      this.renderCanvas(canvasToDrawOn, this._chooseObjectsToRender());\n      return this;\n    },\n\n    /**\n     * Method to render only the top canvas.\n     * Also used to render the group selection box.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    renderTop: function () {\n      var ctx = this.contextTop;\n      this.clearContext(ctx);\n\n      // we render the top context - last object\n      if (this.selection && this._groupSelector) {\n        this._drawSelection(ctx);\n      }\n\n      this.fire('after:render');\n      this.contextTopDirty = true;\n      return this;\n    },\n\n    /**\n     * Resets the current transform to its original values and chooses the type of resizing based on the event\n     * @private\n     */\n    _resetCurrentTransform: function() {\n      var t = this._currentTransform;\n\n      t.target.set({\n        scaleX: t.original.scaleX,\n        scaleY: t.original.scaleY,\n        skewX: t.original.skewX,\n        skewY: t.original.skewY,\n        left: t.original.left,\n        top: t.original.top\n      });\n\n      if (this._shouldCenterTransform(t.target)) {\n        if (t.action === 'rotate') {\n          this._setOriginToCenter(t.target);\n        }\n        else {\n          if (t.originX !== 'center') {\n            if (t.originX === 'right') {\n              t.mouseXSign = -1;\n            }\n            else {\n              t.mouseXSign = 1;\n            }\n          }\n          if (t.originY !== 'center') {\n            if (t.originY === 'bottom') {\n              t.mouseYSign = -1;\n            }\n            else {\n              t.mouseYSign = 1;\n            }\n          }\n\n          t.originX = 'center';\n          t.originY = 'center';\n        }\n      }\n      else {\n        t.originX = t.original.originX;\n        t.originY = t.original.originY;\n      }\n    },\n\n    /**\n     * Checks if point is contained within an area of given object\n     * @param {Event} e Event object\n     * @param {fabric.Object} target Object to test against\n     * @param {Object} [point] x,y object of point coordinates we want to check.\n     * @return {Boolean} true if point is contained within an area of given object\n     */\n    containsPoint: function (e, target, point) {\n      var ignoreZoom = true,\n          pointer = point || this.getPointer(e, ignoreZoom),\n          xy;\n\n      if (target.group && target.group === this._activeObject && target.group.type === 'activeSelection') {\n        xy = this._normalizePointer(target.group, pointer);\n      }\n      else {\n        xy = { x: pointer.x, y: pointer.y };\n      }\n      // http://www.geog.ubc.ca/courses/klink/gis.notes/ncgia/u32.html\n      // http://idav.ucdavis.edu/~okreylos/TAship/Spring2000/PointInPolygon.html\n      return (target.containsPoint(xy) || target._findTargetCorner(pointer));\n    },\n\n    /**\n     * @private\n     */\n    _normalizePointer: function (object, pointer) {\n      var m = object.calcTransformMatrix(),\n          invertedM = fabric.util.invertTransform(m),\n          vptPointer = this.restorePointerVpt(pointer);\n      return fabric.util.transformPoint(vptPointer, invertedM);\n    },\n\n    /**\n     * Returns true if object is transparent at a certain location\n     * @param {fabric.Object} target Object to check\n     * @param {Number} x Left coordinate\n     * @param {Number} y Top coordinate\n     * @return {Boolean}\n     */\n    isTargetTransparent: function (target, x, y) {\n      var ctx = this.contextCache,\n          originalColor = target.selectionBackgroundColor, v = this.viewportTransform;\n\n      target.selectionBackgroundColor = '';\n\n      this.clearContext(ctx);\n\n      ctx.save();\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n      target.render(ctx);\n      ctx.restore();\n\n      target === this._activeObject && target._renderControls(ctx, {\n        hasBorders: false,\n        transparentCorners: false\n      }, {\n        hasBorders: false,\n      });\n\n      target.selectionBackgroundColor = originalColor;\n\n      var isTransparent = fabric.util.isTransparent(\n        ctx, x, y, this.targetFindTolerance);\n\n      return isTransparent;\n    },\n\n    /**\n     * takes an event and determins if selection key has been pressed\n     * @private\n     * @param {Event} e Event object\n     */\n    _isSelectionKeyPressed: function(e) {\n      var selectionKeyPressed = false;\n\n      if (Object.prototype.toString.call(this.selectionKey) === '[object Array]') {\n        selectionKeyPressed = !!this.selectionKey.find(function(key) { return e[key] === true; });\n      }\n      else {\n        selectionKeyPressed = e[this.selectionKey];\n      }\n\n      return selectionKeyPressed;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _shouldClearSelection: function (e, target) {\n      var activeObjects = this.getActiveObjects(),\n          activeObject = this._activeObject;\n\n      return (\n        !target\n        ||\n        (target &&\n          activeObject &&\n          activeObjects.length > 1 &&\n          activeObjects.indexOf(target) === -1 &&\n          activeObject !== target &&\n          !this._isSelectionKeyPressed(e))\n        ||\n        (target && !target.evented)\n        ||\n        (target &&\n          !target.selectable &&\n          activeObject &&\n          activeObject !== target)\n      );\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} target\n     */\n    _shouldCenterTransform: function (target) {\n      if (!target) {\n        return;\n      }\n\n      var t = this._currentTransform,\n          centerTransform;\n\n      if (t.action === 'scale' || t.action === 'scaleX' || t.action === 'scaleY') {\n        centerTransform = this.centeredScaling || target.centeredScaling;\n      }\n      else if (t.action === 'rotate') {\n        centerTransform = this.centeredRotation || target.centeredRotation;\n      }\n\n      return centerTransform ? !t.altKey : t.altKey;\n    },\n\n    /**\n     * @private\n     */\n    _getOriginFromCorner: function(target, corner) {\n      var origin = {\n        x: target.originX,\n        y: target.originY\n      };\n\n      if (corner === 'ml' || corner === 'tl' || corner === 'bl') {\n        origin.x = 'right';\n      }\n      else if (corner === 'mr' || corner === 'tr' || corner === 'br') {\n        origin.x = 'left';\n      }\n\n      if (corner === 'tl' || corner === 'mt' || corner === 'tr') {\n        origin.y = 'bottom';\n      }\n      else if (corner === 'bl' || corner === 'mb' || corner === 'br') {\n        origin.y = 'top';\n      }\n\n      return origin;\n    },\n\n    /**\n     * @private\n     */\n    _getActionFromCorner: function(target, corner, e) {\n      if (!corner) {\n        return 'drag';\n      }\n\n      switch (corner) {\n        case 'mtr':\n          return 'rotate';\n        case 'ml':\n        case 'mr':\n          return e[this.altActionKey] ? 'skewY' : 'scaleX';\n        case 'mt':\n        case 'mb':\n          return e[this.altActionKey] ? 'skewX' : 'scaleY';\n        default:\n          return 'scale';\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _setupCurrentTransform: function (e, target) {\n      if (!target) {\n        return;\n      }\n\n      var pointer = this.getPointer(e),\n          corner = target._findTargetCorner(this.getPointer(e, true)),\n          action = this._getActionFromCorner(target, corner, e),\n          origin = this._getOriginFromCorner(target, corner);\n\n      this._currentTransform = {\n        target: target,\n        action: action,\n        corner: corner,\n        scaleX: target.scaleX,\n        scaleY: target.scaleY,\n        skewX: target.skewX,\n        skewY: target.skewY,\n        offsetX: pointer.x - target.left,\n        offsetY: pointer.y - target.top,\n        originX: origin.x,\n        originY: origin.y,\n        ex: pointer.x,\n        ey: pointer.y,\n        lastX: pointer.x,\n        lastY: pointer.y,\n        left: target.left,\n        top: target.top,\n        theta: degreesToRadians(target.angle),\n        width: target.width * target.scaleX,\n        mouseXSign: 1,\n        mouseYSign: 1,\n        shiftKey: e.shiftKey,\n        altKey: e[this.centeredKey]\n      };\n\n      this._currentTransform.original = {\n        left: target.left,\n        top: target.top,\n        scaleX: target.scaleX,\n        scaleY: target.scaleY,\n        skewX: target.skewX,\n        skewY: target.skewY,\n        originX: origin.x,\n        originY: origin.y\n      };\n\n      this._resetCurrentTransform();\n    },\n\n    /**\n     * Translates object by \"setting\" its left/top\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @return {Boolean} true if the translation occurred\n     */\n    _translateObject: function (x, y) {\n      var transform = this._currentTransform,\n          target = transform.target,\n          newLeft = x - transform.offsetX,\n          newTop = y - transform.offsetY,\n          moveX = !target.get('lockMovementX') && target.left !== newLeft,\n          moveY = !target.get('lockMovementY') && target.top !== newTop;\n\n      moveX && target.set('left', newLeft);\n      moveY && target.set('top', newTop);\n      return moveX || moveY;\n    },\n\n    /**\n     * Check if we are increasing a positive skew or lower it,\n     * checking mouse direction and pressed corner.\n     * @private\n     */\n    _changeSkewTransformOrigin: function(mouseMove, t, by) {\n      var property = 'originX', origins = { 0: 'center' },\n          skew = t.target.skewX, originA = 'left', originB = 'right',\n          corner = t.corner === 'mt' || t.corner === 'ml' ? 1 : -1,\n          flipSign = 1;\n\n      mouseMove = mouseMove > 0 ? 1 : -1;\n      if (by === 'y') {\n        skew = t.target.skewY;\n        originA = 'top';\n        originB = 'bottom';\n        property = 'originY';\n      }\n      origins[-1] = originA;\n      origins[1] = originB;\n\n      t.target.flipX && (flipSign *= -1);\n      t.target.flipY && (flipSign *= -1);\n\n      if (skew === 0) {\n        t.skewSign = -corner * mouseMove * flipSign;\n        t[property] = origins[-mouseMove];\n      }\n      else {\n        skew = skew > 0 ? 1 : -1;\n        t.skewSign = skew;\n        t[property] = origins[skew * corner * flipSign];\n      }\n    },\n\n    /**\n     * Skew object by mouse events\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @param {String} by Either 'x' or 'y'\n     * @return {Boolean} true if the skewing occurred\n     */\n    _skewObject: function (x, y, by) {\n      var t = this._currentTransform,\n          target = t.target, skewed = false,\n          lockSkewingX = target.get('lockSkewingX'),\n          lockSkewingY = target.get('lockSkewingY');\n\n      if ((lockSkewingX && by === 'x') || (lockSkewingY && by === 'y')) {\n        return false;\n      }\n\n      // Get the constraint point\n      var center = target.getCenterPoint(),\n          actualMouseByCenter = target.toLocalPoint(new fabric.Point(x, y), 'center', 'center')[by],\n          lastMouseByCenter = target.toLocalPoint(new fabric.Point(t.lastX, t.lastY), 'center', 'center')[by],\n          actualMouseByOrigin, constraintPosition, dim = target._getTransformedDimensions();\n\n      this._changeSkewTransformOrigin(actualMouseByCenter - lastMouseByCenter, t, by);\n      actualMouseByOrigin = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY)[by];\n      constraintPosition = target.translateToOriginPoint(center, t.originX, t.originY);\n      // Actually skew the object\n      skewed = this._setObjectSkew(actualMouseByOrigin, t, by, dim);\n      t.lastX = x;\n      t.lastY = y;\n      // Make sure the constraints apply\n      target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n      return skewed;\n    },\n\n    /**\n     * Set object skew\n     * @private\n     * @return {Boolean} true if the skewing occurred\n     */\n    _setObjectSkew: function(localMouse, transform, by, _dim) {\n      var target = transform.target, newValue, skewed = false,\n          skewSign = transform.skewSign, newDim, dimNoSkew,\n          otherBy, _otherBy, _by, newDimMouse, skewX, skewY;\n\n      if (by === 'x') {\n        otherBy = 'y';\n        _otherBy = 'Y';\n        _by = 'X';\n        skewX = 0;\n        skewY = target.skewY;\n      }\n      else {\n        otherBy = 'x';\n        _otherBy = 'X';\n        _by = 'Y';\n        skewX = target.skewX;\n        skewY = 0;\n      }\n\n      dimNoSkew = target._getTransformedDimensions(skewX, skewY);\n      newDimMouse = 2 * Math.abs(localMouse) - dimNoSkew[by];\n      if (newDimMouse <= 2) {\n        newValue = 0;\n      }\n      else {\n        newValue = skewSign * Math.atan((newDimMouse / target['scale' + _by]) /\n                                        (dimNoSkew[otherBy] / target['scale' + _otherBy]));\n        newValue = fabric.util.radiansToDegrees(newValue);\n      }\n      skewed = target['skew' + _by] !== newValue;\n      target.set('skew' + _by, newValue);\n      if (target['skew' + _otherBy] !== 0) {\n        newDim = target._getTransformedDimensions();\n        newValue = (_dim[otherBy] / newDim[otherBy]) * target['scale' + _otherBy];\n        target.set('scale' + _otherBy, newValue);\n      }\n      return skewed;\n    },\n\n    /**\n     * Scales object by invoking its scaleX/scaleY methods\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @param {String} by Either 'x' or 'y' - specifies dimension constraint by which to scale an object.\n     *                    When not provided, an object is scaled by both dimensions equally\n     * @return {Boolean} true if the scaling occurred\n     */\n    _scaleObject: function (x, y, by) {\n      var t = this._currentTransform,\n          target = t.target,\n          lockScalingX = target.get('lockScalingX'),\n          lockScalingY = target.get('lockScalingY'),\n          lockScalingFlip = target.get('lockScalingFlip');\n\n      if (lockScalingX && lockScalingY) {\n        return false;\n      }\n\n      // Get the constraint point\n      var constraintPosition = target.translateToOriginPoint(target.getCenterPoint(), t.originX, t.originY),\n          localMouse = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY),\n          dim = target._getTransformedDimensions(), scaled = false;\n\n      this._setLocalMouse(localMouse, t);\n\n      // Actually scale the object\n      scaled = this._setObjectScale(localMouse, t, lockScalingX, lockScalingY, by, lockScalingFlip, dim);\n\n      // Make sure the constraints apply\n      target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n      return scaled;\n    },\n\n    /**\n     * @private\n     * @return {Boolean} true if the scaling occurred\n     */\n    _setObjectScale: function(localMouse, transform, lockScalingX, lockScalingY, by, lockScalingFlip, _dim) {\n      var target = transform.target, forbidScalingX = false, forbidScalingY = false, scaled = false,\n          changeX, changeY, scaleX, scaleY;\n\n      scaleX = localMouse.x * target.scaleX / _dim.x;\n      scaleY = localMouse.y * target.scaleY / _dim.y;\n      changeX = target.scaleX !== scaleX;\n      changeY = target.scaleY !== scaleY;\n\n      if (lockScalingFlip && scaleX <= 0 && scaleX < target.scaleX) {\n        forbidScalingX = true;\n        localMouse.x = 0;\n      }\n\n      if (lockScalingFlip && scaleY <= 0 && scaleY < target.scaleY) {\n        forbidScalingY = true;\n        localMouse.y = 0;\n      }\n\n      if (by === 'equally' && !lockScalingX && !lockScalingY) {\n        scaled = this._scaleObjectEqually(localMouse, target, transform, _dim);\n      }\n      else if (!by) {\n        forbidScalingX || lockScalingX || (target.set('scaleX', scaleX) && (scaled = scaled || changeX));\n        forbidScalingY || lockScalingY || (target.set('scaleY', scaleY) && (scaled = scaled || changeY));\n      }\n      else if (by === 'x' && !target.get('lockUniScaling')) {\n        forbidScalingX || lockScalingX || (target.set('scaleX', scaleX) && (scaled = scaled || changeX));\n      }\n      else if (by === 'y' && !target.get('lockUniScaling')) {\n        forbidScalingY || lockScalingY || (target.set('scaleY', scaleY) && (scaled = scaled || changeY));\n      }\n      transform.newScaleX = scaleX;\n      transform.newScaleY = scaleY;\n      forbidScalingX || forbidScalingY || this._flipObject(transform, by);\n      return scaled;\n    },\n\n    /**\n     * @private\n     * @return {Boolean} true if the scaling occurred\n     */\n    _scaleObjectEqually: function(localMouse, target, transform, _dim) {\n\n      var dist = localMouse.y + localMouse.x,\n          lastDist = _dim.y * transform.original.scaleY / target.scaleY +\n                     _dim.x * transform.original.scaleX / target.scaleX,\n          scaled, signX = localMouse.x < 0 ? -1 : 1,\n          signY = localMouse.y < 0 ? -1 : 1;\n\n      // We use transform.scaleX/Y instead of target.scaleX/Y\n      // because the object may have a min scale and we'll loose the proportions\n      transform.newScaleX = signX * Math.abs(transform.original.scaleX * dist / lastDist);\n      transform.newScaleY = signY * Math.abs(transform.original.scaleY * dist / lastDist);\n      scaled = transform.newScaleX !== target.scaleX || transform.newScaleY !== target.scaleY;\n      target.set('scaleX', transform.newScaleX);\n      target.set('scaleY', transform.newScaleY);\n      return scaled;\n    },\n\n    /**\n     * @private\n     */\n    _flipObject: function(transform, by) {\n      if (transform.newScaleX < 0 && by !== 'y') {\n        if (transform.originX === 'left') {\n          transform.originX = 'right';\n        }\n        else if (transform.originX === 'right') {\n          transform.originX = 'left';\n        }\n      }\n\n      if (transform.newScaleY < 0 && by !== 'x') {\n        if (transform.originY === 'top') {\n          transform.originY = 'bottom';\n        }\n        else if (transform.originY === 'bottom') {\n          transform.originY = 'top';\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setLocalMouse: function(localMouse, t) {\n      var target = t.target, zoom = this.getZoom(),\n          padding = target.padding / zoom;\n\n      if (t.originX === 'right') {\n        localMouse.x *= -1;\n      }\n      else if (t.originX === 'center') {\n        localMouse.x *= t.mouseXSign * 2;\n        if (localMouse.x < 0) {\n          t.mouseXSign = -t.mouseXSign;\n        }\n      }\n\n      if (t.originY === 'bottom') {\n        localMouse.y *= -1;\n      }\n      else if (t.originY === 'center') {\n        localMouse.y *= t.mouseYSign * 2;\n        if (localMouse.y < 0) {\n          t.mouseYSign = -t.mouseYSign;\n        }\n      }\n\n      // adjust the mouse coordinates when dealing with padding\n      if (abs(localMouse.x) > padding) {\n        if (localMouse.x < 0) {\n          localMouse.x += padding;\n        }\n        else {\n          localMouse.x -= padding;\n        }\n      }\n      else { // mouse is within the padding, set to 0\n        localMouse.x = 0;\n      }\n\n      if (abs(localMouse.y) > padding) {\n        if (localMouse.y < 0) {\n          localMouse.y += padding;\n        }\n        else {\n          localMouse.y -= padding;\n        }\n      }\n      else {\n        localMouse.y = 0;\n      }\n    },\n\n    /**\n     * Rotates object by invoking its rotate method\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @return {Boolean} true if the rotation occurred\n     */\n    _rotateObject: function (x, y) {\n\n      var t = this._currentTransform;\n\n      if (t.target.get('lockRotation')) {\n        return false;\n      }\n\n      var lastAngle = atan2(t.ey - t.top, t.ex - t.left),\n          curAngle = atan2(y - t.top, x - t.left),\n          angle = radiansToDegrees(curAngle - lastAngle + t.theta),\n          hasRotated = true;\n\n      if (t.target.snapAngle > 0) {\n        var snapAngle  = t.target.snapAngle,\n            snapThreshold  = t.target.snapThreshold || snapAngle,\n            rightAngleLocked = Math.ceil(angle / snapAngle) * snapAngle,\n            leftAngleLocked = Math.floor(angle / snapAngle) * snapAngle;\n\n        if (Math.abs(angle - leftAngleLocked) < snapThreshold) {\n          angle = leftAngleLocked;\n        }\n        else if (Math.abs(angle - rightAngleLocked) < snapThreshold) {\n          angle = rightAngleLocked;\n        }\n      }\n\n      // normalize angle to positive value\n      if (angle < 0) {\n        angle = 360 + angle;\n      }\n      angle %= 360;\n\n      if (t.target.angle === angle) {\n        hasRotated = false;\n      }\n      else {\n        t.target.angle = angle;\n      }\n\n      return hasRotated;\n    },\n\n    /**\n     * Set the cursor type of the canvas element\n     * @param {String} value Cursor type of the canvas element.\n     * @see http://www.w3.org/TR/css3-ui/#cursor\n     */\n    setCursor: function (value) {\n      this.upperCanvasEl.style.cursor = value;\n    },\n\n    /**\n     * @param {fabric.Object} target to reset transform\n     * @private\n     */\n    _resetObjectTransform: function (target) {\n      target.scaleX = 1;\n      target.scaleY = 1;\n      target.skewX = 0;\n      target.skewY = 0;\n      target.rotate(0);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx to draw the selection on\n     */\n    _drawSelection: function (ctx) {\n      var groupSelector = this._groupSelector,\n          left = groupSelector.left,\n          top = groupSelector.top,\n          aleft = abs(left),\n          atop = abs(top);\n\n      if (this.selectionColor) {\n        ctx.fillStyle = this.selectionColor;\n\n        ctx.fillRect(\n          groupSelector.ex - ((left > 0) ? 0 : -left),\n          groupSelector.ey - ((top > 0) ? 0 : -top),\n          aleft,\n          atop\n        );\n      }\n\n      if (!this.selectionLineWidth || !this.selectionBorderColor) {\n        return;\n      }\n      ctx.lineWidth = this.selectionLineWidth;\n      ctx.strokeStyle = this.selectionBorderColor;\n\n      // selection border\n      if (this.selectionDashArray.length > 1 && !supportLineDash) {\n\n        var px = groupSelector.ex + STROKE_OFFSET - ((left > 0) ? 0 : aleft),\n            py = groupSelector.ey + STROKE_OFFSET - ((top > 0) ? 0 : atop);\n\n        ctx.beginPath();\n\n        fabric.util.drawDashedLine(ctx, px, py, px + aleft, py, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px, py + atop - 1, px + aleft, py + atop - 1, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px, py, px, py + atop, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px + aleft - 1, py, px + aleft - 1, py + atop, this.selectionDashArray);\n\n        ctx.closePath();\n        ctx.stroke();\n      }\n      else {\n        fabric.Object.prototype._setLineDash.call(this, ctx, this.selectionDashArray);\n        ctx.strokeRect(\n          groupSelector.ex + STROKE_OFFSET - ((left > 0) ? 0 : aleft),\n          groupSelector.ey + STROKE_OFFSET - ((top > 0) ? 0 : atop),\n          aleft,\n          atop\n        );\n      }\n    },\n\n    /**\n     * Method that determines what object we are clicking on\n     * the skipGroup parameter is for internal use, is needed for shift+click action\n     * @param {Event} e mouse event\n     * @param {Boolean} skipGroup when true, activeGroup is skipped and only objects are traversed through\n     */\n    findTarget: function (e, skipGroup) {\n      if (this.skipTargetFind) {\n        return;\n      }\n\n      var ignoreZoom = true,\n          pointer = this.getPointer(e, ignoreZoom),\n          activeObject = this._activeObject,\n          aObjects = this.getActiveObjects(),\n          activeTarget, activeTargetSubs;\n\n      // first check current group (if one exists)\n      // active group does not check sub targets like normal groups.\n      // if active group just exits.\n      this.targets = [];\n\n      if (aObjects.length > 1 && !skipGroup && activeObject === this._searchPossibleTargets([activeObject], pointer)) {\n        return activeObject;\n      }\n      // if we hit the corner of an activeObject, let's return that.\n      if (aObjects.length === 1 && activeObject._findTargetCorner(pointer)) {\n        return activeObject;\n      }\n      if (aObjects.length === 1 &&\n        activeObject === this._searchPossibleTargets([activeObject], pointer)) {\n        if (!this.preserveObjectStacking) {\n          return activeObject;\n        }\n        else {\n          activeTarget = activeObject;\n          activeTargetSubs = this.targets;\n          this.targets = [];\n        }\n      }\n      var target = this._searchPossibleTargets(this._objects, pointer);\n      if (e[this.altSelectionKey] && target && activeTarget && target !== activeTarget) {\n        target = activeTarget;\n        this.targets = activeTargetSubs;\n      }\n      return target;\n    },\n\n    /**\n     * @private\n     */\n    _checkTarget: function(pointer, obj) {\n      if (obj &&\n          obj.visible &&\n          obj.evented &&\n          this.containsPoint(null, obj, pointer)){\n        if ((this.perPixelTargetFind || obj.perPixelTargetFind) && !obj.isEditing) {\n          var isTransparent = this.isTargetTransparent(obj, pointer.x, pointer.y);\n          if (!isTransparent) {\n            return true;\n          }\n        }\n        else {\n          return true;\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _searchPossibleTargets: function(objects, pointer) {\n      objects = _.sortBy(objects, function(object) {\n        return object.zIndex || 0;\n      });\n\n      // Cache all targets where their bounding box contains point.\n      var target, i = objects.length, normalizedPointer, subTarget;\n      // Do not check for currently grouped objects, since we check the parent group itself.\n      // until we call this function specifically to search inside the activeGroup\n      while (i--) {\n        if (this._checkTarget(pointer, objects[i])) {\n          target = objects[i];\n          if (target.type === 'group' && target.subTargetCheck) {\n            normalizedPointer = this._normalizePointer(target, pointer);\n            subTarget = this._searchPossibleTargets(target._objects, normalizedPointer);\n            subTarget && this.targets.push(subTarget);\n          }\n          break;\n        }\n      }\n      return target;\n    },\n\n    /**\n     * Returns pointer coordinates without the effect of the viewport\n     * @param {Object} pointer with \"x\" and \"y\" number values\n     * @return {Object} object with \"x\" and \"y\" number values\n     */\n    restorePointerVpt: function(pointer) {\n      return fabric.util.transformPoint(\n        pointer,\n        fabric.util.invertTransform(this.viewportTransform)\n      );\n    },\n\n    /**\n     * Returns pointer coordinates relative to canvas.\n     * Can return coordinates with or without viewportTransform.\n     * ignoreZoom false gives back coordinates that represent\n     * the point clicked on canvas element.\n     * ignoreZoom true gives back coordinates after being processed\n     * by the viewportTransform ( sort of coordinates of what is displayed\n     * on the canvas where you are clicking.\n     * To interact with your shapes top and left you want to use ignoreZoom true\n     * most of the time, while ignoreZoom false will give you coordinates\n     * compatible with the object.oCoords system.\n     * of the time.\n     * @param {Event} e\n     * @param {Boolean} ignoreZoom\n     * @return {Object} object with \"x\" and \"y\" number values\n     */\n    getPointer: function (e, ignoreZoom, upperCanvasEl) {\n      if (!upperCanvasEl) {\n        upperCanvasEl = this.upperCanvasEl;\n      }\n      var pointer = getPointer(e),\n          bounds = upperCanvasEl.getBoundingClientRect(),\n          boundsWidth = bounds.width || 0,\n          boundsHeight = bounds.height || 0,\n          cssScale;\n\n      if (!boundsWidth || !boundsHeight ) {\n        if ('top' in bounds && 'bottom' in bounds) {\n          boundsHeight = Math.abs( bounds.top - bounds.bottom );\n        }\n        if ('right' in bounds && 'left' in bounds) {\n          boundsWidth = Math.abs( bounds.right - bounds.left );\n        }\n      }\n\n      this.calcOffset();\n\n      pointer.x = pointer.x - this._offset.left;\n      pointer.y = pointer.y - this._offset.top;\n      if (!ignoreZoom) {\n        pointer = this.restorePointerVpt(pointer);\n      }\n\n      if (boundsWidth === 0 || boundsHeight === 0) {\n        // If bounds are not available (i.e. not visible), do not apply scale.\n        cssScale = { width: 1, height: 1 };\n      }\n      else {\n        cssScale = {\n          width: upperCanvasEl.width / boundsWidth,\n          height: upperCanvasEl.height / boundsHeight\n        };\n      }\n\n      return {\n        x: pointer.x * cssScale.width,\n        y: pointer.y * cssScale.height\n      };\n    },\n\n    /**\n     * @private\n     * @throws {CANVAS_INIT_ERROR} If canvas can not be initialized\n     */\n    _createUpperCanvas: function () {\n      var lowerCanvasClass = this.lowerCanvasEl.className.replace(/\\s*lower-canvas\\s*/, '');\n\n      // there is no need to create a new upperCanvas element if we have already one.\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl.className = '';\n      }\n      else {\n        this.upperCanvasEl = this._createCanvasElement();\n      }\n      fabric.util.addClass(this.upperCanvasEl, 'upper-canvas ' + lowerCanvasClass);\n\n      this.wrapperEl.appendChild(this.upperCanvasEl);\n\n      this._copyCanvasStyle(this.lowerCanvasEl, this.upperCanvasEl);\n      this._applyCanvasStyle(this.upperCanvasEl);\n      this.contextTop = this.upperCanvasEl.getContext('2d');\n    },\n\n    /**\n     * @private\n     */\n    _createCacheCanvas: function () {\n      this.cacheCanvasEl = this._createCanvasElement();\n      this.cacheCanvasEl.setAttribute('width', this.width);\n      this.cacheCanvasEl.setAttribute('height', this.height);\n      this.contextCache = this.cacheCanvasEl.getContext('2d');\n    },\n\n    /**\n     * @private\n     */\n    _initWrapperElement: function () {\n      this.wrapperEl = fabric.util.wrapElement(this.lowerCanvasEl, 'div', {\n        'class': this.containerClass\n      });\n      fabric.util.setStyle(this.wrapperEl, {\n        width: this.width + 'px',\n        height: this.height + 'px',\n        position: 'relative'\n      });\n      fabric.util.makeElementUnselectable(this.wrapperEl);\n    },\n\n    /**\n     * @private\n     * @param {HTMLElement} element canvas element to apply styles on\n     */\n    _applyCanvasStyle: function (element) {\n      var width = this.width || element.width,\n          height = this.height || element.height;\n\n      fabric.util.setStyle(element, {\n        position: 'absolute',\n        width: width + 'px',\n        height: height + 'px',\n        left: 0,\n        top: 0,\n        'touch-action': 'none'\n      });\n      element.width = width;\n      element.height = height;\n      fabric.util.makeElementUnselectable(element);\n    },\n\n    /**\n     * Copy the entire inline style from one element (fromEl) to another (toEl)\n     * @private\n     * @param {Element} fromEl Element style is copied from\n     * @param {Element} toEl Element copied style is applied to\n     */\n    _copyCanvasStyle: function (fromEl, toEl) {\n      toEl.style.cssText = fromEl.style.cssText;\n    },\n\n    /**\n     * Returns context of canvas where object selection is drawn\n     * @return {CanvasRenderingContext2D}\n     */\n    getSelectionContext: function() {\n      return this.contextTop;\n    },\n\n    /**\n     * Returns &lt;canvas> element on which object selection is drawn\n     * @return {HTMLCanvasElement}\n     */\n    getSelectionElement: function () {\n      return this.upperCanvasEl;\n    },\n\n    /**\n     * Returns currently active object\n     * @return {fabric.Object} active object\n     */\n    getActiveObject: function () {\n      return this._activeObject;\n    },\n\n    /**\n     * Returns an array with the current selected objects\n     * @return {fabric.Object} active object\n     */\n    getActiveObjects: function () {\n      var active = this._activeObject;\n      if (active) {\n        if (active.type === 'activeSelection' && active._objects) {\n          return active._objects.slice(0);\n        }\n        else {\n          return [active];\n        }\n      }\n      return [];\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was removed\n     */\n    _onObjectRemoved: function(obj) {\n      // removing active object should fire \"selection:cleared\" events\n      if (obj === this._activeObject) {\n        this.fire('before:selection:cleared', { target: obj });\n        this._discardActiveObject();\n        this.fire('selection:cleared', { target: obj });\n        obj.fire('deselected');\n      }\n      if (this._hoveredTarget === obj) {\n        this._hoveredTarget = null;\n      }\n      this.callSuper('_onObjectRemoved', obj);\n    },\n\n    /**\n     * @private\n     * Compares the old activeObject with the current one and fires correct events\n     * @param {fabric.Object} obj old activeObject\n     */\n    _fireSelectionEvents: function(oldObjects, e) {\n      var somethingChanged = false, objects = this.getActiveObjects(),\n          added = [], removed = [], opt = { e: e };\n      oldObjects.forEach(function(oldObject) {\n        if (objects.indexOf(oldObject) === -1) {\n          somethingChanged = true;\n          oldObject.fire('deselected', opt);\n          removed.push(oldObject);\n        }\n      });\n      objects.forEach(function(object) {\n        if (oldObjects.indexOf(object) === -1) {\n          somethingChanged = true;\n          object.fire('selected', opt);\n          added.push(object);\n        }\n      });\n      if (oldObjects.length > 0 && objects.length > 0) {\n        opt.selected = added;\n        opt.deselected = removed;\n        // added for backward compatibility\n        opt.updated = added[0] || removed[0];\n        opt.target = this._activeObject;\n        somethingChanged && this.fire('selection:updated', opt);\n      }\n      else if (objects.length > 0) {\n        // deprecated event\n        if (objects.length === 1) {\n          opt.target = added[0];\n          this.fire('object:selected', opt);\n        }\n        opt.selected = added;\n        // added for backward compatibility\n        opt.target = this._activeObject;\n        this.fire('selection:created', opt);\n      }\n      else if (oldObjects.length > 0) {\n        opt.deselected = removed;\n        this.fire('selection:cleared', opt);\n      }\n    },\n\n    /**\n     * Sets given object as the only active object on canvas\n     * @param {fabric.Object} object Object to set as an active one\n     * @param {Event} [e] Event (passed along when firing \"object:selected\")\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    setActiveObject: function (object, e) {\n      var currentActives = this.getActiveObjects();\n      this._setActiveObject(object, e);\n      this._fireSelectionEvents(currentActives, e);\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {Object} object to set as active\n     * @param {Event} [e] Event (passed along when firing \"object:selected\")\n     * @return {Boolean} true if the selection happened\n     */\n    _setActiveObject: function(object, e) {\n      if (this._activeObject === object) {\n        return false;\n      }\n      if (!this._discardActiveObject(e, object)) {\n        return false;\n      }\n      if (object.onSelect({ e: e })) {\n        return false;\n      }\n      this._activeObject = object;\n      return true;\n    },\n\n    /**\n     * @private\n     */\n    _discardActiveObject: function(e, object) {\n      var obj = this._activeObject;\n      if (obj) {\n        // onDeselect return TRUE to cancel selection;\n        if (obj.onDeselect({ e: e, object: object })) {\n          return false;\n        }\n        this._activeObject = null;\n      }\n      return true;\n    },\n\n    /**\n     * Discards currently active object and fire events. If the function is called by fabric\n     * as a consequence of a mouse event, the event is passed as a parameter and\n     * sent to the fire function for the custom events. When used as a method the\n     * e param does not have any application.\n     * @param {event} e\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    discardActiveObject: function (e) {\n      var currentActives = this.getActiveObjects();\n      if (currentActives.length) {\n        this.fire('before:selection:cleared', { target: currentActives[0], e: e });\n      }\n      this._discardActiveObject(e);\n      this._fireSelectionEvents(currentActives, e);\n      return this;\n    },\n\n    /**\n     * Clears a canvas element and removes all event listeners\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    dispose: function () {\n      var wrapper = this.wrapperEl;\n      this.removeListeners();\n      wrapper.removeChild(this.upperCanvasEl);\n      wrapper.removeChild(this.lowerCanvasEl);\n      delete this.upperCanvasEl;\n      if (wrapper.parentNode) {\n        wrapper.parentNode.replaceChild(this.lowerCanvasEl, this.wrapperEl);\n      }\n      delete this.wrapperEl;\n      fabric.StaticCanvas.prototype.dispose.call(this);\n      return this;\n    },\n\n    /**\n     * Clears all contexts (background, main, top) of an instance\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clear: function () {\n      // this.discardActiveGroup();\n      this.discardActiveObject();\n      this.clearContext(this.contextTop);\n      return this.callSuper('clear');\n    },\n\n    /**\n     * Draws objects' controls (borders/controls)\n     * @param {CanvasRenderingContext2D} ctx Context to render controls on\n     */\n    drawControls: function(ctx) {\n      var activeObject = this._activeObject;\n\n      if (activeObject) {\n        activeObject._renderControls(ctx);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _toObject: function(instance, methodName, propertiesToInclude) {\n      //If the object is part of the current selection group, it should\n      //be transformed appropriately\n      //i.e. it should be serialised as it would appear if the selection group\n      //were to be destroyed.\n      var originalProperties = this._realizeGroupTransformOnObject(instance),\n          object = this.callSuper('_toObject', instance, methodName, propertiesToInclude);\n      //Undo the damage we did by changing all of its properties\n      this._unwindGroupTransformOnObject(instance, originalProperties);\n      return object;\n    },\n\n    /**\n     * Realises an object's group transformation on it\n     * @private\n     * @param {fabric.Object} [instance] the object to transform (gets mutated)\n     * @returns the original values of instance which were changed\n     */\n    _realizeGroupTransformOnObject: function(instance) {\n      if (instance.group && instance.group.type === 'activeSelection' && this._activeObject === instance.group) {\n        var layoutProps = ['angle', 'flipX', 'flipY', 'left', 'scaleX', 'scaleY', 'skewX', 'skewY', 'top'];\n        //Copy all the positionally relevant properties across now\n        var originalValues = {};\n        layoutProps.forEach(function(prop) {\n          originalValues[prop] = instance[prop];\n        });\n        this._activeObject.realizeTransform(instance);\n        return originalValues;\n      }\n      else {\n        return null;\n      }\n    },\n\n    /**\n     * Restores the changed properties of instance\n     * @private\n     * @param {fabric.Object} [instance] the object to un-transform (gets mutated)\n     * @param {Object} [originalValues] the original values of instance, as returned by _realizeGroupTransformOnObject\n     */\n    _unwindGroupTransformOnObject: function(instance, originalValues) {\n      if (originalValues) {\n        instance.set(originalValues);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObject: function(markup, instance, reviver) {\n      //If the object is in a selection group, simulate what would happen to that\n      //object when the group is deselected\n      var originalProperties = this._realizeGroupTransformOnObject(instance);\n      this.callSuper('_setSVGObject', markup, instance, reviver);\n      this._unwindGroupTransformOnObject(instance, originalProperties);\n    },\n  });\n\n  // copying static properties manually to work around Opera's bug,\n  // where \"prototype\" property is enumerable and overrides existing prototype\n  for (var prop in fabric.StaticCanvas) {\n    if (prop !== 'prototype') {\n      fabric.Canvas[prop] = fabric.StaticCanvas[prop];\n    }\n  }\n\n  if (fabric.isTouchSupported) {\n    /** @ignore */\n    fabric.Canvas.prototype._setCursorFromEvent = function() { };\n  }\n})();\n\n\n(function() {\n\n  var cursorOffset = {\n        mt: 0, // n\n        tr: 1, // ne\n        mr: 2, // e\n        br: 3, // se\n        mb: 4, // s\n        bl: 5, // sw\n        ml: 6, // w\n        tl: 7 // nw\n      },\n      addListener = fabric.util.addListener,\n      removeListener = fabric.util.removeListener,\n      RIGHT_CLICK = 3, MIDDLE_CLICK = 2, LEFT_CLICK = 1;\n\n  function checkClick(e, value) {\n    return 'which' in e ? e.which === value : e.button === value - 1;\n  }\n\n  fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * Map of cursor style values for each of the object controls\n     * @private\n     */\n    cursorMap: [\n      'n-resize',\n      'ne-resize',\n      'e-resize',\n      'se-resize',\n      's-resize',\n      'sw-resize',\n      'w-resize',\n      'nw-resize'\n    ],\n\n    /**\n     * Adds mouse listeners to canvas\n     * @private\n     */\n    _initEventListeners: function () {\n      // in case we initialized the class twice. This should not happen normally\n      // but in some kind of applications where the canvas element may be changed\n      // this is a workaround to having double listeners.\n      this.removeListeners();\n      this._bindEvents();\n\n      addListener(fabric.window, 'resize', this._onResize);\n\n      // mouse events\n      addListener(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n      addListener(this.upperCanvasEl, 'dblclick', this._onDoubleClick);\n      addListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n      addListener(this.upperCanvasEl, 'mouseout', this._onMouseOut);\n      addListener(this.upperCanvasEl, 'mouseenter', this._onMouseEnter);\n      addListener(this.upperCanvasEl, 'wheel', this._onMouseWheel);\n      addListener(this.upperCanvasEl, 'contextmenu', this._onContextMenu);\n\n      // touch events\n      addListener(this.upperCanvasEl, 'touchstart', this._onMouseDown, { passive: false });\n      addListener(this.upperCanvasEl, 'touchmove', this._onMouseMove, { passive: false });\n\n      if (typeof eventjs !== 'undefined' && 'add' in eventjs) {\n        eventjs.add(this.upperCanvasEl, 'gesture', this._onGesture);\n        eventjs.add(this.upperCanvasEl, 'drag', this._onDrag);\n        eventjs.add(this.upperCanvasEl, 'orientation', this._onOrientationChange);\n        eventjs.add(this.upperCanvasEl, 'shake', this._onShake);\n        eventjs.add(this.upperCanvasEl, 'longpress', this._onLongPress);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _bindEvents: function() {\n      if (this.eventsBinded) {\n        // for any reason we pass here twice we do not want to bind events twice.\n        return;\n      }\n      this._onMouseDown = this._onMouseDown.bind(this);\n      this._onMouseMove = this._onMouseMove.bind(this);\n      this._onMouseUp = this._onMouseUp.bind(this);\n      this._onResize = this._onResize.bind(this);\n      this._onGesture = this._onGesture.bind(this);\n      this._onDrag = this._onDrag.bind(this);\n      this._onShake = this._onShake.bind(this);\n      this._onLongPress = this._onLongPress.bind(this);\n      this._onOrientationChange = this._onOrientationChange.bind(this);\n      this._onMouseWheel = this._onMouseWheel.bind(this);\n      this._onMouseOut = this._onMouseOut.bind(this);\n      this._onMouseEnter = this._onMouseEnter.bind(this);\n      this._onContextMenu = this._onContextMenu.bind(this);\n      this._onDoubleClick = this._onDoubleClick.bind(this);\n      this.eventsBinded = true;\n    },\n\n    /**\n     * Removes all event listeners\n     */\n    removeListeners: function() {\n      removeListener(fabric.window, 'resize', this._onResize);\n\n      removeListener(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n      removeListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n      removeListener(this.upperCanvasEl, 'mouseout', this._onMouseOut);\n      removeListener(this.upperCanvasEl, 'mouseenter', this._onMouseEnter);\n      removeListener(this.upperCanvasEl, 'wheel', this._onMouseWheel);\n      removeListener(this.upperCanvasEl, 'contextmenu', this._onContextMenu);\n      removeListener(this.upperCanvasEl, 'doubleclick', this._onDoubleClick);\n      removeListener(this.upperCanvasEl, 'touchstart', this._onMouseDown);\n      removeListener(this.upperCanvasEl, 'touchmove', this._onMouseMove);\n\n      if (typeof eventjs !== 'undefined' && 'remove' in eventjs) {\n        eventjs.remove(this.upperCanvasEl, 'gesture', this._onGesture);\n        eventjs.remove(this.upperCanvasEl, 'drag', this._onDrag);\n        eventjs.remove(this.upperCanvasEl, 'orientation', this._onOrientationChange);\n        eventjs.remove(this.upperCanvasEl, 'shake', this._onShake);\n        eventjs.remove(this.upperCanvasEl, 'longpress', this._onLongPress);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js gesture\n     * @param {Event} [self] Inner Event object\n     */\n    _onGesture: function(e, self) {\n      this.__onTransformGesture && this.__onTransformGesture(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js drag\n     * @param {Event} [self] Inner Event object\n     */\n    _onDrag: function(e, self) {\n      this.__onDrag && this.__onDrag(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on wheel event\n     */\n    _onMouseWheel: function(e) {\n      this.__onMouseWheel(e);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseOut: function(e) {\n      var target = this._hoveredTarget;\n      this.fire('mouse:out', { target: target, e: e });\n      this._hoveredTarget = null;\n      target && target.fire('mouseout', { e: e });\n      if (this._iTextInstances) {\n        this._iTextInstances.forEach(function(obj) {\n          if (obj.isEditing) {\n            obj.hiddenTextarea.focus();\n          }\n        });\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseenter\n     */\n    _onMouseEnter: function(e) {\n      if (!this.findTarget(e)) {\n        this.fire('mouse:over', { target: null, e: e });\n        this._hoveredTarget = null;\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js orientation change\n     * @param {Event} [self] Inner Event object\n     */\n    _onOrientationChange: function(e, self) {\n      this.__onOrientationChange && this.__onOrientationChange(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     * @param {Event} [self] Inner Event object\n     */\n    _onShake: function(e, self) {\n      this.__onShake && this.__onShake(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     * @param {Event} [self] Inner Event object\n     */\n    _onLongPress: function(e, self) {\n      this.__onLongPress && this.__onLongPress(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onContextMenu: function (e) {\n      if (this.stopContextMenu) {\n        e.stopPropagation();\n        e.preventDefault();\n      }\n      return false;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onDoubleClick: function (e) {\n      this._handleEvent(e, 'dblclick');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseDown: function (e) {\n      this.__onMouseDown(e);\n      addListener(fabric.document, 'touchend', this._onMouseUp, { passive: false });\n      addListener(fabric.document, 'touchmove', this._onMouseMove, { passive: false });\n\n      removeListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n      removeListener(this.upperCanvasEl, 'touchmove', this._onMouseMove);\n\n      if (e.type === 'touchstart') {\n        // Unbind mousedown to prevent double triggers from touch devices\n        removeListener(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n      }\n      else {\n        addListener(fabric.document, 'mouseup', this._onMouseUp);\n        addListener(fabric.document, 'mousemove', this._onMouseMove);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    _onMouseUp: function (e) {\n      this.__onMouseUp(e);\n\n      removeListener(fabric.document, 'mouseup', this._onMouseUp);\n      removeListener(fabric.document, 'touchend', this._onMouseUp);\n\n      removeListener(fabric.document, 'mousemove', this._onMouseMove);\n      removeListener(fabric.document, 'touchmove', this._onMouseMove);\n\n      addListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n      addListener(this.upperCanvasEl, 'touchmove', this._onMouseMove, { passive: false });\n\n      if (e.type === 'touchend') {\n        // Wait 400ms before rebinding mousedown to prevent double triggers\n        // from touch devices\n        var _this = this;\n        setTimeout(function() {\n          addListener(_this.upperCanvasEl, 'mousedown', _this._onMouseDown);\n        }, 400);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    _onMouseMove: function (e) {\n      !this.allowTouchScrolling && e.preventDefault && e.preventDefault();\n      this.__onMouseMove(e);\n    },\n\n    /**\n     * @private\n     */\n    _onResize: function () {\n      this.calcOffset();\n    },\n\n    /**\n     * Decides whether the canvas should be redrawn in mouseup and mousedown events.\n     * @private\n     * @param {Object} target\n     * @param {Object} pointer\n     */\n    _shouldRender: function(target, pointer) {\n      var activeObject = this._activeObject;\n\n      if (activeObject && activeObject.isEditing && target === activeObject) {\n        // if we mouse up/down over a editing textbox a cursor change,\n        // there is no need to re render\n        return false;\n      }\n      return !!(\n        (target && (\n          target.isMoving ||\n          target !== activeObject))\n        ||\n        (!target && !!activeObject)\n        ||\n        (!target && !activeObject && !this._groupSelector)\n        ||\n        (pointer &&\n          this._previousPointer &&\n          this.selection && (\n            pointer.x !== this._previousPointer.x ||\n          pointer.y !== this._previousPointer.y))\n      );\n    },\n\n    /**\n     * Method that defines the actions when mouse is released on canvas.\n     * The method resets the currentTransform parameters, store the image corner\n     * position in the image object and render the canvas on top.\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    __onMouseUp: function (e) {\n\n      var target, searchTarget = true, transform = this._currentTransform,\n          groupSelector = this._groupSelector,\n          isClick = (!groupSelector || (groupSelector.left === 0 && groupSelector.top === 0));\n      // if right/middle click just fire events and return\n      // target undefined will make the _handleEvent search the target\n      if (checkClick(e, RIGHT_CLICK)) {\n        if (this.fireRightClick) {\n          this._handleEvent(e, 'up', target, RIGHT_CLICK, isClick);\n        }\n        return;\n      }\n\n      if (checkClick(e, MIDDLE_CLICK)) {\n        if (this.fireMiddleClick) {\n          this._handleEvent(e, 'up', target, MIDDLE_CLICK, isClick);\n        }\n        return;\n      }\n\n      if (this.isDrawingMode && this._isCurrentlyDrawing) {\n        this._onMouseUpInDrawingMode(e);\n        return;\n      }\n\n      if (transform) {\n        this._finalizeCurrentTransform(e);\n        searchTarget = !transform.actionPerformed;\n      }\n\n      target = searchTarget ? this.findTarget(e, true) : transform.target;\n\n      var shouldRender = this._shouldRender(target, this.getPointer(e));\n\n      if (target || !isClick) {\n        this._maybeGroupObjects(e);\n      }\n      else {\n        // those are done by default on mouse up\n        // by _maybeGroupObjects, we are skipping it in case of no target find\n        this._groupSelector = null;\n        this._currentTransform = null;\n      }\n\n      if (target) {\n        target.isMoving = false;\n      }\n      this._setCursorFromEvent(e, target);\n      this._handleEvent(e, 'up', target ? target : null, LEFT_CLICK, isClick);\n      target && (target.__corner = 0);\n      shouldRender && this.requestRenderAll();\n    },\n\n    /**\n     * @private\n     * Handle event firing for target and subtargets\n     * @param {Event} e event from mouse\n     * @param {String} eventType event to fire (up, down or move)\n     * @param {fabric.Object} targetObj receiving event\n     * @param {Number} [button] button used in the event 1 = left, 2 = middle, 3 = right\n     * @param {Boolean} isClick for left button only, indicates that the mouse up happened without move.\n     */\n    _handleEvent: function(e, eventType, targetObj, button, isClick) {\n      var target = typeof targetObj === 'undefined' ? this.findTarget(e) : targetObj,\n          targets = this.targets || [],\n          options = {\n            e: e,\n            target: target,\n            subTargets: targets,\n            button: button || LEFT_CLICK,\n            isClick: isClick || false\n          };\n      this.fire('mouse:' + eventType, options);\n      target && target.fire('mouse' + eventType, options);\n      for (var i = 0; i < targets.length; i++) {\n        targets[i].fire('mouse' + eventType, options);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e send the mouse event that generate the finalize down, so it can be used in the event\n     */\n    _finalizeCurrentTransform: function(e) {\n\n      var transform = this._currentTransform,\n          target = transform.target;\n\n      if (target._scaling) {\n        target._scaling = false;\n      }\n\n      target.setCoords();\n      this._restoreOriginXY(target);\n\n      if (transform.actionPerformed || (this.stateful && target.hasStateChanged())) {\n        this.fire('object:modified', { target: target, e: e });\n        target.fire('modified', { e: e });\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} target Object to restore\n     */\n    _restoreOriginXY: function(target) {\n      if (this._previousOriginX && this._previousOriginY) {\n\n        var originPoint = target.translateToOriginPoint(\n          target.getCenterPoint(),\n          this._previousOriginX,\n          this._previousOriginY);\n\n        target.originX = this._previousOriginX;\n        target.originY = this._previousOriginY;\n\n        target.left = originPoint.x;\n        target.top = originPoint.y;\n\n        this._previousOriginX = null;\n        this._previousOriginY = null;\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseDownInDrawingMode: function(e) {\n      this._isCurrentlyDrawing = true;\n      if (this.getActiveObject()) {\n        this.discardActiveObject(e).requestRenderAll();\n      }\n      if (this.clipTo) {\n        fabric.util.clipContext(this, this.contextTop);\n      }\n      var pointer = this.getPointer(e);\n      this.freeDrawingBrush.onMouseDown(pointer);\n      this._handleEvent(e, 'down');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    _onMouseMoveInDrawingMode: function(e) {\n      if (this._isCurrentlyDrawing) {\n        var pointer = this.getPointer(e);\n        this.freeDrawingBrush.onMouseMove(pointer);\n      }\n      this.setCursor(this.freeDrawingCursor);\n      this._handleEvent(e, 'move');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    _onMouseUpInDrawingMode: function(e) {\n      this._isCurrentlyDrawing = false;\n      if (this.clipTo) {\n        this.contextTop.restore();\n      }\n      this.freeDrawingBrush.onMouseUp();\n      this._handleEvent(e, 'up');\n    },\n\n    /**\n     * Method that defines the actions when mouse is clicked on canvas.\n     * The method inits the currentTransform parameters and renders all the\n     * canvas so the current image can be placed on the top canvas and the rest\n     * in on the container one.\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    __onMouseDown: function (e) {\n\n      var target = this.findTarget(e) || null;\n\n      // if right click just fire events\n      if (checkClick(e, RIGHT_CLICK)) {\n        if (this.fireRightClick) {\n          this._handleEvent(e, 'down', target, RIGHT_CLICK);\n        }\n        return;\n      }\n\n      if (checkClick(e, MIDDLE_CLICK)) {\n        if (this.fireMiddleClick) {\n          this._handleEvent(e, 'down', target, MIDDLE_CLICK);\n        }\n        return;\n      }\n\n      if (this.isDrawingMode) {\n        this._onMouseDownInDrawingMode(e);\n        return;\n      }\n\n      // ignore if some object is being transformed at this moment\n      if (this._currentTransform) {\n        return;\n      }\n\n      // save pointer for check in __onMouseUp event\n      var pointer = this.getPointer(e, true);\n      this._previousPointer = pointer;\n      var shouldRender = this._shouldRender(target, pointer),\n          shouldGroup = this._shouldGroup(e, target);\n      if (this._shouldClearSelection(e, target)) {\n        this.discardActiveObject(e);\n      }\n      else if (shouldGroup) {\n        this._handleGrouping(e, target);\n        target = this._activeObject;\n      }\n\n      if (this.selection && (!target ||\n        (!target.selectable && !target.isEditing && target !== this._activeObject))) {\n        this._groupSelector = {\n          ex: pointer.x,\n          ey: pointer.y,\n          top: 0,\n          left: 0\n        };\n      }\n\n      if (target) {\n        if (target.selectable) {\n          this.setActiveObject(target, e);\n        }\n        if (target === this._activeObject && (target.__corner || !shouldGroup)) {\n          this._beforeTransform(e, target);\n          this._setupCurrentTransform(e, target);\n        }\n      }\n      this._handleEvent(e, 'down', target);\n      // we must renderAll so that we update the visuals\n      shouldRender && this.requestRenderAll();\n    },\n\n    /**\n     * @private\n     */\n    _beforeTransform: function(e, target) {\n      this.stateful && target.saveState();\n\n      // determine if it's a drag or rotate case\n      if (target._findTargetCorner(this.getPointer(e))) {\n        this.onBeforeScaleRotate(target);\n      }\n\n    },\n\n    /**\n     * @private\n     * @param {Object} target Object for that origin is set to center\n     */\n    _setOriginToCenter: function(target) {\n      this._previousOriginX = this._currentTransform.target.originX;\n      this._previousOriginY = this._currentTransform.target.originY;\n\n      var center = target.getCenterPoint();\n\n      target.originX = 'center';\n      target.originY = 'center';\n\n      target.left = center.x;\n      target.top = center.y;\n\n      this._currentTransform.left = target.left;\n      this._currentTransform.top = target.top;\n    },\n\n    /**\n     * @private\n     * @param {Object} target Object for that center is set to origin\n     */\n    _setCenterToOrigin: function(target) {\n      var originPoint = target.translateToOriginPoint(\n        target.getCenterPoint(),\n        this._previousOriginX,\n        this._previousOriginY);\n\n      target.originX = this._previousOriginX;\n      target.originY = this._previousOriginY;\n\n      target.left = originPoint.x;\n      target.top = originPoint.y;\n\n      this._previousOriginX = null;\n      this._previousOriginY = null;\n    },\n\n    /**\n     * Method that defines the actions when mouse is hovering the canvas.\n     * The currentTransform parameter will definde whether the user is rotating/scaling/translating\n     * an image or neither of them (only hovering). A group selection is also possible and would cancel\n     * all any other type of action.\n     * In case of an image transformation only the top canvas will be rendered.\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    __onMouseMove: function (e) {\n\n      var target, pointer;\n\n      if (this.isDrawingMode) {\n        this._onMouseMoveInDrawingMode(e);\n        return;\n      }\n      if (typeof e.touches !== 'undefined' && e.touches.length > 1) {\n        return;\n      }\n\n      var groupSelector = this._groupSelector;\n\n      // We initially clicked in an empty area, so we draw a box for multiple selection\n      if (groupSelector) {\n        pointer = this.getPointer(e, true);\n\n        groupSelector.left = pointer.x - groupSelector.ex;\n        groupSelector.top = pointer.y - groupSelector.ey;\n\n        this.renderTop();\n      }\n      else if (!this._currentTransform) {\n        target = this.findTarget(e) || null;\n        this._setCursorFromEvent(e, target);\n        this._fireOverOutEvents(target, e);\n      }\n      else {\n        this._transformObject(e);\n      }\n      this._handleEvent(e, 'move', this._currentTransform ? null : target);\n    },\n\n    /**\n     * @private\n     */\n    _fireOverOutEvents: function(target, e) {\n      var overOpt, outOpt, hoveredTarget = this._hoveredTarget;\n      if (hoveredTarget !== target) {\n        overOpt = { e: e, target: target, previousTarget: this._hoveredTarget };\n        outOpt = { e: e, target: this._hoveredTarget, nextTarget: target };\n        this._hoveredTarget = target;\n      }\n      if (target) {\n        if (hoveredTarget !== target) {\n          if (hoveredTarget) {\n            this.fire('mouse:out', outOpt);\n            hoveredTarget.fire('mouseout', outOpt);\n          }\n          this.fire('mouse:over', overOpt);\n          target.fire('mouseover', overOpt);\n        }\n      }\n      else if (hoveredTarget) {\n        this.fire('mouse:out', outOpt);\n        hoveredTarget.fire('mouseout', outOpt);\n      }\n    },\n\n    /**\n     * Method that defines actions when an Event Mouse Wheel\n     * @param {Event} e Event object fired on mouseup\n     */\n    __onMouseWheel: function(e) {\n      this._handleEvent(e, 'wheel');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event fired on mousemove\n     */\n    _transformObject: function(e) {\n      var pointer = this.getPointer(e),\n          transform = this._currentTransform;\n\n      transform.reset = false;\n      transform.target.isMoving = true;\n      transform.shiftKey = e.shiftKey;\n      transform.altKey = e[this.centeredKey];\n\n      this._beforeScaleTransform(e, transform);\n      this._performTransformAction(e, transform, pointer);\n\n      transform.actionPerformed && this.requestRenderAll();\n    },\n\n    /**\n     * @private\n     */\n    _performTransformAction: function(e, transform, pointer) {\n      var x = pointer.x,\n          y = pointer.y,\n          target = transform.target,\n          action = transform.action,\n          actionPerformed = false;\n\n      if (action === 'rotate') {\n        (actionPerformed = this._rotateObject(x, y)) && this._fire('rotating', target, e);\n      }\n      else if (action === 'scale') {\n        (actionPerformed = this._onScale(e, transform, x, y)) && this._fire('scaling', target, e);\n      }\n      else if (action === 'scaleX') {\n        (actionPerformed = this._scaleObject(x, y, 'x')) && this._fire('scaling', target, e);\n      }\n      else if (action === 'scaleY') {\n        (actionPerformed = this._scaleObject(x, y, 'y')) && this._fire('scaling', target, e);\n      }\n      else if (action === 'skewX') {\n        (actionPerformed = this._skewObject(x, y, 'x')) && this._fire('skewing', target, e);\n      }\n      else if (action === 'skewY') {\n        (actionPerformed = this._skewObject(x, y, 'y')) && this._fire('skewing', target, e);\n      }\n      else {\n        actionPerformed = this._translateObject(x, y);\n        if (actionPerformed) {\n          this._fire('moving', target, e);\n          this.setCursor(target.moveCursor || this.moveCursor);\n        }\n      }\n      transform.actionPerformed = transform.actionPerformed || actionPerformed;\n    },\n\n    /**\n     * @private\n     */\n    _fire: function(eventName, target, e) {\n      this.fire('object:' + eventName, { target: target, e: e });\n      target.fire(eventName, { e: e });\n    },\n\n    /**\n     * @private\n     */\n    _beforeScaleTransform: function(e, transform) {\n      if (transform.action === 'scale' || transform.action === 'scaleX' || transform.action === 'scaleY') {\n        var centerTransform = this._shouldCenterTransform(transform.target);\n\n        // Switch from a normal resize to center-based\n        if ((centerTransform && (transform.originX !== 'center' || transform.originY !== 'center')) ||\n           // Switch from center-based resize to normal one\n           (!centerTransform && transform.originX === 'center' && transform.originY === 'center')\n        ) {\n          this._resetCurrentTransform();\n          transform.reset = true;\n        }\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {Object} transform current tranform\n     * @param {Number} x mouse position x from origin\n     * @param {Number} y mouse poistion y from origin\n     * @return {Boolean} true if the scaling occurred\n     */\n    _onScale: function(e, transform, x, y) {\n      if (this._isUniscalePossible(e, transform.target)) {\n        transform.currentAction = 'scale';\n        return this._scaleObject(x, y);\n      }\n      else {\n        // Switch from a normal resize to proportional\n        if (!transform.reset && transform.currentAction === 'scale') {\n          this._resetCurrentTransform();\n        }\n\n        transform.currentAction = 'scaleEqually';\n        return this._scaleObject(x, y, 'equally');\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target current target\n     * @return {Boolean} true if unproportional scaling is possible\n     */\n    _isUniscalePossible: function(e, target) {\n      return (e[this.uniScaleKey] || this.uniScaleTransform) && !target.get('lockUniScaling');\n    },\n\n    /**\n     * Sets the cursor depending on where the canvas is being hovered.\n     * Note: very buggy in Opera\n     * @param {Event} e Event object\n     * @param {Object} target Object that the mouse is hovering, if so.\n     */\n    _setCursorFromEvent: function (e, target) {\n      if (!target) {\n        this.setCursor(this.defaultCursor);\n        return false;\n      }\n\n      var hoverCursor = target.hoverCursor || this.hoverCursor,\n          activeSelection = this._activeObject && this._activeObject.type === 'activeSelection' ?\n            this._activeObject : null,\n          // only show proper corner when group selection is not active\n          corner = (!activeSelection || !activeSelection.contains(target))\n                    && target._findTargetCorner(this.getPointer(e, true));\n\n      if (!corner) {\n        this.setCursor(hoverCursor);\n      }\n      else {\n        this.setCursor(this.getCornerCursor(corner, target, e));\n      }\n    },\n\n    /**\n     * @private\n     */\n    getCornerCursor: function(corner, target, e) {\n      if (this.actionIsDisabled(corner, target, e)) {\n        return this.notAllowedCursor;\n      }\n      else if (corner in cursorOffset) {\n        return this._getRotatedCornerCursor(corner, target, e);\n      }\n      else if (corner === 'mtr' && target.hasRotatingPoint) {\n        return this.rotationCursor;\n      }\n      else {\n        return this.defaultCursor;\n      }\n    },\n\n    actionIsDisabled: function(corner, target, e) {\n      if (corner === 'mt' || corner === 'mb') {\n        return e[this.altActionKey] ? target.lockSkewingX : target.lockScalingY;\n      }\n      else if (corner === 'ml' || corner === 'mr') {\n        return e[this.altActionKey] ? target.lockSkewingY : target.lockScalingX;\n      }\n      else if (corner === 'mtr') {\n        return target.lockRotation;\n      }\n      else {\n        return this._isUniscalePossible(e, target) ?\n          target.lockScalingX && target.lockScalingY : target.lockScalingX || target.lockScalingY;\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getRotatedCornerCursor: function(corner, target, e) {\n      var n = Math.round((target.angle % 360) / 45);\n\n      if (n < 0) {\n        n += 8; // full circle ahead\n      }\n      n += cursorOffset[corner];\n      if (e[this.altActionKey] && cursorOffset[corner] % 2 === 0) {\n        //if we are holding shift and we are on a mx corner...\n        n += 2;\n      }\n      // normalize n to be from 0 to 7\n      n %= 8;\n\n      return this.cursorMap[n];\n    }\n  });\n})();\n\n\n(function() {\n\n  var min = Math.min,\n      max = Math.max;\n\n  fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     * @return {Boolean}\n     */\n    _shouldGroup: function(e, target) {\n      var activeObject = this._activeObject;\n\n      return activeObject && this._isSelectionKeyPressed(e) && target && target.selectable && this.selection &&\n            (activeObject !== target || activeObject.type === 'activeSelection');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _handleGrouping: function (e, target) {\n      var activeObject = this._activeObject;\n      if (activeObject.__corner) {\n        return;\n      }\n      if (target === activeObject) {\n        // if it's a group, find target again, using activeGroup objects\n        target = this.findTarget(e, true);\n        // if even object is not found or we are on activeObjectCorner, bail out\n        if (!target) {\n          return;\n        }\n      }\n      if (activeObject && activeObject.type === 'activeSelection') {\n        this._updateActiveSelection(target, e);\n      }\n      else {\n        this._createActiveSelection(target, e);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateActiveSelection: function(target, e) {\n      var activeSelection = this._activeObject,\n          currentActiveObjects = activeSelection._objects.slice(0);\n      if (activeSelection.contains(target)) {\n        activeSelection.removeWithUpdate(target);\n        this._hoveredTarget = target;\n        if (activeSelection.size() === 1) {\n          // activate last remaining object\n          this._setActiveObject(activeSelection.item(0), e);\n        }\n      }\n      else {\n        activeSelection.addWithUpdate(target);\n        this._hoveredTarget = activeSelection;\n      }\n      this._fireSelectionEvents(currentActiveObjects, e);\n    },\n\n    /**\n     * @private\n     */\n    _createActiveSelection: function(target, e) {\n      var currentActives = this.getActiveObjects(), group = this._createGroup(target);\n      this._hoveredTarget = group;\n      this._setActiveObject(group, e);\n      this._fireSelectionEvents(currentActives, e);\n    },\n\n    /**\n     * @private\n     * @param {Object} target\n     */\n    _createGroup: function(target) {\n      var objects = this.getObjects(),\n          isActiveLower = objects.indexOf(this._activeObject) < objects.indexOf(target),\n          groupObjects = isActiveLower\n            ? [this._activeObject, target]\n            : [target, this._activeObject];\n      this._activeObject.isEditing && this._activeObject.exitEditing();\n      return new fabric.ActiveSelection(groupObjects, {\n        canvas: this\n      });\n    },\n\n    /**\n     * @private\n     * @param {Event} e mouse event\n     */\n    _groupSelectedObjects: function (e) {\n\n      var group = this._collectObjects(),\n          aGroup;\n\n      // do not create group for 1 element only\n      if (group.length === 1) {\n        this.setActiveObject(group[0], e);\n      }\n      else if (group.length > 1) {\n        aGroup = new fabric.ActiveSelection(group.reverse(), {\n          canvas: this\n        });\n        this.setActiveObject(aGroup, e);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _collectObjects: function() {\n      var group = [],\n          currentObject,\n          x1 = this._groupSelector.ex,\n          y1 = this._groupSelector.ey,\n          x2 = x1 + this._groupSelector.left,\n          y2 = y1 + this._groupSelector.top,\n          selectionX1Y1 = new fabric.Point(min(x1, x2), min(y1, y2)),\n          selectionX2Y2 = new fabric.Point(max(x1, x2), max(y1, y2)),\n          allowIntersect = !this.selectionFullyContained,\n          isClick = x1 === x2 && y1 === y2;\n      // we iterate reverse order to collect top first in case of click.\n      for (var i = this._objects.length; i--; ) {\n        currentObject = this._objects[i];\n\n        if (!currentObject || !currentObject.selectable || !currentObject.visible) {\n          continue;\n        }\n\n        if ((allowIntersect && currentObject.intersectsWithRect(selectionX1Y1, selectionX2Y2)) ||\n            currentObject.isContainedWithinRect(selectionX1Y1, selectionX2Y2) ||\n            (allowIntersect && currentObject.containsPoint(selectionX1Y1)) ||\n            (allowIntersect && currentObject.containsPoint(selectionX2Y2))\n        ) {\n          group.push(currentObject);\n\n          // only add one object if it's a click\n          if (isClick) {\n            break;\n          }\n        }\n      }\n\n      return group;\n    },\n\n    /**\n     * @private\n     */\n    _maybeGroupObjects: function(e) {\n      if (this.selection && this._groupSelector) {\n        this._groupSelectedObjects(e);\n      }\n      this.setCursor(this.defaultCursor);\n      // clear selection and current transformation\n      this._groupSelector = null;\n      this._currentTransform = null;\n    }\n  });\n\n})();\n\n\n(function () {\n\n  var supportQuality = fabric.StaticCanvas.supports('toDataURLWithQuality');\n\n  fabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n    /**\n     * Exports canvas element to a dataurl image. Note that when multiplier is used, cropping is scaled appropriately\n     * @param {Object} [options] Options object\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n     * @param {Number} [options.multiplier=1] Multiplier to scale by, to have consistent\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 2.0.0\n     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n     * @see {@link http://jsfiddle.net/fabricjs/NfZVb/|jsFiddle demo}\n     * @example <caption>Generate jpeg dataURL with lower quality</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'jpeg',\n     *   quality: 0.8\n     * });\n     * @example <caption>Generate cropped png dataURL (clipping of canvas)</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'png',\n     *   left: 100,\n     *   top: 100,\n     *   width: 200,\n     *   height: 200\n     * });\n     * @example <caption>Generate double scaled png dataURL</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'png',\n     *   multiplier: 2\n     * });\n     */\n    toDataURL: function (options) {\n      options || (options = { });\n\n      var format = options.format || 'png',\n          quality = options.quality || 1,\n          multiplier = (options.multiplier || 1) * (options.enableRetinaScaling ? 1 : 1 / this.getRetinaScaling()),\n          cropping = {\n            left: options.left || 0,\n            top: options.top || 0,\n            width: options.width || 0,\n            height: options.height || 0,\n          };\n      return this.__toDataURLWithMultiplier(format, quality, cropping, multiplier);\n    },\n\n    /**\n     * @private\n     */\n    __toDataURLWithMultiplier: function(format, quality, cropping, multiplier) {\n\n      var origWidth = this.width,\n          origHeight = this.height,\n          scaledWidth = (cropping.width || this.width) * multiplier,\n          scaledHeight = (cropping.height || this.height) * multiplier,\n          zoom = this.getZoom(),\n          newZoom = zoom * multiplier,\n          vp = this.viewportTransform,\n          translateX = (vp[4] - cropping.left) * multiplier,\n          translateY = (vp[5] - cropping.top) * multiplier,\n          newVp = [newZoom, 0, 0, newZoom, translateX, translateY],\n          originalInteractive = this.interactive,\n          originalSkipOffScreen = this.skipOffscreen,\n          needsResize = origWidth !== scaledWidth || origHeight !== scaledHeight;\n\n      this.viewportTransform = newVp;\n      this.skipOffscreen = false;\n      // setting interactive to false avoid exporting controls\n      this.interactive = false;\n      if (needsResize) {\n        this.setDimensions({ width: scaledWidth, height: scaledHeight }, { backstoreOnly: true });\n      }\n      // call a renderAll to force sync update. This will cancel the scheduled requestRenderAll\n      // from setDimensions\n      this.renderAll();\n      var data = this.__toDataURL(format, quality, cropping);\n      this.interactive = originalInteractive;\n      this.skipOffscreen = originalSkipOffScreen;\n      this.viewportTransform = vp;\n      //setDimensions with no option object is taking care of:\n      //this.width, this.height, this.requestRenderAll()\n      if (needsResize) {\n        this.setDimensions({ width: origWidth, height: origHeight }, { backstoreOnly: true });\n      }\n      this.renderAll();\n      return data;\n    },\n\n    /**\n     * @private\n     */\n    __toDataURL: function(format, quality) {\n\n      var canvasEl = this.contextContainer.canvas;\n      // to avoid common confusion https://github.com/kangax/fabric.js/issues/806\n      if (format === 'jpg') {\n        format = 'jpeg';\n      }\n\n      var data = supportQuality\n        ? canvasEl.toDataURL('image/' + format, quality)\n        : canvasEl.toDataURL('image/' + format);\n\n      return data;\n    },\n  });\n\n})();\n\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Populates canvas with data from the specified dataless JSON.\n   * JSON format must conform to the one of {@link fabric.Canvas#toDatalessJSON}\n   * @deprecated since 1.2.2\n   * @param {String|Object} json JSON string or object\n   * @param {Function} callback Callback, invoked when json is parsed\n   *                            and corresponding objects (e.g: {@link fabric.Image})\n   *                            are initialized\n   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n   * @return {fabric.Canvas} instance\n   * @chainable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n   */\n  loadFromDatalessJSON: function (json, callback, reviver) {\n    return this.loadFromJSON(json, callback, reviver);\n  },\n\n  /**\n   * Populates canvas with data from the specified JSON.\n   * JSON format must conform to the one of {@link fabric.Canvas#toJSON}\n   * @param {String|Object} json JSON string or object\n   * @param {Function} callback Callback, invoked when json is parsed\n   *                            and corresponding objects (e.g: {@link fabric.Image})\n   *                            are initialized\n   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n   * @return {fabric.Canvas} instance\n   * @chainable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n   * @see {@link http://jsfiddle.net/fabricjs/fmgXt/|jsFiddle demo}\n   * @example <caption>loadFromJSON</caption>\n   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas));\n   * @example <caption>loadFromJSON with reviver</caption>\n   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas), function(o, object) {\n   *   // `o` = json object\n   *   // `object` = fabric.Object instance\n   *   // ... do some stuff ...\n   * });\n   */\n  loadFromJSON: function (json, callback, reviver) {\n    if (!json) {\n      return;\n    }\n\n    // serialize if it wasn't already\n    var serialized = (typeof json === 'string')\n      ? JSON.parse(json)\n      : fabric.util.object.clone(json);\n\n    var _this = this,\n        renderOnAddRemove = this.renderOnAddRemove;\n    this.renderOnAddRemove = false;\n\n    this._enlivenObjects(serialized.objects, function (enlivenedObjects) {\n      _this.clear();\n      _this._setBgOverlay(serialized, function () {\n        enlivenedObjects.forEach(function(obj, index) {\n          // we splice the array just in case some custom classes restored from JSON\n          // will add more object to canvas at canvas init.\n          _this.insertAt(obj, index);\n        });\n        _this.renderOnAddRemove = renderOnAddRemove;\n        // remove parts i cannot set as options\n        delete serialized.objects;\n        delete serialized.backgroundImage;\n        delete serialized.overlayImage;\n        delete serialized.background;\n        delete serialized.overlay;\n        // this._initOptions does too many things to just\n        // call it. Normally loading an Object from JSON\n        // create the Object instance. Here the Canvas is\n        // already an instance and we are just loading things over it\n        _this._setOptions(serialized);\n        _this.renderAll();\n        callback && callback();\n      });\n    }, reviver);\n    return this;\n  },\n\n  /**\n   * @private\n   * @param {Object} serialized Object with background and overlay information\n   * @param {Function} callback Invoked after all background and overlay images/patterns loaded\n   */\n  _setBgOverlay: function(serialized, callback) {\n    var loaded = {\n      backgroundColor: false,\n      overlayColor: false,\n      backgroundImage: false,\n      overlayImage: false\n    };\n\n    if (!serialized.backgroundImage && !serialized.overlayImage && !serialized.background && !serialized.overlay) {\n      callback && callback();\n      return;\n    }\n\n    var cbIfLoaded = function () {\n      if (loaded.backgroundImage && loaded.overlayImage && loaded.backgroundColor && loaded.overlayColor) {\n        callback && callback();\n      }\n    };\n\n    this.__setBgOverlay('backgroundImage', serialized.backgroundImage, loaded, cbIfLoaded);\n    this.__setBgOverlay('overlayImage', serialized.overlayImage, loaded, cbIfLoaded);\n    this.__setBgOverlay('backgroundColor', serialized.background, loaded, cbIfLoaded);\n    this.__setBgOverlay('overlayColor', serialized.overlay, loaded, cbIfLoaded);\n  },\n\n  /**\n   * @private\n   * @param {String} property Property to set (backgroundImage, overlayImage, backgroundColor, overlayColor)\n   * @param {(Object|String)} value Value to set\n   * @param {Object} loaded Set loaded property to true if property is set\n   * @param {Object} callback Callback function to invoke after property is set\n   */\n  __setBgOverlay: function(property, value, loaded, callback) {\n    var _this = this;\n\n    if (!value) {\n      loaded[property] = true;\n      callback && callback();\n      return;\n    }\n\n    if (property === 'backgroundImage' || property === 'overlayImage') {\n      fabric.util.enlivenObjects([value], function(enlivedObject){\n        _this[property] = enlivedObject[0];\n        loaded[property] = true;\n        callback && callback();\n      });\n    }\n    else {\n      this['set' + fabric.util.string.capitalize(property, true)](value, function() {\n        loaded[property] = true;\n        callback && callback();\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {Array} objects\n   * @param {Function} callback\n   * @param {Function} [reviver]\n   */\n  _enlivenObjects: function (objects, callback, reviver) {\n    if (!objects || objects.length === 0) {\n      callback && callback([]);\n      return;\n    }\n\n    fabric.util.enlivenObjects(objects, function(enlivenedObjects) {\n      callback && callback(enlivenedObjects);\n    }, null, reviver);\n  },\n\n  /**\n   * @private\n   * @param {String} format\n   * @param {Function} callback\n   */\n  _toDataURL: function (format, callback) {\n    this.clone(function (clone) {\n      callback(clone.toDataURL(format));\n    });\n  },\n\n  /**\n   * @private\n   * @param {String} format\n   * @param {Number} multiplier\n   * @param {Function} callback\n   */\n  _toDataURLWithMultiplier: function (format, multiplier, callback) {\n    this.clone(function (clone) {\n      callback(clone.toDataURLWithMultiplier(format, multiplier));\n    });\n  },\n\n  /**\n   * Clones canvas instance\n   * @param {Object} [callback] Receives cloned instance as a first argument\n   * @param {Array} [properties] Array of properties to include in the cloned canvas and children\n   */\n  clone: function (callback, properties) {\n    var data = JSON.stringify(this.toJSON(properties));\n    this.cloneWithoutData(function(clone) {\n      clone.loadFromJSON(data, function() {\n        callback && callback(clone);\n      });\n    });\n  },\n\n  /**\n   * Clones canvas instance without cloning existing data.\n   * This essentially copies canvas dimensions, clipping properties, etc.\n   * but leaves data empty (so that you can populate it with your own)\n   * @param {Object} [callback] Receives cloned instance as a first argument\n   */\n  cloneWithoutData: function(callback) {\n    var el = fabric.document.createElement('canvas');\n\n    el.width = this.width;\n    el.height = this.height;\n\n    var clone = new fabric.Canvas(el);\n    clone.clipTo = this.clipTo;\n    if (this.backgroundImage) {\n      clone.setBackgroundImage(this.backgroundImage.src, function() {\n        clone.renderAll();\n        callback && callback(clone);\n      });\n      clone.backgroundImageOpacity = this.backgroundImageOpacity;\n      clone.backgroundImageStretch = this.backgroundImageStretch;\n    }\n    else {\n      callback && callback(clone);\n    }\n  }\n});\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      toFixed = fabric.util.toFixed,\n      capitalize = fabric.util.string.capitalize,\n      degreesToRadians = fabric.util.degreesToRadians,\n      supportsLineDash = fabric.StaticCanvas.supports('setLineDash'),\n      objectCaching = !fabric.isLikelyNode,\n      ALIASING_LIMIT = 2;\n\n  if (fabric.Object) {\n    return;\n  }\n\n  /**\n   * Root object class from which all 2d shape classes inherit from\n   * @class fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#objects}\n   * @see {@link fabric.Object#initialize} for constructor definition\n   *\n   * @fires added\n   * @fires removed\n   *\n   * @fires selected\n   * @fires deselected\n   * @fires modified\n   * @fires rotating\n   * @fires scaling\n   * @fires moving\n   * @fires skewing\n   *\n   * @fires mousedown\n   * @fires mouseup\n   * @fires mouseover\n   * @fires mouseout\n   * @fires mousewheel\n   * @fires mousedblclick\n   */\n  fabric.Object = fabric.util.createClass(fabric.CommonMethods, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Type of an object (rect, circle, path, etc.).\n     * Note that this property is meant to be read-only and not meant to be modified.\n     * If you modify, certain parts of Fabric (such as JSON loading) won't work correctly.\n     * @type String\n     * @default\n     */\n    type:                     'object',\n\n    /**\n     * Horizontal origin of transformation of an object (one of \"left\", \"right\", \"center\")\n     * See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups\n     * @type String\n     * @default\n     */\n    originX:                  'left',\n\n    /**\n     * Vertical origin of transformation of an object (one of \"top\", \"bottom\", \"center\")\n     * See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups\n     * @type String\n     * @default\n     */\n    originY:                  'top',\n\n    /**\n     * Top position of an object. Note that by default it's relative to object top. You can change this by setting originY={top/center/bottom}\n     * @type Number\n     * @default\n     */\n    top:                      0,\n\n    /**\n     * Left position of an object. Note that by default it's relative to object left. You can change this by setting originX={left/center/right}\n     * @type Number\n     * @default\n     */\n    left:                     0,\n\n    /**\n     * Object width\n     * @type Number\n     * @default\n     */\n    width:                    0,\n\n    /**\n     * Object height\n     * @type Number\n     * @default\n     */\n    height:                   0,\n\n    /**\n     * Object scale factor (horizontal)\n     * @type Number\n     * @default\n     */\n    scaleX:                   1,\n\n    /**\n     * Object scale factor (vertical)\n     * @type Number\n     * @default\n     */\n    scaleY:                   1,\n\n    /**\n     * When true, an object is rendered as flipped horizontally\n     * @type Boolean\n     * @default\n     */\n    flipX:                    false,\n\n    /**\n     * When true, an object is rendered as flipped vertically\n     * @type Boolean\n     * @default\n     */\n    flipY:                    false,\n\n    /**\n     * Opacity of an object\n     * @type Number\n     * @default\n     */\n    opacity:                  1,\n\n    /**\n     * Angle of rotation of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    angle:                    0,\n\n    /**\n     * Angle of skew on x axes of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    skewX:                    0,\n\n    /**\n     * Angle of skew on y axes of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    skewY:                    0,\n\n    /**\n     * Size of object's controlling corners (in pixels)\n     * @type Number\n     * @default\n     */\n    cornerSize:               13,\n\n    /**\n     * When true, object's controlling corners are rendered as transparent inside (i.e. stroke instead of fill)\n     * @type Boolean\n     * @default\n     */\n    transparentCorners:       true,\n\n    /**\n     * Default cursor value used when hovering over this object on canvas\n     * @type String\n     * @default\n     */\n    hoverCursor:              null,\n\n    /**\n     * Default cursor value used when moving this object on canvas\n     * @type String\n     * @default\n     */\n    moveCursor:               null,\n\n    /**\n     * Padding between object and its controlling borders (in pixels)\n     * @type Number\n     * @default\n     */\n    padding:                  0,\n\n    /**\n     * Color of controlling borders of an object (when it's active)\n     * @type String\n     * @default\n     */\n    borderColor:              'rgba(102,153,255,0.75)',\n\n    /**\n     * Array specifying dash pattern of an object's borders (hasBorder must be true)\n     * @since 1.6.2\n     * @type Array\n     */\n    borderDashArray:          null,\n\n    /**\n     * Color of controlling corners of an object (when it's active)\n     * @type String\n     * @default\n     */\n    cornerColor:              'rgba(102,153,255,0.5)',\n\n    /**\n     * Color of controlling corners of an object (when it's active and transparentCorners false)\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    cornerStrokeColor:        null,\n\n    /**\n     * Specify style of control, 'rect' or 'circle'\n     * @since 1.6.2\n     * @type String\n     */\n    cornerStyle:          'rect',\n\n    /**\n     * Array specifying dash pattern of an object's control (hasBorder must be true)\n     * @since 1.6.2\n     * @type Array\n     */\n    cornerDashArray:          null,\n\n    /**\n     * When true, this object will use center point as the origin of transformation\n     * when being scaled via the controls.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredScaling:          false,\n\n    /**\n     * When true, this object will use center point as the origin of transformation\n     * when being rotated via the controls.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredRotation:         true,\n\n    /**\n     * Color of object's fill\n     * @type String\n     * @default\n     */\n    fill:                     'rgb(0,0,0)',\n\n    /**\n     * Fill rule used to fill an object\n     * accepted values are nonzero, evenodd\n     * <b>Backwards incompatibility note:</b> This property was used for setting globalCompositeOperation until v1.4.12 (use `fabric.Object#globalCompositeOperation` instead)\n     * @type String\n     * @default\n     */\n    fillRule:                 'nonzero',\n\n    /**\n     * Composite rule used for canvas globalCompositeOperation\n     * @type String\n     * @default\n     */\n    globalCompositeOperation: 'source-over',\n\n    /**\n     * Background color of an object.\n     * @type String\n     * @default\n     */\n    backgroundColor:          '',\n\n    /**\n     * Selection Background color of an object. colored layer behind the object when it is active.\n     * does not mix good with globalCompositeOperation methods.\n     * @type String\n     * @default\n     */\n    selectionBackgroundColor:          '',\n\n    /**\n     * When defined, an object is rendered via stroke and this property specifies its color\n     * @type String\n     * @default\n     */\n    stroke:                   null,\n\n    /**\n     * Width of a stroke used to render this object\n     * @type Number\n     * @default\n     */\n    strokeWidth:              1,\n\n    /**\n     * Array specifying dash pattern of an object's stroke (stroke must be defined)\n     * @type Array\n     */\n    strokeDashArray:          null,\n\n    /**\n     * Line endings style of an object's stroke (one of \"butt\", \"round\", \"square\")\n     * @type String\n     * @default\n     */\n    strokeLineCap:            'butt',\n\n    /**\n     * Corner style of an object's stroke (one of \"bevil\", \"round\", \"miter\")\n     * @type String\n     * @default\n     */\n    strokeLineJoin:           'miter',\n\n    /**\n     * Maximum miter length (used for strokeLineJoin = \"miter\") of an object's stroke\n     * @type Number\n     * @default\n     */\n    strokeMiterLimit:         10,\n\n    /**\n     * Shadow object representing shadow of this shape\n     * @type fabric.Shadow\n     * @default\n     */\n    shadow:                   null,\n\n    /**\n     * Opacity of object's controlling borders when object is active and moving\n     * @type Number\n     * @default\n     */\n    borderOpacityWhenMoving:  0.4,\n\n    /**\n     * Scale factor of object's controlling borders\n     * @type Number\n     * @default\n     */\n    borderScaleFactor:        1,\n\n    /**\n     * Transform matrix (similar to SVG's transform matrix)\n     * @type Array\n     */\n    transformMatrix:          null,\n\n    /**\n     * Minimum allowed scale value of an object\n     * @type Number\n     * @default\n     */\n    minScaleLimit:            0,\n\n    /**\n     * When set to `false`, an object can not be selected for modification (using either point-click-based or group-based selection).\n     * But events still fire on it.\n     * @type Boolean\n     * @default\n     */\n    selectable:               true,\n\n    /**\n     * When set to `false`, an object can not be a target of events. All events propagate through it. Introduced in v1.3.4\n     * @type Boolean\n     * @default\n     */\n    evented:                  true,\n\n    /**\n     * When set to `false`, an object is not rendered on canvas\n     * @type Boolean\n     * @default\n     */\n    visible:                  true,\n\n    /**\n     * When set to `false`, object's controls are not displayed and can not be used to manipulate object\n     * @type Boolean\n     * @default\n     */\n    hasControls:              true,\n\n    /**\n     * When set to `false`, object's controlling borders are not rendered\n     * @type Boolean\n     * @default\n     */\n    hasBorders:               true,\n\n    /**\n     * When set to `false`, object's controlling rotating point will not be visible or selectable\n     * @type Boolean\n     * @default\n     */\n    hasRotatingPoint:         true,\n\n    /**\n     * Offset for object's controlling rotating point (when enabled via `hasRotatingPoint`)\n     * @type Number\n     * @default\n     */\n    rotatingPointOffset:      40,\n\n    /**\n     * When set to `true`, objects are \"found\" on canvas on per-pixel basis rather than according to bounding box\n     * @type Boolean\n     * @default\n     */\n    perPixelTargetFind:       false,\n\n    /**\n     * When `false`, default object's values are not included in its serialization\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues:     true,\n\n    /**\n     * Function that determines clipping of an object (context is passed as a first argument)\n     * Note that context origin is at the object's center point (not left/top corner)\n     * @deprecated since 2.0.0\n     * @type Function\n     */\n    clipTo:                   null,\n\n    /**\n     * When `true`, object horizontal movement is locked\n     * @type Boolean\n     * @default\n     */\n    lockMovementX:            false,\n\n    /**\n     * When `true`, object vertical movement is locked\n     * @type Boolean\n     * @default\n     */\n    lockMovementY:            false,\n\n    /**\n     * When `true`, object rotation is locked\n     * @type Boolean\n     * @default\n     */\n    lockRotation:             false,\n\n    /**\n     * When `true`, object horizontal scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockScalingX:             false,\n\n    /**\n     * When `true`, object vertical scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockScalingY:             false,\n\n    /**\n     * When `true`, object non-uniform scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockUniScaling:           false,\n\n    /**\n     * When `true`, object horizontal skewing is locked\n     * @type Boolean\n     * @default\n     */\n    lockSkewingX:             false,\n\n    /**\n     * When `true`, object vertical skewing is locked\n     * @type Boolean\n     * @default\n     */\n    lockSkewingY:             false,\n\n    /**\n     * When `true`, object cannot be flipped by scaling into negative values\n     * @type Boolean\n     * @default\n     */\n    lockScalingFlip:          false,\n\n    /**\n     * When `true`, object is not exported in SVG or OBJECT/JSON\n     * since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    excludeFromExport:        false,\n\n    /**\n     * When `true`, object is cached on an additional canvas.\n     * default to true\n     * since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    objectCaching:            objectCaching,\n\n    /**\n     * When `true`, object properties are checked for cache invalidation. In some particular\n     * situation you may want this to be disabled ( spray brush, very big, groups)\n     * or if your application does not allow you to modify properties for groups child you want\n     * to disable it for groups.\n     * default to false\n     * since 1.7.0\n     * @type Boolean\n     * @default false\n     */\n    statefullCache:            false,\n\n    /**\n     * When `true`, cache does not get updated during scaling. The picture will get blocky if scaled\n     * too much and will be redrawn with correct details at the end of scaling.\n     * this setting is performance and application dependant.\n     * default to true\n     * since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    noScaleCache:              true,\n\n    /**\n     * When set to `true`, object's cache will be rerendered next render call.\n     * since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    dirty:                true,\n\n    /**\n     * keeps the value of the last hovered coner during mouse move.\n     * 0 is no corner, or 'mt', 'ml', 'mtr' etc..\n     * It should be private, but there is no harm in using it as\n     * a read-only property.\n     * @type number|string|any\n     * @default 0\n     */\n    __corner: 0,\n\n    /**\n     * Determins if the fill or the stroke is drawn first (one of \"fill\" or \"stroke\")\n     * @type String\n     * @default\n     */\n    paintFirst:           'fill',\n\n    /**\n     * List of properties to consider when checking if state\n     * of an object is changed (fabric.Object#hasStateChanged)\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: (\n      'top left width height scaleX scaleY flipX flipY originX originY transformMatrix ' +\n      'stroke strokeWidth strokeDashArray strokeLineCap strokeLineJoin strokeMiterLimit ' +\n      'angle opacity fill globalCompositeOperation shadow clipTo visible backgroundColor ' +\n      'skewX skewY fillRule paintFirst'\n    ).split(' '),\n\n    /**\n     * List of properties to consider when checking if cache needs refresh\n     * @type Array\n     */\n    cacheProperties: (\n      'fill stroke strokeWidth strokeDashArray width height paintFirst' +\n      ' strokeLineCap strokeLineJoin strokeMiterLimit backgroundColor'\n    ).split(' '),\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function(options) {\n      if (options) {\n        this.setOptions(options);\n      }\n    },\n\n    /**\n     * Create a the canvas used to keep the cached copy of the object\n     * @private\n     */\n    _createCacheCanvas: function() {\n      this._cacheProperties = {};\n      this._cacheCanvas = fabric.document.createElement('canvas');\n      this._cacheContext = this._cacheCanvas.getContext('2d');\n      this._updateCacheCanvas();\n    },\n\n    /**\n     * Limit the cache dimensions so that X * Y do not cross fabric.perfLimitSizeTotal\n     * and each side do not cross fabric.cacheSideLimit\n     * those numbers are configurable so that you can get as much detail as you want\n     * making bargain with performances.\n     * @param {Object} dims\n     * @param {Object} dims.width width of canvas\n     * @param {Object} dims.height height of canvas\n     * @param {Object} dims.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @param {Object} dims.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _limitCacheSize: function(dims) {\n      var perfLimitSizeTotal = fabric.perfLimitSizeTotal,\n          width = dims.width, height = dims.height,\n          max = fabric.maxCacheSideLimit, min = fabric.minCacheSideLimit;\n      if (width <= max && height <= max && width * height <= perfLimitSizeTotal) {\n        if (width < min) {\n          dims.width = min;\n        }\n        if (height < min) {\n          dims.height = min;\n        }\n        return dims;\n      }\n      var ar = width / height, limitedDims = fabric.util.limitDimsByArea(ar, perfLimitSizeTotal),\n          capValue = fabric.util.capValue,\n          x = capValue(min, limitedDims.x, max),\n          y = capValue(min, limitedDims.y, max);\n      if (width > x) {\n        dims.zoomX /= width / x;\n        dims.width = x;\n        dims.capped = true;\n      }\n      if (height > y) {\n        dims.zoomY /= height / y;\n        dims.height = y;\n        dims.capped = true;\n      }\n      return dims;\n    },\n\n    /**\n     * Return the dimension and the zoom level needed to create a cache canvas\n     * big enough to host the object to be cached.\n     * @private\n     * @param {Object} dim.x width of object to be cached\n     * @param {Object} dim.y height of object to be cached\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _getCacheCanvasDimensions: function() {\n      var zoom = this.canvas && this.canvas.getZoom() || 1,\n          objectScale = this.getObjectScaling(),\n          retina = this.canvas && this.canvas._isRetinaScaling() ? fabric.devicePixelRatio : 1,\n          dim = this._getNonTransformedDimensions(),\n          zoomX = objectScale.scaleX * zoom * retina,\n          zoomY = objectScale.scaleY * zoom * retina,\n          width = dim.x * zoomX,\n          height = dim.y * zoomY;\n      return {\n        // for sure this ALIASING_LIMIT is slightly crating problem\n        // in situation in wich the cache canvas gets an upper limit\n        width: width + ALIASING_LIMIT,\n        height: height + ALIASING_LIMIT,\n        zoomX: zoomX,\n        zoomY: zoomY,\n        x: dim.x,\n        y: dim.y\n      };\n    },\n\n    /**\n     * Update width and height of the canvas for cache\n     * returns true or false if canvas needed resize.\n     * @private\n     * @return {Boolean} true if the canvas has been resized\n     */\n    _updateCacheCanvas: function() {\n      if (this.noScaleCache && this.canvas && this.canvas._currentTransform) {\n        var target = this.canvas._currentTransform.target,\n            action = this.canvas._currentTransform.action;\n        if (this === target && action.slice && action.slice(0, 5) === 'scale') {\n          return false;\n        }\n      }\n      var canvas = this._cacheCanvas,\n          dims = this._limitCacheSize(this._getCacheCanvasDimensions()),\n          minCacheSize = fabric.minCacheSideLimit,\n          width = dims.width, height = dims.height, drawingWidth, drawingHeight,\n          zoomX = dims.zoomX, zoomY = dims.zoomY,\n          dimensionsChanged = width !== this.cacheWidth || height !== this.cacheHeight,\n          zoomChanged = this.zoomX !== zoomX || this.zoomY !== zoomY,\n          shouldRedraw = dimensionsChanged || zoomChanged,\n          additionalWidth = 0, additionalHeight = 0, shouldResizeCanvas = false;\n      if (dimensionsChanged) {\n        var canvasWidth = this._cacheCanvas.width,\n            canvasHeight = this._cacheCanvas.height,\n            sizeGrowing = width > canvasWidth || height > canvasHeight,\n            sizeShrinking = (width < canvasWidth * 0.9 || height < canvasHeight * 0.9) &&\n              canvasWidth > minCacheSize && canvasHeight > minCacheSize;\n        shouldResizeCanvas = sizeGrowing || sizeShrinking;\n        if (sizeGrowing && !dims.capped && (width > minCacheSize || height > minCacheSize)) {\n          additionalWidth = width * 0.1;\n          additionalHeight = height * 0.1;\n        }\n      }\n      if (shouldRedraw) {\n        if (shouldResizeCanvas) {\n          canvas.width = Math.ceil(width + additionalWidth);\n          canvas.height = Math.ceil(height + additionalHeight);\n        }\n        else {\n          this._cacheContext.setTransform(1, 0, 0, 1, 0, 0);\n          this._cacheContext.clearRect(0, 0, canvas.width, canvas.height);\n        }\n        drawingWidth = dims.x * zoomX / 2;\n        drawingHeight = dims.y * zoomY / 2;\n        this.cacheTranslationX = Math.round(canvas.width / 2 - drawingWidth) + drawingWidth;\n        this.cacheTranslationY = Math.round(canvas.height / 2 - drawingHeight) + drawingHeight;\n        this.cacheWidth = width;\n        this.cacheHeight = height;\n        this._cacheContext.translate(this.cacheTranslationX, this.cacheTranslationY);\n        this._cacheContext.scale(zoomX, zoomY);\n        this.zoomX = zoomX;\n        this.zoomY = zoomY;\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * Sets object's properties from options\n     * @param {Object} [options] Options object\n     */\n    setOptions: function(options) {\n      this._setOptions(options);\n      this._initGradient(options.fill, 'fill');\n      this._initGradient(options.stroke, 'stroke');\n      this._initClipping(options);\n      this._initPattern(options.fill, 'fill');\n      this._initPattern(options.stroke, 'stroke');\n    },\n\n    /**\n     * Transforms context when rendering an object\n     * @param {CanvasRenderingContext2D} ctx Context\n     */\n    transform: function(ctx) {\n      var m;\n      if (this.group && !this.group._transformDone) {\n        m = this.calcTransformMatrix();\n      }\n      else {\n        m = this.calcOwnMatrix();\n      }\n      ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n    },\n\n    /**\n     * Returns an object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n\n          object = {\n            type:                     this.type,\n            version:                  fabric.version,\n            originX:                  this.originX,\n            originY:                  this.originY,\n            left:                     toFixed(this.left, NUM_FRACTION_DIGITS),\n            top:                      toFixed(this.top, NUM_FRACTION_DIGITS),\n            width:                    toFixed(this.width, NUM_FRACTION_DIGITS),\n            height:                   toFixed(this.height, NUM_FRACTION_DIGITS),\n            fill:                     (this.fill && this.fill.toObject) ? this.fill.toObject() : this.fill,\n            stroke:                   (this.stroke && this.stroke.toObject) ? this.stroke.toObject() : this.stroke,\n            strokeWidth:              toFixed(this.strokeWidth, NUM_FRACTION_DIGITS),\n            strokeDashArray:          this.strokeDashArray ? this.strokeDashArray.concat() : this.strokeDashArray,\n            strokeLineCap:            this.strokeLineCap,\n            strokeLineJoin:           this.strokeLineJoin,\n            strokeMiterLimit:         toFixed(this.strokeMiterLimit, NUM_FRACTION_DIGITS),\n            scaleX:                   toFixed(this.scaleX, NUM_FRACTION_DIGITS),\n            scaleY:                   toFixed(this.scaleY, NUM_FRACTION_DIGITS),\n            angle:                    toFixed(this.angle, NUM_FRACTION_DIGITS),\n            flipX:                    this.flipX,\n            flipY:                    this.flipY,\n            opacity:                  toFixed(this.opacity, NUM_FRACTION_DIGITS),\n            shadow:                   (this.shadow && this.shadow.toObject) ? this.shadow.toObject() : this.shadow,\n            visible:                  this.visible,\n            clipTo:                   this.clipTo && String(this.clipTo),\n            backgroundColor:          this.backgroundColor,\n            fillRule:                 this.fillRule,\n            paintFirst:               this.paintFirst,\n            globalCompositeOperation: this.globalCompositeOperation,\n            transformMatrix:          this.transformMatrix ? this.transformMatrix.concat() : null,\n            skewX:                    toFixed(this.skewX, NUM_FRACTION_DIGITS),\n            skewY:                    toFixed(this.skewY, NUM_FRACTION_DIGITS)\n          };\n\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n      if (!this.includeDefaultValues) {\n        object = this._removeDefaultValues(object);\n      }\n\n      return object;\n    },\n\n    /**\n     * Returns (dataless) object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      // will be overwritten by subclasses\n      return this.toObject(propertiesToInclude);\n    },\n\n    /**\n     * @private\n     * @param {Object} object\n     */\n    _removeDefaultValues: function(object) {\n      var prototype = fabric.util.getKlass(object.type).prototype,\n          stateProperties = prototype.stateProperties;\n      stateProperties.forEach(function(prop) {\n        if (object[prop] === prototype[prop]) {\n          delete object[prop];\n        }\n        var isArray = Object.prototype.toString.call(object[prop]) === '[object Array]' &&\n                      Object.prototype.toString.call(prototype[prop]) === '[object Array]';\n\n        // basically a check for [] === []\n        if (isArray && object[prop].length === 0 && prototype[prop].length === 0) {\n          delete object[prop];\n        }\n      });\n\n      return object;\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @return {String}\n     */\n    toString: function() {\n      return '#<fabric.' + capitalize(this.type) + '>';\n    },\n\n    /**\n     * Return the object scale factor counting also the group scaling\n     * @return {Object} object with scaleX and scaleY properties\n     */\n    getObjectScaling: function() {\n      var scaleX = this.scaleX, scaleY = this.scaleY;\n      if (this.group) {\n        var scaling = this.group.getObjectScaling();\n        scaleX *= scaling.scaleX;\n        scaleY *= scaling.scaleY;\n      }\n      return { scaleX: scaleX, scaleY: scaleY };\n    },\n\n    /**\n     * Return the object opacity counting also the group property\n     * @return {Number}\n     */\n    getObjectOpacity: function() {\n      var opacity = this.opacity;\n      if (this.group) {\n        opacity *= this.group.getObjectOpacity();\n      }\n      return opacity;\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Object} thisArg\n     */\n    _set: function(key, value) {\n      var shouldConstrainValue = (key === 'scaleX' || key === 'scaleY'),\n          isChanged = this[key] !== value, groupNeedsUpdate = false;\n\n      if (shouldConstrainValue) {\n        value = this._constrainScale(value);\n      }\n      if (key === 'scaleX' && value < 0) {\n        this.flipX = !this.flipX;\n        value *= -1;\n      }\n      else if (key === 'scaleY' && value < 0) {\n        this.flipY = !this.flipY;\n        value *= -1;\n      }\n      else if (key === 'shadow' && value && !(value instanceof fabric.Shadow)) {\n        value = new fabric.Shadow(value);\n      }\n      else if (key === 'dirty' && this.group) {\n        this.group.set('dirty', value);\n      }\n\n      this[key] = value;\n\n      if (isChanged) {\n        groupNeedsUpdate = this.group && this.group.isOnACache();\n        if (this.cacheProperties.indexOf(key) > -1) {\n          this.dirty = true;\n          groupNeedsUpdate && this.group.set('dirty', true);\n        }\n        else if (groupNeedsUpdate && this.stateProperties.indexOf(key) > -1) {\n          this.group.set('dirty', true);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * This callback function is called by the parent group of an object every\n     * time a non-delegated property changes on the group. It is passed the key\n     * and value as parameters. Not adding in this function's signature to avoid\n     * Travis build error about unused variables.\n     */\n    setOnGroup: function() {\n      // implemented by sub-classes, as needed.\n    },\n\n    /**\n     * Retrieves viewportTransform from Object's canvas if possible\n     * @method getViewportTransform\n     * @memberOf fabric.Object.prototype\n     * @return {Boolean}\n     */\n    getViewportTransform: function() {\n      if (this.canvas && this.canvas.viewportTransform) {\n        return this.canvas.viewportTransform;\n      }\n      return fabric.iMatrix.concat();\n    },\n\n    /*\n     * @private\n     * return if the object would be visible in rendering\n     * @memberOf fabric.Object.prototype\n     * @return {Boolean}\n     */\n    isNotVisible: function() {\n      return this.opacity === 0 || (this.width === 0 && this.height === 0) || !this.visible;\n    },\n\n    /**\n     * Renders an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    render: function(ctx) {\n      // do not render if width/height are zeros or object is not visible\n      if (this.isNotVisible()) {\n        return;\n      }\n      if (this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen()) {\n        return;\n      }\n      ctx.save();\n      this._setupCompositeOperation(ctx);\n      this.drawSelectionBackground(ctx);\n      this.transform(ctx);\n      this._setOpacity(ctx);\n      this._setShadow(ctx, this);\n      if (this.transformMatrix) {\n        ctx.transform.apply(ctx, this.transformMatrix);\n      }\n      this.clipTo && fabric.util.clipContext(this, ctx);\n      if (this.shouldCache()) {\n        if (!this._cacheCanvas) {\n          this._createCacheCanvas();\n        }\n        if (this.isCacheDirty()) {\n          this.statefullCache && this.saveState({ propertySet: 'cacheProperties' });\n          this.drawObject(this._cacheContext);\n          this.dirty = false;\n        }\n        this.drawCacheOnCanvas(ctx);\n      }\n      else {\n        this._removeCacheCanvas();\n        this.dirty = false;\n        this.drawObject(ctx);\n        if (this.objectCaching && this.statefullCache) {\n          this.saveState({ propertySet: 'cacheProperties' });\n        }\n      }\n      this.clipTo && ctx.restore();\n      ctx.restore();\n    },\n\n    /**\n     * Remove cacheCanvas and its dimensions from the objects\n     */\n    _removeCacheCanvas: function() {\n      this._cacheCanvas = null;\n      this.cacheWidth = 0;\n      this.cacheHeight = 0;\n    },\n\n    /**\n     * When set to `true`, force the object to have its own cache, even if it is inside a group\n     * it may be needed when your object behave in a particular way on the cache and always needs\n     * its own isolated canvas to render correctly.\n     * Created to be overridden\n     * since 1.7.12\n     * @returns false\n     */\n    needsItsOwnCache: function() {\n      if (this.paintFirst === 'stroke' && typeof this.shadow === 'object') {\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * objectCaching is a global flag, wins over everything\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * @return {Boolean}\n     */\n    shouldCache: function() {\n      this.ownCaching = this.objectCaching &&\n      (!this.group || this.needsItsOwnCache() || !this.group.isOnACache());\n      return this.ownCaching;\n    },\n\n    /**\n     * Check if this object or a child object will cast a shadow\n     * used by Group.shouldCache to know if child has a shadow recursively\n     * @return {Boolean}\n     */\n    willDrawShadow: function() {\n      return !!this.shadow && (this.shadow.offsetX !== 0 || this.shadow.offsetY !== 0);\n    },\n\n    /**\n     * Execute the drawing operation for an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawObject: function(ctx) {\n      this._renderBackground(ctx);\n      this._setStrokeStyles(ctx, this);\n      this._setFillStyles(ctx, this);\n      this._render(ctx);\n    },\n\n    /**\n     * Paint the cached copy of the object on the target context.\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawCacheOnCanvas: function(ctx) {\n      ctx.scale(1 / this.zoomX, 1 / this.zoomY);\n      ctx.drawImage(this._cacheCanvas, -this.cacheTranslationX, -this.cacheTranslationY);\n    },\n\n    /**\n     * Check if cache is dirty\n     * @param {Boolean} skipCanvas skip canvas checks because this object is painted\n     * on parent canvas.\n     */\n    isCacheDirty: function(skipCanvas) {\n      if (this.isNotVisible()) {\n        return false;\n      }\n      if (this._cacheCanvas && !skipCanvas && this._updateCacheCanvas()) {\n        // in this case the context is already cleared.\n        return true;\n      }\n      else {\n        if (this.dirty || (this.statefullCache && this.hasStateChanged('cacheProperties'))) {\n          if (this._cacheCanvas && !skipCanvas) {\n            var width = this.cacheWidth / this.zoomX;\n            var height = this.cacheHeight / this.zoomY;\n            this._cacheContext.clearRect(-width / 2, -height / 2, width, height);\n          }\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Draws a background for the object big as its untrasformed dimensions\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderBackground: function(ctx) {\n      if (!this.backgroundColor) {\n        return;\n      }\n      var dim = this._getNonTransformedDimensions();\n      ctx.fillStyle = this.backgroundColor;\n\n      ctx.fillRect(\n        -dim.x / 2,\n        -dim.y / 2,\n        dim.x,\n        dim.y\n      );\n      // if there is background color no other shadows\n      // should be casted\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _setOpacity: function(ctx) {\n      if (this.group && !this.group._transformDone) {\n        ctx.globalAlpha = this.getObjectOpacity();\n      }\n      else {\n        ctx.globalAlpha *= this.opacity;\n      }\n    },\n\n    _setStrokeStyles: function(ctx, decl) {\n      if (decl.stroke) {\n        ctx.lineWidth = decl.strokeWidth;\n        ctx.lineCap = decl.strokeLineCap;\n        ctx.lineJoin = decl.strokeLineJoin;\n        ctx.miterLimit = decl.strokeMiterLimit;\n        ctx.strokeStyle = decl.stroke.toLive\n          ? decl.stroke.toLive(ctx, this)\n          : decl.stroke;\n      }\n    },\n\n    _setFillStyles: function(ctx, decl) {\n      if (decl.fill) {\n        ctx.fillStyle = decl.fill.toLive\n          ? decl.fill.toLive(ctx, this)\n          : decl.fill;\n      }\n    },\n\n    /**\n     * @private\n     * Sets line dash\n     * @param {CanvasRenderingContext2D} ctx Context to set the dash line on\n     * @param {Array} dashArray array representing dashes\n     * @param {Function} alternative function to call if browaser does not support lineDash\n     */\n    _setLineDash: function(ctx, dashArray, alternative) {\n      if (!dashArray) {\n        return;\n      }\n      // Spec requires the concatenation of two copies the dash list when the number of elements is odd\n      if (1 & dashArray.length) {\n        dashArray.push.apply(dashArray, dashArray);\n      }\n      if (supportsLineDash) {\n        ctx.setLineDash(dashArray);\n      }\n      else {\n        alternative && alternative(ctx);\n      }\n    },\n\n    /**\n     * Renders controls and borders for the object\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} [styleOverride] properties to override the object style\n     */\n    _renderControls: function(ctx, styleOverride) {\n      var vpt = this.getViewportTransform(),\n          matrix = this.calcTransformMatrix(),\n          options, drawBorders, drawControls;\n      styleOverride = styleOverride || { };\n      drawBorders = typeof styleOverride.hasBorders !== 'undefined' ? styleOverride.hasBorders : this.hasBorders;\n      drawControls = typeof styleOverride.hasControls !== 'undefined' ? styleOverride.hasControls : this.hasControls;\n      matrix = fabric.util.multiplyTransformMatrices(vpt, matrix);\n      options = fabric.util.qrDecompose(matrix);\n      ctx.save();\n      ctx.translate(options.translateX, options.translateY);\n      ctx.lineWidth = 1 * this.borderScaleFactor;\n      if (!this.group) {\n        ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n      }\n      if (styleOverride.forActiveSelection) {\n        ctx.rotate(degreesToRadians(options.angle));\n        drawBorders && this.drawBordersInGroup(ctx, options, styleOverride);\n      }\n      else {\n        ctx.rotate(degreesToRadians(this.angle));\n        drawBorders && this.drawBorders(ctx, styleOverride);\n      }\n      drawControls && this.drawControls(ctx, styleOverride);\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _setShadow: function(ctx) {\n      if (!this.shadow) {\n        return;\n      }\n\n      var multX = (this.canvas && this.canvas.viewportTransform[0]) || 1,\n          multY = (this.canvas && this.canvas.viewportTransform[3]) || 1,\n          scaling = this.getObjectScaling();\n      if (this.canvas && this.canvas._isRetinaScaling()) {\n        multX *= fabric.devicePixelRatio;\n        multY *= fabric.devicePixelRatio;\n      }\n      ctx.shadowColor = this.shadow.color;\n      ctx.shadowBlur = this.shadow.blur * fabric.browserShadowBlurConstant *\n        (multX + multY) * (scaling.scaleX + scaling.scaleY) / 4;\n      ctx.shadowOffsetX = this.shadow.offsetX * multX * scaling.scaleX;\n      ctx.shadowOffsetY = this.shadow.offsetY * multY * scaling.scaleY;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _removeShadow: function(ctx) {\n      if (!this.shadow) {\n        return;\n      }\n\n      ctx.shadowColor = '';\n      ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} filler fabric.Pattern or fabric.Gradient\n     */\n    _applyPatternGradientTransform: function(ctx, filler) {\n      if (!filler || !filler.toLive) {\n        return { offsetX: 0, offsetY: 0 };\n      }\n      var t = filler.gradientTransform || filler.patternTransform;\n      var offsetX = -this.width / 2 + filler.offsetX || 0,\n          offsetY = -this.height / 2 + filler.offsetY || 0;\n      ctx.translate(offsetX, offsetY);\n      if (t) {\n        ctx.transform(t[0], t[1], t[2], t[3], t[4], t[5]);\n      }\n      return { offsetX: offsetX, offsetY: offsetY };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderPaintInOrder: function(ctx) {\n      if (this.paintFirst === 'stroke') {\n        this._renderStroke(ctx);\n        this._renderFill(ctx);\n      }\n      else {\n        this._renderFill(ctx);\n        this._renderStroke(ctx);\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderFill: function(ctx) {\n      if (!this.fill) {\n        return;\n      }\n\n      ctx.save();\n      this._applyPatternGradientTransform(ctx, this.fill);\n      if (this.fillRule === 'evenodd') {\n        ctx.fill('evenodd');\n      }\n      else {\n        ctx.fill();\n      }\n      ctx.restore();\n    },\n\n    _renderStroke: function(ctx) {\n      if (!this.stroke || this.strokeWidth === 0) {\n        return;\n      }\n\n      if (this.shadow && !this.shadow.affectStroke) {\n        this._removeShadow(ctx);\n      }\n\n      ctx.save();\n      this._setLineDash(ctx, this.strokeDashArray, this._renderDashedStroke);\n      this._applyPatternGradientTransform(ctx, this.stroke);\n      ctx.stroke();\n      ctx.restore();\n    },\n\n    /**\n     * This function is an helper for svg import. it returns the center of the object in the svg\n     * untransformed coordinates\n     * @private\n     * @return {Object} center point from element coordinates\n     */\n    _findCenterFromElement: function() {\n      return { x: this.left + this.width / 2, y: this.top + this.height / 2 };\n    },\n\n    /**\n     * This function is an helper for svg import. it decoompose the transformMatrix\n     * and assign properties to object.\n     * untransformed coordinates\n     * @private\n     * @chainable\n     */\n    _assignTransformMatrixProps: function() {\n      if (this.transformMatrix) {\n        var options = fabric.util.qrDecompose(this.transformMatrix);\n        this.flipX = false;\n        this.flipY = false;\n        this.set('scaleX', options.scaleX);\n        this.set('scaleY', options.scaleY);\n        this.angle = options.angle;\n        this.skewX = options.skewX;\n        this.skewY = 0;\n      }\n    },\n\n    /**\n     * This function is an helper for svg import. it removes the transform matrix\n     * and set to object properties that fabricjs can handle\n     * @private\n     * @param {Object} preserveAspectRatioOptions\n     * @return {thisArg}\n     */\n    _removeTransformMatrix: function(preserveAspectRatioOptions) {\n      var center = this._findCenterFromElement();\n      if (this.transformMatrix) {\n        this._assignTransformMatrixProps();\n        center = fabric.util.transformPoint(center, this.transformMatrix);\n      }\n      this.transformMatrix = null;\n      if (preserveAspectRatioOptions) {\n        this.scaleX *= preserveAspectRatioOptions.scaleX;\n        this.scaleY *= preserveAspectRatioOptions.scaleY;\n        this.cropX = preserveAspectRatioOptions.cropX;\n        this.cropY = preserveAspectRatioOptions.cropY;\n        center.x += preserveAspectRatioOptions.offsetLeft;\n        center.y += preserveAspectRatioOptions.offsetTop;\n        this.width = preserveAspectRatioOptions.width;\n        this.height = preserveAspectRatioOptions.height;\n      }\n      this.setPositionByOrigin(center, 'center', 'center');\n    },\n\n    /**\n     * Clones an instance, using a callback method will work for every object.\n     * @param {Function} callback Callback is invoked with a clone as a first argument\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     */\n    clone: function(callback, propertiesToInclude) {\n      var objectForm = this.toObject(propertiesToInclude);\n      if (this.constructor.fromObject) {\n        this.constructor.fromObject(objectForm, callback);\n      }\n      else {\n        fabric.Object._fromObject('Object', objectForm, callback);\n      }\n    },\n\n    /**\n     * Creates an instance of fabric.Image out of an object\n     * @param {Function} callback callback, invoked with an instance as a first argument\n     * @param {Object} [options] for clone as image, passed to toDataURL\n     * @param {Boolean} [options.enableRetinaScaling] enable retina scaling for the cloned image\n     * @return {fabric.Object} thisArg\n     */\n    cloneAsImage: function(callback, options) {\n      var dataUrl = this.toDataURL(options);\n      fabric.util.loadImage(dataUrl, function(img) {\n        if (callback) {\n          callback(new fabric.Image(img));\n        }\n      });\n      return this;\n    },\n\n    /**\n     * Converts an object into a data-url-like string\n     * @param {Object} options Options object\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\n     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n     */\n    toDataURL: function(options) {\n      options || (options = { });\n\n      var el = fabric.util.createCanvasElement(),\n          boundingRect = this.getBoundingRect();\n\n      el.width = boundingRect.width;\n      el.height = boundingRect.height;\n      fabric.util.wrapElement(el, 'div');\n      var canvas = new fabric.StaticCanvas(el, {\n        enableRetinaScaling: options.enableRetinaScaling,\n        renderOnAddRemove: false,\n        skipOffscreen: false,\n      });\n      // to avoid common confusion https://github.com/kangax/fabric.js/issues/806\n      if (options.format === 'jpg') {\n        options.format = 'jpeg';\n      }\n\n      if (options.format === 'jpeg') {\n        canvas.backgroundColor = '#fff';\n      }\n\n      var origParams = {\n        left: this.left,\n        top: this.top\n      };\n\n      this.setPositionByOrigin(new fabric.Point(canvas.width / 2, canvas.height / 2), 'center', 'center');\n\n      var originalCanvas = this.canvas;\n      canvas.add(this);\n      var data = canvas.toDataURL(options);\n      this.set(origParams).setCoords();\n      this.canvas = originalCanvas;\n      // canvas.dispose will call image.dispose that will nullify the elements\n      // since this canvas is a simple element for the process, we remove references\n      // to objects in this way in order to avoid object trashing.\n      canvas._objects = [];\n      canvas.dispose();\n      canvas = null;\n\n      return data;\n    },\n\n    /**\n     * Returns true if specified type is identical to the type of an instance\n     * @param {String} type Type to check against\n     * @return {Boolean}\n     */\n    isType: function(type) {\n      return this.type === type;\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance (is 1 unless subclassed)\n     */\n    complexity: function() {\n      return 1;\n    },\n\n    /**\n     * Returns a JSON representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} JSON\n     */\n    toJSON: function(propertiesToInclude) {\n      // delegate, not alias\n      return this.toObject(propertiesToInclude);\n    },\n\n    /**\n     * Sets gradient (fill or stroke) of an object\n     * <b>Backwards incompatibility note:</b> This method was named \"setGradientFill\" until v1.1.0\n     * @param {String} property Property name 'stroke' or 'fill'\n     * @param {Object} [options] Options object\n     * @param {String} [options.type] Type of gradient 'radial' or 'linear'\n     * @param {Number} [options.x1=0] x-coordinate of start point\n     * @param {Number} [options.y1=0] y-coordinate of start point\n     * @param {Number} [options.x2=0] x-coordinate of end point\n     * @param {Number} [options.y2=0] y-coordinate of end point\n     * @param {Number} [options.r1=0] Radius of start point (only for radial gradients)\n     * @param {Number} [options.r2=0] Radius of end point (only for radial gradients)\n     * @param {Object} [options.colorStops] Color stops object eg. {0: 'ff0000', 1: '000000'}\n     * @param {Object} [options.gradientTransform] transforMatrix for gradient\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/58y8b/|jsFiddle demo}\n     * @example <caption>Set linear gradient</caption>\n     * object.setGradient('fill', {\n     *   type: 'linear',\n     *   x1: -object.width / 2,\n     *   y1: 0,\n     *   x2: object.width / 2,\n     *   y2: 0,\n     *   colorStops: {\n     *     0: 'red',\n     *     0.5: '#005555',\n     *     1: 'rgba(0,0,255,0.5)'\n     *   }\n     * });\n     * canvas.renderAll();\n     * @example <caption>Set radial gradient</caption>\n     * object.setGradient('fill', {\n     *   type: 'radial',\n     *   x1: 0,\n     *   y1: 0,\n     *   x2: 0,\n     *   y2: 0,\n     *   r1: object.width / 2,\n     *   r2: 10,\n     *   colorStops: {\n     *     0: 'red',\n     *     0.5: '#005555',\n     *     1: 'rgba(0,0,255,0.5)'\n     *   }\n     * });\n     * canvas.renderAll();\n     */\n    setGradient: function(property, options) {\n      options || (options = { });\n\n      var gradient = { colorStops: [] };\n\n      gradient.type = options.type || (options.r1 || options.r2 ? 'radial' : 'linear');\n      gradient.coords = {\n        x1: options.x1,\n        y1: options.y1,\n        x2: options.x2,\n        y2: options.y2\n      };\n\n      if (options.r1 || options.r2) {\n        gradient.coords.r1 = options.r1;\n        gradient.coords.r2 = options.r2;\n      }\n\n      gradient.gradientTransform = options.gradientTransform;\n      fabric.Gradient.prototype.addColorStop.call(gradient, options.colorStops);\n\n      return this.set(property, fabric.Gradient.forObject(this, gradient));\n    },\n\n    /**\n     * Sets pattern fill of an object\n     * @param {Object} options Options object\n     * @param {(String|HTMLImageElement)} options.source Pattern source\n     * @param {String} [options.repeat=repeat] Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n     * @param {Number} [options.offsetX=0] Pattern horizontal offset from object's left/top corner\n     * @param {Number} [options.offsetY=0] Pattern vertical offset from object's left/top corner\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/QT3pa/|jsFiddle demo}\n     * @example <caption>Set pattern</caption>\n     * fabric.util.loadImage('http://fabricjs.com/assets/escheresque_ste.png', function(img) {\n     *   object.setPatternFill({\n     *     source: img,\n     *     repeat: 'repeat'\n     *   });\n     *   canvas.renderAll();\n     * });\n     */\n    setPatternFill: function(options) {\n      return this.set('fill', new fabric.Pattern(options));\n    },\n\n    /**\n     * Sets {@link fabric.Object#shadow|shadow} of an object\n     * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\n     * @param {String} [options.color=rgb(0,0,0)] Shadow color\n     * @param {Number} [options.blur=0] Shadow blur\n     * @param {Number} [options.offsetX=0] Shadow horizontal offset\n     * @param {Number} [options.offsetY=0] Shadow vertical offset\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/7gvJG/|jsFiddle demo}\n     * @example <caption>Set shadow with string notation</caption>\n     * object.setShadow('2px 2px 10px rgba(0,0,0,0.2)');\n     * canvas.renderAll();\n     * @example <caption>Set shadow with object notation</caption>\n     * object.setShadow({\n     *   color: 'red',\n     *   blur: 10,\n     *   offsetX: 20,\n     *   offsetY: 20\n     * });\n     * canvas.renderAll();\n     */\n    setShadow: function(options) {\n      return this.set('shadow', options ? new fabric.Shadow(options) : null);\n    },\n\n    /**\n     * Sets \"color\" of an instance (alias of `set('fill', &hellip;)`)\n     * @param {String} color Color value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setColor: function(color) {\n      this.set('fill', color);\n      return this;\n    },\n\n    /**\n     * Sets \"angle\" of an instance with centered rotation\n     * @param {Number} angle Angle value (in degrees)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    rotate: function(angle) {\n      var shouldCenterOrigin = (this.originX !== 'center' || this.originY !== 'center') && this.centeredRotation;\n\n      if (shouldCenterOrigin) {\n        this._setOriginToCenter();\n      }\n\n      this.set('angle', angle);\n\n      if (shouldCenterOrigin) {\n        this._resetOrigin();\n      }\n\n      return this;\n    },\n\n    /**\n     * Centers object horizontally on canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    centerH: function () {\n      this.canvas && this.canvas.centerObjectH(this);\n      return this;\n    },\n\n    /**\n     * Centers object horizontally on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenterH: function () {\n      this.canvas && this.canvas.viewportCenterObjectH(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically on canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    centerV: function () {\n      this.canvas && this.canvas.centerObjectV(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenterV: function () {\n      this.canvas && this.canvas.viewportCenterObjectV(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically and horizontally on canvas to which is was added last\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    center: function () {\n      this.canvas && this.canvas.centerObject(this);\n      return this;\n    },\n\n    /**\n     * Centers object on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenter: function () {\n      this.canvas && this.canvas.viewportCenterObject(this);\n      return this;\n    },\n\n    /**\n     * Returns coordinates of a pointer relative to an object\n     * @param {Event} e Event to operate upon\n     * @param {Object} [pointer] Pointer to operate upon (instead of event)\n     * @return {Object} Coordinates of a pointer (x, y)\n     */\n    getLocalPointer: function(e, pointer) {\n      pointer = pointer || this.canvas.getPointer(e);\n      var pClicked = new fabric.Point(pointer.x, pointer.y),\n          objectLeftTop = this._getLeftTopCoords();\n      if (this.angle) {\n        pClicked = fabric.util.rotatePoint(\n          pClicked, objectLeftTop, degreesToRadians(-this.angle));\n      }\n      return {\n        x: pClicked.x - objectLeftTop.x,\n        y: pClicked.y - objectLeftTop.y\n      };\n    },\n\n    /**\n     * Sets canvas globalCompositeOperation for specific object\n     * custom composition operation for the particular object can be specifed using globalCompositeOperation property\n     * @param {CanvasRenderingContext2D} ctx Rendering canvas context\n     */\n    _setupCompositeOperation: function (ctx) {\n      if (this.globalCompositeOperation) {\n        ctx.globalCompositeOperation = this.globalCompositeOperation;\n      }\n    }\n  });\n\n  fabric.util.createAccessors && fabric.util.createAccessors(fabric.Object);\n\n  extend(fabric.Object.prototype, fabric.Observable);\n\n  /**\n   * Defines the number of fraction digits to use when serializing object values.\n   * You can use it to increase/decrease precision of such values like left, top, scaleX, scaleY, etc.\n   * @static\n   * @memberOf fabric.Object\n   * @constant\n   * @type Number\n   */\n  fabric.Object.NUM_FRACTION_DIGITS = 2;\n\n  fabric.Object._fromObject = function(className, object, callback, extraParam) {\n    var klass = fabric[className];\n    object = clone(object, true);\n    fabric.util.enlivenPatterns([object.fill, object.stroke], function(patterns) {\n      if (typeof patterns[0] !== 'undefined') {\n        object.fill = patterns[0];\n      }\n      if (typeof patterns[1] !== 'undefined') {\n        object.stroke = patterns[1];\n      }\n      var instance = extraParam ? new klass(object[extraParam], object) : new klass(object);\n      callback && callback(instance);\n    });\n  };\n\n  /**\n   * Unique id used internally when creating SVG elements\n   * @static\n   * @memberOf fabric.Object\n   * @type Number\n   */\n  fabric.Object.__uid = 0;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  var degreesToRadians = fabric.util.degreesToRadians,\n      originXOffset = {\n        left: -0.5,\n        center: 0,\n        right: 0.5\n      },\n      originYOffset = {\n        top: -0.5,\n        center: 0,\n        bottom: 0.5\n      };\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Translates the coordinates from a set of origin to another (based on the object's dimensions)\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @param {String} fromOriginX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} fromOriginY Vertical origin: 'top', 'center' or 'bottom'\n     * @param {String} toOriginX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} toOriginY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToGivenOrigin: function(point, fromOriginX, fromOriginY, toOriginX, toOriginY) {\n      var x = point.x,\n          y = point.y,\n          offsetX, offsetY, dim;\n\n      if (typeof fromOriginX === 'string') {\n        fromOriginX = originXOffset[fromOriginX];\n      }\n      else {\n        fromOriginX -= 0.5;\n      }\n\n      if (typeof toOriginX === 'string') {\n        toOriginX = originXOffset[toOriginX];\n      }\n      else {\n        toOriginX -= 0.5;\n      }\n\n      offsetX = toOriginX - fromOriginX;\n\n      if (typeof fromOriginY === 'string') {\n        fromOriginY = originYOffset[fromOriginY];\n      }\n      else {\n        fromOriginY -= 0.5;\n      }\n\n      if (typeof toOriginY === 'string') {\n        toOriginY = originYOffset[toOriginY];\n      }\n      else {\n        toOriginY -= 0.5;\n      }\n\n      offsetY = toOriginY - fromOriginY;\n\n      if (offsetX || offsetY) {\n        dim = this._getTransformedDimensions();\n        x = point.x + offsetX * dim.x;\n        y = point.y + offsetY * dim.y;\n      }\n\n      return new fabric.Point(x, y);\n    },\n\n    /**\n     * Translates the coordinates from origin to center coordinates (based on the object's dimensions)\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToCenterPoint: function(point, originX, originY) {\n      var p = this.translateToGivenOrigin(point, originX, originY, 'center', 'center');\n      if (this.angle) {\n        return fabric.util.rotatePoint(p, point, degreesToRadians(this.angle));\n      }\n      return p;\n    },\n\n    /**\n     * Translates the coordinates from center to origin coordinates (based on the object's dimensions)\n     * @param {fabric.Point} center The point which corresponds to center of the object\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToOriginPoint: function(center, originX, originY) {\n      var p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n      if (this.angle) {\n        return fabric.util.rotatePoint(p, center, degreesToRadians(this.angle));\n      }\n      return p;\n    },\n\n    /**\n     * Returns the real center coordinates of the object\n     * @return {fabric.Point}\n     */\n    getCenterPoint: function() {\n      var leftTop = new fabric.Point(this.left, this.top);\n      return this.translateToCenterPoint(leftTop, this.originX, this.originY);\n    },\n\n    /**\n     * Returns the coordinates of the object based on center coordinates\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @return {fabric.Point}\n     */\n    // getOriginPoint: function(center) {\n    //   return this.translateToOriginPoint(center, this.originX, this.originY);\n    // },\n\n    /**\n     * Returns the coordinates of the object as if it has a different origin\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    getPointByOrigin: function(originX, originY) {\n      var center = this.getCenterPoint();\n      return this.translateToOriginPoint(center, originX, originY);\n    },\n\n    /**\n     * Returns the point in local coordinates\n     * @param {fabric.Point} point The point relative to the global coordinate system\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    toLocalPoint: function(point, originX, originY) {\n      var center = this.getCenterPoint(),\n          p, p2;\n\n      if (typeof originX !== 'undefined' && typeof originY !== 'undefined' ) {\n        p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n      }\n      else {\n        p = new fabric.Point(this.left, this.top);\n      }\n\n      p2 = new fabric.Point(point.x, point.y);\n      if (this.angle) {\n        p2 = fabric.util.rotatePoint(p2, center, -degreesToRadians(this.angle));\n      }\n      return p2.subtractEquals(p);\n    },\n\n    /**\n     * Returns the point in global coordinates\n     * @param {fabric.Point} The point relative to the local coordinate system\n     * @return {fabric.Point}\n     */\n    // toGlobalPoint: function(point) {\n    //   return fabric.util.rotatePoint(point, this.getCenterPoint(), degreesToRadians(this.angle)).addEquals(new fabric.Point(this.left, this.top));\n    // },\n\n    /**\n     * Sets the position of the object taking into consideration the object's origin\n     * @param {fabric.Point} pos The new position of the object\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {void}\n     */\n    setPositionByOrigin: function(pos, originX, originY) {\n      var center = this.translateToCenterPoint(pos, originX, originY),\n          position = this.translateToOriginPoint(center, this.originX, this.originY);\n      this.set('left', position.x);\n      this.set('top', position.y);\n    },\n\n    /**\n     * @param {String} to One of 'left', 'center', 'right'\n     */\n    adjustPosition: function(to) {\n      var angle = degreesToRadians(this.angle),\n          hypotFull = this.getScaledWidth(),\n          xFull = Math.cos(angle) * hypotFull,\n          yFull = Math.sin(angle) * hypotFull,\n          offsetFrom, offsetTo;\n\n      //TODO: this function does not consider mixed situation like top, center.\n      if (typeof this.originX === 'string') {\n        offsetFrom = originXOffset[this.originX];\n      }\n      else {\n        offsetFrom = this.originX - 0.5;\n      }\n      if (typeof to === 'string') {\n        offsetTo = originXOffset[to];\n      }\n      else {\n        offsetTo = to - 0.5;\n      }\n      this.left += xFull * (offsetTo - offsetFrom);\n      this.top += yFull * (offsetTo - offsetFrom);\n      this.setCoords();\n      this.originX = to;\n    },\n\n    /**\n     * Sets the origin/position of the object to it's center point\n     * @private\n     * @return {void}\n     */\n    _setOriginToCenter: function() {\n      this._originalOriginX = this.originX;\n      this._originalOriginY = this.originY;\n\n      var center = this.getCenterPoint();\n\n      this.originX = 'center';\n      this.originY = 'center';\n\n      this.left = center.x;\n      this.top = center.y;\n    },\n\n    /**\n     * Resets the origin/position of the object to it's original origin\n     * @private\n     * @return {void}\n     */\n    _resetOrigin: function() {\n      var originPoint = this.translateToOriginPoint(\n        this.getCenterPoint(),\n        this._originalOriginX,\n        this._originalOriginY);\n\n      this.originX = this._originalOriginX;\n      this.originY = this._originalOriginY;\n\n      this.left = originPoint.x;\n      this.top = originPoint.y;\n\n      this._originalOriginX = null;\n      this._originalOriginY = null;\n    },\n\n    /**\n     * @private\n     */\n    _getLeftTopCoords: function() {\n      return this.translateToOriginPoint(this.getCenterPoint(), 'left', 'top');\n    },\n\n    /**\n    * Callback; invoked right before object is about to go from active to inactive\n    */\n    onDeselect: function() {\n      /* NOOP */\n    }\n  });\n\n})();\n\n\n(function() {\n\n  function getCoords(coords) {\n    return [\n      new fabric.Point(coords.tl.x, coords.tl.y),\n      new fabric.Point(coords.tr.x, coords.tr.y),\n      new fabric.Point(coords.br.x, coords.br.y),\n      new fabric.Point(coords.bl.x, coords.bl.y)\n    ];\n  }\n\n  var degreesToRadians = fabric.util.degreesToRadians,\n      multiplyMatrices = fabric.util.multiplyTransformMatrices;\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Describe object's corner position in canvas element coordinates.\n     * properties are tl,mt,tr,ml,mr,bl,mb,br,mtr for the main controls.\n     * each property is an object with x, y and corner.\n     * The `corner` property contains in a similar manner the 4 points of the\n     * interactive area of the corner.\n     * The coordinates depends from this properties: width, height, scaleX, scaleY\n     * skewX, skewY, angle, strokeWidth, viewportTransform, top, left, padding.\n     * The coordinates get updated with @method setCoords.\n     * You can calculate them without updating with @method calcCoords;\n     * @memberOf fabric.Object.prototype\n     */\n    oCoords: null,\n\n    /**\n     * Describe object's corner position in canvas object absolute coordinates\n     * properties are tl,tr,bl,br and describe the four main corner.\n     * each property is an object with x, y, instance of Fabric.Point.\n     * The coordinates depends from this properties: width, height, scaleX, scaleY\n     * skewX, skewY, angle, strokeWidth, top, left.\n     * Those coordinates are usefull to understand where an object is. They get updated\n     * with oCoords but they do not need to be updated when zoom or panning change.\n     * The coordinates get updated with @method setCoords.\n     * You can calculate them without updating with @method calcCoords(true);\n     * @memberOf fabric.Object.prototype\n     */\n    aCoords: null,\n\n    /**\n     * storage for object transform matrix\n     */\n    ownMatrixCache: null,\n\n    /**\n     * storage for object full transform matrix\n     */\n    matrixCache: null,\n\n    /**\n     * return correct set of coordinates for intersection\n     */\n    getCoords: function(absolute, calculate) {\n      if (!this.oCoords) {\n        this.setCoords();\n      }\n      var coords = absolute ? this.aCoords : this.oCoords;\n      return getCoords(calculate ? this.calcCoords(absolute) : coords);\n    },\n\n    /**\n     * Checks if object intersects with an area formed by 2 points\n     * @param {Object} pointTL top-left point of area\n     * @param {Object} pointBR bottom-right point of area\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object intersects with an area formed by 2 points\n     */\n    intersectsWithRect: function(pointTL, pointBR, absolute, calculate) {\n      var coords = this.getCoords(absolute, calculate),\n          intersection = fabric.Intersection.intersectPolygonRectangle(\n            coords,\n            pointTL,\n            pointBR\n          );\n      return intersection.status === 'Intersection';\n    },\n\n    /**\n     * Checks if object intersects with another object\n     * @param {Object} other Object to test\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object intersects with another object\n     */\n    intersectsWithObject: function(other, absolute, calculate) {\n      var intersection = fabric.Intersection.intersectPolygonPolygon(\n        this.getCoords(absolute, calculate),\n        other.getCoords(absolute, calculate)\n      );\n\n      return intersection.status === 'Intersection'\n        || other.isContainedWithinObject(this, absolute, calculate)\n        || this.isContainedWithinObject(other, absolute, calculate);\n    },\n\n    /**\n     * Checks if object is fully contained within area of another object\n     * @param {Object} other Object to test\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is fully contained within area of another object\n     */\n    isContainedWithinObject: function(other, absolute, calculate) {\n      var points = this.getCoords(absolute, calculate),\n          i = 0, lines = other._getImageLines(\n            calculate ? other.calcCoords(absolute) : absolute ? other.aCoords : other.oCoords\n          );\n      for (; i < 4; i++) {\n        if (!other.containsPoint(points[i], lines)) {\n          return false;\n        }\n      }\n      return true;\n    },\n\n    /**\n     * Checks if object is fully contained within area formed by 2 points\n     * @param {Object} pointTL top-left point of area\n     * @param {Object} pointBR bottom-right point of area\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is fully contained within area formed by 2 points\n     */\n    isContainedWithinRect: function(pointTL, pointBR, absolute, calculate) {\n      var boundingRect = this.getBoundingRect(absolute, calculate);\n\n      return (\n        boundingRect.left >= pointTL.x &&\n        boundingRect.left + boundingRect.width <= pointBR.x &&\n        boundingRect.top >= pointTL.y &&\n        boundingRect.top + boundingRect.height <= pointBR.y\n      );\n    },\n\n    /**\n     * Checks if point is inside the object\n     * @param {fabric.Point} point Point to check against\n     * @param {Object} [lines] object returned from @method _getImageLines\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if point is inside the object\n     */\n    containsPoint: function(point, lines, absolute, calculate) {\n      var lines = lines || this._getImageLines(\n            calculate ? this.calcCoords(absolute) : absolute ? this.aCoords : this.oCoords\n          ),\n          xPoints = this._findCrossPoints(point, lines);\n\n      // if xPoints is odd then point is inside the object\n      return (xPoints !== 0 && xPoints % 2 === 1);\n    },\n\n    /**\n     * Checks if object is contained within the canvas with current viewportTransform\n     * the check is done stopping at first point that appear on screen\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is fully contained within canvas\n     */\n    isOnScreen: function(calculate) {\n      if (!this.canvas) {\n        return false;\n      }\n      var pointTL = this.canvas.vptCoords.tl, pointBR = this.canvas.vptCoords.br;\n      var points = this.getCoords(true, calculate), point;\n      for (var i = 0; i < 4; i++) {\n        point = points[i];\n        if (point.x <= pointBR.x && point.x >= pointTL.x && point.y <= pointBR.y && point.y >= pointTL.y) {\n          return true;\n        }\n      }\n      // no points on screen, check intersection with absolute coordinates\n      if (this.intersectsWithRect(pointTL, pointBR, true)) {\n        return true;\n      }\n      // worst case scenario the object is so big that contains the screen\n      var centerPoint = { x: (pointTL.x + pointBR.x) / 2, y: (pointTL.y + pointBR.y) / 2 };\n      if (this.containsPoint(centerPoint, null, true)) {\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * Method that returns an object with the object edges in it, given the coordinates of the corners\n     * @private\n     * @param {Object} oCoords Coordinates of the object corners\n     */\n    _getImageLines: function(oCoords) {\n      return {\n        topline: {\n          o: oCoords.tl,\n          d: oCoords.tr\n        },\n        rightline: {\n          o: oCoords.tr,\n          d: oCoords.br\n        },\n        bottomline: {\n          o: oCoords.br,\n          d: oCoords.bl\n        },\n        leftline: {\n          o: oCoords.bl,\n          d: oCoords.tl\n        }\n      };\n    },\n\n    /**\n     * Helper method to determine how many cross points are between the 4 object edges\n     * and the horizontal line determined by a point on canvas\n     * @private\n     * @param {fabric.Point} point Point to check\n     * @param {Object} lines Coordinates of the object being evaluated\n     */\n    // remove yi, not used but left code here just in case.\n    _findCrossPoints: function(point, lines) {\n      var b1, b2, a1, a2, xi, // yi,\n          xcount = 0,\n          iLine;\n\n      for (var lineKey in lines) {\n        iLine = lines[lineKey];\n        // optimisation 1: line below point. no cross\n        if ((iLine.o.y < point.y) && (iLine.d.y < point.y)) {\n          continue;\n        }\n        // optimisation 2: line above point. no cross\n        if ((iLine.o.y >= point.y) && (iLine.d.y >= point.y)) {\n          continue;\n        }\n        // optimisation 3: vertical line case\n        if ((iLine.o.x === iLine.d.x) && (iLine.o.x >= point.x)) {\n          xi = iLine.o.x;\n          // yi = point.y;\n        }\n        // calculate the intersection point\n        else {\n          b1 = 0;\n          b2 = (iLine.d.y - iLine.o.y) / (iLine.d.x - iLine.o.x);\n          a1 = point.y - b1 * point.x;\n          a2 = iLine.o.y - b2 * iLine.o.x;\n\n          xi = -(a1 - a2) / (b1 - b2);\n          // yi = a1 + b1 * xi;\n        }\n        // dont count xi < point.x cases\n        if (xi >= point.x) {\n          xcount += 1;\n        }\n        // optimisation 4: specific for square images\n        if (xcount === 2) {\n          break;\n        }\n      }\n      return xcount;\n    },\n\n    /**\n     * Returns coordinates of object's bounding rectangle (left, top, width, height)\n     * the box is intented as aligned to axis of canvas.\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords / .aCoords\n     * @return {Object} Object with left, top, width, height properties\n     */\n    getBoundingRect: function(absolute, calculate) {\n      var coords = this.getCoords(absolute, calculate);\n      return fabric.util.makeBoundingBoxFromPoints(coords);\n    },\n\n    /**\n     * Returns width of an object bounding box counting transformations\n     * @return {Number} width value\n     */\n    getScaledWidth: function() {\n      return this._getTransformedDimensions().x;\n    },\n\n    /**\n     * Returns height of an object bounding box counting transformations\n     * @return {Number} height value\n     */\n    getScaledHeight: function() {\n      return this._getTransformedDimensions().y;\n    },\n\n    /**\n     * Makes sure the scale is valid and modifies it if necessary\n     * @private\n     * @param {Number} value\n     * @return {Number}\n     */\n    _constrainScale: function(value) {\n      if (Math.abs(value) < this.minScaleLimit) {\n        if (value < 0) {\n          return -this.minScaleLimit;\n        }\n        else {\n          return this.minScaleLimit;\n        }\n      }\n      else if (value === 0) {\n        return 0.0001;\n      }\n      return value;\n    },\n\n    /**\n     * Scales an object (equally by x and y)\n     * @param {Number} value Scale factor\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scale: function(value) {\n      this._set('scaleX', value);\n      this._set('scaleY', value);\n      return this.setCoords();\n    },\n\n    /**\n     * Scales an object to a given width, with respect to bounding box (scaling by x/y equally)\n     * @param {Number} value New width value\n     * @param {Boolean} absolute ignore viewport\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scaleToWidth: function(value, absolute) {\n      // adjust to bounding rect factor so that rotated shapes would fit as well\n      var boundingRectFactor = this.getBoundingRect(absolute).width / this.getScaledWidth();\n      return this.scale(value / this.width / boundingRectFactor);\n    },\n\n    /**\n     * Scales an object to a given height, with respect to bounding box (scaling by x/y equally)\n     * @param {Number} value New height value\n     * @param {Boolean} absolute ignore viewport\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scaleToHeight: function(value, absolute) {\n      // adjust to bounding rect factor so that rotated shapes would fit as well\n      var boundingRectFactor = this.getBoundingRect(absolute).height / this.getScaledHeight();\n      return this.scale(value / this.height / boundingRectFactor);\n    },\n\n    /**\n     * Calculate and returns the .coords of an object.\n     * @return {Object} Object with tl, tr, br, bl ....\n     * @chainable\n     */\n    calcCoords: function(absolute) {\n      var theta = degreesToRadians(this.angle),\n          vpt = this.getViewportTransform(),\n          dim = absolute ? this._getTransformedDimensions() : this._calculateCurrentDimensions(),\n          currentWidth = dim.x, currentHeight = dim.y,\n          sinTh = theta ? Math.sin(theta) : 0,\n          cosTh = theta ? Math.cos(theta) : 1,\n          _angle = currentWidth > 0 ? Math.atan(currentHeight / currentWidth) : 0,\n          _hypotenuse = (currentWidth / Math.cos(_angle)) / 2,\n          offsetX = Math.cos(_angle + theta) * _hypotenuse,\n          offsetY = Math.sin(_angle + theta) * _hypotenuse,\n          center = this.getCenterPoint(),\n          // offset added for rotate and scale actions\n          coords = absolute ? center : fabric.util.transformPoint(center, vpt),\n          tl  = new fabric.Point(coords.x - offsetX, coords.y - offsetY),\n          tr  = new fabric.Point(tl.x + (currentWidth * cosTh), tl.y + (currentWidth * sinTh)),\n          bl  = new fabric.Point(tl.x - (currentHeight * sinTh), tl.y + (currentHeight * cosTh)),\n          br  = new fabric.Point(coords.x + offsetX, coords.y + offsetY);\n      if (!absolute) {\n        var ml  = new fabric.Point((tl.x + bl.x) / 2, (tl.y + bl.y) / 2),\n            mt  = new fabric.Point((tr.x + tl.x) / 2, (tr.y + tl.y) / 2),\n            mr  = new fabric.Point((br.x + tr.x) / 2, (br.y + tr.y) / 2),\n            mb  = new fabric.Point((br.x + bl.x) / 2, (br.y + bl.y) / 2),\n            mtr = new fabric.Point(mt.x + sinTh * this.rotatingPointOffset, mt.y - cosTh * this.rotatingPointOffset);\n      }\n\n      // debugging\n\n      /* setTimeout(function() {\n         canvas.contextTop.fillStyle = 'green';\n         canvas.contextTop.fillRect(mb.x, mb.y, 3, 3);\n         canvas.contextTop.fillRect(bl.x, bl.y, 3, 3);\n         canvas.contextTop.fillRect(br.x, br.y, 3, 3);\n         canvas.contextTop.fillRect(tl.x, tl.y, 3, 3);\n         canvas.contextTop.fillRect(tr.x, tr.y, 3, 3);\n         canvas.contextTop.fillRect(ml.x, ml.y, 3, 3);\n         canvas.contextTop.fillRect(mr.x, mr.y, 3, 3);\n         canvas.contextTop.fillRect(mt.x, mt.y, 3, 3);\n         canvas.contextTop.fillRect(mtr.x, mtr.y, 3, 3);\n       }, 50); */\n\n      var coords = {\n        // corners\n        tl: tl, tr: tr, br: br, bl: bl,\n      };\n      if (!absolute) {\n        // middle\n        coords.ml = ml;\n        coords.mt = mt;\n        coords.mr = mr;\n        coords.mb = mb;\n        // rotating point\n        coords.mtr = mtr;\n      }\n      return coords;\n    },\n\n    /**\n     * Sets corner position coordinates based on current angle, width and height\n     * See https://github.com/kangax/fabric.js/wiki/When-to-call-setCoords\n     * @param {Boolean} [ignoreZoom] set oCoords with or without the viewport transform.\n     * @param {Boolean} [skipAbsolute] skip calculation of aCoords, usefull in setViewportTransform\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setCoords: function(ignoreZoom, skipAbsolute) {\n      this.oCoords = this.calcCoords(ignoreZoom);\n      if (!skipAbsolute) {\n        this.aCoords = this.calcCoords(true);\n      }\n\n      // set coordinates of the draggable boxes in the corners used to scale/rotate the image\n      ignoreZoom || (this._setCornerCoords && this._setCornerCoords());\n\n      return this;\n    },\n\n    /**\n     * calculate rotation matrix of an object\n     * @return {Array} rotation matrix for the object\n     */\n    _calcRotateMatrix: function() {\n      if (this.angle) {\n        var theta = degreesToRadians(this.angle), cos = Math.cos(theta), sin = Math.sin(theta);\n        // trying to keep rounding error small, ugly but it works.\n        if (cos === 6.123233995736766e-17 || cos === -1.8369701987210297e-16) {\n          cos = 0;\n        }\n        return [cos, sin, -sin, cos, 0, 0];\n      }\n      return fabric.iMatrix.concat();\n    },\n\n    transformMatrixKey: function(skipGroup) {\n      var sep = '_', prefix = '';\n      if (!skipGroup && this.group) {\n        prefix = this.group.transformMatrixKey(skipGroup) + sep;\n      };\n      return prefix + this.top + sep + this.left + sep + this.scaleX + sep + this.scaleY +\n        sep + this.skewX + sep + this.skewY + sep + this.angle + sep + this.originX + sep + this.originY +\n        sep + this.width + sep + this.height + sep + this.strokeWidth + this.flipX + this.flipY;\n    },\n\n    /**\n     * calculate trasform Matrix that represent current transformation from\n     * object properties.\n     * @param {Boolean} [skipGroup] return transformMatrix for object and not go upward with parents\n     * @return {Array} matrix Transform Matrix for the object\n     */\n    calcTransformMatrix: function(skipGroup) {\n      if (skipGroup) {\n        return this.calcOwnMatrix();\n      }\n      var key = this.transformMatrixKey(), cache = this.matrixCache || (this.matrixCache = {});\n      if (cache.key === key) {\n        return cache.value;\n      }\n      var matrix = this.calcOwnMatrix();\n      if (this.group) {\n        matrix = multiplyMatrices(this.group.calcTransformMatrix(), matrix);\n      }\n      cache.key = key;\n      cache.value = matrix;\n      return matrix;\n    },\n\n    calcOwnMatrix: function() {\n      var key = this.transformMatrixKey(true), cache = this.ownMatrixCache || (this.ownMatrixCache = {});\n      if (cache.key === key) {\n        return cache.value;\n      }\n      var center = this.getCenterPoint(),\n          matrix = [1, 0, 0, 1, center.x, center.y],\n          rotateMatrix,\n          dimensionMatrix = this._calcDimensionsTransformMatrix(this.skewX, this.skewY, true);\n      if (this.angle) {\n        rotateMatrix = this._calcRotateMatrix();\n        matrix = multiplyMatrices(matrix, rotateMatrix);\n      }\n      matrix = multiplyMatrices(matrix, dimensionMatrix);\n      cache.key = key;\n      cache.value = matrix;\n      return matrix;\n    },\n\n    _calcDimensionsTransformMatrix: function(skewX, skewY, flipping) {\n      var skewMatrix,\n          scaleX = this.scaleX * (flipping && this.flipX ? -1 : 1),\n          scaleY = this.scaleY * (flipping && this.flipY ? -1 : 1),\n          scaleMatrix = [scaleX, 0, 0, scaleY, 0, 0];\n      if (skewX) {\n        skewMatrix = [1, 0, Math.tan(degreesToRadians(skewX)), 1];\n        scaleMatrix = multiplyMatrices(scaleMatrix, skewMatrix, true);\n      }\n      if (skewY) {\n        skewMatrix = [1, Math.tan(degreesToRadians(skewY)), 0, 1];\n        scaleMatrix = multiplyMatrices(scaleMatrix, skewMatrix, true);\n      }\n      return scaleMatrix;\n    },\n\n\n    /*\n     * Calculate object dimensions from its properties\n     * @private\n     * @return {Object} .x width dimension\n     * @return {Object} .y height dimension\n     */\n    _getNonTransformedDimensions: function() {\n      var strokeWidth = this.strokeWidth,\n          w = this.width + strokeWidth,\n          h = this.height + strokeWidth;\n      return { x: w, y: h };\n    },\n\n    /*\n     * Calculate object bounding boxdimensions from its properties scale, skew.\n     * @private\n     * @return {Object} .x width dimension\n     * @return {Object} .y height dimension\n     */\n    _getTransformedDimensions: function(skewX, skewY) {\n      if (typeof skewX === 'undefined') {\n        skewX = this.skewX;\n      }\n      if (typeof skewY === 'undefined') {\n        skewY = this.skewY;\n      }\n      var dimensions = this._getNonTransformedDimensions(),\n          dimX = dimensions.x / 2, dimY = dimensions.y / 2,\n          points = [\n            {\n              x: -dimX,\n              y: -dimY\n            },\n            {\n              x: dimX,\n              y: -dimY\n            },\n            {\n              x: -dimX,\n              y: dimY\n            },\n            {\n              x: dimX,\n              y: dimY\n            }],\n          i, transformMatrix = this._calcDimensionsTransformMatrix(skewX, skewY, false),\n          bbox;\n      for (i = 0; i < points.length; i++) {\n        points[i] = fabric.util.transformPoint(points[i], transformMatrix);\n      }\n      bbox = fabric.util.makeBoundingBoxFromPoints(points);\n      return { x: bbox.width, y: bbox.height };\n    },\n\n    /*\n     * Calculate object dimensions for controls. include padding and canvas zoom\n     * private\n     */\n    _calculateCurrentDimensions: function()  {\n      var vpt = this.getViewportTransform(),\n          dim = this._getTransformedDimensions(),\n          p = fabric.util.transformPoint(dim, vpt, true);\n\n      return p.scalarAdd(2 * this.padding);\n    },\n  });\n})();\n\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n  /**\n   * Moves an object to the bottom of the stack of drawn objects\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  sendToBack: function() {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.sendToBack.call(this.group, this);\n    }\n    else {\n      this.canvas.sendToBack(this);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object to the top of the stack of drawn objects\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  bringToFront: function() {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.bringToFront.call(this.group, this);\n    }\n    else {\n      this.canvas.bringToFront(this);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object down in stack of drawn objects\n   * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  sendBackwards: function(intersecting) {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.sendBackwards.call(this.group, this, intersecting);\n    }\n    else {\n      this.canvas.sendBackwards(this, intersecting);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object up in stack of drawn objects\n   * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  bringForward: function(intersecting) {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.bringForward.call(this.group, this, intersecting);\n    }\n    else {\n      this.canvas.bringForward(this, intersecting);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object to specified level in stack of drawn objects\n   * @param {Number} index New position of object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  moveTo: function(index) {\n    if (this.group && this.group.type !== 'activeSelection') {\n      fabric.StaticCanvas.prototype.moveTo.call(this.group, this, index);\n    }\n    else {\n      this.canvas.moveTo(this, index);\n    }\n    return this;\n  }\n});\n\n\n/* _TO_SVG_START_ */\n(function() {\n  function getSvgColorString(prop, value) {\n    if (!value) {\n      return prop + ': none; ';\n    }\n    else if (value.toLive) {\n      return prop + ': url(#SVGID_' + value.id + '); ';\n    }\n    else {\n      var color = new fabric.Color(value),\n          str = prop + ': ' + color.toRgb() + '; ',\n          opacity = color.getAlpha();\n      if (opacity !== 1) {\n        //change the color in rgb + opacity\n        str += prop + '-opacity: ' + opacity.toString() + '; ';\n      }\n      return str;\n    }\n  }\n\n  var toFixed = fabric.util.toFixed;\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n    /**\n     * Returns styles-string for svg-export\n     * @param {Boolean} skipShadow a boolean to skip shadow filter output\n     * @return {String}\n     */\n    getSvgStyles: function(skipShadow) {\n\n      var fillRule = this.fillRule,\n          strokeWidth = this.strokeWidth ? this.strokeWidth : '0',\n          strokeDashArray = this.strokeDashArray ? this.strokeDashArray.join(' ') : 'none',\n          strokeLineCap = this.strokeLineCap ? this.strokeLineCap : 'butt',\n          strokeLineJoin = this.strokeLineJoin ? this.strokeLineJoin : 'miter',\n          strokeMiterLimit = this.strokeMiterLimit ? this.strokeMiterLimit : '4',\n          opacity = typeof this.opacity !== 'undefined' ? this.opacity : '1',\n          visibility = this.visible ? '' : ' visibility: hidden;',\n          filter = skipShadow ? '' : this.getSvgFilter(),\n          fill = getSvgColorString('fill', this.fill),\n          stroke = getSvgColorString('stroke', this.stroke);\n\n      return [\n        stroke,\n        'stroke-width: ', strokeWidth, '; ',\n        'stroke-dasharray: ', strokeDashArray, '; ',\n        'stroke-linecap: ', strokeLineCap, '; ',\n        'stroke-linejoin: ', strokeLineJoin, '; ',\n        'stroke-miterlimit: ', strokeMiterLimit, '; ',\n        fill,\n        'fill-rule: ', fillRule, '; ',\n        'opacity: ', opacity, ';',\n        filter,\n        visibility\n      ].join('');\n    },\n\n    /**\n     * Returns styles-string for svg-export\n     * @param {Object} style style properties for the span a boolean to skip shadow filter output\n     * @param {Boolean} useWhiteSpace a boolean to include an additional attribute in the style.\n     * @return {String}\n     */\n    getSvgSpanStyles: function(style, useWhiteSpace) {\n      var term = '; ',\n          strokeWidth = style.strokeWidth ? 'stroke-width: ' + style.strokeWidth + term : '',\n          fontFamily = style.fontFamily ? 'font-family: ' + style.fontFamily.replace(/\"/g, '\\'') + term : '',\n          fontSize = style.fontSize ? 'font-size: ' + style.fontSize + 'px' + term : '',\n          fontStyle = style.fontStyle ? 'font-style: ' + style.fontStyle + term : '',\n          fontWeight = style.fontWeight ? 'font-weight: ' + style.fontWeight + term : '',\n          fill = style.fill ? getSvgColorString('fill', style.fill) : '',\n          stroke = style.stroke ? getSvgColorString('stroke', style.stroke) : '',\n          textDecoration = this.getSvgTextDecoration(style);\n      if (textDecoration) {\n        textDecoration = 'text-decoration: ' + textDecoration + term;\n      }\n      return [\n        stroke,\n        strokeWidth,\n        fontFamily,\n        fontSize,\n        fontStyle,\n        fontWeight,\n        textDecoration,\n        fill,\n        useWhiteSpace ? 'white-space: pre; ' : ''\n      ].join('');\n    },\n\n    getSvgTextDecoration: function(style) {\n      if ('overline' in style || 'underline' in style || 'linethrough' in style) {\n        return (style.overline ? 'overline ' : '') +\n          (style.underline ? 'underline ' : '') + (style.linethrough ? 'line-through ' : '');\n      }\n      return '';\n    },\n\n    /**\n     * Returns filter for svg shadow\n     * @return {String}\n     */\n    getSvgFilter: function() {\n      return this.shadow ? 'filter: url(#SVGID_' + this.shadow.id + ');' : '';\n    },\n\n    /**\n     * Returns id attribute for svg output\n     * @return {String}\n     */\n    getSvgId: function() {\n      return this.id ? 'id=\"' + this.id + '\" ' : '';\n    },\n\n    /**\n     * Returns transform-string for svg-export\n     * @return {String}\n     */\n    getSvgTransform: function() {\n      var angle = this.angle,\n          skewX = (this.skewX % 360),\n          skewY = (this.skewY % 360),\n          center = this.getCenterPoint(),\n\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n\n          translatePart = 'translate(' +\n                            toFixed(center.x, NUM_FRACTION_DIGITS) +\n                            ' ' +\n                            toFixed(center.y, NUM_FRACTION_DIGITS) +\n                          ')',\n\n          anglePart = angle !== 0\n            ? (' rotate(' + toFixed(angle, NUM_FRACTION_DIGITS) + ')')\n            : '',\n\n          scalePart = (this.scaleX === 1 && this.scaleY === 1)\n            ? '' :\n            (' scale(' +\n              toFixed(this.scaleX, NUM_FRACTION_DIGITS) +\n              ' ' +\n              toFixed(this.scaleY, NUM_FRACTION_DIGITS) +\n            ')'),\n\n          skewXPart = skewX !== 0 ? ' skewX(' + toFixed(skewX, NUM_FRACTION_DIGITS) + ')' : '',\n\n          skewYPart = skewY !== 0 ? ' skewY(' + toFixed(skewY, NUM_FRACTION_DIGITS) + ')' : '',\n\n          flipXPart = this.flipX ? ' matrix(-1 0 0 1 0 0) ' : '',\n\n          flipYPart = this.flipY ? ' matrix(1 0 0 -1 0 0)' : '';\n\n      return [\n        translatePart, anglePart, scalePart, flipXPart, flipYPart, skewXPart, skewYPart\n      ].join('');\n    },\n\n    /**\n     * Returns transform-string for svg-export from the transform matrix of single elements\n     * @return {String}\n     */\n    getSvgTransformMatrix: function() {\n      return this.transformMatrix ? ' matrix(' + this.transformMatrix.join(' ') + ') ' : '';\n    },\n\n    _setSVGBg: function(textBgRects) {\n      if (this.backgroundColor) {\n        var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n        textBgRects.push(\n          '\\t\\t<rect ',\n          this._getFillAttributes(this.backgroundColor),\n          ' x=\"',\n          toFixed(-this.width / 2, NUM_FRACTION_DIGITS),\n          '\" y=\"',\n          toFixed(-this.height / 2, NUM_FRACTION_DIGITS),\n          '\" width=\"',\n          toFixed(this.width, NUM_FRACTION_DIGITS),\n          '\" height=\"',\n          toFixed(this.height, NUM_FRACTION_DIGITS),\n          '\"></rect>\\n');\n      }\n    },\n\n    /**\n     * @private\n     */\n    _createBaseSVGMarkup: function() {\n      var markup = [];\n\n      if (this.fill && this.fill.toLive) {\n        markup.push(this.fill.toSVG(this, false));\n      }\n      if (this.stroke && this.stroke.toLive) {\n        markup.push(this.stroke.toSVG(this, false));\n      }\n      if (this.shadow) {\n        markup.push(this.shadow.toSVG(this));\n      }\n      return markup;\n    },\n\n    addPaintOrder: function() {\n      return this.paintFirst !== 'fill' ? ' paint-order=\"' + this.paintFirst + '\" ' : '';\n    }\n  });\n})();\n/* _TO_SVG_END_ */\n\n\n(function() {\n\n  var extend = fabric.util.object.extend,\n      originalSet = 'stateProperties';\n\n  /*\n    Depends on `stateProperties`\n  */\n  function saveProps(origin, destination, props) {\n    var tmpObj = { }, deep = true;\n    props.forEach(function(prop) {\n      tmpObj[prop] = origin[prop];\n    });\n    extend(origin[destination], tmpObj, deep);\n  }\n\n  function _isEqual(origValue, currentValue, firstPass) {\n    if (origValue === currentValue) {\n      // if the objects are identical, return\n      return true;\n    }\n    else if (Array.isArray(origValue)) {\n      if (origValue.length !== currentValue.length) {\n        return false;\n      }\n      for (var i = 0, len = origValue.length; i < len; i++) {\n        if (!_isEqual(origValue[i], currentValue[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    else if (origValue && typeof origValue === 'object') {\n      var keys = Object.keys(origValue), key;\n      if (!firstPass && keys.length !== Object.keys(currentValue).length) {\n        return false;\n      }\n      for (var i = 0, len = keys.length; i < len; i++) {\n        key = keys[i];\n        if (!_isEqual(origValue[key], currentValue[key])) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Returns true if object state (one of its state properties) was changed\n     * @param {String} [propertySet] optional name for the set of property we want to save\n     * @return {Boolean} true if instance' state has changed since `{@link fabric.Object#saveState}` was called\n     */\n    hasStateChanged: function(propertySet) {\n      propertySet = propertySet || originalSet;\n      var dashedPropertySet = '_' + propertySet;\n      if (Object.keys(this[dashedPropertySet]).length < this[propertySet].length) {\n        return true;\n      }\n      return !_isEqual(this[dashedPropertySet], this, true);\n    },\n\n    /**\n     * Saves state of an object\n     * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\n     * @return {fabric.Object} thisArg\n     */\n    saveState: function(options) {\n      var propertySet = options && options.propertySet || originalSet,\n          destination = '_' + propertySet;\n      if (!this[destination]) {\n        return this.setupState(options);\n      }\n      saveProps(this, destination, this[propertySet]);\n      if (options && options.stateProperties) {\n        saveProps(this, destination, options.stateProperties);\n      }\n      return this;\n    },\n\n    /**\n     * Setups state of an object\n     * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\n     * @return {fabric.Object} thisArg\n     */\n    setupState: function(options) {\n      options = options || { };\n      var propertySet = options.propertySet || originalSet;\n      options.propertySet = propertySet;\n      this['_' + propertySet] = { };\n      this.saveState(options);\n      return this;\n    }\n  });\n})();\n\n\n(function() {\n\n  var degreesToRadians = fabric.util.degreesToRadians;\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * The object interactivity controls.\n     * @private\n     */\n    _controlsVisibility: null,\n\n    /**\n     * Determines which corner has been clicked\n     * @private\n     * @param {Object} pointer The pointer indicating the mouse position\n     * @return {String|Boolean} corner code (tl, tr, bl, br, etc.), or false if nothing is found\n     */\n    _findTargetCorner: function(pointer) {\n      // objects in group, anykind, are not self modificable,\n      // must not return an hovered corner.\n      if (!this.hasControls || this.group || (!this.canvas || this.canvas._activeObject !== this)) {\n        return false;\n      }\n\n      var ex = pointer.x,\n          ey = pointer.y,\n          xPoints,\n          lines;\n      this.__corner = 0;\n      for (var i in this.oCoords) {\n\n        if (!this.isControlVisible(i)) {\n          continue;\n        }\n\n        if (i === 'mtr' && !this.hasRotatingPoint) {\n          continue;\n        }\n\n        if (this.get('lockUniScaling') &&\n           (i === 'mt' || i === 'mr' || i === 'mb' || i === 'ml')) {\n          continue;\n        }\n\n        lines = this._getImageLines(this.oCoords[i].corner);\n\n        // debugging\n\n        // canvas.contextTop.fillRect(lines.bottomline.d.x, lines.bottomline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.bottomline.o.x, lines.bottomline.o.y, 2, 2);\n\n        // canvas.contextTop.fillRect(lines.leftline.d.x, lines.leftline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.leftline.o.x, lines.leftline.o.y, 2, 2);\n\n        // canvas.contextTop.fillRect(lines.topline.d.x, lines.topline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.topline.o.x, lines.topline.o.y, 2, 2);\n\n        // canvas.contextTop.fillRect(lines.rightline.d.x, lines.rightline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.rightline.o.x, lines.rightline.o.y, 2, 2);\n\n        xPoints = this._findCrossPoints({ x: ex, y: ey }, lines);\n        if (xPoints !== 0 && xPoints % 2 === 1) {\n          this.__corner = i;\n          return i;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Sets the coordinates of the draggable boxes in the corners of\n     * the image used to scale/rotate it.\n     * @private\n     */\n    _setCornerCoords: function() {\n      var coords = this.oCoords,\n          newTheta = degreesToRadians(45 - this.angle),\n          /* Math.sqrt(2 * Math.pow(this.cornerSize, 2)) / 2, */\n          /* 0.707106 stands for sqrt(2)/2 */\n          cornerHypotenuse = this.cornerSize * 0.707106,\n          cosHalfOffset = cornerHypotenuse * Math.cos(newTheta),\n          sinHalfOffset = cornerHypotenuse * Math.sin(newTheta),\n          x, y;\n\n      for (var point in coords) {\n        x = coords[point].x;\n        y = coords[point].y;\n        coords[point].corner = {\n          tl: {\n            x: x - sinHalfOffset,\n            y: y - cosHalfOffset\n          },\n          tr: {\n            x: x + cosHalfOffset,\n            y: y - sinHalfOffset\n          },\n          bl: {\n            x: x - cosHalfOffset,\n            y: y + sinHalfOffset\n          },\n          br: {\n            x: x + sinHalfOffset,\n            y: y + cosHalfOffset\n          }\n        };\n      }\n    },\n\n    /**\n     * Draws a colored layer behind the object, inside its selection borders.\n     * Requires public options: padding, selectionBackgroundColor\n     * this function is called when the context is transformed\n     * has checks to be skipped when the object is on a staticCanvas\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawSelectionBackground: function(ctx) {\n      if (!this.selectionBackgroundColor ||\n        (this.canvas && !this.canvas.interactive) ||\n        (this.canvas && this.canvas._activeObject !== this)\n      ) {\n        return this;\n      }\n      ctx.save();\n      var center = this.getCenterPoint(), wh = this._calculateCurrentDimensions(),\n          vpt = this.canvas.viewportTransform;\n      ctx.translate(center.x, center.y);\n      ctx.scale(1 / vpt[0], 1 / vpt[3]);\n      ctx.rotate(degreesToRadians(this.angle));\n      ctx.fillStyle = this.selectionBackgroundColor;\n      ctx.fillRect(-wh.x / 2, -wh.y / 2, wh.x, wh.y);\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws borders of an object's bounding box.\n     * Requires public properties: width, height\n     * Requires public options: padding, borderColor\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @param {Object} styleOverride object to override the object style\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawBorders: function(ctx, styleOverride) {\n      styleOverride = styleOverride || {};\n      var wh = this._calculateCurrentDimensions(),\n          strokeWidth = 1 / this.borderScaleFactor,\n          width = wh.x + strokeWidth,\n          height = wh.y + strokeWidth,\n          drawRotatingPoint = typeof styleOverride.hasRotatingPoint !== 'undefined' ?\n            styleOverride.hasRotatingPoint : this.hasRotatingPoint,\n          hasControls = typeof styleOverride.hasControls !== 'undefined' ?\n            styleOverride.hasControls : this.hasControls,\n          rotatingPointOffset = typeof styleOverride.rotatingPointOffset !== 'undefined' ?\n            styleOverride.rotatingPointOffset : this.rotatingPointOffset;\n\n      ctx.save();\n      ctx.strokeStyle = styleOverride.borderColor || this.borderColor;\n      this._setLineDash(ctx, styleOverride.borderDashArray || this.borderDashArray, null);\n\n      ctx.strokeRect(\n        -width / 2,\n        -height / 2,\n        width,\n        height\n      );\n\n      if (drawRotatingPoint && this.isControlVisible('mtr') && hasControls) {\n\n        var rotateHeight = -height / 2;\n\n        ctx.beginPath();\n        ctx.moveTo(0, rotateHeight);\n        ctx.lineTo(0, rotateHeight - rotatingPointOffset);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws borders of an object's bounding box when it is inside a group.\n     * Requires public properties: width, height\n     * Requires public options: padding, borderColor\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @param {object} options object representing current object parameters\n     * @param {Object} styleOverride object to override the object style\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawBordersInGroup: function(ctx, options, styleOverride) {\n      styleOverride = styleOverride || {};\n      var p = this._getNonTransformedDimensions(),\n          matrix = fabric.util.customTransformMatrix(options.scaleX, options.scaleY, options.skewX),\n          wh = fabric.util.transformPoint(p, matrix),\n          strokeWidth = 1 / this.borderScaleFactor,\n          width = wh.x + strokeWidth,\n          height = wh.y + strokeWidth;\n\n      ctx.save();\n      this._setLineDash(ctx, styleOverride.borderDashArray || this.borderDashArray, null);\n      ctx.strokeStyle = styleOverride.borderColor || this.borderColor;\n\n      ctx.strokeRect(\n        -width / 2,\n        -height / 2,\n        width,\n        height\n      );\n\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws corners of an object's bounding box.\n     * Requires public properties: width, height\n     * Requires public options: cornerSize, padding\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @param {Object} styleOverride object to override the object style\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawControls: function(ctx, styleOverride) {\n      styleOverride = styleOverride || {};\n      var wh = this._calculateCurrentDimensions(),\n          width = wh.x,\n          height = wh.y,\n          scaleOffset = styleOverride.cornerSize || this.cornerSize,\n          left = -(width + scaleOffset) / 2,\n          top = -(height + scaleOffset) / 2,\n          transparentCorners = typeof styleOverride.transparentCorners !== 'undefined' ?\n            styleOverride.transparentCorners : this.transparentCorners,\n          hasRotatingPoint = typeof styleOverride.hasRotatingPoint !== 'undefined' ?\n            styleOverride.hasRotatingPoint : this.hasRotatingPoint,\n          methodName = transparentCorners ? 'stroke' : 'fill';\n\n      ctx.save();\n      ctx.strokeStyle = ctx.fillStyle = styleOverride.cornerColor || this.cornerColor;\n      if (!this.transparentCorners) {\n        ctx.strokeStyle = styleOverride.cornerStrokeColor || this.cornerStrokeColor;\n      }\n      this._setLineDash(ctx, styleOverride.cornerDashArray || this.cornerDashArray, null);\n\n      // top-left\n      this._drawControl('tl', ctx, methodName,\n        left,\n        top, styleOverride);\n\n      // top-right\n      this._drawControl('tr', ctx, methodName,\n        left + width,\n        top, styleOverride);\n\n      // bottom-left\n      this._drawControl('bl', ctx, methodName,\n        left,\n        top + height, styleOverride);\n\n      // bottom-right\n      this._drawControl('br', ctx, methodName,\n        left + width,\n        top + height, styleOverride);\n\n      if (!this.get('lockUniScaling')) {\n\n        // middle-top\n        this._drawControl('mt', ctx, methodName,\n          left + width / 2,\n          top, styleOverride);\n\n        // middle-bottom\n        this._drawControl('mb', ctx, methodName,\n          left + width / 2,\n          top + height, styleOverride);\n\n        // middle-right\n        this._drawControl('mr', ctx, methodName,\n          left + width,\n          top + height / 2, styleOverride);\n\n        // middle-left\n        this._drawControl('ml', ctx, methodName,\n          left,\n          top + height / 2, styleOverride);\n      }\n\n      // middle-top-rotate\n      if (hasRotatingPoint) {\n        this._drawControl('mtr', ctx, methodName,\n          left + width / 2,\n          top - this.rotatingPointOffset, styleOverride);\n      }\n\n      ctx.restore();\n\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _drawControl: function(control, ctx, methodName, left, top, styleOverride) {\n      styleOverride = styleOverride || {};\n      if (!this.isControlVisible(control)) {\n        return;\n      }\n      var size = this.cornerSize, stroke = !this.transparentCorners && this.cornerStrokeColor;\n      switch (styleOverride.cornerStyle || this.cornerStyle) {\n        case 'circle':\n          ctx.beginPath();\n          ctx.arc(left + size / 2, top + size / 2, size / 2, 0, 2 * Math.PI, false);\n          ctx[methodName]();\n          if (stroke) {\n            ctx.stroke();\n          }\n          break;\n        default:\n          this.transparentCorners || ctx.clearRect(left, top, size, size);\n          ctx[methodName + 'Rect'](left, top, size, size);\n          if (stroke) {\n            ctx.strokeRect(left, top, size, size);\n          }\n      }\n    },\n\n    /**\n     * Returns true if the specified control is visible, false otherwise.\n     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n     * @returns {Boolean} true if the specified control is visible, false otherwise\n     */\n    isControlVisible: function(controlName) {\n      return this._getControlsVisibility()[controlName];\n    },\n\n    /**\n     * Sets the visibility of the specified control.\n     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n     * @param {Boolean} visible true to set the specified control visible, false otherwise\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setControlVisible: function(controlName, visible) {\n      this._getControlsVisibility()[controlName] = visible;\n      return this;\n    },\n\n    /**\n     * Sets the visibility state of object controls.\n     * @param {Object} [options] Options object\n     * @param {Boolean} [options.bl] true to enable the bottom-left control, false to disable it\n     * @param {Boolean} [options.br] true to enable the bottom-right control, false to disable it\n     * @param {Boolean} [options.mb] true to enable the middle-bottom control, false to disable it\n     * @param {Boolean} [options.ml] true to enable the middle-left control, false to disable it\n     * @param {Boolean} [options.mr] true to enable the middle-right control, false to disable it\n     * @param {Boolean} [options.mt] true to enable the middle-top control, false to disable it\n     * @param {Boolean} [options.tl] true to enable the top-left control, false to disable it\n     * @param {Boolean} [options.tr] true to enable the top-right control, false to disable it\n     * @param {Boolean} [options.mtr] true to enable the middle-top-rotate control, false to disable it\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setControlsVisibility: function(options) {\n      options || (options = { });\n\n      for (var p in options) {\n        this.setControlVisible(p, options[p]);\n      }\n      return this;\n    },\n\n    /**\n     * Returns the instance of the control visibility set for this object.\n     * @private\n     * @returns {Object}\n     */\n    _getControlsVisibility: function() {\n      if (!this._controlsVisibility) {\n        this._controlsVisibility = {\n          tl: true,\n          tr: true,\n          br: true,\n          bl: true,\n          ml: true,\n          mt: true,\n          mr: true,\n          mb: true,\n          mtr: true\n        };\n      }\n      return this._controlsVisibility;\n    },\n\n    /**\n     * This callback function is called every time _discardActiveObject or _setActiveObject\n     * try to to deselect this object. If the function returns true, the process is cancelled\n     * @param {Object} [options] options sent from the upper functions\n     * @param {Event} [options.e] event if the process is generated by an event\n     */\n    onDeselect: function() {\n      // implemented by sub-classes, as needed.\n    },\n\n\n    /**\n     * This callback function is called every time _discardActiveObject or _setActiveObject\n     * try to to select this object. If the function returns true, the process is cancelled\n     * @param {Object} [options] options sent from the upper functions\n     * @param {Event} [options.e] event if the process is generated by an event\n     */\n    onSelect: function() {\n      // implemented by sub-classes, as needed.\n    }\n  });\n})();\n\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Animation duration (in ms) for fx* methods\n   * @type Number\n   * @default\n   */\n  FX_DURATION: 500,\n\n  /**\n   * Centers object horizontally with animation.\n   * @param {fabric.Object} object Object to center\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxCenterObjectH: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.left,\n      endValue: this.getCenter().left,\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        object.set('left', value);\n        _this.requestRenderAll();\n        onChange();\n      },\n      onComplete: function() {\n        object.setCoords();\n        onComplete();\n      }\n    });\n\n    return this;\n  },\n\n  /**\n   * Centers object vertically with animation.\n   * @param {fabric.Object} object Object to center\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxCenterObjectV: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.top,\n      endValue: this.getCenter().top,\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        object.set('top', value);\n        _this.requestRenderAll();\n        onChange();\n      },\n      onComplete: function() {\n        object.setCoords();\n        onComplete();\n      }\n    });\n\n    return this;\n  },\n\n  /**\n   * Same as `fabric.Canvas#remove` but animated\n   * @param {fabric.Object} object Object to remove\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxRemove: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.opacity,\n      endValue: 0,\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        object.set('opacity', value);\n        _this.requestRenderAll();\n        onChange();\n      },\n      onComplete: function () {\n        _this.remove(object);\n        onComplete();\n      }\n    });\n\n    return this;\n  }\n});\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n  /**\n   * Animates object's properties\n   * @param {String|Object} property Property to animate (if string) or properties to animate (if object)\n   * @param {Number|Object} value Value to animate property to (if string was given first) or options object\n   * @return {fabric.Object} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#animation}\n   * @chainable\n   *\n   * As object — multiple properties\n   *\n   * object.animate({ left: ..., top: ... });\n   * object.animate({ left: ..., top: ... }, { duration: ... });\n   *\n   * As string — one property\n   *\n   * object.animate('left', ...);\n   * object.animate('left', { duration: ... });\n   *\n   */\n  animate: function() {\n    if (arguments[0] && typeof arguments[0] === 'object') {\n      var propsToAnimate = [], prop, skipCallbacks;\n      for (prop in arguments[0]) {\n        propsToAnimate.push(prop);\n      }\n      for (var i = 0, len = propsToAnimate.length; i < len; i++) {\n        prop = propsToAnimate[i];\n        skipCallbacks = i !== len - 1;\n        this._animate(prop, arguments[0][prop], arguments[1], skipCallbacks);\n      }\n    }\n    else {\n      this._animate.apply(this, arguments);\n    }\n    return this;\n  },\n\n  /**\n   * @private\n   * @param {String} property Property to animate\n   * @param {String} to Value to animate to\n   * @param {Object} [options] Options object\n   * @param {Boolean} [skipCallbacks] When true, callbacks like onchange and oncomplete are not invoked\n   */\n  _animate: function(property, to, options, skipCallbacks) {\n    var _this = this, propPair;\n\n    to = to.toString();\n\n    if (!options) {\n      options = { };\n    }\n    else {\n      options = fabric.util.object.clone(options);\n    }\n\n    if (~property.indexOf('.')) {\n      propPair = property.split('.');\n    }\n\n    var currentValue = propPair\n      ? this.get(propPair[0])[propPair[1]]\n      : this.get(property);\n\n    if (!('from' in options)) {\n      options.from = currentValue;\n    }\n\n    if (~to.indexOf('=')) {\n      to = currentValue + parseFloat(to.replace('=', ''));\n    }\n    else {\n      to = parseFloat(to);\n    }\n\n    fabric.util.animate({\n      startValue: options.from,\n      endValue: to,\n      byValue: options.by,\n      easing: options.easing,\n      duration: options.duration,\n      abort: options.abort && function() {\n        return options.abort.call(_this);\n      },\n      onChange: function(value, valueProgress, timeProgress) {\n        if (propPair) {\n          _this[propPair[0]][propPair[1]] = value;\n        }\n        else {\n          _this.set(property, value);\n        }\n        if (skipCallbacks) {\n          return;\n        }\n        options.onChange && options.onChange(value, valueProgress, timeProgress);\n      },\n      onComplete: function(value, valueProgress, timeProgress) {\n        if (skipCallbacks) {\n          return;\n        }\n\n        _this.setCoords();\n        options.onComplete && options.onComplete(value, valueProgress, timeProgress);\n      }\n    });\n  }\n});\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      coordProps = { x1: 1, x2: 1, y1: 1, y2: 1 },\n      supportsLineDash = fabric.StaticCanvas.supports('setLineDash');\n\n  if (fabric.Line) {\n    fabric.warn('fabric.Line is already defined');\n    return;\n  }\n\n  /**\n   * Line class\n   * @class fabric.Line\n   * @extends fabric.Object\n   * @see {@link fabric.Line#initialize} for constructor definition\n   */\n  fabric.Line = fabric.util.createClass(fabric.Object, /** @lends fabric.Line.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'line',\n\n    /**\n     * x value or first line edge\n     * @type Number\n     * @default\n     */\n    x1: 0,\n\n    /**\n     * y value or first line edge\n     * @type Number\n     * @default\n     */\n    y1: 0,\n\n    /**\n     * x value or second line edge\n     * @type Number\n     * @default\n     */\n    x2: 0,\n\n    /**\n     * y value or second line edge\n     * @type Number\n     * @default\n     */\n    y2: 0,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('x1', 'x2', 'y1', 'y2'),\n\n    /**\n     * Constructor\n     * @param {Array} [points] Array of points\n     * @param {Object} [options] Options object\n     * @return {fabric.Line} thisArg\n     */\n    initialize: function(points, options) {\n      if (!points) {\n        points = [0, 0, 0, 0];\n      }\n\n      this.callSuper('initialize', options);\n\n      this.set('x1', points[0]);\n      this.set('y1', points[1]);\n      this.set('x2', points[2]);\n      this.set('y2', points[3]);\n\n      this._setWidthHeight(options);\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options\n     */\n    _setWidthHeight: function(options) {\n      options || (options = { });\n\n      this.width = Math.abs(this.x2 - this.x1);\n      this.height = Math.abs(this.y2 - this.y1);\n\n      this.left = 'left' in options\n        ? options.left\n        : this._getLeftToOriginX();\n\n      this.top = 'top' in options\n        ? options.top\n        : this._getTopToOriginY();\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n      if (typeof coordProps[key] !== 'undefined') {\n        this._setWidthHeight();\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     * @return {Number} leftToOriginX Distance from left edge of canvas to originX of Line.\n     */\n    _getLeftToOriginX: makeEdgeToOriginGetter(\n      { // property names\n        origin: 'originX',\n        axis1: 'x1',\n        axis2: 'x2',\n        dimension: 'width'\n      },\n      { // possible values of origin\n        nearest: 'left',\n        center: 'center',\n        farthest: 'right'\n      }\n    ),\n\n    /**\n     * @private\n     * @return {Number} topToOriginY Distance from top edge of canvas to originY of Line.\n     */\n    _getTopToOriginY: makeEdgeToOriginGetter(\n      { // property names\n        origin: 'originY',\n        axis1: 'y1',\n        axis2: 'y2',\n        dimension: 'height'\n      },\n      { // possible values of origin\n        nearest: 'top',\n        center: 'center',\n        farthest: 'bottom'\n      }\n    ),\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      ctx.beginPath();\n\n      if (!this.strokeDashArray || this.strokeDashArray && supportsLineDash) {\n        // move from center (of virtual box) to its left/top corner\n        // we can't assume x1, y1 is top left and x2, y2 is bottom right\n        var p = this.calcLinePoints();\n        ctx.moveTo(p.x1, p.y1);\n        ctx.lineTo(p.x2, p.y2);\n      }\n\n      ctx.lineWidth = this.strokeWidth;\n\n      // TODO: test this\n      // make sure setting \"fill\" changes color of a line\n      // (by copying fillStyle to strokeStyle, since line is stroked, not filled)\n      var origStrokeStyle = ctx.strokeStyle;\n      ctx.strokeStyle = this.stroke || ctx.fillStyle;\n      this.stroke && this._renderStroke(ctx);\n      ctx.strokeStyle = origStrokeStyle;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var p = this.calcLinePoints();\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, p.x1, p.y1, p.x2, p.y2, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /**\n     * This function is an helper for svg import. it returns the center of the object in the svg\n     * untransformed coordinates\n     * @private\n     * @return {Object} center point from element coordinates\n     */\n    _findCenterFromElement: function() {\n      return {\n        x: (this.x1 + this.x2) / 2,\n        y: (this.y1 + this.y2) / 2,\n      };\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @methd toObject\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), this.calcLinePoints());\n    },\n\n    /*\n     * Calculate object dimensions from its properties\n     * @private\n     */\n    _getNonTransformedDimensions: function() {\n      var dim = this.callSuper('_getNonTransformedDimensions');\n      if (this.strokeLineCap === 'butt') {\n        if (this.width === 0) {\n          dim.y -= this.strokeWidth;\n        }\n        if (this.height === 0) {\n          dim.x -= this.strokeWidth;\n        }\n      }\n      return dim;\n    },\n\n    /**\n     * Recalculates line points given width and height\n     * @private\n     */\n    calcLinePoints: function() {\n      var xMult = this.x1 <= this.x2 ? -1 : 1,\n          yMult = this.y1 <= this.y2 ? -1 : 1,\n          x1 = (xMult * this.width * 0.5),\n          y1 = (yMult * this.height * 0.5),\n          x2 = (xMult * this.width * -0.5),\n          y2 = (yMult * this.height * -0.5);\n\n      return {\n        x1: x1,\n        x2: x2,\n        y1: y1,\n        y2: y2\n      };\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(),\n          p = this.calcLinePoints();\n      markup.push(\n        '<line ', this.getSvgId(),\n        'x1=\"', p.x1,\n        '\" y1=\"', p.y1,\n        '\" x2=\"', p.x2,\n        '\" y2=\"', p.y2,\n        '\" style=\"', this.getSvgStyles(),\n        '\" transform=\"', this.getSvgTransform(),\n        this.getSvgTransformMatrix(),\n        '\"/>\\n'\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Line.fromElement})\n   * @static\n   * @memberOf fabric.Line\n   * @see http://www.w3.org/TR/SVG/shapes.html#LineElement\n   */\n  fabric.Line.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x1 y1 x2 y2'.split(' '));\n\n  /**\n   * Returns fabric.Line instance from an SVG element\n   * @static\n   * @memberOf fabric.Line\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @param {Function} [callback] callback function invoked after parsing\n   */\n  fabric.Line.fromElement = function(element, callback, options) {\n    options = options || { };\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Line.ATTRIBUTE_NAMES),\n        points = [\n          parsedAttributes.x1 || 0,\n          parsedAttributes.y1 || 0,\n          parsedAttributes.x2 || 0,\n          parsedAttributes.y2 || 0\n        ];\n    callback(new fabric.Line(points, extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Line instance from an object representation\n   * @static\n   * @memberOf fabric.Line\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   */\n  fabric.Line.fromObject = function(object, callback) {\n    function _callback(instance) {\n      delete instance.points;\n      callback && callback(instance);\n    };\n    var options = clone(object, true);\n    options.points = [object.x1, object.y1, object.x2, object.y2];\n    fabric.Object._fromObject('Line', options, _callback, 'points');\n  };\n\n  /**\n   * Produces a function that calculates distance from canvas edge to Line origin.\n   */\n  function makeEdgeToOriginGetter(propertyNames, originValues) {\n    var origin = propertyNames.origin,\n        axis1 = propertyNames.axis1,\n        axis2 = propertyNames.axis2,\n        dimension = propertyNames.dimension,\n        nearest = originValues.nearest,\n        center = originValues.center,\n        farthest = originValues.farthest;\n\n    return function() {\n      switch (this.get(origin)) {\n        case nearest:\n          return Math.min(this.get(axis1), this.get(axis2));\n        case center:\n          return Math.min(this.get(axis1), this.get(axis2)) + (0.5 * this.get(dimension));\n        case farthest:\n          return Math.max(this.get(axis1), this.get(axis2));\n      }\n    };\n\n  }\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      pi = Math.PI;\n\n  if (fabric.Circle) {\n    fabric.warn('fabric.Circle is already defined.');\n    return;\n  }\n\n  /**\n   * Circle class\n   * @class fabric.Circle\n   * @extends fabric.Object\n   * @see {@link fabric.Circle#initialize} for constructor definition\n   */\n  fabric.Circle = fabric.util.createClass(fabric.Object, /** @lends fabric.Circle.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'circle',\n\n    /**\n     * Radius of this circle\n     * @type Number\n     * @default\n     */\n    radius: 0,\n\n    /**\n     * Start angle of the circle, moving clockwise\n     * @type Number\n     * @default 0\n     */\n    startAngle: 0,\n\n    /**\n     * End angle of the circle\n     * @type Number\n     * @default 2Pi\n     */\n    endAngle: pi * 2,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('radius'),\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Circle} thisArg\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n\n      if (key === 'radius') {\n        this.setRadius(value);\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['radius', 'startAngle', 'endAngle'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(), x = 0, y = 0,\n          angle = (this.endAngle - this.startAngle) % ( 2 * pi);\n\n      if (angle === 0) {\n        markup.push(\n          '<circle ', this.getSvgId(),\n          'cx=\"' + x + '\" cy=\"' + y + '\" ',\n          'r=\"', this.radius,\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(),\n          ' ', this.getSvgTransformMatrix(), '\"',\n          this.addPaintOrder(),\n          '/>\\n'\n        );\n      }\n      else {\n        var startX = Math.cos(this.startAngle) * this.radius,\n            startY = Math.sin(this.startAngle) * this.radius,\n            endX = Math.cos(this.endAngle) * this.radius,\n            endY = Math.sin(this.endAngle) * this.radius,\n            largeFlag = angle > pi ? '1' : '0';\n\n        markup.push(\n          '<path d=\"M ' + startX + ' ' + startY,\n          ' A ' + this.radius + ' ' + this.radius,\n          ' 0 ', +largeFlag + ' 1', ' ' + endX + ' ' + endY,\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(),\n          ' ', this.getSvgTransformMatrix(), '\"',\n          this.addPaintOrder(),\n          '\"/>\\n'\n        );\n      }\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render on\n     */\n    _render: function(ctx) {\n      ctx.beginPath();\n      ctx.arc(\n        0,\n        0,\n        this.radius,\n        this.startAngle,\n        this.endAngle, false);\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * Returns horizontal radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRadiusX: function() {\n      return this.get('radius') * this.get('scaleX');\n    },\n\n    /**\n     * Returns vertical radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRadiusY: function() {\n      return this.get('radius') * this.get('scaleY');\n    },\n\n    /**\n     * Sets radius of an object (and updates width accordingly)\n     * @return {fabric.Circle} thisArg\n     */\n    setRadius: function(value) {\n      this.radius = value;\n      return this.set('width', value * 2).set('height', value * 2);\n    },\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Circle.fromElement})\n   * @static\n   * @memberOf fabric.Circle\n   * @see: http://www.w3.org/TR/SVG/shapes.html#CircleElement\n   */\n  fabric.Circle.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy r'.split(' '));\n\n  /**\n   * Returns {@link fabric.Circle} instance from an SVG element\n   * @static\n   * @memberOf fabric.Circle\n   * @param {SVGElement} element Element to parse\n   * @param {Function} [callback] Options callback invoked after parsing is finished\n   * @param {Object} [options] Options object\n   * @throws {Error} If value of `r` attribute is missing or invalid\n   */\n  fabric.Circle.fromElement = function(element, callback) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Circle.ATTRIBUTE_NAMES);\n\n    if (!isValidRadius(parsedAttributes)) {\n      throw new Error('value of `r` attribute is required and can not be negative');\n    }\n\n    parsedAttributes.left = (parsedAttributes.left || 0) - parsedAttributes.radius;\n    parsedAttributes.top = (parsedAttributes.top || 0) - parsedAttributes.radius;\n    callback(new fabric.Circle(parsedAttributes));\n  };\n\n  /**\n   * @private\n   */\n  function isValidRadius(attributes) {\n    return (('radius' in attributes) && (attributes.radius >= 0));\n  }\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Circle} instance from an object representation\n   * @static\n   * @memberOf fabric.Circle\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   * @return {Object} Instance of fabric.Circle\n   */\n  fabric.Circle.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Circle', object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Triangle) {\n    fabric.warn('fabric.Triangle is already defined');\n    return;\n  }\n\n  /**\n   * Triangle class\n   * @class fabric.Triangle\n   * @extends fabric.Object\n   * @return {fabric.Triangle} thisArg\n   * @see {@link fabric.Triangle#initialize} for constructor definition\n   */\n  fabric.Triangle = fabric.util.createClass(fabric.Object, /** @lends fabric.Triangle.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'triangle',\n\n    /**\n     * Width is set to 100 to compensate the old initialize code that was setting it to 100\n     * @type Number\n     * @default\n     */\n    width: 100,\n\n    /**\n     * Height is set to 100 to compensate the old initialize code that was setting it to 100\n     * @type Number\n     * @default\n     */\n    height: 100,\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2;\n\n      ctx.beginPath();\n      ctx.moveTo(-widthBy2, heightBy2);\n      ctx.lineTo(0, -heightBy2);\n      ctx.lineTo(widthBy2, heightBy2);\n      ctx.closePath();\n\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2;\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, -widthBy2, heightBy2, 0, -heightBy2, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, 0, -heightBy2, widthBy2, heightBy2, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, widthBy2, heightBy2, -widthBy2, heightBy2, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(),\n          widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2,\n          points = [\n            -widthBy2 + ' ' + heightBy2,\n            '0 ' + -heightBy2,\n            widthBy2 + ' ' + heightBy2\n          ]\n            .join(',');\n\n      markup.push(\n        '<polygon ', this.getSvgId(),\n        'points=\"', points,\n        '\" style=\"', this.getSvgStyles(),\n        '\" transform=\"', this.getSvgTransform(), '\"',\n        this.addPaintOrder(),\n        '/>'\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /**\n   * Returns {@link fabric.Triangle} instance from an object representation\n   * @static\n   * @memberOf fabric.Triangle\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   */\n  fabric.Triangle.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Triangle', object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      piBy2   = Math.PI * 2;\n\n  if (fabric.Ellipse) {\n    fabric.warn('fabric.Ellipse is already defined.');\n    return;\n  }\n\n  /**\n   * Ellipse class\n   * @class fabric.Ellipse\n   * @extends fabric.Object\n   * @return {fabric.Ellipse} thisArg\n   * @see {@link fabric.Ellipse#initialize} for constructor definition\n   */\n  fabric.Ellipse = fabric.util.createClass(fabric.Object, /** @lends fabric.Ellipse.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'ellipse',\n\n    /**\n     * Horizontal radius\n     * @type Number\n     * @default\n     */\n    rx:   0,\n\n    /**\n     * Vertical radius\n     * @type Number\n     * @default\n     */\n    ry:   0,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('rx', 'ry'),\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {fabric.Ellipse} thisArg\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      this.set('rx', options && options.rx || 0);\n      this.set('ry', options && options.ry || 0);\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Ellipse} thisArg\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n      switch (key) {\n\n        case 'rx':\n          this.rx = value;\n          this.set('width', value * 2);\n          break;\n\n        case 'ry':\n          this.ry = value;\n          this.set('height', value * 2);\n          break;\n\n      }\n      return this;\n    },\n\n    /**\n     * Returns horizontal radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRx: function() {\n      return this.get('rx') * this.get('scaleX');\n    },\n\n    /**\n     * Returns Vertical radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRy: function() {\n      return this.get('ry') * this.get('scaleY');\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup();\n      markup.push(\n        '<ellipse ', this.getSvgId(),\n        'cx=\"0\" cy=\"0\" ',\n        'rx=\"', this.rx,\n        '\" ry=\"', this.ry,\n        '\" style=\"', this.getSvgStyles(),\n        '\" transform=\"', this.getSvgTransform(),\n        this.getSvgTransformMatrix(), '\"',\n        this.addPaintOrder(),\n        '/>\\n'\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render on\n     */\n    _render: function(ctx) {\n      ctx.beginPath();\n      ctx.save();\n      ctx.transform(1, 0, 0, this.ry / this.rx, 0, 0);\n      ctx.arc(\n        0,\n        0,\n        this.rx,\n        0,\n        piBy2,\n        false);\n      ctx.restore();\n      this._renderPaintInOrder(ctx);\n    },\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Ellipse.fromElement})\n   * @static\n   * @memberOf fabric.Ellipse\n   * @see http://www.w3.org/TR/SVG/shapes.html#EllipseElement\n   */\n  fabric.Ellipse.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy rx ry'.split(' '));\n\n  /**\n   * Returns {@link fabric.Ellipse} instance from an SVG element\n   * @static\n   * @memberOf fabric.Ellipse\n   * @param {SVGElement} element Element to parse\n   * @param {Function} [callback] Options callback invoked after parsing is finished\n   * @return {fabric.Ellipse}\n   */\n  fabric.Ellipse.fromElement = function(element, callback) {\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Ellipse.ATTRIBUTE_NAMES);\n\n    parsedAttributes.left = (parsedAttributes.left || 0) - parsedAttributes.rx;\n    parsedAttributes.top = (parsedAttributes.top || 0) - parsedAttributes.ry;\n    callback(new fabric.Ellipse(parsedAttributes));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Ellipse} instance from an object representation\n   * @static\n   * @memberOf fabric.Ellipse\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   * @return {fabric.Ellipse}\n   */\n  fabric.Ellipse.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Ellipse', object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend;\n\n  if (fabric.Rect) {\n    fabric.warn('fabric.Rect is already defined');\n    return;\n  }\n\n  /**\n   * Rectangle class\n   * @class fabric.Rect\n   * @extends fabric.Object\n   * @return {fabric.Rect} thisArg\n   * @see {@link fabric.Rect#initialize} for constructor definition\n   */\n  fabric.Rect = fabric.util.createClass(fabric.Object, /** @lends fabric.Rect.prototype */ {\n\n    /**\n     * List of properties to consider when checking if state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: fabric.Object.prototype.stateProperties.concat('rx', 'ry'),\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'rect',\n\n    /**\n     * Horizontal border radius\n     * @type Number\n     * @default\n     */\n    rx:   0,\n\n    /**\n     * Vertical border radius\n     * @type Number\n     * @default\n     */\n    ry:   0,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('rx', 'ry'),\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      this._initRxRy();\n    },\n\n    /**\n     * Initializes rx/ry attributes\n     * @private\n     */\n    _initRxRy: function() {\n      if (this.rx && !this.ry) {\n        this.ry = this.rx;\n      }\n      else if (this.ry && !this.rx) {\n        this.rx = this.ry;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n\n      // optimize 1x1 case (used in spray brush)\n      if (this.width === 1 && this.height === 1) {\n        ctx.fillRect(-0.5, -0.5, 1, 1);\n        return;\n      }\n\n      var rx = this.rx ? Math.min(this.rx, this.width / 2) : 0,\n          ry = this.ry ? Math.min(this.ry, this.height / 2) : 0,\n          w = this.width,\n          h = this.height,\n          x = -this.width / 2,\n          y = -this.height / 2,\n          isRounded = rx !== 0 || ry !== 0,\n          /* \"magic number\" for bezier approximations of arcs (http://itc.ktu.lt/itc354/Riskus354.pdf) */\n          k = 1 - 0.5522847498;\n      ctx.beginPath();\n\n      ctx.moveTo(x + rx, y);\n\n      ctx.lineTo(x + w - rx, y);\n      isRounded && ctx.bezierCurveTo(x + w - k * rx, y, x + w, y + k * ry, x + w, y + ry);\n\n      ctx.lineTo(x + w, y + h - ry);\n      isRounded && ctx.bezierCurveTo(x + w, y + h - k * ry, x + w - k * rx, y + h, x + w - rx, y + h);\n\n      ctx.lineTo(x + rx, y + h);\n      isRounded && ctx.bezierCurveTo(x + k * rx, y + h, x, y + h - k * ry, x, y + h - ry);\n\n      ctx.lineTo(x, y + ry);\n      isRounded && ctx.bezierCurveTo(x, y + k * ry, x + k * rx, y, x + rx, y);\n\n      ctx.closePath();\n\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var x = -this.width / 2,\n          y = -this.height / 2,\n          w = this.width,\n          h = this.height;\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(), x = -this.width / 2, y = -this.height / 2;\n      markup.push(\n        '<rect ', this.getSvgId(),\n        'x=\"', x, '\" y=\"', y,\n        '\" rx=\"', this.get('rx'), '\" ry=\"', this.get('ry'),\n        '\" width=\"', this.width, '\" height=\"', this.height,\n        '\" style=\"', this.getSvgStyles(),\n        '\" transform=\"', this.getSvgTransform(),\n        this.getSvgTransformMatrix(), '\"',\n        this.addPaintOrder(),\n        '/>\\n');\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Rect.fromElement`)\n   * @static\n   * @memberOf fabric.Rect\n   * @see: http://www.w3.org/TR/SVG/shapes.html#RectElement\n   */\n  fabric.Rect.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x y rx ry width height'.split(' '));\n\n  /**\n   * Returns {@link fabric.Rect} instance from an SVG element\n   * @static\n   * @memberOf fabric.Rect\n   * @param {SVGElement} element Element to parse\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n  fabric.Rect.fromElement = function(element, callback, options) {\n    if (!element) {\n      return callback(null);\n    }\n    options = options || { };\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Rect.ATTRIBUTE_NAMES);\n\n    parsedAttributes.left = parsedAttributes.left || 0;\n    parsedAttributes.top  = parsedAttributes.top  || 0;\n    var rect = new fabric.Rect(extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\n    rect.visible = rect.visible && rect.width > 0 && rect.height > 0;\n    callback(rect);\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Rect} instance from an object representation\n   * @static\n   * @memberOf fabric.Rect\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Rect instance is created\n   */\n  fabric.Rect.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Rect', object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      min = fabric.util.array.min,\n      max = fabric.util.array.max,\n      toFixed = fabric.util.toFixed;\n\n  if (fabric.Polyline) {\n    fabric.warn('fabric.Polyline is already defined');\n    return;\n  }\n\n  /**\n   * Polyline class\n   * @class fabric.Polyline\n   * @extends fabric.Object\n   * @see {@link fabric.Polyline#initialize} for constructor definition\n   */\n  fabric.Polyline = fabric.util.createClass(fabric.Object, /** @lends fabric.Polyline.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'polyline',\n\n    /**\n     * Points array\n     * @type Array\n     * @default\n     */\n    points: null,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('points'),\n\n    /**\n     * Constructor\n     * @param {Array} points Array of points (where each point is an object with x and y)\n     * @param {Object} [options] Options object\n     * @return {fabric.Polyline} thisArg\n     * @example\n     * var poly = new fabric.Polyline([\n     *     { x: 10, y: 10 },\n     *     { x: 50, y: 30 },\n     *     { x: 40, y: 70 },\n     *     { x: 60, y: 50 },\n     *     { x: 100, y: 150 },\n     *     { x: 40, y: 100 }\n     *   ], {\n     *   stroke: 'red',\n     *   left: 100,\n     *   top: 100\n     * });\n     */\n    initialize: function(points, options) {\n      options = options || {};\n      this.points = points || [];\n      this.callSuper('initialize', options);\n      var calcDim = this._calcDimensions();\n      if (typeof options.left === 'undefined') {\n        this.left = calcDim.left;\n      }\n      if (typeof options.top === 'undefined') {\n        this.top = calcDim.top;\n      }\n      this.width = calcDim.width;\n      this.height = calcDim.height;\n      this.pathOffset = {\n        x: calcDim.left + this.width / 2,\n        y: calcDim.top + this.height / 2\n      };\n    },\n\n    /**\n     * Calculate the polygon min and max point from points array,\n     * returning an object with left, top, widht, height to measure the\n     * polygon size\n     * @return {Object} object.left X coordinate of the polygon leftmost point\n     * @return {Object} object.top Y coordinate of the polygon topmost point\n     * @return {Object} object.width distance between X coordinates of the polygon leftmost and rightmost point\n     * @return {Object} object.height distance between Y coordinates of the polygon topmost and bottommost point\n     * @private\n     */\n    _calcDimensions: function() {\n\n      var points = this.points,\n          minX = min(points, 'x') || 0,\n          minY = min(points, 'y') || 0,\n          maxX = max(points, 'x') || 0,\n          maxY = max(points, 'y') || 0,\n          width = (maxX - minX),\n          height = (maxY - minY);\n\n      return {\n        left: minX,\n        top: minY,\n        width: width,\n        height: height\n      };\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), {\n        points: this.points.concat()\n      });\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var points = [], diffX = this.pathOffset.x, diffY = this.pathOffset.y,\n          markup = this._createBaseSVGMarkup(),\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n      for (var i = 0, len = this.points.length; i < len; i++) {\n        points.push(\n          toFixed(this.points[i].x - diffX, NUM_FRACTION_DIGITS), ',',\n          toFixed(this.points[i].y - diffY, NUM_FRACTION_DIGITS), ' '\n        );\n      }\n      markup.push(\n        '<', this.type, ' ', this.getSvgId(),\n        'points=\"', points.join(''),\n        '\" style=\"', this.getSvgStyles(),\n        '\" transform=\"', this.getSvgTransform(),\n        ' ', this.getSvgTransformMatrix(), '\"',\n        this.addPaintOrder(),\n        '/>\\n'\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    commonRender: function(ctx) {\n      var point, len = this.points.length,\n          x = this.pathOffset.x,\n          y = this.pathOffset.y;\n\n      if (!len || isNaN(this.points[len - 1].y)) {\n        // do not draw if no points or odd points\n        // NaN comes from parseFloat of a empty string in parser\n        return false;\n      }\n      ctx.beginPath();\n      ctx.moveTo(this.points[0].x - x, this.points[0].y - y);\n      for (var i = 0; i < len; i++) {\n        point = this.points[i];\n        ctx.lineTo(point.x - x, point.y - y);\n      }\n      return true;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      if (!this.commonRender(ctx)) {\n        return;\n      }\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var p1, p2;\n\n      ctx.beginPath();\n      for (var i = 0, len = this.points.length; i < len; i++) {\n        p1 = this.points[i];\n        p2 = this.points[i + 1] || p1;\n        fabric.util.drawDashedLine(ctx, p1.x, p1.y, p2.x, p2.y, this.strokeDashArray);\n      }\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return this.get('points').length;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Polyline.fromElement})\n   * @static\n   * @memberOf fabric.Polyline\n   * @see: http://www.w3.org/TR/SVG/shapes.html#PolylineElement\n   */\n  fabric.Polyline.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n\n  /**\n   * Returns fabric.Polyline instance from an SVG element\n   * @static\n   * @memberOf fabric.Polyline\n   * @param {SVGElement} element Element to parser\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n  fabric.Polyline.fromElement = function(element, callback, options) {\n    if (!element) {\n      return callback(null);\n    }\n    options || (options = { });\n\n    var points = fabric.parsePointsAttribute(element.getAttribute('points')),\n        parsedAttributes = fabric.parseAttributes(element, fabric.Polyline.ATTRIBUTE_NAMES);\n\n    callback(new fabric.Polyline(points, fabric.util.object.extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Polyline instance from an object representation\n   * @static\n   * @memberOf fabric.Polyline\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   */\n  fabric.Polyline.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Polyline', object, callback, 'points');\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend;\n\n  if (fabric.Polygon) {\n    fabric.warn('fabric.Polygon is already defined');\n    return;\n  }\n\n  /**\n   * Polygon class\n   * @class fabric.Polygon\n   * @extends fabric.Polyline\n   * @see {@link fabric.Polygon#initialize} for constructor definition\n   */\n  fabric.Polygon = fabric.util.createClass(fabric.Polyline, /** @lends fabric.Polygon.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'polygon',\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      if (!this.commonRender(ctx)) {\n        return;\n      }\n      ctx.closePath();\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      this.callSuper('_renderDashedStroke', ctx);\n      ctx.closePath();\n    },\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Polygon.fromElement`)\n   * @static\n   * @memberOf fabric.Polygon\n   * @see: http://www.w3.org/TR/SVG/shapes.html#PolygonElement\n   */\n  fabric.Polygon.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n\n  /**\n   * Returns {@link fabric.Polygon} instance from an SVG element\n   * @static\n   * @memberOf fabric.Polygon\n   * @param {SVGElement} element Element to parse\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n  fabric.Polygon.fromElement = function(element, callback, options) {\n    if (!element) {\n      return callback(null);\n    }\n\n    options || (options = { });\n\n    var points = fabric.parsePointsAttribute(element.getAttribute('points')),\n        parsedAttributes = fabric.parseAttributes(element, fabric.Polygon.ATTRIBUTE_NAMES);\n\n    callback(new fabric.Polygon(points, extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Polygon instance from an object representation\n   * @static\n   * @memberOf fabric.Polygon\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   */\n  fabric.Polygon.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Polygon', object, callback, 'points');\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      min = fabric.util.array.min,\n      max = fabric.util.array.max,\n      extend = fabric.util.object.extend,\n      _toString = Object.prototype.toString,\n      drawArc = fabric.util.drawArc,\n      commandLengths = {\n        m: 2,\n        l: 2,\n        h: 1,\n        v: 1,\n        c: 6,\n        s: 4,\n        q: 4,\n        t: 2,\n        a: 7\n      },\n      repeatedCommands = {\n        m: 'l',\n        M: 'L'\n      };\n\n  if (fabric.Path) {\n    fabric.warn('fabric.Path is already defined');\n    return;\n  }\n\n  /**\n   * Path class\n   * @class fabric.Path\n   * @extends fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#path_and_pathgroup}\n   * @see {@link fabric.Path#initialize} for constructor definition\n   */\n  fabric.Path = fabric.util.createClass(fabric.Object, /** @lends fabric.Path.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'path',\n\n    /**\n     * Array of path points\n     * @type Array\n     * @default\n     */\n    path: null,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('path', 'fillRule'),\n\n    stateProperties: fabric.Object.prototype.stateProperties.concat('path'),\n\n    /**\n     * Constructor\n     * @param {Array|String} path Path data (sequence of coordinates and corresponding \"command\" tokens)\n     * @param {Object} [options] Options object\n     * @return {fabric.Path} thisArg\n     */\n    initialize: function(path, options) {\n      options = options || { };\n      this.callSuper('initialize', options);\n\n      if (!path) {\n        path = [];\n      }\n\n      var fromArray = _toString.call(path) === '[object Array]';\n\n      this.path = fromArray\n        ? path\n        // one of commands (m,M,l,L,q,Q,c,C,etc.) followed by non-command characters (i.e. command values)\n        : path.match && path.match(/[mzlhvcsqta][^mzlhvcsqta]*/gi);\n\n      if (!this.path) {\n        return;\n      }\n\n      if (!fromArray) {\n        this.path = this._parsePath();\n      }\n\n      this._setPositionDimensions(options);\n    },\n\n    /**\n     * @private\n     * @param {Object} options Options object\n     */\n    _setPositionDimensions: function(options) {\n      var calcDim = this._parseDimensions();\n\n      this.width = calcDim.width;\n      this.height = calcDim.height;\n\n      if (typeof options.left === 'undefined') {\n        this.left = calcDim.left;\n      }\n\n      if (typeof options.top === 'undefined') {\n        this.top = calcDim.top;\n      }\n\n      this.pathOffset = this.pathOffset || {\n        x: calcDim.left + this.width / 2,\n        y: calcDim.top + this.height / 2\n      };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render path on\n     */\n    _renderPathCommands: function(ctx) {\n      var current, // current instruction\n          previous = null,\n          subpathStartX = 0,\n          subpathStartY = 0,\n          x = 0, // current x\n          y = 0, // current y\n          controlX = 0, // current control point x\n          controlY = 0, // current control point y\n          tempX,\n          tempY,\n          l = -this.pathOffset.x,\n          t = -this.pathOffset.y;\n\n      ctx.beginPath();\n\n      for (var i = 0, len = this.path.length; i < len; ++i) {\n\n        current = this.path[i];\n\n        switch (current[0]) { // first letter\n\n          case 'l': // lineto, relative\n            x += current[1];\n            y += current[2];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'L': // lineto, absolute\n            x = current[1];\n            y = current[2];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'h': // horizontal lineto, relative\n            x += current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'H': // horizontal lineto, absolute\n            x = current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'v': // vertical lineto, relative\n            y += current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'V': // verical lineto, absolute\n            y = current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'm': // moveTo, relative\n            x += current[1];\n            y += current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            ctx.moveTo(x + l, y + t);\n            break;\n\n          case 'M': // moveTo, absolute\n            x = current[1];\n            y = current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            ctx.moveTo(x + l, y + t);\n            break;\n\n          case 'c': // bezierCurveTo, relative\n            tempX = x + current[5];\n            tempY = y + current[6];\n            controlX = x + current[3];\n            controlY = y + current[4];\n            ctx.bezierCurveTo(\n              x + current[1] + l, // x1\n              y + current[2] + t, // y1\n              controlX + l, // x2\n              controlY + t, // y2\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'C': // bezierCurveTo, absolute\n            x = current[5];\n            y = current[6];\n            controlX = current[3];\n            controlY = current[4];\n            ctx.bezierCurveTo(\n              current[1] + l,\n              current[2] + t,\n              controlX + l,\n              controlY + t,\n              x + l,\n              y + t\n            );\n            break;\n\n          case 's': // shorthand cubic bezierCurveTo, relative\n\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            ctx.bezierCurveTo(\n              controlX + l,\n              controlY + t,\n              x + current[1] + l,\n              y + current[2] + t,\n              tempX + l,\n              tempY + t\n            );\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = x + current[1];\n            controlY = y + current[2];\n\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'S': // shorthand cubic bezierCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            ctx.bezierCurveTo(\n              controlX + l,\n              controlY + t,\n              current[1] + l,\n              current[2] + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = current[1];\n            controlY = current[2];\n\n            break;\n\n          case 'q': // quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            controlX = x + current[1];\n            controlY = y + current[2];\n\n            ctx.quadraticCurveTo(\n              controlX + l,\n              controlY + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'Q': // quadraticCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n\n            ctx.quadraticCurveTo(\n              current[1] + l,\n              current[2] + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            controlX = current[1];\n            controlY = current[2];\n            break;\n\n          case 't': // shorthand quadraticCurveTo, relative\n\n            // transform to absolute x,y\n            tempX = x + current[1];\n            tempY = y + current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            ctx.quadraticCurveTo(\n              controlX + l,\n              controlY + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n\n            break;\n\n          case 'T':\n            tempX = current[1];\n            tempY = current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            ctx.quadraticCurveTo(\n              controlX + l,\n              controlY + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'a':\n            // TODO: optimize this\n            drawArc(ctx, x + l, y + t, [\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6] + x + l,\n              current[7] + y + t\n            ]);\n            x += current[6];\n            y += current[7];\n            break;\n\n          case 'A':\n            // TODO: optimize this\n            drawArc(ctx, x + l, y + t, [\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6] + l,\n              current[7] + t\n            ]);\n            x = current[6];\n            y = current[7];\n            break;\n\n          case 'z':\n          case 'Z':\n            x = subpathStartX;\n            y = subpathStartY;\n            ctx.closePath();\n            break;\n        }\n        previous = current;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render path on\n     */\n    _render: function(ctx) {\n      this._renderPathCommands(ctx);\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} string representation of an instance\n     */\n    toString: function() {\n      return '#<fabric.Path (' + this.complexity() +\n        '): { \"top\": ' + this.top + ', \"left\": ' + this.left + ' }>';\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var o = extend(this.callSuper('toObject', propertiesToInclude), {\n        path: this.path.map(function(item) { return item.slice(); }),\n        top: this.top,\n        left: this.left,\n      });\n      return o;\n    },\n\n    /**\n     * Returns dataless object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      var o = this.toObject(['sourcePath'].concat(propertiesToInclude));\n      if (o.sourcePath) {\n        delete o.path;\n      }\n      return o;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var chunks = [],\n          markup = this._createBaseSVGMarkup(), addTransform = '';\n\n      for (var i = 0, len = this.path.length; i < len; i++) {\n        chunks.push(this.path[i].join(' '));\n      }\n      var path = chunks.join(' ');\n      addTransform = ' translate(' + (-this.pathOffset.x) + ', ' + (-this.pathOffset.y) + ') ';\n      markup.push(\n        '<path ', this.getSvgId(),\n        'd=\"', path,\n        '\" style=\"', this.getSvgStyles(),\n        '\" transform=\"', this.getSvgTransform(), addTransform,\n        this.getSvgTransformMatrix(), '\" stroke-linecap=\"round\" ',\n        this.addPaintOrder(),\n        '/>\\n'\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns number representation of an instance complexity\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return this.path.length;\n    },\n\n    /**\n     * @private\n     */\n    _parsePath: function() {\n      var result = [],\n          coords = [],\n          currentPath,\n          parsed,\n          re = /([-+]?((\\d+\\.\\d+)|((\\d+)|(\\.\\d+)))(?:e[-+]?\\d+)?)/ig,\n          match,\n          coordsStr;\n\n      for (var i = 0, coordsParsed, len = this.path.length; i < len; i++) {\n        currentPath = this.path[i];\n\n        coordsStr = currentPath.slice(1).trim();\n        coords.length = 0;\n\n        while ((match = re.exec(coordsStr))) {\n          coords.push(match[0]);\n        }\n\n        coordsParsed = [currentPath.charAt(0)];\n\n        for (var j = 0, jlen = coords.length; j < jlen; j++) {\n          parsed = parseFloat(coords[j]);\n          if (!isNaN(parsed)) {\n            coordsParsed.push(parsed);\n          }\n        }\n\n        var command = coordsParsed[0],\n            commandLength = commandLengths[command.toLowerCase()],\n            repeatedCommand = repeatedCommands[command] || command;\n\n        if (coordsParsed.length - 1 > commandLength) {\n          for (var k = 1, klen = coordsParsed.length; k < klen; k += commandLength) {\n            result.push([command].concat(coordsParsed.slice(k, k + commandLength)));\n            command = repeatedCommand;\n          }\n        }\n        else {\n          result.push(coordsParsed);\n        }\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _parseDimensions: function() {\n\n      var aX = [],\n          aY = [],\n          current, // current instruction\n          previous = null,\n          subpathStartX = 0,\n          subpathStartY = 0,\n          x = 0, // current x\n          y = 0, // current y\n          controlX = 0, // current control point x\n          controlY = 0, // current control point y\n          tempX,\n          tempY,\n          bounds;\n\n      for (var i = 0, len = this.path.length; i < len; ++i) {\n\n        current = this.path[i];\n\n        switch (current[0]) { // first letter\n\n          case 'l': // lineto, relative\n            x += current[1];\n            y += current[2];\n            bounds = [];\n            break;\n\n          case 'L': // lineto, absolute\n            x = current[1];\n            y = current[2];\n            bounds = [];\n            break;\n\n          case 'h': // horizontal lineto, relative\n            x += current[1];\n            bounds = [];\n            break;\n\n          case 'H': // horizontal lineto, absolute\n            x = current[1];\n            bounds = [];\n            break;\n\n          case 'v': // vertical lineto, relative\n            y += current[1];\n            bounds = [];\n            break;\n\n          case 'V': // verical lineto, absolute\n            y = current[1];\n            bounds = [];\n            break;\n\n          case 'm': // moveTo, relative\n            x += current[1];\n            y += current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            bounds = [];\n            break;\n\n          case 'M': // moveTo, absolute\n            x = current[1];\n            y = current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            bounds = [];\n            break;\n\n          case 'c': // bezierCurveTo, relative\n            tempX = x + current[5];\n            tempY = y + current[6];\n            controlX = x + current[3];\n            controlY = y + current[4];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              x + current[1], // x1\n              y + current[2], // y1\n              controlX, // x2\n              controlY, // y2\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'C': // bezierCurveTo, absolute\n            controlX = current[3];\n            controlY = current[4];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              current[1],\n              current[2],\n              controlX,\n              controlY,\n              current[5],\n              current[6]\n            );\n            x = current[5];\n            y = current[6];\n            break;\n\n          case 's': // shorthand cubic bezierCurveTo, relative\n\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              x + current[1],\n              y + current[2],\n              tempX,\n              tempY\n            );\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = x + current[1];\n            controlY = y + current[2];\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'S': // shorthand cubic bezierCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              current[1],\n              current[2],\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = current[1];\n            controlY = current[2];\n            break;\n\n          case 'q': // quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n            controlX = x + current[1];\n            controlY = y + current[2];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'Q': // quadraticCurveTo, absolute\n            controlX = current[1];\n            controlY = current[2];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              current[3],\n              current[4]\n            );\n            x = current[3];\n            y = current[4];\n            break;\n\n          case 't': // shorthand quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[1];\n            tempY = y + current[2];\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n\n            break;\n\n          case 'T':\n            tempX = current[1];\n            tempY = current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'a':\n            // TODO: optimize this\n            bounds = fabric.util.getBoundsOfArc(x, y,\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6] + x,\n              current[7] + y\n            );\n            x += current[6];\n            y += current[7];\n            break;\n\n          case 'A':\n            // TODO: optimize this\n            bounds = fabric.util.getBoundsOfArc(x, y,\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6],\n              current[7]\n            );\n            x = current[6];\n            y = current[7];\n            break;\n\n          case 'z':\n          case 'Z':\n            x = subpathStartX;\n            y = subpathStartY;\n            break;\n        }\n        previous = current;\n        bounds.forEach(function (point) {\n          aX.push(point.x);\n          aY.push(point.y);\n        });\n        aX.push(x);\n        aY.push(y);\n      }\n\n      var minX = min(aX) || 0,\n          minY = min(aY) || 0,\n          maxX = max(aX) || 0,\n          maxY = max(aY) || 0,\n          deltaX = maxX - minX,\n          deltaY = maxY - minY,\n\n          o = {\n            left: minX,\n            top: minY,\n            width: deltaX,\n            height: deltaY\n          };\n\n      return o;\n    }\n  });\n\n  /**\n   * Creates an instance of fabric.Path from an object\n   * @static\n   * @memberOf fabric.Path\n   * @param {Object} object\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   */\n  fabric.Path.fromObject = function(object, callback) {\n    if (typeof object.sourcePath === 'string') {\n      var pathUrl = object.sourcePath;\n      fabric.loadSVGFromURL(pathUrl, function (elements) {\n        var path = elements[0];\n        path.setOptions(object);\n        callback && callback(path);\n      });\n    }\n    else {\n      fabric.Object._fromObject('Path', object, callback, 'path');\n    }\n  };\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Path.fromElement`)\n   * @static\n   * @memberOf fabric.Path\n   * @see http://www.w3.org/TR/SVG/paths.html#PathElement\n   */\n  fabric.Path.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(['d']);\n\n  /**\n   * Creates an instance of fabric.Path from an SVG <path> element\n   * @static\n   * @memberOf fabric.Path\n   * @param {SVGElement} element to parse\n   * @param {Function} callback Callback to invoke when an fabric.Path instance is created\n   * @param {Object} [options] Options object\n   * @param {Function} [callback] Options callback invoked after parsing is finished\n   */\n  fabric.Path.fromElement = function(element, callback, options) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Path.ATTRIBUTE_NAMES);\n    callback(new fabric.Path(parsedAttributes.d, extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      min = fabric.util.array.min,\n      max = fabric.util.array.max;\n\n  if (fabric.Group) {\n    return;\n  }\n\n  /**\n   * Group class\n   * @class fabric.Group\n   * @extends fabric.Object\n   * @mixes fabric.Collection\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#groups}\n   * @see {@link fabric.Group#initialize} for constructor definition\n   */\n  fabric.Group = fabric.util.createClass(fabric.Object, fabric.Collection, /** @lends fabric.Group.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'group',\n\n    /**\n     * Width of stroke\n     * @type Number\n     * @default\n     */\n    strokeWidth: 0,\n\n    /**\n     * Indicates if click events should also check for subtargets\n     * @type Boolean\n     * @default\n     */\n    subTargetCheck: false,\n\n    /**\n     * Groups are container, do not render anything on theyr own, ence no cache properties\n     * @type Array\n     * @default\n     */\n    cacheProperties: [],\n\n    /**\n     * setOnGroup is a method used for TextBox that is no more used since 2.0.0 The behavior is still\n     * available setting this boolean to true.\n     * @type Boolean\n     * @since 2.0.0\n     * @default\n     */\n    useSetOnGroup: false,\n\n    /**\n     * Constructor\n     * @param {Object} objects Group objects\n     * @param {Object} [options] Options object\n     * @param {Boolean} [isAlreadyGrouped] if true, objects have been grouped already.\n     * @return {Object} thisArg\n     */\n    initialize: function(objects, options, isAlreadyGrouped) {\n      options = options || {};\n      this._objects = [];\n      // if objects enclosed in a group have been grouped already,\n      // we cannot change properties of objects.\n      // Thus we need to set options to group without objects,\n      isAlreadyGrouped && this.callSuper('initialize', options);\n      this._objects = objects || [];\n      for (var i = this._objects.length; i--; ) {\n        this._objects[i].group = this;\n      }\n\n      if (options.originX) {\n        this.originX = options.originX;\n      }\n      if (options.originY) {\n        this.originY = options.originY;\n      }\n\n      if (!isAlreadyGrouped) {\n        var center = options && options.centerPoint;\n        // if coming from svg i do not want to calc bounds.\n        // i assume width and height are passed along options\n        center || this._calcBounds();\n        this._updateObjectsCoords(center);\n        delete options.centerPoint;\n        this.callSuper('initialize', options);\n      }\n      else {\n        this._updateObjectsACoords();\n      }\n\n      this.setCoords();\n    },\n\n    /**\n     * @private\n     * @param {Boolean} [skipCoordsChange] if true, coordinates of objects enclosed in a group do not change\n     */\n    _updateObjectsACoords: function() {\n      var ignoreZoom = true, skipAbsolute = true;\n      for (var i = this._objects.length; i--; ){\n        this._objects[i].setCoords(ignoreZoom, skipAbsolute);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Boolean} [skipCoordsChange] if true, coordinates of objects enclosed in a group do not change\n     */\n    _updateObjectsCoords: function(center) {\n      var center = center || this.getCenterPoint();\n      for (var i = this._objects.length; i--; ){\n        this._updateObjectCoords(this._objects[i], center);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} object\n     * @param {fabric.Point} center, current center of group.\n     */\n    _updateObjectCoords: function(object, center) {\n      var objectLeft = object.left,\n          objectTop = object.top,\n          ignoreZoom = true, skipAbsolute = true;\n\n      object.set({\n        left: objectLeft - center.x,\n        top: objectTop - center.y\n      });\n      object.group = this;\n      object.setCoords(ignoreZoom, skipAbsolute);\n    },\n\n    /**\n     * Returns string represenation of a group\n     * @return {String}\n     */\n    toString: function() {\n      return '#<fabric.Group: (' + this.complexity() + ')>';\n    },\n\n    /**\n     * Adds an object to a group; Then recalculates group's dimension, position.\n     * @param {Object} object\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    addWithUpdate: function(object) {\n      this._restoreObjectsState();\n      fabric.util.resetObjectTransform(this);\n      if (object) {\n        this._objects.push(object);\n        object.group = this;\n        object._set('canvas', this.canvas);\n      }\n      this._calcBounds();\n      this._updateObjectsCoords();\n      this.setCoords();\n      this.dirty = true;\n      return this;\n    },\n\n    /**\n     * Removes an object from a group; Then recalculates group's dimension, position.\n     * @param {Object} object\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    removeWithUpdate: function(object) {\n      this._restoreObjectsState();\n      fabric.util.resetObjectTransform(this);\n\n      this.remove(object);\n      this._calcBounds();\n      this._updateObjectsCoords();\n      this.setCoords();\n      this.dirty = true;\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _onObjectAdded: function(object) {\n      this.dirty = true;\n      object.group = this;\n      object._set('canvas', this.canvas);\n    },\n\n    /**\n     * @private\n     */\n    _onObjectRemoved: function(object) {\n      this.dirty = true;\n      delete object.group;\n    },\n\n    /**\n     * @private\n     */\n    _set: function(key, value) {\n      var i = this._objects.length;\n      if (this.useSetOnGroup) {\n        while (i--) {\n          this._objects[i].setOnGroup(key, value);\n        }\n      }\n      if (key === 'canvas') {\n        i = this._objects.length;\n        while (i--) {\n          this._objects[i]._set(key, value);\n        }\n      }\n      this.callSuper('_set', key, value);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var objsToObject = this.getObjects().map(function(obj) {\n        var originalDefaults = obj.includeDefaultValues;\n        obj.includeDefaultValues = obj.group.includeDefaultValues;\n        var _obj = obj.toObject(propertiesToInclude);\n        obj.includeDefaultValues = originalDefaults;\n        return _obj;\n      });\n      return extend(this.callSuper('toObject', propertiesToInclude), {\n        objects: objsToObject\n      });\n    },\n\n    /**\n     * Returns object representation of an instance, in dataless mode.\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      var objsToObject, sourcePath = this.sourcePath;\n      if (sourcePath) {\n        objsToObject = sourcePath;\n      }\n      else {\n        objsToObject = this.getObjects().map(function(obj) {\n          var originalDefaults = obj.includeDefaultValues;\n          obj.includeDefaultValues = obj.group.includeDefaultValues;\n          var _obj = obj.toDatalessObject(propertiesToInclude);\n          obj.includeDefaultValues = originalDefaults;\n          return _obj;\n        });\n      }\n      return extend(this.callSuper('toDatalessObject', propertiesToInclude), {\n        objects: objsToObject\n      });\n    },\n\n    /**\n     * Renders instance on a given context\n     * @param {CanvasRenderingContext2D} ctx context to render instance on\n     */\n    render: function(ctx) {\n      this._transformDone = true;\n      this.callSuper('render', ctx);\n      this._transformDone = false;\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * objectCaching is a global flag, wins over everything\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * @return {Boolean}\n     */\n    shouldCache: function() {\n      var ownCache = this.objectCaching && (!this.group || this.needsItsOwnCache() || !this.group.isOnACache());\n      this.ownCaching = ownCache;\n      if (ownCache) {\n        for (var i = 0, len = this._objects.length; i < len; i++) {\n          if (this._objects[i].willDrawShadow()) {\n            this.ownCaching = false;\n            return false;\n          }\n        }\n      }\n      return ownCache;\n    },\n\n    /**\n     * Check if this object or a child object will cast a shadow\n     * @return {Boolean}\n     */\n    willDrawShadow: function() {\n      if (this.shadow) {\n        return this.callSuper('willDrawShadow');\n      }\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        if (this._objects[i].willDrawShadow()) {\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Check if this group or its parent group are caching, recursively up\n     * @return {Boolean}\n     */\n    isOnACache: function() {\n      return this.ownCaching || (this.group && this.group.isOnACache());\n    },\n\n    /**\n     * Execute the drawing operation for an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawObject: function(ctx) {\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        this._objects[i].render(ctx);\n      }\n    },\n\n    /**\n     * Check if cache is dirty\n     */\n    isCacheDirty: function() {\n      if (this.callSuper('isCacheDirty')) {\n        return true;\n      }\n      if (!this.statefullCache) {\n        return false;\n      }\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        if (this._objects[i].isCacheDirty(true)) {\n          if (this._cacheCanvas) {\n            // if this group has not a cache canvas there is nothing to clean\n            var x = this.cacheWidth / this.zoomX, y = this.cacheHeight / this.zoomY;\n            this._cacheContext.clearRect(-x / 2, -y / 2, x, y);\n          }\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Retores original state of each of group objects (original state is that which was before group was created).\n     * @private\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    _restoreObjectsState: function() {\n      this._objects.forEach(this._restoreObjectState, this);\n      return this;\n    },\n\n    /**\n     * Realises the transform from this group onto the supplied object\n     * i.e. it tells you what would happen if the supplied object was in\n     * the group, and then the group was destroyed. It mutates the supplied\n     * object.\n     * @param {fabric.Object} object\n     * @return {fabric.Object} transformedObject\n     */\n    realizeTransform: function(object) {\n      var matrix = object.calcTransformMatrix(),\n          options = fabric.util.qrDecompose(matrix),\n          center = new fabric.Point(options.translateX, options.translateY);\n      object.flipX = false;\n      object.flipY = false;\n      object.set('scaleX', options.scaleX);\n      object.set('scaleY', options.scaleY);\n      object.skewX = options.skewX;\n      object.skewY = options.skewY;\n      object.angle = options.angle;\n      object.setPositionByOrigin(center, 'center', 'center');\n      return object;\n    },\n\n    /**\n     * Restores original state of a specified object in group\n     * @private\n     * @param {fabric.Object} object\n     * @return {fabric.Group} thisArg\n     */\n    _restoreObjectState: function(object) {\n      this.realizeTransform(object);\n      object.setCoords();\n      delete object.group;\n      return this;\n    },\n\n    /**\n     * Destroys a group (restoring state of its objects)\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    destroy: function() {\n      // when group is destroyed objects needs to get a repaint to be eventually\n      // displayed on canvas.\n      this._objects.forEach(function(object) {\n        object.set('dirty', true);\n      });\n      return this._restoreObjectsState();\n    },\n\n    /**\n     * make a group an active selection, remove the group from canvas\n     * the group has to be on canvas for this to work.\n     * @return {fabric.ActiveSelection} thisArg\n     * @chainable\n     */\n    toActiveSelection: function() {\n      if (!this.canvas) {\n        return;\n      }\n      var objects = this._objects, canvas = this.canvas;\n      this._objects = [];\n      var options = this.toObject();\n      delete options.objects;\n      var activeSelection = new fabric.ActiveSelection([]);\n      activeSelection.set(options);\n      activeSelection.type = 'activeSelection';\n      canvas.remove(this);\n      objects.forEach(function(object) {\n        object.group = activeSelection;\n        object.dirty = true;\n        canvas.add(object);\n      });\n      activeSelection.canvas = canvas;\n      activeSelection._objects = objects;\n      canvas._activeObject = activeSelection;\n      activeSelection.setCoords();\n      return activeSelection;\n    },\n\n    /**\n     * Destroys a group (restoring state of its objects)\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    ungroupOnCanvas: function() {\n      return this._restoreObjectsState();\n    },\n\n    /**\n     * Sets coordinates of all objects inside group\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    setObjectsCoords: function() {\n      var ignoreZoom = true, skipAbsolute = true;\n      this.forEachObject(function(object) {\n        object.setCoords(ignoreZoom, skipAbsolute);\n      });\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _calcBounds: function(onlyWidthHeight) {\n      var aX = [],\n          aY = [],\n          o, prop,\n          props = ['tr', 'br', 'bl', 'tl'],\n          i = 0, iLen = this._objects.length,\n          j, jLen = props.length,\n          ignoreZoom = true;\n\n      for ( ; i < iLen; ++i) {\n        o = this._objects[i];\n        o.setCoords(ignoreZoom);\n        for (j = 0; j < jLen; j++) {\n          prop = props[j];\n          aX.push(o.oCoords[prop].x);\n          aY.push(o.oCoords[prop].y);\n        }\n      }\n\n      this.set(this._getBounds(aX, aY, onlyWidthHeight));\n    },\n\n    /**\n     * @private\n     */\n    _getBounds: function(aX, aY, onlyWidthHeight) {\n      var minXY = new fabric.Point(min(aX), min(aY)),\n          maxXY = new fabric.Point(max(aX), max(aY)),\n          obj = {\n            width: (maxXY.x - minXY.x) || 0,\n            height: (maxXY.y - minXY.y) || 0\n          };\n\n      if (!onlyWidthHeight) {\n        obj.left = minXY.x || 0;\n        obj.top = minXY.y || 0;\n        if (this.originX === 'center') {\n          obj.left += obj.width / 2;\n        }\n        if (this.originX === 'right') {\n          obj.left += obj.width;\n        }\n        if (this.originY === 'center') {\n          obj.top += obj.height / 2;\n        }\n        if (this.originY === 'bottom') {\n          obj.top += obj.height;\n        }\n      }\n      return obj;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup();\n      markup.push(\n        '<g ', this.getSvgId(), 'transform=\"',\n        /* avoiding styles intentionally */\n        this.getSvgTransform(),\n        this.getSvgTransformMatrix(),\n        '\" style=\"',\n        this.getSvgFilter(),\n        '\">\\n'\n      );\n\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        markup.push('\\t', this._objects[i].toSVG(reviver));\n      }\n\n      markup.push('</g>\\n');\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /**\n   * Returns {@link fabric.Group} instance from an object representation\n   * @static\n   * @memberOf fabric.Group\n   * @param {Object} object Object to create a group from\n   * @param {Function} [callback] Callback to invoke when an group instance is created\n   */\n  fabric.Group.fromObject = function(object, callback) {\n    fabric.util.enlivenObjects(object.objects, function(enlivenedObjects) {\n      var options = fabric.util.object.clone(object, true);\n      delete options.objects;\n      callback && callback(new fabric.Group(enlivenedObjects, options, true));\n    });\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.ActiveSelection) {\n    return;\n  }\n\n  /**\n   * Group class\n   * @class fabric.ActiveSelection\n   * @extends fabric.Group\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#groups}\n   * @see {@link fabric.ActiveSelection#initialize} for constructor definition\n   */\n  fabric.ActiveSelection = fabric.util.createClass(fabric.Group, /** @lends fabric.ActiveSelection.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'activeSelection',\n\n    /**\n     * Constructor\n     * @param {Object} objects ActiveSelection objects\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(objects, options) {\n      options = options || {};\n      this._objects = objects || [];\n      for (var i = this._objects.length; i--; ) {\n        this._objects[i].group = this;\n      }\n\n      if (options.originX) {\n        this.originX = options.originX;\n      }\n      if (options.originY) {\n        this.originY = options.originY;\n      }\n      this._calcBounds();\n      this._updateObjectsCoords();\n      fabric.Object.prototype.initialize.call(this, options);\n      this.setCoords();\n    },\n\n    /**\n     * Change te activeSelection to a normal group,\n     * High level function that automatically adds it to canvas as\n     * active object. no events fired.\n     * @since 2.0.0\n     * @return {fabric.Group}\n     */\n    toGroup: function() {\n      var objects = this._objects;\n      this._objects = [];\n      var options = this.toObject();\n      var newGroup = new fabric.Group([]);\n      delete options.objects;\n      newGroup.set(options);\n      newGroup.type = 'group';\n      objects.forEach(function(object) {\n        object.group = newGroup;\n        object.canvas.remove(object);\n      });\n      newGroup._objects = objects;\n      if (!this.canvas) {\n        return newGroup;\n      }\n      var canvas = this.canvas;\n      canvas.add(newGroup);\n      canvas._activeObject = newGroup;\n      newGroup.setCoords();\n      return newGroup;\n    },\n\n    /**\n     * If returns true, deselection is cancelled.\n     * @since 2.0.0\n     * @return {Boolean} [cancel]\n     */\n    onDeselect: function() {\n      this.destroy();\n      return false;\n    },\n\n    /**\n     * Returns string representation of a group\n     * @return {String}\n     */\n    toString: function() {\n      return '#<fabric.ActiveSelection: (' + this.complexity() + ')>';\n    },\n\n    /**\n     * @private\n     */\n    _set: function(key, value) {\n      var i = this._objects.length;\n      if (key === 'canvas') {\n        while (i--) {\n          this._objects[i].set(key, value);\n        }\n      }\n      if (this.useSetOnGroup) {\n        while (i--) {\n          this._objects[i].setOnGroup(key, value);\n        }\n      }\n      fabric.Object.prototype._set.call(this, key, value);\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * objectCaching is a global flag, wins over everything\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * @return {Boolean}\n     */\n    shouldCache: function() {\n      return false;\n    },\n\n    /**\n     * Check if this object or a child object will cast a shadow\n     * @return {Boolean}\n     */\n    willDrawShadow: function() {\n      if (this.shadow) {\n        return this.callSuper('willDrawShadow');\n      }\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        if (this._objects[i].willDrawShadow()) {\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Check if this group or its parent group are caching, recursively up\n     * @return {Boolean}\n     */\n    isOnACache: function() {\n      return false;\n    },\n\n    /**\n     * Renders controls and borders for the object\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} [styleOverride] properties to override the object style\n     * @param {Object} [childrenOverride] properties to override the children overrides\n     */\n    _renderControls: function(ctx, styleOverride, childrenOverride) {\n      ctx.save();\n      ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n      this.callSuper('_renderControls', ctx, styleOverride);\n      childrenOverride = childrenOverride || { };\n      if (typeof childrenOverride.hasControls === 'undefined') {\n        childrenOverride.hasControls = false;\n      }\n      if (typeof childrenOverride.hasRotatingPoint === 'undefined') {\n        childrenOverride.hasRotatingPoint = false;\n      }\n      childrenOverride.forActiveSelection = true;\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        this._objects[i]._renderControls(ctx, childrenOverride);\n      }\n      ctx.restore();\n    },\n  });\n\n  /**\n   * Returns {@link fabric.ActiveSelection} instance from an object representation\n   * @static\n   * @memberOf fabric.ActiveSelection\n   * @param {Object} object Object to create a group from\n   * @param {Function} [callback] Callback to invoke when an ActiveSelection instance is created\n   */\n  fabric.ActiveSelection.fromObject = function(object, callback) {\n    fabric.util.enlivenObjects(object.objects, function(enlivenedObjects) {\n      delete object.objects;\n      callback && callback(new fabric.ActiveSelection(enlivenedObjects, object, true));\n    });\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var extend = fabric.util.object.extend;\n\n  if (!global.fabric) {\n    global.fabric = { };\n  }\n\n  if (global.fabric.Image) {\n    fabric.warn('fabric.Image is already defined.');\n    return;\n  }\n\n  /**\n   * Image class\n   * @class fabric.Image\n   * @extends fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#images}\n   * @see {@link fabric.Image#initialize} for constructor definition\n   */\n  fabric.Image = fabric.util.createClass(fabric.Object, /** @lends fabric.Image.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'image',\n\n    /**\n     * crossOrigin value (one of \"\", \"anonymous\", \"use-credentials\")\n     * @see https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes\n     * @type String\n     * @default\n     */\n    crossOrigin: '',\n\n    /**\n     * Width of a stroke.\n     * For image quality a stroke multiple of 2 gives better results.\n     * @type Number\n     * @default\n     */\n    strokeWidth: 0,\n\n    /**\n     * private\n     * contains last value of scaleX to detect\n     * if the Image got resized after the last Render\n     * @type Number\n     */\n    _lastScaleX: 1,\n\n    /**\n     * private\n     * contains last value of scaleY to detect\n     * if the Image got resized after the last Render\n     * @type Number\n     */\n    _lastScaleY: 1,\n\n    /**\n     * private\n     * contains last value of scaling applied by the apply filter chain\n     * @type Number\n     */\n    _filterScalingX: 1,\n\n    /**\n     * private\n     * contains last value of scaling applied by the apply filter chain\n     * @type Number\n     */\n    _filterScalingY: 1,\n\n    /**\n     * minimum scale factor under which any resizeFilter is triggered to resize the image\n     * 0 will disable the automatic resize. 1 will trigger automatically always.\n     * number bigger than 1 are not implemented yet.\n     * @type Number\n     */\n    minimumScaleTrigger: 0.5,\n\n    /**\n     * List of properties to consider when checking if\n     * state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: fabric.Object.prototype.stateProperties.concat('cropX', 'cropY'),\n\n    /**\n     * When `true`, object is cached on an additional canvas.\n     * default to false for images\n     * since 1.7.0\n     * @type Boolean\n     * @default\n     */\n    objectCaching: false,\n\n    /**\n     * key used to retrieve the texture representing this image\n     * since 2.0.0\n     * @type String\n     * @default\n     */\n    cacheKey: '',\n\n    /**\n     * Image crop in pixels from original image size.\n     * since 2.0.0\n     * @type Number\n     * @default\n     */\n    cropX: 0,\n\n    /**\n     * Image crop in pixels from original image size.\n     * since 2.0.0\n     * @type Number\n     * @default\n     */\n    cropY: 0,\n\n    /**\n     * Constructor\n     * @param {HTMLImageElement | String} element Image element\n     * @param {Object} [options] Options object\n     * @param {function} [callback] callback function to call after eventual filters applied.\n     * @return {fabric.Image} thisArg\n     */\n    initialize: function(element, options) {\n      options || (options = { });\n      this.filters = [];\n      this.cacheKey = 'texture' + fabric.Object.__uid++;\n      this.callSuper('initialize', options);\n      this._initElement(element, options);\n    },\n\n    /**\n     * Returns image element which this instance if based on\n     * @return {HTMLImageElement} Image element\n     */\n    getElement: function() {\n      return this._element;\n    },\n\n    /**\n     * Sets image element for this instance to a specified one.\n     * If filters defined they are applied to new image.\n     * You might need to call `canvas.renderAll` and `object.setCoords` after replacing, to render new image and update controls area.\n     * @param {HTMLImageElement} element\n     * @param {Object} [options] Options object\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setElement: function(element, options) {\n      var backend = fabric.filterBackend;\n      if (backend && backend.evictCachesForKey) {\n        backend.evictCachesForKey(this.cacheKey);\n        backend.evictCachesForKey(this.cacheKey + '_filtered');\n      }\n      this._element = element;\n      this._originalElement = element;\n      this._initConfig(options);\n      if (this.resizeFilter) {\n        this.applyResizeFilters();\n      }\n      if (this.filters.length !== 0) {\n        this.applyFilters();\n      }\n      return this;\n    },\n\n    /**\n     * Delete cacheKey if we have a webGlBackend\n     * delete reference to image elements\n     */\n    dispose: function() {\n      var backend = fabric.filterBackend;\n      if (backend && backend.evictCachesForKey) {\n        backend.evictCachesForKey(this.cacheKey);\n        backend.evictCachesForKey(this.cacheKey + '_filtered');\n      }\n      this._originalElement = undefined;\n      this._element = undefined;\n      this._filteredEl = undefined;\n    },\n\n    /**\n     * Sets crossOrigin value (on an instance and corresponding image element)\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setCrossOrigin: function(value) {\n      this.crossOrigin = value;\n      this._element.crossOrigin = value;\n\n      return this;\n    },\n\n    /**\n     * Returns original size of an image\n     * @return {Object} Object with \"width\" and \"height\" properties\n     */\n    getOriginalSize: function() {\n      var element = this.getElement();\n      return {\n        width: element.width,\n        height: element.height\n      };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _stroke: function(ctx) {\n      if (!this.stroke || this.strokeWidth === 0) {\n        return;\n      }\n      var w = this.width / 2, h = this.height / 2;\n      ctx.beginPath();\n      ctx.moveTo(-w, -h);\n      ctx.lineTo(w, -h);\n      ctx.lineTo(w, h);\n      ctx.lineTo(-w, h);\n      ctx.lineTo(-w, -h);\n      ctx.closePath();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var x = -this.width / 2,\n          y = -this.height / 2,\n          w = this.width,\n          h = this.height;\n\n      ctx.save();\n      this._setStrokeStyles(ctx, this);\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n      ctx.closePath();\n      ctx.restore();\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var filters = [];\n\n      this.filters.forEach(function(filterObj) {\n        if (filterObj) {\n          filters.push(filterObj.toObject());\n        }\n      });\n      var object = extend(\n        this.callSuper(\n          'toObject',\n          ['crossOrigin', 'cropX', 'cropY'].concat(propertiesToInclude)\n        ), {\n          src: this.getSrc(),\n          filters: filters,\n        });\n      if (this.resizeFilter) {\n        object.resizeFilter = this.resizeFilter.toObject();\n      }\n      return object;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(), x = -this.width / 2, y = -this.height / 2;\n      markup.push('<g transform=\"', this.getSvgTransform(), this.getSvgTransformMatrix(), '\">\\n');\n      var imageMarkup = ['\\t<image ', this.getSvgId(), 'xlink:href=\"', this.getSvgSrc(true),\n        '\" x=\"', x, '\" y=\"', y,\n        '\" style=\"', this.getSvgStyles(),\n        // we're essentially moving origin of transformation from top/left corner to the center of the shape\n        // by wrapping it in container <g> element with actual transformation, then offsetting object to the top/left\n        // so that object's center aligns with container's left/top\n        '\" width=\"', this.width,\n        '\" height=\"', this.height,\n        '\"></image>\\n'];\n      if (this.paintFirst === 'fill') {\n        Array.prototype.push.apply(markup, imageMarkup);\n      }\n      if (this.stroke || this.strokeDashArray) {\n        var origFill = this.fill;\n        this.fill = null;\n        markup.push(\n          '\\t<rect ',\n          'x=\"', x, '\" y=\"', y,\n          '\" width=\"', this.width, '\" height=\"', this.height,\n          '\" style=\"', this.getSvgStyles(),\n          '\"/>\\n'\n        );\n        this.fill = origFill;\n      }\n      if (this.paintFirst !== 'fill') {\n        Array.prototype.push.apply(markup, imageMarkup);\n      }\n      markup.push('</g>\\n');\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns source of an image\n     * @param {Boolean} filtered indicates if the src is needed for svg\n     * @return {String} Source of an image\n     */\n    getSrc: function(filtered) {\n      var element = filtered ? this._element : this._originalElement;\n      if (element) {\n        if (element.toDataURL) {\n          return element.toDataURL();\n        }\n        return element.src;\n      }\n      else {\n        return this.src || '';\n      }\n    },\n\n    /**\n     * Sets source of an image\n     * @param {String} src Source string (URL)\n     * @param {Function} [callback] Callback is invoked when image has been loaded (and all filters have been applied)\n     * @param {Object} [options] Options object\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setSrc: function(src, callback, options) {\n      fabric.util.loadImage(src, function(img) {\n        this.setElement(img, options);\n        callback(this);\n      }, this, options && options.crossOrigin);\n      return this;\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} String representation of an instance\n     */\n    toString: function() {\n      return '#<fabric.Image: { src: \"' + this.getSrc() + '\" }>';\n    },\n\n    applyResizeFilters: function() {\n      var filter = this.resizeFilter,\n          retinaScaling = this.canvas ? this.canvas.getRetinaScaling() : 1,\n          minimumScale = this.minimumScaleTrigger,\n          scaleX = this.scaleX * retinaScaling,\n          scaleY = this.scaleY * retinaScaling,\n          elementToFilter = this._filteredEl || this._originalElement;\n      if (!filter || (scaleX > minimumScale && scaleY > minimumScale)) {\n        this._element = elementToFilter;\n        this._filterScalingX = 1;\n        this._filterScalingY = 1;\n        return;\n      }\n      if (!fabric.filterBackend) {\n        fabric.filterBackend = fabric.initFilterBackend();\n      }\n      var canvasEl = fabric.util.createCanvasElement(),\n          cacheKey = this._filteredEl ? this.cacheKey : (this.cacheKey + '_filtered'),\n          sourceWidth = elementToFilter.width, sourceHeight = elementToFilter.height;\n      canvasEl.width = sourceWidth;\n      canvasEl.height = sourceHeight;\n      this._element = canvasEl;\n      filter.scaleX = scaleX;\n      filter.scaleY = scaleY;\n      fabric.filterBackend.applyFilters(\n        [filter], elementToFilter, sourceWidth, sourceHeight, this._element, cacheKey);\n      this._filterScalingX = canvasEl.width / this._originalElement.width;\n      this._filterScalingY = canvasEl.height / this._originalElement.height;\n    },\n\n    /**\n     * Applies filters assigned to this image (from \"filters\" array) or from filter param\n     * @method applyFilters\n     * @param {Array} filters to be applied\n     * @param {Boolean} forResizing specify if the filter operation is a resize operation\n     * @return {thisArg} return the fabric.Image object\n     * @chainable\n     */\n    applyFilters: function(filters) {\n\n      filters = filters || this.filters || [];\n      filters = filters.filter(function(filter) { return filter; });\n      if (filters.length === 0) {\n        this._element = this._originalElement;\n        this._filteredEl = null;\n        this._filterScalingX = 1;\n        this._filterScalingY = 1;\n        return this;\n      }\n\n      var imgElement = this._originalElement,\n          sourceWidth = imgElement.naturalWidth || imgElement.width,\n          sourceHeight = imgElement.naturalHeight || imgElement.height;\n\n      if (this._element === this._originalElement) {\n        // if the element is the same we need to create a new element\n        var canvasEl = fabric.util.createCanvasElement();\n        canvasEl.width = sourceWidth;\n        canvasEl.height = sourceHeight;\n        this._element = canvasEl;\n        this._filteredEl = canvasEl;\n      }\n      else {\n        // clear the existing element to get new filter data\n        this._element.getContext('2d').clearRect(0, 0, sourceWidth, sourceHeight);\n      }\n      if (!fabric.filterBackend) {\n        fabric.filterBackend = fabric.initFilterBackend();\n      }\n      fabric.filterBackend.applyFilters(\n        filters, this._originalElement, sourceWidth, sourceHeight, this._element, this.cacheKey);\n      if (this._originalElement.width !== this._element.width ||\n        this._originalElement.height !== this._element.height) {\n        this._filterScalingX = this._element.width / this._originalElement.width;\n        this._filterScalingY = this._element.height / this._originalElement.height;\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      if (this.isMoving === false && this.resizeFilter && this._needsResize()) {\n        this._lastScaleX = this.scaleX;\n        this._lastScaleY = this.scaleY;\n        this.applyResizeFilters();\n      }\n      this._stroke(ctx);\n      this._renderPaintInOrder(ctx);\n    },\n\n    _renderFill: function(ctx) {\n      var w = this.width, h = this.height, sW = w * this._filterScalingX, sH = h * this._filterScalingY,\n          x = -w / 2, y = -h / 2, elementToDraw = this._element;\n      elementToDraw && ctx.drawImage(elementToDraw,\n        this.cropX * this._filterScalingX,\n        this.cropY * this._filterScalingY,\n        sW,\n        sH,\n        x, y, w, h);\n    },\n\n    /**\n     * @private, needed to check if image needs resize\n     */\n    _needsResize: function() {\n      return (this.scaleX !== this._lastScaleX || this.scaleY !== this._lastScaleY);\n    },\n\n    /**\n     * @private\n     */\n    _resetWidthHeight: function() {\n      var element = this.getElement();\n\n      this.set('width', element.width);\n      this.set('height', element.height);\n    },\n\n    /**\n     * The Image class's initialization method. This method is automatically\n     * called by the constructor.\n     * @private\n     * @param {HTMLImageElement|String} element The element representing the image\n     * @param {Object} [options] Options object\n     */\n    _initElement: function(element, options) {\n      this.setElement(fabric.util.getById(element), options);\n      fabric.util.addClass(this.getElement(), fabric.Image.CSS_CANVAS);\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initConfig: function(options) {\n      options || (options = { });\n      this.setOptions(options);\n      this._setWidthHeight(options);\n      if (this._element && this.crossOrigin) {\n        this._element.crossOrigin = this.crossOrigin;\n      }\n    },\n\n    /**\n     * @private\n     * @param {Array} filters to be initialized\n     * @param {Function} callback Callback to invoke when all fabric.Image.filters instances are created\n     */\n    _initFilters: function(filters, callback) {\n      if (filters && filters.length) {\n        fabric.util.enlivenObjects(filters, function(enlivenedObjects) {\n          callback && callback(enlivenedObjects);\n        }, 'fabric.Image.filters');\n      }\n      else {\n        callback && callback();\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Object with width/height properties\n     */\n    _setWidthHeight: function(options) {\n      this.width = 'width' in options\n        ? options.width\n        : (this.getElement()\n          ? this.getElement().width || 0\n          : 0);\n\n      this.height = 'height' in options\n        ? options.height\n        : (this.getElement()\n          ? this.getElement().height || 0\n          : 0);\n    },\n\n    /**\n     * Calculate offset for center and scale factor for the image in order to respect\n     * the preserveAspectRatio attribute\n     * @private\n     * @return {Object}\n     */\n    parsePreserveAspectRatioAttribute: function() {\n      var pAR = fabric.util.parsePreserveAspectRatioAttribute(this.preserveAspectRatio || ''),\n          rWidth = this._element.width, rHeight = this._element.height,\n          scaleX = 1, scaleY = 1, offsetLeft = 0, offsetTop = 0, cropX = 0, cropY = 0,\n          offset, pWidth = this.width, pHeight = this.height, parsedAttributes = { width: pWidth, height: pHeight };\n      if (pAR && (pAR.alignX !== 'none' || pAR.alignY !== 'none')) {\n        if (pAR.meetOrSlice === 'meet') {\n          scaleX = scaleY = fabric.util.findScaleToFit(this._element, parsedAttributes);\n          offset = (pWidth - rWidth * scaleX) / 2;\n          if (pAR.alignX === 'Min') {\n            offsetLeft = -offset;\n          }\n          if (pAR.alignX === 'Max') {\n            offsetLeft = offset;\n          }\n          offset = (pHeight - rHeight * scaleY) / 2;\n          if (pAR.alignY === 'Min') {\n            offsetTop = -offset;\n          }\n          if (pAR.alignY === 'Max') {\n            offsetTop = offset;\n          }\n        }\n        if (pAR.meetOrSlice === 'slice') {\n          scaleX = scaleY = fabric.util.findScaleToCover(this._element, parsedAttributes);\n          offset = rWidth - pWidth / scaleX;\n          if (pAR.alignX === 'Mid') {\n            cropX = offset / 2;\n          }\n          if (pAR.alignX === 'Max') {\n            cropX = offset;\n          }\n          offset = rHeight - pHeight / scaleY;\n          if (pAR.alignY === 'Mid') {\n            cropY = offset / 2;\n          }\n          if (pAR.alignY === 'Max') {\n            cropY = offset;\n          }\n          rWidth = pWidth / scaleX;\n          rHeight = pHeight / scaleY;\n        }\n      }\n      else {\n        scaleX = pWidth / rWidth;\n        scaleY = pHeight / rHeight;\n      }\n      return {\n        width: rWidth,\n        height: rHeight,\n        scaleX: scaleX,\n        scaleY: scaleY,\n        offsetLeft: offsetLeft,\n        offsetTop: offsetTop,\n        cropX: cropX,\n        cropY: cropY\n      };\n    }\n  });\n\n  /**\n   * Default CSS class name for canvas\n   * @static\n   * @type String\n   * @default\n   */\n  fabric.Image.CSS_CANVAS = 'canvas-img';\n\n  /**\n   * Alias for getSrc\n   * @static\n   */\n  fabric.Image.prototype.getSvgSrc = fabric.Image.prototype.getSrc;\n\n  /**\n   * Creates an instance of fabric.Image from its object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} callback Callback to invoke when an image instance is created\n   */\n  fabric.Image.fromObject = function(_object, callback) {\n    var object = fabric.util.object.clone(_object);\n    fabric.util.loadImage(object.src, function(img, error) {\n      if (error) {\n        callback && callback(null, error);\n        return;\n      }\n      fabric.Image.prototype._initFilters.call(object, object.filters, function(filters) {\n        object.filters = filters || [];\n        fabric.Image.prototype._initFilters.call(object, [object.resizeFilter], function(resizeFilters) {\n          object.resizeFilter = resizeFilters[0];\n          var image = new fabric.Image(img, object);\n          callback(image);\n        });\n      });\n    }, null, object.crossOrigin);\n  };\n\n  /**\n   * Creates an instance of fabric.Image from an URL string\n   * @static\n   * @param {String} url URL to create an image from\n   * @param {Function} [callback] Callback to invoke when image is created (newly created image is passed as a first argument)\n   * @param {Object} [imgOptions] Options object\n   */\n  fabric.Image.fromURL = function(url, callback, imgOptions) {\n    fabric.util.loadImage(url, function(img) {\n      callback && callback(new fabric.Image(img, imgOptions));\n    }, null, imgOptions && imgOptions.crossOrigin);\n  };\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Image.fromElement})\n   * @static\n   * @see {@link http://www.w3.org/TR/SVG/struct.html#ImageElement}\n   */\n  fabric.Image.ATTRIBUTE_NAMES =\n    fabric.SHARED_ATTRIBUTES.concat('x y width height preserveAspectRatio xlink:href crossOrigin'.split(' '));\n\n  /**\n   * Returns {@link fabric.Image} instance from an SVG element\n   * @static\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @param {Function} callback Callback to execute when fabric.Image object is created\n   * @return {fabric.Image} Instance of fabric.Image\n   */\n  fabric.Image.fromElement = function(element, callback, options) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Image.ATTRIBUTE_NAMES);\n    fabric.Image.fromURL(parsedAttributes['xlink:href'], callback,\n      extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\n  };\n  /* _FROM_SVG_END_ */\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n  /**\n   * @private\n   * @return {Number} angle value\n   */\n  _getAngleValueForStraighten: function() {\n    var angle = this.angle % 360;\n    if (angle > 0) {\n      return Math.round((angle - 1) / 90) * 90;\n    }\n    return Math.round(angle / 90) * 90;\n  },\n\n  /**\n   * Straightens an object (rotating it from current angle to one of 0, 90, 180, 270, etc. depending on which is closer)\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  straighten: function() {\n    this.rotate(this._getAngleValueForStraighten());\n    return this;\n  },\n\n  /**\n   * Same as {@link fabric.Object.prototype.straighten} but with animation\n   * @param {Object} callbacks Object with callback functions\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  fxStraighten: function(callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: this.get('angle'),\n      endValue: this._getAngleValueForStraighten(),\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        _this.rotate(value);\n        onChange();\n      },\n      onComplete: function() {\n        _this.setCoords();\n        onComplete();\n      },\n    });\n\n    return this;\n  }\n});\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Straightens object, then rerenders canvas\n   * @param {fabric.Object} object Object to straighten\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  straightenObject: function (object) {\n    object.straighten();\n    this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Same as {@link fabric.Canvas.prototype.straightenObject}, but animated\n   * @param {fabric.Object} object Object to straighten\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxStraightenObject: function (object) {\n    object.fxStraighten({\n      onChange: this.requestRenderAllBound\n    });\n    return this;\n  }\n});\n\n\n(function() {\n\n  'use strict';\n\n  /**\n   * Tests if webgl supports certain precision\n   * @param {WebGL} Canvas WebGL context to test on\n   * @param {String} Precision to test can be any of following: 'lowp', 'mediump', 'highp'\n   * @returns {Boolean} Whether the user's browser WebGL supports given precision.\n   */\n  function testPrecision(gl, precision){\n    var fragmentSource = 'precision ' + precision + ' float;\\nvoid main(){}';\n    var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fragmentShader, fragmentSource);\n    gl.compileShader(fragmentShader);\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Indicate whether this filtering backend is supported by the user's browser.\n   * @param {Number} tileSize check if the tileSize is supported\n   * @returns {Boolean} Whether the user's browser supports WebGL.\n   */\n  fabric.isWebglSupported = function(tileSize) {\n    if (fabric.isLikelyNode) {\n      return false;\n    }\n    tileSize = tileSize || fabric.WebglFilterBackend.prototype.tileSize;\n    var canvas = document.createElement('canvas');\n    var gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');\n    var isSupported = false;\n    // eslint-disable-next-line\n    if (gl) {\n      fabric.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n      isSupported = fabric.maxTextureSize >= tileSize;\n      var precisions = ['highp', 'mediump', 'lowp'];\n      for (var i = 0; i < 3; i++){\n        if (testPrecision(gl, precisions[i])){\n          fabric.webGlPrecision = precisions[i];\n          break;\n        };\n      }\n    }\n    this.isSupported = isSupported;\n    return isSupported;\n  };\n\n  fabric.WebglFilterBackend = WebglFilterBackend;\n\n  /**\n   * WebGL filter backend.\n   */\n  function WebglFilterBackend(options) {\n    if (options && options.tileSize) {\n      this.tileSize = options.tileSize;\n    }\n    this.setupGLContext(this.tileSize, this.tileSize);\n    this.captureGPUInfo();\n  };\n\n  WebglFilterBackend.prototype = /** @lends fabric.WebglFilterBackend.prototype */ {\n\n    tileSize: 2048,\n\n    /**\n     * Experimental. This object is a sort of repository of help layers used to avoid\n     * of recreating them during frequent filtering. If you are previewing a filter with\n     * a slider you problably do not want to create help layers every filter step.\n     * in this object there will be appended some canvases, created once, resized sometimes\n     * cleared never. Clearing is left to the developer.\n     **/\n    resources: {\n\n    },\n\n    /**\n     * Setup a WebGL context suitable for filtering, and bind any needed event handlers.\n     */\n    setupGLContext: function(width, height) {\n      this.dispose();\n      this.createWebGLCanvas(width, height);\n      // eslint-disable-next-line\n      this.aPosition = new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]);\n      this.chooseFastestCopyGLTo2DMethod(width, height);\n    },\n\n    /**\n     * Pick a method to copy data from GL context to 2d canvas.  In some browsers using\n     * putImageData is faster than drawImage for that specific operation.\n     */\n    chooseFastestCopyGLTo2DMethod: function(width, height) {\n      var canMeasurePerf = typeof window.performance !== 'undefined';\n      var canUseImageData;\n      try {\n        new ImageData(1, 1);\n        canUseImageData = true;\n      }\n      catch (e) {\n        canUseImageData = false;\n      }\n      // eslint-disable-next-line no-undef\n      var canUseArrayBuffer = typeof ArrayBuffer !== 'undefined';\n      // eslint-disable-next-line no-undef\n      var canUseUint8Clamped = typeof Uint8ClampedArray !== 'undefined';\n\n      if (!(canMeasurePerf && canUseImageData && canUseArrayBuffer && canUseUint8Clamped)) {\n        return;\n      }\n\n      var targetCanvas = fabric.util.createCanvasElement();\n      // eslint-disable-next-line no-undef\n      var imageBuffer = new ArrayBuffer(width * height * 4);\n      var testContext = {\n        imageBuffer: imageBuffer,\n        destinationWidth: width,\n        destinationHeight: height,\n        targetCanvas: targetCanvas\n      };\n      var startTime, drawImageTime, putImageDataTime;\n      targetCanvas.width = width;\n      targetCanvas.height = height;\n\n      startTime = window.performance.now();\n      copyGLTo2DDrawImage.call(testContext, this.gl, testContext);\n      drawImageTime = window.performance.now() - startTime;\n\n      startTime = window.performance.now();\n      copyGLTo2DPutImageData.call(testContext, this.gl, testContext);\n      putImageDataTime = window.performance.now() - startTime;\n\n      if (drawImageTime > putImageDataTime) {\n        this.imageBuffer = imageBuffer;\n        this.copyGLTo2D = copyGLTo2DPutImageData;\n      }\n      else {\n        this.copyGLTo2D = copyGLTo2DDrawImage;\n      }\n    },\n\n    /**\n     * Create a canvas element and associated WebGL context and attaches them as\n     * class properties to the GLFilterBackend class.\n     */\n    createWebGLCanvas: function(width, height) {\n      var canvas = fabric.util.createCanvasElement();\n      canvas.width = width;\n      canvas.height = height;\n      var glOptions = { premultipliedAlpha: false },\n          gl = canvas.getContext('webgl', glOptions);\n      if (!gl) {\n        gl = canvas.getContext('experimental-webgl', glOptions);\n      }\n      if (!gl) {\n        return;\n      }\n      gl.clearColor(0, 0, 0, 0);\n      // this canvas can fire webglcontextlost and webglcontextrestored\n      this.canvas = canvas;\n      this.gl = gl;\n    },\n\n    /**\n     * Attempts to apply the requested filters to the source provided, drawing the filtered output\n     * to the provided target canvas.\n     *\n     * @param {Array} filters The filters to apply.\n     * @param {HTMLImageElement|HTMLCanvasElement} source The source to be filtered.\n     * @param {Number} width The width of the source input.\n     * @param {Number} height The height of the source input.\n     * @param {HTMLCanvasElement} targetCanvas The destination for filtered output to be drawn.\n     * @param {String|undefined} cacheKey A key used to cache resources related to the source. If\n     * omitted, caching will be skipped.\n     */\n    applyFilters: function(filters, source, width, height, targetCanvas, cacheKey) {\n      var gl = this.gl;\n      var cachedTexture;\n      if (cacheKey) {\n        cachedTexture = this.getCachedTexture(cacheKey, source);\n      }\n      var pipelineState = {\n        originalWidth: source.width || source.originalWidth,\n        originalHeight: source.height || source.originalHeight,\n        sourceWidth: width,\n        sourceHeight: height,\n        destinationWidth: width,\n        destinationHeight: height,\n        context: gl,\n        sourceTexture: this.createTexture(gl, width, height, !cachedTexture && source),\n        targetTexture: this.createTexture(gl, width, height),\n        originalTexture: cachedTexture ||\n          this.createTexture(gl, width, height, !cachedTexture && source),\n        passes: filters.length,\n        webgl: true,\n        aPosition: this.aPosition,\n        programCache: this.programCache,\n        pass: 0,\n        filterBackend: this,\n        targetCanvas: targetCanvas\n      };\n      var tempFbo = gl.createFramebuffer();\n      gl.bindFramebuffer(gl.FRAMEBUFFER, tempFbo);\n      filters.forEach(function(filter) { filter && filter.applyTo(pipelineState); });\n      resizeCanvasIfNeeded(pipelineState);\n      this.copyGLTo2D(gl, pipelineState);\n      gl.bindTexture(gl.TEXTURE_2D, null);\n      gl.deleteTexture(pipelineState.sourceTexture);\n      gl.deleteTexture(pipelineState.targetTexture);\n      gl.deleteFramebuffer(tempFbo);\n      targetCanvas.getContext('2d').setTransform(1, 0, 0, 1, 0, 0);\n      return pipelineState;\n    },\n\n    /**\n     * The same as the applyFilter method but with additional logging of WebGL\n     * errors.\n     */\n    applyFiltersDebug: function(filters, source, width, height, targetCanvas, cacheKey) {\n      // The following code is useful when debugging a specific issue but adds ~10x slowdown.\n      var gl = this.gl;\n      var ret = this.applyFilters(filters, source, width, height, targetCanvas, cacheKey);\n      var glError = gl.getError();\n      if (glError !== gl.NO_ERROR) {\n        var errorString = this.glErrorToString(gl, glError);\n        var error = new Error('WebGL Error ' + errorString);\n        error.glErrorCode = glError;\n        throw error;\n      }\n      return ret;\n    },\n\n    glErrorToString: function(context, errorCode) {\n      if (!context) {\n        return 'Context undefined for error code: ' + errorCode;\n      }\n      else if (typeof errorCode !== 'number') {\n        return 'Error code is not a number';\n      }\n      switch (errorCode) {\n        case context.NO_ERROR:\n          return 'NO_ERROR';\n        case context.INVALID_ENUM:\n          return 'INVALID_ENUM';\n        case context.INVALID_VALUE:\n          return 'INVALID_VALUE';\n        case context.INVALID_OPERATION:\n          return 'INVALID_OPERATION';\n        case context.INVALID_FRAMEBUFFER_OPERATION:\n          return 'INVALID_FRAMEBUFFER_OPERATION';\n        case context.OUT_OF_MEMORY:\n          return 'OUT_OF_MEMORY';\n        case context.CONTEXT_LOST_WEBGL:\n          return 'CONTEXT_LOST_WEBGL';\n        default:\n          return 'UNKNOWN_ERROR';\n      }\n    },\n\n    /**\n     * Detach event listeners, remove references, and clean up caches.\n     */\n    dispose: function() {\n      if (this.canvas) {\n        this.canvas = null;\n        this.gl = null;\n      }\n      this.clearWebGLCaches();\n    },\n\n    /**\n     * Wipe out WebGL-related caches.\n     */\n    clearWebGLCaches: function() {\n      this.programCache = {};\n      this.textureCache = {};\n    },\n\n    /**\n     * Create a WebGL texture object.\n     *\n     * Accepts specific dimensions to initialize the textuer to or a source image.\n     *\n     * @param {WebGLRenderingContext} gl The GL context to use for creating the texture.\n     * @param {Number} width The width to initialize the texture at.\n     * @param {Number} height The height to initialize the texture.\n     * @param {HTMLImageElement|HTMLCanvasElement} textureImageSource A source for the texture data.\n     * @returns {WebGLTexture}\n     */\n    createTexture: function(gl, width, height, textureImageSource) {\n      var texture = gl.createTexture();\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      if (textureImageSource) {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, textureImageSource);\n      }\n      else {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n      }\n      return texture;\n    },\n\n    /**\n     * Can be optionally used to get a texture from the cache array\n     *\n     * If an existing texture is not found, a new texture is created and cached.\n     *\n     * @param {String} uniqueId A cache key to use to find an existing texture.\n     * @param {HTMLImageElement|HTMLCanvasElement} textureImageSource A source to use to create the\n     * texture cache entry if one does not already exist.\n     */\n    getCachedTexture: function(uniqueId, textureImageSource) {\n      if (this.textureCache[uniqueId]) {\n        return this.textureCache[uniqueId];\n      }\n      else {\n        var texture = this.createTexture(\n          this.gl, textureImageSource.width, textureImageSource.height, textureImageSource);\n        this.textureCache[uniqueId] = texture;\n        return texture;\n      }\n    },\n\n    /**\n     * Clear out cached resources related to a source image that has been\n     * filtered previously.\n     *\n     * @param {String} cacheKey The cache key provided when the source image was filtered.\n     */\n    evictCachesForKey: function(cacheKey) {\n      if (this.textureCache[cacheKey]) {\n        this.gl.deleteTexture(this.textureCache[cacheKey]);\n        delete this.textureCache[cacheKey];\n      }\n    },\n\n    copyGLTo2D: copyGLTo2DDrawImage,\n\n    /**\n     * Attempt to extract GPU information strings from a WebGL context.\n     *\n     * Useful information when debugging or blacklisting specific GPUs.\n     *\n     * @returns {Object} A GPU info object with renderer and vendor strings.\n     */\n    captureGPUInfo: function() {\n      if (this.gpuInfo) {\n        return this.gpuInfo;\n      }\n      var gl = this.gl;\n      var ext = gl.getExtension('WEBGL_debug_renderer_info');\n      var gpuInfo = { renderer: '', vendor: '' };\n      if (ext) {\n        var renderer = gl.getParameter(ext.UNMASKED_RENDERER_WEBGL);\n        var vendor = gl.getParameter(ext.UNMASKED_VENDOR_WEBGL);\n        if (renderer) {\n          gpuInfo.renderer = renderer.toLowerCase();\n        }\n        if (vendor) {\n          gpuInfo.vendor = vendor.toLowerCase();\n        }\n      }\n      this.gpuInfo = gpuInfo;\n      return gpuInfo;\n    },\n  };\n})();\n\nfunction resizeCanvasIfNeeded(pipelineState) {\n  var targetCanvas = pipelineState.targetCanvas,\n      width = targetCanvas.width, height = targetCanvas.height,\n      dWidth = pipelineState.destinationWidth,\n      dHeight = pipelineState.destinationHeight;\n\n  if (width !== dWidth || height !== dHeight) {\n    targetCanvas.width = dWidth;\n    targetCanvas.height = dHeight;\n  }\n}\n\n/**\n * Copy an input WebGL canvas on to an output 2D canvas.\n *\n * The WebGL canvas is assumed to be upside down, with the top-left pixel of the\n * desired output image appearing in the bottom-left corner of the WebGL canvas.\n *\n * @param {WebGLRenderingContext} sourceContext The WebGL context to copy from.\n * @param {HTMLCanvasElement} targetCanvas The 2D target canvas to copy on to.\n * @param {Object} pipelineState The 2D target canvas to copy on to.\n */\nfunction copyGLTo2DDrawImage(gl, pipelineState) {\n  var glCanvas = gl.canvas, targetCanvas = pipelineState.targetCanvas,\n      ctx = targetCanvas.getContext('2d');\n  ctx.translate(0, targetCanvas.height); // move it down again\n  ctx.scale(1, -1); // vertical flip\n  // where is my image on the big glcanvas?\n  var sourceY = glCanvas.height - targetCanvas.height;\n  ctx.drawImage(glCanvas, 0, sourceY, targetCanvas.width, targetCanvas.height, 0, 0,\n    targetCanvas.width, targetCanvas.height);\n}\n\n/**\n * Copy an input WebGL canvas on to an output 2D canvas using 2d canvas' putImageData\n * API. Measurably faster than using ctx.drawImage in Firefox (version 54 on OSX Sierra).\n *\n * @param {WebGLRenderingContext} sourceContext The WebGL context to copy from.\n * @param {HTMLCanvasElement} targetCanvas The 2D target canvas to copy on to.\n * @param {Object} pipelineState The 2D target canvas to copy on to.\n */\nfunction copyGLTo2DPutImageData(gl, pipelineState) {\n  var targetCanvas = pipelineState.targetCanvas, ctx = targetCanvas.getContext('2d'),\n      dWidth = pipelineState.destinationWidth,\n      dHeight = pipelineState.destinationHeight,\n      numBytes = dWidth * dHeight * 4;\n\n  // eslint-disable-next-line no-undef\n  var u8 = new Uint8Array(this.imageBuffer, 0, numBytes);\n  // eslint-disable-next-line no-undef\n  var u8Clamped = new Uint8ClampedArray(this.imageBuffer, 0, numBytes);\n\n  gl.readPixels(0, 0, dWidth, dHeight, gl.RGBA, gl.UNSIGNED_BYTE, u8);\n  var imgData = new ImageData(u8Clamped, dWidth, dHeight);\n  ctx.putImageData(imgData, 0, 0);\n}\n\n\n(function() {\n\n  'use strict';\n\n  var noop = function() {};\n\n  fabric.Canvas2dFilterBackend = Canvas2dFilterBackend;\n\n  /**\n   * Canvas 2D filter backend.\n   */\n  function Canvas2dFilterBackend() {};\n\n  Canvas2dFilterBackend.prototype = /** @lends fabric.Canvas2dFilterBackend.prototype */ {\n    evictCachesForKey: noop,\n    dispose: noop,\n    clearWebGLCaches: noop,\n\n    /**\n     * Experimental. This object is a sort of repository of help layers used to avoid\n     * of recreating them during frequent filtering. If you are previewing a filter with\n     * a slider you probably do not want to create help layers every filter step.\n     * in this object there will be appended some canvases, created once, resized sometimes\n     * cleared never. Clearing is left to the developer.\n     **/\n    resources: {\n\n    },\n\n    /**\n     * Apply a set of filters against a source image and draw the filtered output\n     * to the provided destination canvas.\n     *\n     * @param {EnhancedFilter} filters The filter to apply.\n     * @param {HTMLImageElement|HTMLCanvasElement} sourceElement The source to be filtered.\n     * @param {Number} sourceWidth The width of the source input.\n     * @param {Number} sourceHeight The height of the source input.\n     * @param {HTMLCanvasElement} targetCanvas The destination for filtered output to be drawn.\n     */\n    applyFilters: function(filters, sourceElement, sourceWidth, sourceHeight, targetCanvas) {\n      var ctx = targetCanvas.getContext('2d');\n      ctx.drawImage(sourceElement, 0, 0, sourceWidth, sourceHeight);\n      var imageData = ctx.getImageData(0, 0, sourceWidth, sourceHeight);\n      var originalImageData = ctx.getImageData(0, 0, sourceWidth, sourceHeight);\n      var pipelineState = {\n        sourceWidth: sourceWidth,\n        sourceHeight: sourceHeight,\n        imageData: imageData,\n        originalEl: sourceElement,\n        originalImageData: originalImageData,\n        canvasEl: targetCanvas,\n        ctx: ctx,\n        filterBackend: this,\n      };\n      filters.forEach(function(filter) { filter.applyTo(pipelineState); });\n      if (pipelineState.imageData.width !== sourceWidth || pipelineState.imageData.height !== sourceHeight) {\n        targetCanvas.width = pipelineState.imageData.width;\n        targetCanvas.height = pipelineState.imageData.height;\n      }\n      ctx.putImageData(pipelineState.imageData, 0, 0);\n      return pipelineState;\n    },\n\n  };\n})();\n\n\n/**\n * @namespace fabric.Image.filters\n * @memberOf fabric.Image\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#image_filters}\n * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n */\nfabric.Image.filters = fabric.Image.filters || { };\n\n/**\n * Root filter class from which all filter classes inherit from\n * @class fabric.Image.filters.BaseFilter\n * @memberOf fabric.Image.filters\n */\nfabric.Image.filters.BaseFilter = fabric.util.createClass(/** @lends fabric.Image.filters.BaseFilter.prototype */ {\n\n  /**\n   * Filter type\n   * @param {String} type\n   * @default\n   */\n  type: 'BaseFilter',\n\n  /**\n   * Array of attributes to send with buffers. do not modify\n   * @private\n   */\n\n  vertexSource: 'attribute vec2 aPosition;\\n' +\n    'varying vec2 vTexCoord;\\n' +\n    'void main() {\\n' +\n      'vTexCoord = aPosition;\\n' +\n      'gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\\n' +\n    '}',\n\n  fragmentSource: 'precision highp float;\\n' +\n    'varying vec2 vTexCoord;\\n' +\n    'uniform sampler2D uTexture;\\n' +\n    'void main() {\\n' +\n      'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\n    '}',\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   */\n  initialize: function(options) {\n    if (options) {\n      this.setOptions(options);\n    }\n  },\n\n  /**\n   * Sets filter's properties from options\n   * @param {Object} [options] Options object\n   */\n  setOptions: function(options) {\n    for (var prop in options) {\n      this[prop] = options[prop];\n    }\n  },\n\n  /**\n   * Compile this filter's shader program.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context to use for shader compilation.\n   * @param {String} fragmentSource fragmentShader source for compilation\n   * @param {String} vertexSource vertexShader source for compilation\n   */\n  createProgram: function(gl, fragmentSource, vertexSource) {\n    fragmentSource = fragmentSource || this.fragmentSource;\n    vertexSource = vertexSource || this.vertexSource;\n    if (fabric.webGlPrecision !== 'highp'){\n      fragmentSource = fragmentSource.replace(\n        /precision highp float/g,\n        'precision ' + fabric.webGlPrecision + ' float'\n      );\n    }\n    var vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vertexShader, vertexSource);\n    gl.compileShader(vertexShader);\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n      throw new Error(\n        // eslint-disable-next-line prefer-template\n        'Vertex shader compile error for ' + this.type + ': ' +\n        gl.getShaderInfoLog(vertexShader)\n      );\n    }\n\n    var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fragmentShader, fragmentSource);\n    gl.compileShader(fragmentShader);\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      throw new Error(\n        // eslint-disable-next-line prefer-template\n        'Fragment shader compile error for ' + this.type + ': ' +\n        gl.getShaderInfoLog(fragmentShader)\n      );\n    }\n\n    var program = gl.createProgram();\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragmentShader);\n    gl.linkProgram(program);\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      throw new Error(\n        // eslint-disable-next-line prefer-template\n        'Shader link error for \"${this.type}\" ' +\n        gl.getProgramInfoLog(program)\n      );\n    }\n\n    var attributeLocations = this.getAttributeLocations(gl, program);\n    var uniformLocations = this.getUniformLocations(gl, program) || { };\n    uniformLocations.uStepW = gl.getUniformLocation(program, 'uStepW');\n    uniformLocations.uStepH = gl.getUniformLocation(program, 'uStepH');\n    return {\n      program: program,\n      attributeLocations: attributeLocations,\n      uniformLocations: uniformLocations\n    };\n  },\n\n  /**\n   * Return a map of attribute names to WebGLAttributeLocation objects.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {WebGLShaderProgram} program The shader program from which to take attribute locations.\n   * @returns {Object} A map of attribute names to attribute locations.\n   */\n  getAttributeLocations: function(gl, program) {\n    return {\n      aPosition: gl.getAttribLocation(program, 'aPosition'),\n    };\n  },\n\n  /**\n   * Return a map of uniform names to WebGLUniformLocation objects.\n   *\n   * Intended to be overridden by subclasses.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {WebGLShaderProgram} program The shader program from which to take uniform locations.\n   * @returns {Object} A map of uniform names to uniform locations.\n   */\n  getUniformLocations: function (/* gl, program */) {\n    // in case i do not need any special uniform i need to return an empty object\n    return { };\n  },\n\n  /**\n   * Send attribute data from this filter to its shader program on the GPU.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {Object} attributeLocations A map of shader attribute names to their locations.\n   */\n  sendAttributeData: function(gl, attributeLocations, aPositionData) {\n    var attributeLocation = attributeLocations.aPostion;\n    var buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    gl.enableVertexAttribArray(attributeLocation);\n    gl.vertexAttribPointer(attributeLocation, 2, gl.FLOAT, false, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, aPositionData, gl.STATIC_DRAW);\n  },\n\n  _setupFrameBuffer: function(options) {\n    var gl = options.context, width, height;\n    if (options.passes > 1) {\n      width = options.destinationWidth;\n      height = options.destinationHeight;\n      if (options.sourceWidth !== width || options.sourceHeight !== height) {\n        gl.deleteTexture(options.targetTexture);\n        options.targetTexture = options.filterBackend.createTexture(gl, width, height);\n      }\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D,\n        options.targetTexture, 0);\n    }\n    else {\n      // draw last filter on canvas and not to framebuffer.\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n      gl.finish();\n    }\n  },\n\n  _swapTextures: function(options) {\n    options.passes--;\n    options.pass++;\n    var temp = options.targetTexture;\n    options.targetTexture = options.sourceTexture;\n    options.sourceTexture = temp;\n  },\n\n  /**\n   * Intentionally left blank, to be overridden in custom filters\n   * @param {Object} options\n   **/\n  isNeutralState: function(/* options */) {\n    return false;\n  },\n\n  /**\n   * Apply this filter to the input image data provided.\n   *\n   * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n   *\n   * @param {Object} options\n   * @param {Number} options.passes The number of filters remaining to be executed\n   * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n   * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n   * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  applyTo: function(options) {\n    if (options.webgl) {\n      if (options.passes > 1 && this.isNeutralState(options)) {\n        // avoid doing something that we do not need\n        return;\n      }\n      this._setupFrameBuffer(options);\n      this.applyToWebGL(options);\n      this._swapTextures(options);\n    }\n    else if (!this.isNeutralState()) {\n      this.applyTo2d(options);\n    }\n  },\n\n  /**\n   * Retrieves the cached shader.\n   * @param {Object} options\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  retrieveShader: function(options) {\n    if (!options.programCache.hasOwnProperty(this.type)) {\n      options.programCache[this.type] = this.createProgram(options.context);\n    }\n    return options.programCache[this.type];\n  },\n\n  /**\n   * Apply this filter using webgl.\n   *\n   * @param {Object} options\n   * @param {Number} options.passes The number of filters remaining to be executed\n   * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n   * @param {WebGLTexture} options.originalTexture The texture of the original input image.\n   * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n   * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  applyToWebGL: function(options) {\n    var gl = options.context;\n    var shader = this.retrieveShader(options);\n    if (options.pass === 0 && options.originalTexture) {\n      gl.bindTexture(gl.TEXTURE_2D, options.originalTexture);\n    }\n    else {\n      gl.bindTexture(gl.TEXTURE_2D, options.sourceTexture);\n    }\n    gl.useProgram(shader.program);\n    this.sendAttributeData(gl, shader.attributeLocations, options.aPosition);\n\n    gl.uniform1f(shader.uniformLocations.uStepW, 1 / options.sourceWidth);\n    gl.uniform1f(shader.uniformLocations.uStepH, 1 / options.sourceHeight);\n\n    this.sendUniformData(gl, shader.uniformLocations);\n    gl.viewport(0, 0, options.destinationWidth, options.destinationHeight);\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n  },\n\n  bindAdditionalTexture: function(gl, texture, textureUnit) {\n    gl.activeTexture(textureUnit);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    // reset active texture to 0 as usual\n    gl.activeTexture(gl.TEXTURE0);\n  },\n\n  unbindAdditionalTexture: function(gl, textureUnit) {\n    gl.activeTexture(textureUnit);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.activeTexture(gl.TEXTURE0);\n  },\n\n  getMainParameter: function() {\n    return this[this.mainParameter];\n  },\n\n  setMainParameter: function(value) {\n    this[this.mainParameter] = value;\n  },\n\n  /**\n   * Send uniform data from this filter to its shader program on the GPU.\n   *\n   * Intended to be overridden by subclasses.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {Object} uniformLocations A map of shader uniform names to their locations.\n   */\n  sendUniformData: function(/* gl, uniformLocations */) {\n    // Intentionally left blank.  Override me in subclasses.\n  },\n\n  /**\n   * If needed by a 2d filter, this functions can create an helper canvas to be used\n   * remember that options.targetCanvas is available for use till end of chain.\n   */\n  createHelpLayer: function(options) {\n    if (!options.helpLayer) {\n      var helpLayer = document.createElement('canvas');\n      helpLayer.width = options.sourceWidth;\n      helpLayer.height = options.sourceHeight;\n      options.helpLayer = helpLayer;\n    }\n  },\n\n  /**\n   * Returns object representation of an instance\n   * @return {Object} Object representation of an instance\n   */\n  toObject: function() {\n    var object = { type: this.type }, mainP = this.mainParameter;\n    if (mainP) {\n      object[mainP] = this[mainP];\n    }\n    return object;\n  },\n\n  /**\n   * Returns a JSON representation of an instance\n   * @return {Object} JSON\n   */\n  toJSON: function() {\n    // delegate, not alias\n    return this.toObject();\n  }\n});\n\nfabric.Image.filters.BaseFilter.fromObject = function(object, callback) {\n  var filter = new fabric.Image.filters[object.type](object);\n  callback && callback(filter);\n  return filter;\n};\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Color Matrix filter class\n   * @class fabric.Image.filters.ColorMatrix\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.ColorMatrix#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @see {@Link http://www.webwasp.co.uk/tutorials/219/Color_Matrix_Filter.php}\n   * @see {@Link http://phoboslab.org/log/2013/11/fast-image-filters-with-webgl}\n   * @example <caption>Kodachrome filter</caption>\n   * var filter = new fabric.Image.filters.ColorMatrix({\n   *  matrix: [\n       1.1285582396593525, -0.3967382283601348, -0.03992559172921793, 0, 63.72958762196502,\n       -0.16404339962244616, 1.0835251566291304, -0.05498805115633132, 0, 24.732407896706203,\n       -0.16786010706155763, -0.5603416277695248, 1.6014850761964943, 0, 35.62982807460946,\n       0, 0, 0, 1, 0\n      ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.ColorMatrix = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.ColorMatrix.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'ColorMatrix',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'uniform mat4 uColorMatrix;\\n' +\n      'uniform vec4 uConstants;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'color *= uColorMatrix;\\n' +\n        'color += uConstants;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * Colormatrix for pixels.\n     * array of 20 floats. Numbers in positions 4, 9, 14, 19 loose meaning\n     * outside the -1, 1 range.\n     * 0.0039215686 is the part of 1 that get translated to 1 in 2d\n     * @param {Array} matrix array of 20 numbers.\n     * @default\n     */\n    matrix: [\n      1, 0, 0, 0, 0,\n      0, 1, 0, 0, 0,\n      0, 0, 1, 0, 0,\n      0, 0, 0, 1, 0\n    ],\n\n    mainParameter: 'matrix',\n\n    /**\n     * Lock the colormatrix on the color part, skipping alpha, manly for non webgl scenario\n     * to save some calculation\n     */\n    colorsOnly: true,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      // create a new array instead mutating the prototype with push\n      this.matrix = this.matrix.slice(0);\n    },\n\n    /**\n     * Intentionally left blank, to be overridden in custom filters\n     * @param {Object} options\n     **/\n    isNeutralState: function(/* options */) {\n      var _class = filters.ColorMatrix;\n      for (var i = 20; i--;) {\n        if (this.matrix[i] !== _class.prototype.matrix[i]) {\n          return false;\n        }\n      }\n      return true;\n    },\n\n    /**\n     * Apply the ColorMatrix operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          iLen = data.length,\n          m = this.matrix,\n          r, g, b, a, i, colorsOnly = this.colorsOnly;\n\n      for (i = 0; i < iLen; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n        if (colorsOnly) {\n          data[i] = r * m[0] + g * m[1] + b * m[2] + m[4] * 255;\n          data[i + 1] = r * m[5] + g * m[6] + b * m[7] + m[9] * 255;\n          data[i + 2] = r * m[10] + g * m[11] + b * m[12] + m[14] * 255;\n        }\n        else {\n          a = data[i + 3];\n          data[i] = r * m[0] + g * m[1] + b * m[2] + a * m[3] + m[4] * 255;\n          data[i + 1] = r * m[5] + g * m[6] + b * m[7] + a * m[8] + m[9] * 255;\n          data[i + 2] = r * m[10] + g * m[11] + b * m[12] + a * m[13] + m[14] * 255;\n          data[i + 3] = r * m[15] + g * m[16] + b * m[17] + a * m[18] + m[19] * 255;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uColorMatrix: gl.getUniformLocation(program, 'uColorMatrix'),\n        uConstants: gl.getUniformLocation(program, 'uConstants'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var m = this.matrix,\n          matrix = [\n            m[0], m[1], m[2], m[3],\n            m[5], m[6], m[7], m[8],\n            m[10], m[11], m[12], m[13],\n            m[15], m[16], m[17], m[18]\n          ],\n          constants = [m[4], m[9], m[14], m[19]];\n      gl.uniformMatrix4fv(uniformLocations.uColorMatrix, false, matrix);\n      gl.uniform4fv(uniformLocations.uConstants, constants);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] function to invoke after filter creation\n   * @return {fabric.Image.filters.ColorMatrix} Instance of fabric.Image.filters.ColorMatrix\n   */\n  fabric.Image.filters.ColorMatrix.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Brightness filter class\n   * @class fabric.Image.filters.Brightness\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Brightness#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Brightness({\n   *   brightness: 200\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Brightness = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Brightness.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Brightness',\n\n    /**\n     * Fragment source for the brightness program\n     */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uBrightness;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'color.rgb += uBrightness;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * Brightness value, from -1 to 1.\n     * translated to -255 to 255 for 2d\n     * 0.0039215686 is the part of 1 that get translated to 1 in 2d\n     * @param {Number} brightness\n     * @default\n     */\n    brightness: 0,\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'brightness',\n\n    /**\n    * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n    *\n    * @param {Object} options\n    * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n    */\n    applyTo2d: function(options) {\n      if (this.brightness === 0) {\n        return;\n      }\n      var imageData = options.imageData,\n          data = imageData.data, i, len = data.length,\n          brightness = Math.round(this.brightness * 255);\n      for (i = 0; i < len; i += 4) {\n        data[i] = data[i] + brightness;\n        data[i + 1] = data[i + 1] + brightness;\n        data[i + 2] = data[i + 2] + brightness;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uBrightness: gl.getUniformLocation(program, 'uBrightness'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uBrightness, this.brightness);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Brightness} Instance of fabric.Image.filters.Brightness\n   */\n  fabric.Image.filters.Brightness.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Adapted from <a href=\"http://www.html5rocks.com/en/tutorials/canvas/imagefilters/\">html5rocks article</a>\n   * @class fabric.Image.filters.Convolute\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Convolute#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example <caption>Sharpen filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 0, -1,  0,\n   *            -1,  5, -1,\n   *             0, -1,  0 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   * @example <caption>Blur filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 1/9, 1/9, 1/9,\n   *             1/9, 1/9, 1/9,\n   *             1/9, 1/9, 1/9 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   * @example <caption>Emboss filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 1,   1,  1,\n   *             1, 0.7, -1,\n   *            -1,  -1, -1 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   * @example <caption>Emboss filter with opaqueness</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   opaque: true,\n   *   matrix: [ 1,   1,  1,\n   *             1, 0.7, -1,\n   *            -1,  -1, -1 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n  filters.Convolute = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Convolute.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Convolute',\n\n    /*\n     * Opaque value (true/false)\n     */\n    opaque: false,\n\n    /*\n     * matrix for the filter, max 9x9\n     */\n    matrix: [0, 0, 0, 0, 1, 0, 0, 0, 0],\n\n    /**\n     * Fragment source for the brightness program\n     */\n    fragmentSource: {\n      Convolute_3_1: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[9];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 0);\\n' +\n          'for (float h = 0.0; h < 3.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 3.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 1), uStepH * (h - 1));\\n' +\n              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 3.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      Convolute_3_0: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[9];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 1);\\n' +\n          'for (float h = 0.0; h < 3.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 3.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 1.0), uStepH * (h - 1.0));\\n' +\n              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 3.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\n          'gl_FragColor = color;\\n' +\n          'gl_FragColor.a = alpha;\\n' +\n        '}',\n      Convolute_5_1: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[25];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 0);\\n' +\n          'for (float h = 0.0; h < 5.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 5.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\\n' +\n              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 5.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      Convolute_5_0: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[25];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 1);\\n' +\n          'for (float h = 0.0; h < 5.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 5.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\\n' +\n              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 5.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\n          'gl_FragColor = color;\\n' +\n          'gl_FragColor.a = alpha;\\n' +\n        '}',\n      Convolute_7_1: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[49];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 0);\\n' +\n          'for (float h = 0.0; h < 7.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 7.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\\n' +\n              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 7.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      Convolute_7_0: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[49];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 1);\\n' +\n          'for (float h = 0.0; h < 7.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 7.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\\n' +\n              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 7.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\n          'gl_FragColor = color;\\n' +\n          'gl_FragColor.a = alpha;\\n' +\n        '}',\n      Convolute_9_1: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[81];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 0);\\n' +\n          'for (float h = 0.0; h < 9.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 9.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\\n' +\n              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 9.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      Convolute_9_0: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[81];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 1);\\n' +\n          'for (float h = 0.0; h < 9.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 9.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\\n' +\n              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 9.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\n          'gl_FragColor = color;\\n' +\n          'gl_FragColor.a = alpha;\\n' +\n        '}',\n    },\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Convolute.prototype\n     * @param {Object} [options] Options object\n     * @param {Boolean} [options.opaque=false] Opaque value (true/false)\n     * @param {Array} [options.matrix] Filter matrix\n     */\n\n\n    /**\n    * Retrieves the cached shader.\n    * @param {Object} options\n    * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n    * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n    */\n    retrieveShader: function(options) {\n      var size = Math.sqrt(this.matrix.length);\n      var cacheKey = this.type + '_' + size + '_' + (this.opaque ? 1 : 0);\n      var shaderSource = this.fragmentSource[cacheKey];\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    /**\n     * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          weights = this.matrix,\n          side = Math.round(Math.sqrt(weights.length)),\n          halfSide = Math.floor(side / 2),\n          sw = imageData.width,\n          sh = imageData.height,\n          output = options.ctx.createImageData(sw, sh),\n          dst = output.data,\n          // go through the destination image pixels\n          alphaFac = this.opaque ? 1 : 0,\n          r, g, b, a, dstOff,\n          scx, scy, srcOff, wt,\n          x, y, cx, cy;\n\n      for (y = 0; y < sh; y++) {\n        for (x = 0; x < sw; x++) {\n          dstOff = (y * sw + x) * 4;\n          // calculate the weighed sum of the source image pixels that\n          // fall under the convolution matrix\n          r = 0; g = 0; b = 0; a = 0;\n\n          for (cy = 0; cy < side; cy++) {\n            for (cx = 0; cx < side; cx++) {\n              scy = y + cy - halfSide;\n              scx = x + cx - halfSide;\n\n              // eslint-disable-next-line max-depth\n              if (scy < 0 || scy > sh || scx < 0 || scx > sw) {\n                continue;\n              }\n\n              srcOff = (scy * sw + scx) * 4;\n              wt = weights[cy * side + cx];\n\n              r += data[srcOff] * wt;\n              g += data[srcOff + 1] * wt;\n              b += data[srcOff + 2] * wt;\n              // eslint-disable-next-line max-depth\n              if (!alphaFac) {\n                a += data[srcOff + 3] * wt;\n              }\n            }\n          }\n          dst[dstOff] = r;\n          dst[dstOff + 1] = g;\n          dst[dstOff + 2] = b;\n          if (!alphaFac) {\n            dst[dstOff + 3] = a;\n          }\n          else {\n            dst[dstOff + 3] = data[dstOff + 3];\n          }\n        }\n      }\n      options.imageData = output;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uMatrix: gl.getUniformLocation(program, 'uMatrix'),\n        uOpaque: gl.getUniformLocation(program, 'uOpaque'),\n        uHalfSize: gl.getUniformLocation(program, 'uHalfSize'),\n        uSize: gl.getUniformLocation(program, 'uSize'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1fv(uniformLocations.uMatrix, this.matrix);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        opaque: this.opaque,\n        matrix: this.matrix\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Convolute} Instance of fabric.Image.filters.Convolute\n   */\n  fabric.Image.filters.Convolute.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Grayscale image filter class\n   * @class fabric.Image.filters.Grayscale\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Grayscale();\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Grayscale = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Grayscale.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Grayscale',\n\n    fragmentSource: {\n      average: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n          'float average = (color.r + color.b + color.g) / 3.0;\\n' +\n          'gl_FragColor = vec4(average, average, average, color.a);\\n' +\n        '}',\n      lightness: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform int uMode;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 col = texture2D(uTexture, vTexCoord);\\n' +\n          'float average = (max(max(col.r, col.g),col.b) + min(min(col.r, col.g),col.b)) / 2.0;\\n' +\n          'gl_FragColor = vec4(average, average, average, col.a);\\n' +\n        '}',\n      luminosity: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform int uMode;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 col = texture2D(uTexture, vTexCoord);\\n' +\n          'float average = 0.21 * col.r + 0.72 * col.g + 0.07 * col.b;\\n' +\n          'gl_FragColor = vec4(average, average, average, col.a);\\n' +\n        '}',\n    },\n\n\n    /**\n     * Grayscale mode, between 'average', 'lightness', 'luminosity'\n     * @param {String} type\n     * @default\n     */\n    mode: 'average',\n\n    mainParameter: 'mode',\n\n    /**\n     * Apply the Grayscale operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data, i,\n          len = data.length, value,\n          mode = this.mode;\n      for (i = 0; i < len; i += 4) {\n        if (mode === 'average') {\n          value = (data[i] + data[i + 1] + data[i + 2]) / 3;\n        }\n        else if (mode === 'lightness') {\n          value = (Math.min(data[i], data[i + 1], data[i + 2]) +\n            Math.max(data[i], data[i + 1], data[i + 2])) / 2;\n        }\n        else if (mode === 'luminosity') {\n          value = 0.21 * data[i] + 0.72 * data[i + 1] + 0.07 * data[i + 2];\n        }\n        data[i] = value;\n        data[i + 1] = value;\n        data[i + 2] = value;\n      }\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function(options) {\n      var cacheKey = this.type + '_' + this.mode;\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        var shaderSource = this.fragmentSource[this.mode];\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uMode: gl.getUniformLocation(program, 'uMode'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      // default average mode.\n      var mode = 1;\n      gl.uniform1i(uniformLocations.uMode, mode);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Grayscale} Instance of fabric.Image.filters.Grayscale\n   */\n  fabric.Image.filters.Grayscale.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Invert filter class\n   * @class fabric.Image.filters.Invert\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Invert();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Invert = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Invert.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Invert',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform int uInvert;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'if (uInvert == 1) {\\n' +\n          'gl_FragColor = vec4(1.0 - color.r,1.0 -color.g,1.0 -color.b,color.a);\\n' +\n        '} else {\\n' +\n          'gl_FragColor = color;\\n' +\n        '}\\n' +\n      '}',\n\n    /**\n     * Filter invert. if false, does nothing\n     * @param {Boolean} invert\n     * @default\n     */\n    invert: true,\n\n    mainParameter: 'invert',\n\n    /**\n     * Apply the Invert operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function(options) {\n      if (!this.invert) {\n        return;\n      }\n      var imageData = options.imageData,\n          data = imageData.data, i,\n          len = data.length;\n      for (i = 0; i < len; i += 4) {\n        data[i] = 255 - data[i];\n        data[i + 1] = 255 - data[i + 1];\n        data[i + 2] = 255 - data[i + 2];\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uInvert: gl.getUniformLocation(program, 'uInvert'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1i(uniformLocations.uInvert, this.invert);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Invert} Instance of fabric.Image.filters.Invert\n   */\n  fabric.Image.filters.Invert.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Noise filter class\n   * @class fabric.Image.filters.Noise\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Noise#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Noise({\n   *   noise: 700\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n  filters.Noise = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Noise.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Noise',\n\n    /**\n     * Fragment source for the noise program\n     */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uStepH;\\n' +\n      'uniform float uNoise;\\n' +\n      'uniform float uSeed;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'float rand(vec2 co, float seed, float vScale) {\\n' +\n        'return fract(sin(dot(co.xy * vScale ,vec2(12.9898 , 78.233))) * 43758.5453 * (seed + 0.01) / 2.0);\\n' +\n      '}\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'color.rgb += (0.5 - rand(vTexCoord, uSeed, 0.1 / uStepH)) * uNoise;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'noise',\n\n    /**\n     * Noise value, from\n     * @param {Number} noise\n     * @default\n     */\n    noise: 0,\n\n    /**\n     * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      if (this.noise === 0) {\n        return;\n      }\n      var imageData = options.imageData,\n          data = imageData.data, i, len = data.length,\n          noise = this.noise, rand;\n\n      for (i = 0, len = data.length; i < len; i += 4) {\n\n        rand = (0.5 - Math.random()) * noise;\n\n        data[i] += rand;\n        data[i + 1] += rand;\n        data[i + 2] += rand;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uNoise: gl.getUniformLocation(program, 'uNoise'),\n        uSeed: gl.getUniformLocation(program, 'uSeed'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uNoise, this.noise / 255);\n      gl.uniform1f(uniformLocations.uSeed, Math.random());\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        noise: this.noise\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Noise} Instance of fabric.Image.filters.Noise\n   */\n  fabric.Image.filters.Noise.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Pixelate filter class\n   * @class fabric.Image.filters.Pixelate\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Pixelate#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Pixelate({\n   *   blocksize: 8\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Pixelate = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Pixelate.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Pixelate',\n\n    blocksize: 4,\n\n    mainParameter: 'blocksize',\n\n    /**\n     * Fragment source for the Pixelate program\n     */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uBlocksize;\\n' +\n      'uniform float uStepW;\\n' +\n      'uniform float uStepH;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'float blockW = uBlocksize * uStepW;\\n' +\n        'float blockH = uBlocksize * uStepW;\\n' +\n        'int posX = int(vTexCoord.x / blockW);\\n' +\n        'int posY = int(vTexCoord.y / blockH);\\n' +\n        'float fposX = float(posX);\\n' +\n        'float fposY = float(posY);\\n' +\n        'vec2 squareCoords = vec2(fposX * blockW, fposY * blockH);\\n' +\n        'vec4 color = texture2D(uTexture, squareCoords);\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * Apply the Pixelate operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      if (this.blocksize === 1) {\n        return;\n      }\n      var imageData = options.imageData,\n          data = imageData.data,\n          iLen = imageData.height,\n          jLen = imageData.width,\n          index, i, j, r, g, b, a,\n          _i, _j, _iLen, _jLen;\n\n      for (i = 0; i < iLen; i += this.blocksize) {\n        for (j = 0; j < jLen; j += this.blocksize) {\n\n          index = (i * 4) * jLen + (j * 4);\n\n          r = data[index];\n          g = data[index + 1];\n          b = data[index + 2];\n          a = data[index + 3];\n\n          _iLen = Math.min(i + this.blocksize, iLen);\n          _jLen = Math.min(j + this.blocksize, jLen);\n          for (_i = i; _i < _iLen; _i++) {\n            for (_j = j; _j < _jLen; _j++) {\n              index = (_i * 4) * jLen + (_j * 4);\n              data[index] = r;\n              data[index + 1] = g;\n              data[index + 2] = b;\n              data[index + 3] = a;\n            }\n          }\n        }\n      }\n    },\n\n    /**\n     * Indicate when the filter is not gonna apply changes to the image\n     **/\n    isNeutralState: function() {\n      return this.blocksize === 1;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uBlocksize: gl.getUniformLocation(program, 'uBlocksize'),\n        uStepW: gl.getUniformLocation(program, 'uStepW'),\n        uStepH: gl.getUniformLocation(program, 'uStepH'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uBlocksize, this.blocksize);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Pixelate} Instance of fabric.Image.filters.Pixelate\n   */\n  fabric.Image.filters.Pixelate.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Remove white filter class\n   * @class fabric.Image.filters.RemoveColor\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.RemoveColor#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.RemoveColor({\n   *   threshold: 0.2,\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n  filters.RemoveColor = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.RemoveColor.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'RemoveColor',\n\n    /**\n     * Color to remove, in any format understood by fabric.Color.\n     * @param {String} type\n     * @default\n     */\n    color: '#FFFFFF',\n\n    /**\n     * Fragment source for the brightness program\n     */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform vec4 uLow;\\n' +\n      'uniform vec4 uHigh;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\n        'if(all(greaterThan(gl_FragColor.rgb,uLow.rgb)) && all(greaterThan(uHigh.rgb,gl_FragColor.rgb))) {\\n' +\n          'gl_FragColor.a = 0.0;\\n' +\n        '}\\n' +\n      '}',\n\n    /**\n     * distance to actual color, as value up or down from each r,g,b\n     * between 0 and 1\n     **/\n    distance: 0.02,\n\n    /**\n     * For color to remove inside distance, use alpha channel for a smoother deletion\n     * NOT IMPLEMENTED YET\n     **/\n    useAlpha: false,\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.RemoveWhite.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.color=#RRGGBB] Threshold value\n     * @param {Number} [options.distance=10] Distance value\n     */\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data, i,\n          distance = this.distance * 255,\n          r, g, b,\n          source = new fabric.Color(this.color).getSource(),\n          lowC = [\n            source[0] - distance,\n            source[1] - distance,\n            source[2] - distance,\n          ],\n          highC = [\n            source[0] + distance,\n            source[1] + distance,\n            source[2] + distance,\n          ];\n\n\n      for (i = 0; i < data.length; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        if (r > lowC[0] &&\n            g > lowC[1] &&\n            b > lowC[2] &&\n            r < highC[0] &&\n            g < highC[1] &&\n            b < highC[2]) {\n          data[i + 3] = 0;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uLow: gl.getUniformLocation(program, 'uLow'),\n        uHigh: gl.getUniformLocation(program, 'uHigh'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var source = new fabric.Color(this.color).getSource(),\n          distance = parseFloat(this.distance),\n          lowC = [\n            0 + source[0] / 255 - distance,\n            0 + source[1] / 255 - distance,\n            0 + source[2] / 255 - distance,\n            1\n          ],\n          highC = [\n            source[0] / 255 + distance,\n            source[1] / 255 + distance,\n            source[2] / 255 + distance,\n            1\n          ];\n      gl.uniform4fv(uniformLocations.uLow, lowC);\n      gl.uniform4fv(uniformLocations.uHigh, highC);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        color: this.color,\n        distance: this.distance\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.RemoveColor} Instance of fabric.Image.filters.RemoveWhite\n   */\n  fabric.Image.filters.RemoveColor.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  var matrices = {\n    Brownie: [\n      0.59970,0.34553,-0.27082,0,0.186,\n      -0.03770,0.86095,0.15059,0,-0.1449,\n      0.24113,-0.07441,0.44972,0,-0.02965,\n      0,0,0,1,0\n    ],\n    Vintage: [\n      0.62793,0.32021,-0.03965,0,0.03784,\n      0.02578,0.64411,0.03259,0,0.02926,\n      0.04660,-0.08512,0.52416,0,0.02023,\n      0,0,0,1,0\n    ],\n    Kodachrome: [\n      1.12855,-0.39673,-0.03992,0,0.24991,\n      -0.16404,1.08352,-0.05498,0,0.09698,\n      -0.16786,-0.56034,1.60148,0,0.13972,\n      0,0,0,1,0\n    ],\n    Technicolor: [\n      1.91252,-0.85453,-0.09155,0,0.04624,\n      -0.30878,1.76589,-0.10601,0,-0.27589,\n      -0.23110,-0.75018,1.84759,0,0.12137,\n      0,0,0,1,0\n    ],\n    Polaroid: [\n      1.438,-0.062,-0.062,0,0,\n      -0.122,1.378,-0.122,0,0,\n      -0.016,-0.016,1.483,0,0,\n      0,0,0,1,0\n    ],\n    Sepia: [\n      0.393, 0.769, 0.189, 0, 0,\n      0.349, 0.686, 0.168, 0, 0,\n      0.272, 0.534, 0.131, 0, 0,\n      0, 0, 0, 1, 0\n    ],\n    BlackWhite: [\n      1.5, 1.5, 1.5, 0, -1,\n      1.5, 1.5, 1.5, 0, -1,\n      1.5, 1.5, 1.5, 0, -1,\n      0, 0, 0, 1, 0,\n    ]\n  };\n\n  for (var key in matrices) {\n    filters[key] = createClass(filters.ColorMatrix, /** @lends fabric.Image.filters.Sepia.prototype */ {\n\n      /**\n       * Filter type\n       * @param {String} type\n       * @default\n       */\n      type: key,\n\n      /**\n       * Colormatrix for the effect\n       * array of 20 floats. Numbers in positions 4, 9, 14, 19 loose meaning\n       * outside the -1, 1 range.\n       * @param {Array} matrix array of 20 numbers.\n       * @default\n       */\n      matrix: matrices[key],\n\n      /**\n       * Lock the matrix export for this kind of static, parameter less filters.\n       */\n      mainParameter: false,\n      /**\n       * Lock the colormatrix on the color part, skipping alpha\n       */\n      colorsOnly: true,\n\n    });\n    fabric.Image.filters[key].fromObject = fabric.Image.filters.BaseFilter.fromObject;\n  }\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n  'use strict';\n\n  var fabric = global.fabric,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Color Blend filter class\n   * @class fabric.Image.filter.BlendColor\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @example\n   * var filter = new fabric.Image.filters.BlendColor({\n   *  color: '#000',\n   *  mode: 'multiply'\n   * });\n   *\n   * var filter = new fabric.Image.filters.BlendImage({\n   *  image: fabricImageObject,\n   *  mode: 'multiply',\n   *  alpha: 0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n\n  filters.BlendColor = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Blend.prototype */ {\n    type: 'BlendColor',\n\n    /**\n     * Color to make the blend operation with. default to a reddish color since black or white\n     * gives always strong result.\n     **/\n    color: '#F95C63',\n\n    /**\n     * Blend mode for the filter: one of multiply, add, diff, screen, subtract,\n     * darken, lighten, overlay, exclusion, tint.\n     **/\n    mode: 'multiply',\n\n    /**\n     * alpha value. represent the strength of the blend color operation.\n     **/\n    alpha: 1,\n\n    /**\n     * Fragment source for the Multiply program\n     */\n    fragmentSource: {\n      multiply: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n          'color.rgb *= uColor.rgb;\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      screen: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n          'color.rgb = 1.0 - (1.0 - color.rgb) * (1.0 - uColor.rgb);\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      add: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\n          'gl_FragColor.rgb += uColor.rgb;\\n' +\n        '}',\n      diff: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\n          'gl_FragColor.rgb = abs(gl_FragColor.rgb - uColor.rgb);\\n' +\n      '}',\n      subtract: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\n          'gl_FragColor.rgb -= uColor.rgb;\\n' +\n        '}',\n      lighten: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\n          'gl_FragColor.rgb = max(gl_FragColor.rgb, uColor.rgb);\\n' +\n        '}',\n      darken: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\n          'gl_FragColor.rgb = min(gl_FragColor.rgb, uColor.rgb);\\n' +\n        '}',\n      exclusion: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\n          'gl_FragColor.rgb += uColor.rgb - 2.0 * (uColor.rgb * gl_FragColor.rgb);\\n' +\n        '}',\n      overlay: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\n          'if (uColor.r < 0.5) {\\n' +\n            'gl_FragColor.r *= 2.0 * uColor.r;\\n' +\n          '} else {\\n' +\n            'gl_FragColor.r = 1.0 - 2.0 * (1.0 - gl_FragColor.r) * (1.0 - uColor.r);\\n' +\n          '}\\n' +\n          'if (uColor.g < 0.5) {\\n' +\n            'gl_FragColor.g *= 2.0 * uColor.g;\\n' +\n          '} else {\\n' +\n            'gl_FragColor.g = 1.0 - 2.0 * (1.0 - gl_FragColor.g) * (1.0 - uColor.g);\\n' +\n          '}\\n' +\n          'if (uColor.b < 0.5) {\\n' +\n            'gl_FragColor.b *= 2.0 * uColor.b;\\n' +\n          '} else {\\n' +\n            'gl_FragColor.b = 1.0 - 2.0 * (1.0 - gl_FragColor.b) * (1.0 - uColor.b);\\n' +\n          '}\\n' +\n        '}',\n      tint: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\n          'gl_FragColor.rgb *= (1.0 - uColor.a);\\n' +\n          'gl_FragColor.rgb += uColor.rgb;\\n' +\n        '}'\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function(options) {\n      var cacheKey = this.type + '_' + this.mode;\n      var shaderSource = this.fragmentSource[this.mode];\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    /**\n     * Apply the Blend operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data, iLen = data.length,\n          tr, tg, tb,\n          r, g, b,\n          source, alpha1 = 1 - this.alpha;\n\n      source = new fabric.Color(this.color).getSource();\n      tr = source[0] * this.alpha;\n      tg = source[1] * this.alpha;\n      tb = source[2] * this.alpha;\n\n      for (var i = 0; i < iLen; i += 4) {\n\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        switch (this.mode) {\n          case 'multiply':\n            data[i] = r * tr / 255;\n            data[i + 1] = g * tg / 255;\n            data[i + 2] = b * tb / 255;\n            break;\n          case 'screen':\n            data[i] = 255 - (255 - r) * (255 - tr) / 255;\n            data[i + 1] = 255 - (255 - g) * (255 - tg) / 255;\n            data[i + 2] = 255 - (255 - b) * (255 - tb) / 255;\n            break;\n          case 'add':\n            data[i] = r + tr;\n            data[i + 1] = g + tg;\n            data[i + 2] = b + tb;\n            break;\n          case 'diff':\n          case 'difference':\n            data[i] = Math.abs(r - tr);\n            data[i + 1] = Math.abs(g - tg);\n            data[i + 2] = Math.abs(b - tb);\n            break;\n          case 'subtract':\n            data[i] = r - tr;\n            data[i + 1] = g - tg;\n            data[i + 2] = b - tb;\n            break;\n          case 'darken':\n            data[i] = Math.min(r, tr);\n            data[i + 1] = Math.min(g, tg);\n            data[i + 2] = Math.min(b, tb);\n            break;\n          case 'lighten':\n            data[i] = Math.max(r, tr);\n            data[i + 1] = Math.max(g, tg);\n            data[i + 2] = Math.max(b, tb);\n            break;\n          case 'overlay':\n            data[i] = tr < 128 ? (2 * r * tr / 255) : (255 - 2 * (255 - r) * (255 - tr) / 255);\n            data[i + 1] = tg < 128 ? (2 * g * tg / 255) : (255 - 2 * (255 - g) * (255 - tg) / 255);\n            data[i + 2] = tb < 128 ? (2 * b * tb / 255) : (255 - 2 * (255 - b) * (255 - tb) / 255);\n            break;\n          case 'exclusion':\n            data[i] = tr + r - ((2 * tr * r) / 255);\n            data[i + 1] = tg + g - ((2 * tg * g) / 255);\n            data[i + 2] = tb + b - ((2 * tb * b) / 255);\n            break;\n          case 'tint':\n            data[i] = tr + r * alpha1;\n            data[i + 1] = tg + g * alpha1;\n            data[i + 2] = tb + b * alpha1;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uColor: gl.getUniformLocation(program, 'uColor'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var source = new fabric.Color(this.color).getSource();\n      source[0] = this.alpha * source[0] / 255;\n      source[1] = this.alpha * source[1] / 255;\n      source[2] = this.alpha * source[2] / 255;\n      source[3] = this.alpha;\n      gl.uniform4fv(uniformLocations.uColor, source);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return {\n        type: this.type,\n        color: this.color,\n        mode: this.mode,\n        alpha: this.alpha\n      };\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.BlendColor} Instance of fabric.Image.filters.BlendColor\n   */\n  fabric.Image.filters.BlendColor.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n  'use strict';\n\n  var fabric = global.fabric,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Image Blend filter class\n   * @class fabric.Image.filter.BlendImage\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @example\n   * var filter = new fabric.Image.filters.BlendColor({\n   *  color: '#000',\n   *  mode: 'multiply'\n   * });\n   *\n   * var filter = new fabric.Image.filters.BlendImage({\n   *  image: fabricImageObject,\n   *  mode: 'multiply',\n   *  alpha: 0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n\n  filters.BlendImage = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.BlendImage.prototype */ {\n    type: 'BlendImage',\n\n    /**\n     * Color to make the blend operation with. default to a reddish color since black or white\n     * gives always strong result.\n     **/\n    image: null,\n\n    /**\n     * Blend mode for the filter: one of multiply, add, diff, screen, subtract,\n     * darken, lighten, overlay, exclusion, tint.\n     **/\n    mode: 'multiply',\n\n    /**\n     * alpha value. represent the strength of the blend color operation.\n     **/\n    alpha: 1,\n\n    vertexSource: 'attribute vec2 aPosition;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'varying vec2 vTexCoord2;\\n' +\n      'uniform mat3 uTransformMatrix;\\n' +\n      'void main() {\\n' +\n        'vTexCoord = aPosition;\\n' +\n        'vTexCoord2 = (uTransformMatrix * vec3(aPosition, 1.0)).xy;\\n' +\n        'gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\\n' +\n      '}',\n\n    /**\n     * Fragment source for the Multiply program\n     */\n    fragmentSource: {\n      multiply: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform sampler2D uImage;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'varying vec2 vTexCoord2;\\n' +\n        'void main() {\\n' +\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n          'vec4 color2 = texture2D(uImage, vTexCoord2);\\n' +\n          'color.rgba *= color2.rgba;\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      mask: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform sampler2D uImage;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'varying vec2 vTexCoord2;\\n' +\n        'void main() {\\n' +\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n          'vec4 color2 = texture2D(uImage, vTexCoord2);\\n' +\n          'color.a = color2.a;\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function(options) {\n      var cacheKey = this.type + '_' + this.mode;\n      var shaderSource = this.fragmentSource[this.mode];\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    applyToWebGL: function(options) {\n      // load texture to blend.\n      var gl = options.context,\n          texture = this.createTexture(options.filterBackend, this.image);\n      this.bindAdditionalTexture(gl, texture, gl.TEXTURE1);\n      this.callSuper('applyToWebGL', options);\n      this.unbindAdditionalTexture(gl, gl.TEXTURE1);\n    },\n\n    createTexture: function(backend, image) {\n      return backend.getCachedTexture(image.cacheKey, image._element);\n    },\n\n    /**\n     * Calculate a transformMatrix to adapt the image to blend over\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    calculateMatrix: function() {\n      var image = this.image,\n          width = image._element.width,\n          height = image._element.height;\n      return [\n        1 / image.scaleX, 0, 0,\n        0, 1 / image.scaleY, 0,\n        -image.left / width, -image.top / height, 1\n      ];\n    },\n\n    /**\n     * Apply the Blend operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          resources = options.filterBackend.resources,\n          data = imageData.data, iLen = data.length,\n          width = options.imageData.width,\n          height = options.imageData.height,\n          tr, tg, tb, ta,\n          r, g, b, a,\n          canvas1, context, image = this.image, blendData;\n\n      if (!resources.blendImage) {\n        resources.blendImage = document.createElement('canvas');\n      }\n      canvas1 = resources.blendImage;\n      if (canvas1.width !== width || canvas1.height !== height) {\n        canvas1.width = width;\n        canvas1.height = height;\n      }\n      context = canvas1.getContext('2d');\n      context.setTransform(image.scaleX, 0, 0, image.scaleY, image.left, image.top);\n      context.drawImage(image._element, 0, 0, width, height);\n      blendData = context.getImageData(0, 0, width, height).data;\n      for (var i = 0; i < iLen; i += 4) {\n\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n        a = data[i + 3];\n\n        tr = blendData[i];\n        tg = blendData[i + 1];\n        tb = blendData[i + 2];\n        ta = blendData[i + 3];\n\n        switch (this.mode) {\n          case 'multiply':\n            data[i] = r * tr / 255;\n            data[i + 1] = g * tg / 255;\n            data[i + 2] = b * tb / 255;\n            data[i + 3] = a * ta / 255;\n            break;\n          case 'mask':\n            data[i + 3] = ta;\n            break;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uTransformMatrix: gl.getUniformLocation(program, 'uTransformMatrix'),\n        uImage: gl.getUniformLocation(program, 'uImage'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var matrix = this.calculateMatrix();\n      gl.uniform1i(uniformLocations.uImage, 1); // texture unit 1.\n      gl.uniformMatrix3fv(uniformLocations.uTransformMatrix, false, matrix);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return {\n        type: this.type,\n        image: this.image && this.image.toObject(),\n        mode: this.mode,\n        alpha: this.alpha\n      };\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} callback to be invoked after filter creation\n   * @return {fabric.Image.filters.BlendImage} Instance of fabric.Image.filters.BlendImage\n   */\n  fabric.Image.filters.BlendImage.fromObject = function(object, callback) {\n    fabric.Image.fromObject(object.image, function(image) {\n      var options = fabric.util.object.clone(object);\n      options.image = image;\n      callback(new fabric.Image.filters.BlendImage(options));\n    });\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }), pow = Math.pow, floor = Math.floor,\n      sqrt = Math.sqrt, abs = Math.abs, round = Math.round, sin = Math.sin,\n      ceil = Math.ceil,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Resize image filter class\n   * @class fabric.Image.filters.Resize\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Resize();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Resize = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Resize.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Resize',\n\n    /**\n     * Resize type\n     * @param {String} resizeType\n     * @default\n     */\n    resizeType: 'hermite',\n\n    /**\n     * Scale factor for resizing, x axis\n     * @param {Number} scaleX\n     * @default\n     */\n    scaleX: 0,\n\n    /**\n     * Scale factor for resizing, y axis\n     * @param {Number} scaleY\n     * @default\n     */\n    scaleY: 0,\n\n    /**\n     * LanczosLobes parameter for lanczos filter\n     * @param {Number} lanczosLobes\n     * @default\n     */\n    lanczosLobes: 3,\n\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uDelta: gl.getUniformLocation(program, 'uDelta'),\n        uTaps: gl.getUniformLocation(program, 'uTaps'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform2fv(uniformLocations.uDelta, this.horizontal ? [1 / this.width, 0] : [0, 1 / this.height]);\n      gl.uniform1fv(uniformLocations.uTaps, this.taps);\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function(options) {\n      var filterWindow = this.getFilterWindow(), cacheKey = this.type + '_' + filterWindow;\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        var fragmentShader = this.generateShader(filterWindow);\n        options.programCache[cacheKey] = this.createProgram(options.context, fragmentShader);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    getFilterWindow: function() {\n      var scale = this.tempScale;\n      return Math.ceil(this.lanczosLobes / scale);\n    },\n\n    getTaps: function() {\n      var lobeFunction = this.lanczosCreate(this.lanczosLobes), scale = this.tempScale,\n          filterWindow = this.getFilterWindow(), taps = new Array(filterWindow);\n      for (var i = 1; i <= filterWindow; i++) {\n        taps[i - 1] = lobeFunction(i * scale);\n      }\n      return taps;\n    },\n\n    /**\n     * Generate vertex and shader sources from the necessary steps numbers\n     * @param {Number} filterWindow\n     */\n    generateShader: function(filterWindow) {\n      var offsets = new Array(filterWindow),\n          fragmentShader = this.fragmentSourceTOP, filterWindow;\n\n      for (var i = 1; i <= filterWindow; i++) {\n        offsets[i - 1] = i + '.0 * uDelta';\n      }\n\n      fragmentShader += 'uniform float uTaps[' + filterWindow + '];\\n';\n      fragmentShader += 'void main() {\\n';\n      fragmentShader += '  vec4 color = texture2D(uTexture, vTexCoord);\\n';\n      fragmentShader += '  float sum = 1.0;\\n';\n\n      offsets.forEach(function(offset, i) {\n        fragmentShader += '  color += texture2D(uTexture, vTexCoord + ' + offset + ') * uTaps[' + i + '];\\n';\n        fragmentShader += '  color += texture2D(uTexture, vTexCoord - ' + offset + ') * uTaps[' + i + '];\\n';\n        fragmentShader += '  sum += 2.0 * uTaps[' + i + '];\\n';\n      });\n      fragmentShader += '  gl_FragColor = color / sum;\\n';\n      fragmentShader += '}';\n      return fragmentShader;\n    },\n\n    fragmentSourceTOP: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform vec2 uDelta;\\n' +\n      'varying vec2 vTexCoord;\\n',\n\n    /**\n     * Apply the resize filter to the image\n     * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n     *\n     * @param {Object} options\n     * @param {Number} options.passes The number of filters remaining to be executed\n     * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n     * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n     * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    applyTo: function(options) {\n      if (options.webgl) {\n        if (options.passes > 1 && this.isNeutralState(options)) {\n          // avoid doing something that we do not need\n          return;\n        }\n        options.passes++;\n        this.width = options.sourceWidth;\n        this.horizontal = true;\n        this.dW = Math.round(this.width * this.scaleX);\n        this.dH = options.sourceHeight;\n        this.tempScale = this.dW / this.width;\n        this.taps = this.getTaps();\n        options.destinationWidth = this.dW;\n        this._setupFrameBuffer(options);\n        this.applyToWebGL(options);\n        this._swapTextures(options);\n        options.sourceWidth = options.destinationWidth;\n\n        this.height = options.sourceHeight;\n        this.horizontal = false;\n        this.dH = Math.round(this.height * this.scaleY);\n        this.tempScale = this.dH / this.height;\n        this.taps = this.getTaps();\n        options.destinationHeight = this.dH;\n        this._setupFrameBuffer(options);\n        this.applyToWebGL(options);\n        this._swapTextures(options);\n        options.sourceHeight = options.destinationHeight;\n      }\n      else if (!this.isNeutralState(options)) {\n        this.applyTo2d(options);\n      }\n    },\n\n    isNeutralState: function(options) {\n      var scaleX = options.scaleX || this.scaleX,\n          scaleY = options.scaleY || this.scaleY;\n      return scaleX === 1 && scaleY === 1;\n    },\n\n    lanczosCreate: function(lobes) {\n      return function(x) {\n        if (x >= lobes || x <= -lobes) {\n          return 0.0;\n        }\n        if (x < 1.19209290E-07 && x > -1.19209290E-07) {\n          return 1.0;\n        }\n        x *= Math.PI;\n        var xx = x / lobes;\n        return (sin(x) / x) * sin(xx) / xx;\n      };\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @memberOf fabric.Image.filters.Resize.prototype\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} scaleX\n     * @param {Number} scaleY\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          scaleX = this.scaleX,\n          scaleY = this.scaleY;\n\n      this.rcpScaleX = 1 / scaleX;\n      this.rcpScaleY = 1 / scaleY;\n\n      var oW = imageData.width, oH = imageData.height,\n          dW = round(oW * scaleX), dH = round(oH * scaleY),\n          newData;\n\n      if (this.resizeType === 'sliceHack') {\n        newData = this.sliceByTwo(options, oW, oH, dW, dH);\n      }\n      else if (this.resizeType === 'hermite') {\n        newData = this.hermiteFastResize(options, oW, oH, dW, dH);\n      }\n      else if (this.resizeType === 'bilinear') {\n        newData = this.bilinearFiltering(options, oW, oH, dW, dH);\n      }\n      else if (this.resizeType === 'lanczos') {\n        newData = this.lanczosResize(options, oW, oH, dW, dH);\n      }\n      options.imageData = newData;\n    },\n\n    /**\n     * Filter sliceByTwo\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    sliceByTwo: function(options, oW, oH, dW, dH) {\n      var imageData = options.imageData,\n          mult = 0.5, doneW = false, doneH = false, stepW = oW * mult,\n          stepH = oH * mult, resources = fabric.filterBackend.resources,\n          tmpCanvas, ctx, sX = 0, sY = 0, dX = oW, dY = 0;\n      if (!resources.sliceByTwo) {\n        resources.sliceByTwo = document.createElement('canvas');\n      }\n      tmpCanvas = resources.sliceByTwo;\n      if (tmpCanvas.width < oW * 1.5 || tmpCanvas.height < oH) {\n        tmpCanvas.width = oW * 1.5;\n        tmpCanvas.height = oH;\n      }\n      ctx = tmpCanvas.getContext('2d');\n      ctx.clearRect(0, 0, oW * 1.5, oH);\n      ctx.putImageData(imageData, 0, 0);\n\n      dW = floor(dW);\n      dH = floor(dH);\n\n      while (!doneW || !doneH) {\n        oW = stepW;\n        oH = stepH;\n        if (dW < floor(stepW * mult)) {\n          stepW = floor(stepW * mult);\n        }\n        else {\n          stepW = dW;\n          doneW = true;\n        }\n        if (dH < floor(stepH * mult)) {\n          stepH = floor(stepH * mult);\n        }\n        else {\n          stepH = dH;\n          doneH = true;\n        }\n        ctx.drawImage(tmpCanvas, sX, sY, oW, oH, dX, dY, stepW, stepH);\n        sX = dX;\n        sY = dY;\n        dY += stepH;\n      }\n      return ctx.getImageData(sX, sY, dW, dH);\n    },\n\n    /**\n     * Filter lanczosResize\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    lanczosResize: function(options, oW, oH, dW, dH) {\n\n      function process(u) {\n        var v, i, weight, idx, a, red, green,\n            blue, alpha, fX, fY;\n        center.x = (u + 0.5) * ratioX;\n        icenter.x = floor(center.x);\n        for (v = 0; v < dH; v++) {\n          center.y = (v + 0.5) * ratioY;\n          icenter.y = floor(center.y);\n          a = 0; red = 0; green = 0; blue = 0; alpha = 0;\n          for (i = icenter.x - range2X; i <= icenter.x + range2X; i++) {\n            if (i < 0 || i >= oW) {\n              continue;\n            }\n            fX = floor(1000 * abs(i - center.x));\n            if (!cacheLanc[fX]) {\n              cacheLanc[fX] = { };\n            }\n            for (var j = icenter.y - range2Y; j <= icenter.y + range2Y; j++) {\n              if (j < 0 || j >= oH) {\n                continue;\n              }\n              fY = floor(1000 * abs(j - center.y));\n              if (!cacheLanc[fX][fY]) {\n                cacheLanc[fX][fY] = lanczos(sqrt(pow(fX * rcpRatioX, 2) + pow(fY * rcpRatioY, 2)) / 1000);\n              }\n              weight = cacheLanc[fX][fY];\n              if (weight > 0) {\n                idx = (j * oW + i) * 4;\n                a += weight;\n                red += weight * srcData[idx];\n                green += weight * srcData[idx + 1];\n                blue += weight * srcData[idx + 2];\n                alpha += weight * srcData[idx + 3];\n              }\n            }\n          }\n          idx = (v * dW + u) * 4;\n          destData[idx] = red / a;\n          destData[idx + 1] = green / a;\n          destData[idx + 2] = blue / a;\n          destData[idx + 3] = alpha / a;\n        }\n\n        if (++u < dW) {\n          return process(u);\n        }\n        else {\n          return destImg;\n        }\n      }\n\n      var srcData = options.imageData.data,\n          destImg = options.ctx.createImageData(dW, dH),\n          destData = destImg.data,\n          lanczos = this.lanczosCreate(this.lanczosLobes),\n          ratioX = this.rcpScaleX, ratioY = this.rcpScaleY,\n          rcpRatioX = 2 / this.rcpScaleX, rcpRatioY = 2 / this.rcpScaleY,\n          range2X = ceil(ratioX * this.lanczosLobes / 2),\n          range2Y = ceil(ratioY * this.lanczosLobes / 2),\n          cacheLanc = { }, center = { }, icenter = { };\n\n      return process(0);\n    },\n\n    /**\n     * bilinearFiltering\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    bilinearFiltering: function(options, oW, oH, dW, dH) {\n      var a, b, c, d, x, y, i, j, xDiff, yDiff, chnl,\n          color, offset = 0, origPix, ratioX = this.rcpScaleX,\n          ratioY = this.rcpScaleY,\n          w4 = 4 * (oW - 1), img = options.imageData,\n          pixels = img.data, destImage = options.ctx.createImageData(dW, dH),\n          destPixels = destImage.data;\n      for (i = 0; i < dH; i++) {\n        for (j = 0; j < dW; j++) {\n          x = floor(ratioX * j);\n          y = floor(ratioY * i);\n          xDiff = ratioX * j - x;\n          yDiff = ratioY * i - y;\n          origPix = 4 * (y * oW + x);\n\n          for (chnl = 0; chnl < 4; chnl++) {\n            a = pixels[origPix + chnl];\n            b = pixels[origPix + 4 + chnl];\n            c = pixels[origPix + w4 + chnl];\n            d = pixels[origPix + w4 + 4 + chnl];\n            color = a * (1 - xDiff) * (1 - yDiff) + b * xDiff * (1 - yDiff) +\n                    c * yDiff * (1 - xDiff) + d * xDiff * yDiff;\n            destPixels[offset++] = color;\n          }\n        }\n      }\n      return destImage;\n    },\n\n    /**\n     * hermiteFastResize\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    hermiteFastResize: function(options, oW, oH, dW, dH) {\n      var ratioW = this.rcpScaleX, ratioH = this.rcpScaleY,\n          ratioWHalf = ceil(ratioW / 2),\n          ratioHHalf = ceil(ratioH / 2),\n          img = options.imageData, data = img.data,\n          img2 = options.ctx.createImageData(dW, dH), data2 = img2.data;\n      for (var j = 0; j < dH; j++) {\n        for (var i = 0; i < dW; i++) {\n          var x2 = (i + j * dW) * 4, weight = 0, weights = 0, weightsAlpha = 0,\n              gxR = 0, gxG = 0, gxB = 0, gxA = 0, centerY = (j + 0.5) * ratioH;\n          for (var yy = floor(j * ratioH); yy < (j + 1) * ratioH; yy++) {\n            var dy = abs(centerY - (yy + 0.5)) / ratioHHalf,\n                centerX = (i + 0.5) * ratioW, w0 = dy * dy;\n            for (var xx = floor(i * ratioW); xx < (i + 1) * ratioW; xx++) {\n              var dx = abs(centerX - (xx + 0.5)) / ratioWHalf,\n                  w = sqrt(w0 + dx * dx);\n              /* eslint-disable max-depth */\n              if (w > 1 && w < -1) {\n                continue;\n              }\n              //hermite filter\n              weight = 2 * w * w * w - 3 * w * w + 1;\n              if (weight > 0) {\n                dx = 4 * (xx + yy * oW);\n                //alpha\n                gxA += weight * data[dx + 3];\n                weightsAlpha += weight;\n                //colors\n                if (data[dx + 3] < 255) {\n                  weight = weight * data[dx + 3] / 250;\n                }\n                gxR += weight * data[dx];\n                gxG += weight * data[dx + 1];\n                gxB += weight * data[dx + 2];\n                weights += weight;\n              }\n              /* eslint-enable max-depth */\n            }\n          }\n          data2[x2] = gxR / weights;\n          data2[x2 + 1] = gxG / weights;\n          data2[x2 + 2] = gxB / weights;\n          data2[x2 + 3] = gxA / weightsAlpha;\n        }\n      }\n      return img2;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return {\n        type: this.type,\n        scaleX: this.scaleX,\n        scaleY: this.scaleY,\n        resizeType: this.resizeType,\n        lanczosLobes: this.lanczosLobes\n      };\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Resize} Instance of fabric.Image.filters.Resize\n   */\n  fabric.Image.filters.Resize.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Contrast filter class\n   * @class fabric.Image.filters.Contrast\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Contrast#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Contrast({\n   *   contrast: 40\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Contrast = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Contrast.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Contrast',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uContrast;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'float contrastF = 1.015 * (uContrast + 1.0) / (1.0 * (1.015 - uContrast));\\n' +\n        'color.rgb = contrastF * (color.rgb - 0.5) + 0.5;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    contrast: 0,\n\n    mainParameter: 'contrast',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Contrast.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.contrast=0] Value to contrast the image up (-1...1)\n     */\n\n    /**\n      * Apply the Contrast operation to a Uint8Array representing the pixels of an image.\n      *\n      * @param {Object} options\n      * @param {ImageData} options.imageData The Uint8Array to be filtered.\n      */\n    applyTo2d: function(options) {\n      if (this.contrast === 0) {\n        return;\n      }\n      var imageData = options.imageData, i, len,\n          data = imageData.data, len = data.length,\n          contrast = Math.floor(this.contrast * 255),\n          contrastF = 259 * (contrast + 255) / (255 * (259 - contrast));\n\n      for (i = 0; i < len; i += 4) {\n        data[i] = contrastF * (data[i] - 128) + 128;\n        data[i + 1] = contrastF * (data[i + 1] - 128) + 128;\n        data[i + 2] = contrastF * (data[i + 2] - 128) + 128;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uContrast: gl.getUniformLocation(program, 'uContrast'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uContrast, this.contrast);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Contrast} Instance of fabric.Image.filters.Contrast\n   */\n  fabric.Image.filters.Contrast.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Saturate filter class\n   * @class fabric.Image.filters.Saturation\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Saturation#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Saturation({\n   *   saturation: 100\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Saturation = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Saturation.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Saturation',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uSaturation;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'float rgMax = max(color.r, color.g);\\n' +\n        'float rgbMax = max(rgMax, color.b);\\n' +\n        'color.r += rgbMax != color.r ? (rgbMax - color.r) * uSaturation : 0.00;\\n' +\n        'color.g += rgbMax != color.g ? (rgbMax - color.g) * uSaturation : 0.00;\\n' +\n        'color.b += rgbMax != color.b ? (rgbMax - color.b) * uSaturation : 0.00;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    saturation: 0,\n\n    mainParameter: 'saturation',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Saturate.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.saturate=0] Value to saturate the image (-1...1)\n     */\n\n    /**\n     * Apply the Saturation operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      if (this.saturation === 0) {\n        return;\n      }\n      var imageData = options.imageData,\n          data = imageData.data, len = data.length,\n          adjust = -this.saturation, i, max;\n\n      for (i = 0; i < len; i += 4) {\n        max = Math.max(data[i], data[i + 1], data[i + 2]);\n        data[i] += max !== data[i] ? (max - data[i]) * adjust : 0;\n        data[i + 1] += max !== data[i + 1] ? (max - data[i + 1]) * adjust : 0;\n        data[i + 2] += max !== data[i + 2] ? (max - data[i + 2]) * adjust : 0;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uSaturation: gl.getUniformLocation(program, 'uSaturation'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uSaturation, -this.saturation);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Saturation} Instance of fabric.Image.filters.Saturate\n   */\n  fabric.Image.filters.Saturation.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Blur filter class\n   * @class fabric.Image.filters.Blur\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Blur#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Blur({\n   *   blur: 0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n  filters.Blur = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Blur.prototype */ {\n\n    type: 'Blur',\n\n    /*\n'gl_FragColor = vec4(0.0);',\n'gl_FragColor += texture2D(texture, vTexCoord + -7 * uDelta)*0.0044299121055113265;',\n'gl_FragColor += texture2D(texture, vTexCoord + -6 * uDelta)*0.00895781211794;',\n'gl_FragColor += texture2D(texture, vTexCoord + -5 * uDelta)*0.0215963866053;',\n'gl_FragColor += texture2D(texture, vTexCoord + -4 * uDelta)*0.0443683338718;',\n'gl_FragColor += texture2D(texture, vTexCoord + -3 * uDelta)*0.0776744219933;',\n'gl_FragColor += texture2D(texture, vTexCoord + -2 * uDelta)*0.115876621105;',\n'gl_FragColor += texture2D(texture, vTexCoord + -1 * uDelta)*0.147308056121;',\n'gl_FragColor += texture2D(texture, vTexCoord              )*0.159576912161;',\n'gl_FragColor += texture2D(texture, vTexCoord + 1 * uDelta)*0.147308056121;',\n'gl_FragColor += texture2D(texture, vTexCoord + 2 * uDelta)*0.115876621105;',\n'gl_FragColor += texture2D(texture, vTexCoord + 3 * uDelta)*0.0776744219933;',\n'gl_FragColor += texture2D(texture, vTexCoord + 4 * uDelta)*0.0443683338718;',\n'gl_FragColor += texture2D(texture, vTexCoord + 5 * uDelta)*0.0215963866053;',\n'gl_FragColor += texture2D(texture, vTexCoord + 6 * uDelta)*0.00895781211794;',\n'gl_FragColor += texture2D(texture, vTexCoord + 7 * uDelta)*0.0044299121055113265;',\n*/\n\n    /* eslint-disable max-len */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform vec2 uDelta;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'const float nSamples = 15.0;\\n' +\n      'vec3 v3offset = vec3(12.9898, 78.233, 151.7182);\\n' +\n      'float random(vec3 scale) {\\n' +\n        /* use the fragment position for a different seed per-pixel */\n        'return fract(sin(dot(gl_FragCoord.xyz, scale)) * 43758.5453);\\n' +\n      '}\\n' +\n      'void main() {\\n' +\n        'vec4 color = vec4(0.0);\\n' +\n        'float total = 0.0;\\n' +\n        'float offset = random(v3offset);\\n' +\n        'for (float t = -nSamples; t <= nSamples; t++) {\\n' +\n          'float percent = (t + offset - 0.5) / nSamples;\\n' +\n          'float weight = 1.0 - abs(percent);\\n' +\n          'color += texture2D(uTexture, vTexCoord + uDelta * percent) * weight;\\n' +\n          'total += weight;\\n' +\n        '}\\n' +\n        'gl_FragColor = color / total;\\n' +\n      '}',\n    /* eslint-enable max-len */\n\n    /**\n     * blur value, in percentage of image dimensions.\n     * specific to keep the image blur constant at different resolutions\n     * range bewteen 0 and 1.\n     */\n    blur: 0,\n\n    mainParameter: 'blur',\n\n    applyTo: function(options) {\n      if (options.webgl) {\n        // this aspectRatio is used to give the same blur to vertical and horizontal\n        this.aspectRatio = options.sourceWidth / options.sourceHeight;\n        options.passes++;\n        this._setupFrameBuffer(options);\n        this.horizontal = true;\n        this.applyToWebGL(options);\n        this._swapTextures(options);\n        this._setupFrameBuffer(options);\n        this.horizontal = false;\n        this.applyToWebGL(options);\n        this._swapTextures(options);\n      }\n      else {\n        this.applyTo2d(options);\n      }\n    },\n\n    applyTo2d: function(options) {\n      // paint canvasEl with current image data.\n      //options.ctx.putImageData(options.imageData, 0, 0);\n      options.imageData = this.simpleBlur(options);\n    },\n\n    simpleBlur: function(options) {\n      var resources = options.filterBackend.resources, canvas1, canvas2,\n          width = options.imageData.width,\n          height = options.imageData.height;\n\n      if (!resources.blurLayer1) {\n        resources.blurLayer1 = document.createElement('canvas');\n        resources.blurLayer2 = document.createElement('canvas');\n      }\n      canvas1 = resources.blurLayer1;\n      canvas2 = resources.blurLayer2;\n      if (canvas1.width !== width || canvas1.height !== height) {\n        canvas2.width = canvas1.width = width;\n        canvas2.height = canvas1.height = height;\n      }\n      var ctx1 = canvas1.getContext('2d'),\n          ctx2 = canvas2.getContext('2d'),\n          nSamples = 15,\n          random, percent, j, i,\n          blur = this.blur * 0.06 * 0.5;\n\n      // load first canvas\n      ctx1.putImageData(options.imageData, 0, 0);\n      ctx2.clearRect(0, 0, width, height);\n\n      for (i = -nSamples; i <= nSamples; i++) {\n        random = (Math.random() - 0.5) / 4;\n        percent = i / nSamples;\n        j = blur * percent * width + random;\n        ctx2.globalAlpha = 1 - Math.abs(percent);\n        ctx2.drawImage(canvas1, j, random);\n        ctx1.drawImage(canvas2, 0, 0);\n        ctx2.globalAlpha = 1;\n        ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\n      }\n      for (i = -nSamples; i <= nSamples; i++) {\n        random = (Math.random() - 0.5) / 4;\n        percent = i / nSamples;\n        j = blur * percent * height + random;\n        ctx2.globalAlpha = 1 - Math.abs(percent);\n        ctx2.drawImage(canvas1, random, j);\n        ctx1.drawImage(canvas2, 0, 0);\n        ctx2.globalAlpha = 1;\n        ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\n      }\n      options.ctx.drawImage(canvas1, 0, 0);\n      var newImageData = options.ctx.getImageData(0, 0, canvas1.width, canvas1.height);\n      ctx1.globalAlpha = 1;\n      ctx1.clearRect(0, 0, canvas1.width, canvas1.height);\n      return newImageData;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        delta: gl.getUniformLocation(program, 'uDelta'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var delta = this.chooseRightDelta();\n      gl.uniform2fv(uniformLocations.delta, delta);\n    },\n\n    /**\n     * choose right value of image percentage to blur with\n     * @returns {Array} a numeric array with delta values\n     */\n    chooseRightDelta: function() {\n      var blurScale = 1, delta = [0, 0], blur;\n      if (this.horizontal) {\n        if (this.aspectRatio > 1) {\n          // image is wide, i want to shrink radius horizontal\n          blurScale = 1 / this.aspectRatio;\n        }\n      }\n      else {\n        if (this.aspectRatio < 1) {\n          // image is tall, i want to shrink radius vertical\n          blurScale = this.aspectRatio;\n        }\n      }\n      blur = blurScale * this.blur * 0.12;\n      if (this.horizontal) {\n        delta[0] = blur;\n      }\n      else {\n        delta[1] = blur;\n      }\n      return delta;\n    },\n  });\n\n  /**\n   * Deserialize a JSON definition of a BlurFilter into a concrete instance.\n   */\n  filters.Blur.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Gamma filter class\n   * @class fabric.Image.filters.Gamma\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Gamma#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Gamma({\n   *   brightness: 200\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Gamma = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Gamma.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Gamma',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform vec3 uGamma;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'vec3 correction = (1.0 / uGamma);\\n' +\n        'color.r = pow(color.r, correction.r);\\n' +\n        'color.g = pow(color.g, correction.g);\\n' +\n        'color.b = pow(color.b, correction.b);\\n' +\n        'gl_FragColor = color;\\n' +\n        'gl_FragColor.rgb *= color.a;\\n' +\n      '}',\n\n    /**\n     * Gamma array value, from 0.01 to 2.2.\n     * @param {Array} gamma\n     * @default\n     */\n    gamma: [1, 1, 1],\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'gamma',\n\n    /**\n     * Apply the Gamma operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData, data = imageData.data,\n          gamma = this.gamma, len = data.length,\n          rInv = 1 / gamma[0], gInv = 1 / gamma[1],\n          bInv = 1 / gamma[2], i;\n\n      if (!this.rVals) {\n        // eslint-disable-next-line\n        this.rVals = new Uint8Array(256);\n        // eslint-disable-next-line\n        this.gVals = new Uint8Array(256);\n        // eslint-disable-next-line\n        this.bVals = new Uint8Array(256);\n      }\n\n      // This is an optimization - pre-compute a look-up table for each color channel\n      // instead of performing these pow calls for each pixel in the image.\n      for (i = 0, len = 256; i < len; i++) {\n        this.rVals[i] = Math.pow(i / 255, rInv) * 255;\n        this.gVals[i] = Math.pow(i / 255, gInv) * 255;\n        this.bVals[i] = Math.pow(i / 255, bInv) * 255;\n      }\n      for (i = 0, len = data.length; i < len; i += 4) {\n        data[i] = this.rVals[data[i]];\n        data[i + 1] = this.gVals[data[i + 1]];\n        data[i + 2] = this.bVals[data[i + 2]];\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uGamma: gl.getUniformLocation(program, 'uGamma'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform3fv(uniformLocations.uGamma, this.gamma);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Gamma} Instance of fabric.Image.filters.Gamma\n   */\n  fabric.Image.filters.Gamma.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * A container class that knows how to apply a sequence of filters to an input image.\n   */\n  filters.Composed = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Composed.prototype */ {\n\n    type: 'Composed',\n\n    /**\n     * A non sparse array of filters to apply\n     */\n    subFilters: [],\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      // create a new array instead mutating the prototype with push\n      this.subFilters = this.subFilters.slice(0);\n    },\n\n    /**\n     * Apply this container's filters to the input image provided.\n     *\n     * @param {Object} options\n     * @param {Number} options.passes The number of filters remaining to be applied.\n     */\n    applyTo: function(options) {\n      options.passes += this.subFilters.length - 1;\n      this.subFilters.forEach(function(filter) {\n        filter.applyTo(options);\n      });\n    },\n\n    /**\n     * Serialize this filter into JSON.\n     *\n     * @returns {Object} A JSON representation of this filter.\n     */\n    toObject: function() {\n      return fabric.util.object.extend(this.callSuper('toObject'), {\n        subFilters: this.subFilters.map(function(filter) { return filter.toObject(); }),\n      });\n    },\n  });\n\n  /**\n   * Deserialize a JSON definition of a ComposedFilter into a concrete instance.\n   */\n  fabric.Image.filters.Composed.fromObject = function(object, callback) {\n    var filters = object.subFilters || [],\n        subFilters = filters.map(function(filter) {\n          return new fabric.Image.filters[filter.type](filter);\n        }),\n        instance = new fabric.Image.filters.Composed({ subFilters: subFilters });\n    callback && callback(instance);\n    return instance;\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * HueRotation filter class\n   * @class fabric.Image.filters.HueRotation\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.HueRotation#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.HueRotation({\n   *   rotation: -0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.HueRotation = createClass(filters.ColorMatrix, /** @lends fabric.Image.filters.HueRotation.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'HueRotation',\n\n    /**\n     * HueRotation value, from -1 to 1.\n     * the unit is radians\n     * @param {Number} myParameter\n     * @default\n     */\n    rotation: 0,\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'rotation',\n\n    calculateMatrix: function() {\n      var rad = this.rotation * Math.PI, cos = Math.cos(rad), sin = Math.sin(rad),\n          aThird = 1 / 3, aThirdSqtSin = Math.sqrt(aThird) * sin, OneMinusCos = 1 - cos;\n      this.matrix = [\n        1, 0, 0, 0, 0,\n        0, 1, 0, 0, 0,\n        0, 0, 1, 0, 0,\n        0, 0, 0, 1, 0\n      ];\n      this.matrix[0] = cos + OneMinusCos / 3;\n      this.matrix[1] = aThird * OneMinusCos - aThirdSqtSin;\n      this.matrix[2] = aThird * OneMinusCos + aThirdSqtSin;\n      this.matrix[5] = aThird * OneMinusCos + aThirdSqtSin;\n      this.matrix[6] = cos + aThird * OneMinusCos;\n      this.matrix[7] = aThird * OneMinusCos - aThirdSqtSin;\n      this.matrix[10] = aThird * OneMinusCos - aThirdSqtSin;\n      this.matrix[11] = aThird * OneMinusCos + aThirdSqtSin;\n      this.matrix[12] = cos + aThird * OneMinusCos;\n    },\n\n    /**\n     * Apply this filter to the input image data provided.\n     *\n     * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n     *\n     * @param {Object} options\n     * @param {Number} options.passes The number of filters remaining to be executed\n     * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n     * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n     * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    applyTo: function(options) {\n      this.calculateMatrix();\n      fabric.Image.filters.BaseFilter.prototype.applyTo.call(this, options);\n    },\n\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.HueRotation} Instance of fabric.Image.filters.HueRotation\n   */\n  fabric.Image.filters.HueRotation.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      clone = fabric.util.object.clone,\n      MIN_TEXT_WIDTH = 2,\n      CACHE_FONT_SIZE = 200;\n\n  if (fabric.Text) {\n    fabric.warn('fabric.Text is already defined');\n    return;\n  }\n\n  /**\n   * Text class\n   * @class fabric.Text\n   * @extends fabric.Object\n   * @return {fabric.Text} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#text}\n   * @see {@link fabric.Text#initialize} for constructor definition\n   */\n  fabric.Text = fabric.util.createClass(fabric.Object, /** @lends fabric.Text.prototype */ {\n\n    /**\n     * Properties which when set cause object to change dimensions\n     * @type Object\n     * @private\n     */\n    _dimensionAffectingProps: [\n      'fontSize',\n      'fontWeight',\n      'fontFamily',\n      'fontStyle',\n      'lineHeight',\n      'text',\n      'charSpacing',\n      'textAlign',\n      'styles',\n    ],\n\n    /**\n     * @private\n     */\n    _reNewline: /\\r?\\n/,\n\n    /**\n     * Use this regular expression to filter for whitespaces that is not a new line.\n     * Mostly used when text is 'justify' aligned.\n     * @private\n     */\n    _reSpacesAndTabs: /[ \\t\\r]/g,\n\n    /**\n     * Use this regular expression to filter for whitespace that is not a new line.\n     * Mostly used when text is 'justify' aligned.\n     * @private\n     */\n    _reSpaceAndTab: /[ \\t\\r]/,\n\n    /**\n     * Use this regular expression to filter consecutive groups of non spaces.\n     * Mostly used when text is 'justify' aligned.\n     * @private\n     */\n    _reWords: /\\S+/g,\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type:                 'text',\n\n    /**\n     * Font size (in pixels)\n     * @type Number\n     * @default\n     */\n    fontSize:             40,\n\n    /**\n     * Font weight (e.g. bold, normal, 400, 600, 800)\n     * @type {(Number|String)}\n     * @default\n     */\n    fontWeight:           'normal',\n\n    /**\n     * Font family\n     * @type String\n     * @default\n     */\n    fontFamily:           'Times New Roman',\n\n    /**\n     * Text decoration underline.\n     * @type String\n     * @default\n     */\n    underline:       false,\n\n    /**\n     * Text decoration overline.\n     * @type String\n     * @default\n     */\n    overline:       false,\n\n    /**\n     * Text decoration linethrough.\n     * @type String\n     * @default\n     */\n    linethrough:       false,\n\n    /**\n     * Text alignment. Possible values: \"left\", \"center\", \"right\", \"justify\",\n     * \"justify-left\", \"justify-center\" or \"justify-right\".\n     * @type String\n     * @default\n     */\n    textAlign:            'left',\n\n    /**\n     * Font style . Possible values: \"\", \"normal\", \"italic\" or \"oblique\".\n     * @type String\n     * @default\n     */\n    fontStyle:            'normal',\n\n    /**\n     * Line height\n     * @type Number\n     * @default\n     */\n    lineHeight:           1.16,\n\n    /**\n     * Background color of text lines\n     * @type String\n     * @default\n     */\n    textBackgroundColor:  '',\n\n    /**\n     * List of properties to consider when checking if\n     * state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: fabric.Object.prototype.stateProperties.concat('fontFamily',\n      'fontWeight',\n      'fontSize',\n      'text',\n      'underline',\n      'overline',\n      'linethrough',\n      'textAlign',\n      'fontStyle',\n      'lineHeight',\n      'textBackgroundColor',\n      'charSpacing',\n      'styles'),\n\n    /**\n     * List of properties to consider when checking if cache needs refresh\n     * @type Array\n     */\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('fontFamily',\n      'fontWeight',\n      'fontSize',\n      'text',\n      'underline',\n      'overline',\n      'linethrough',\n      'textAlign',\n      'fontStyle',\n      'lineHeight',\n      'textBackgroundColor',\n      'charSpacing',\n      'styles'),\n\n    /**\n     * When defined, an object is rendered via stroke and this property specifies its color.\n     * <b>Backwards incompatibility note:</b> This property was named \"strokeStyle\" until v1.1.6\n     * @type String\n     * @default\n     */\n    stroke:               null,\n\n    /**\n     * Shadow object representing shadow of this shape.\n     * <b>Backwards incompatibility note:</b> This property was named \"textShadow\" (String) until v1.2.11\n     * @type fabric.Shadow\n     * @default\n     */\n    shadow:               null,\n\n    /**\n     * @private\n     */\n    _fontSizeFraction: 0.222,\n\n    /**\n     * @private\n     */\n    offsets: {\n      underline: 0.10,\n      linethrough: -0.315,\n      overline: -0.88\n    },\n\n    /**\n     * Text Line proportion to font Size (in pixels)\n     * @type Number\n     * @default\n     */\n    _fontSizeMult:             1.13,\n\n    /**\n     * additional space between characters\n     * expressed in thousands of em unit\n     * @type Number\n     * @default\n     */\n    charSpacing:             0,\n\n    /**\n     * Object containing character styles\n     * (where top-level properties corresponds to line number and 2nd-level properties -- to char number in a line)\n     * @type Object\n     * @default\n     */\n    styles: null,\n\n    /**\n     * Reference to a context to measure text char or couple of chars\n     * the cacheContext of the canvas will be used or a freshly created one if the object is not on canvas\n     * once created it will be referenced on fabric._measuringContext to avoide creating a canvas for every\n     * text object created.\n     * @type {CanvasRenderingContext2D}\n     * @default\n     */\n    _measuringContext: null,\n\n    /**\n     * Array of properties that define a style unit.\n     * @type {Array}\n     * @default\n     */\n    _styleProperties: [\n      'stroke',\n      'strokeWidth',\n      'fill',\n      'fontFamily',\n      'fontSize',\n      'fontWeight',\n      'fontStyle',\n      'underline',\n      'overline',\n      'linethrough',\n      'textBackgroundColor',\n    ],\n\n    /**\n     * contains characters bounding boxes\n     */\n    __charBounds: [],\n\n    /**\n     * Constructor\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.Text} thisArg\n     */\n    initialize: function(text, options) {\n      this.styles = options ? (options.styles || { }) : { };\n      this.text = text;\n      this.__skipDimension = true;\n      this.callSuper('initialize', options);\n      this.__skipDimension = false;\n      this.initDimensions();\n      this.setCoords();\n      this.setupState({ propertySet: '_dimensionAffectingProps' });\n    },\n\n    /**\n     * Return a contex for measurement of text string.\n     * if created it gets stored for reuse\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.Text} thisArg\n     */\n    getMeasuringContext: function() {\n      // if we did not return we have to measure something.\n      if (!fabric._measuringContext) {\n        fabric._measuringContext = this.canvas && this.canvas.contextCache ||\n          fabric.util.createCanvasElement().getContext('2d');\n      }\n      return fabric._measuringContext;\n    },\n\n    /**\n     * @private\n     * Divides text into lines of text and lines of graphemes.\n     */\n    _splitText: function() {\n      var newLines = this._splitTextIntoLines(this.text);\n      this.textLines = newLines.lines;\n      this._textLines = newLines.graphemeLines;\n      this._unwrappedTextLines = newLines._unwrappedLines;\n      this._text = newLines.graphemeText;\n      return newLines;\n    },\n\n    /**\n     * Initialize or update text dimensions.\n     * Updates this.width and this.height with the proper values.\n     * Does not return dimensions.\n     */\n    initDimensions: function() {\n      if (this.__skipDimension) {\n        return;\n      }\n      this._splitText();\n      this._clearCache();\n      this.width = this.calcTextWidth() || this.cursorWidth || MIN_TEXT_WIDTH;\n      if (this.textAlign.indexOf('justify') !== -1) {\n        // once text is measured we need to make space fatter to make justified text.\n        this.enlargeSpaces();\n      }\n      this.height = this.calcTextHeight();\n      this.saveState({ propertySet: '_dimensionAffectingProps' });\n    },\n\n    /**\n     * Enlarge space boxes and shift the others\n     */\n    enlargeSpaces: function() {\n      var diffSpace, currentLineWidth, numberOfSpaces, accumulatedSpace, line, charBound, spaces;\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        if (this.textAlign !== 'justify' && (i === len - 1 || this.isEndOfWrapping(i))) {\n          continue;\n        }\n        accumulatedSpace = 0;\n        line = this._textLines[i];\n        currentLineWidth = this.getLineWidth(i);\n        if (currentLineWidth < this.width && (spaces = this.textLines[i].match(this._reSpacesAndTabs))) {\n          numberOfSpaces = spaces.length;\n          diffSpace = (this.width - currentLineWidth) / numberOfSpaces;\n          for (var j = 0, jlen = line.length; j <= jlen; j++) {\n            charBound = this.__charBounds[i][j];\n            if (this._reSpaceAndTab.test(line[j])) {\n              charBound.width += diffSpace;\n              charBound.kernedWidth += diffSpace;\n              charBound.left += accumulatedSpace;\n              accumulatedSpace += diffSpace;\n            }\n            else {\n              charBound.left += accumulatedSpace;\n            }\n          }\n        }\n      }\n    },\n\n    /**\n     * Detect if the text line is ended with an hard break\n     * text and itext do not have wrapping, return false\n     * @return {Boolean}\n     */\n    isEndOfWrapping: function(lineIndex) {\n      return lineIndex === this._textLines.length - 1;\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} String representation of text object\n     */\n    toString: function() {\n      return '#<fabric.Text (' + this.complexity() +\n        '): { \"text\": \"' + this.text + '\", \"fontFamily\": \"' + this.fontFamily + '\" }>';\n    },\n\n    /**\n     * Return the dimension and the zoom level needed to create a cache canvas\n     * big enough to host the object to be cached.\n     * @private\n     * @param {Object} dim.x width of object to be cached\n     * @param {Object} dim.y height of object to be cached\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _getCacheCanvasDimensions: function() {\n      var dims = this.callSuper('_getCacheCanvasDimensions');\n      var fontSize = this.fontSize;\n      dims.width += fontSize * dims.zoomX;\n      dims.height += fontSize * dims.zoomY;\n      return dims;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      this._setTextStyles(ctx);\n      this._renderTextLinesBackground(ctx);\n      this._renderTextDecoration(ctx, 'underline');\n      this._renderText(ctx);\n      this._renderTextDecoration(ctx, 'overline');\n      this._renderTextDecoration(ctx, 'linethrough');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderText: function(ctx) {\n      if (this.paintFirst === 'stroke') {\n        this._renderTextStroke(ctx);\n        this._renderTextFill(ctx);\n      }\n      else {\n        this._renderTextFill(ctx);\n        this._renderTextStroke(ctx);\n      }\n    },\n\n    /**\n     * Set the font parameter of the context with the object properties or with charStyle\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} [charStyle] object with font style properties\n     * @param {String} [charStyle.fontFamily] Font Family\n     * @param {Number} [charStyle.fontSize] Font size in pixels. ( without px suffix )\n     * @param {String} [charStyle.fontWeight] Font weight\n     * @param {String} [charStyle.fontStyle] Font style (italic|normal)\n     */\n    _setTextStyles: function(ctx, charStyle, forMeasuring) {\n      ctx.textBaseline = 'alphabetic';\n      ctx.font = this._getFontDeclaration(charStyle, forMeasuring);\n    },\n\n    /**\n     * calculate and return the text Width measuring each line.\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @return {Number} Maximum width of fabric.Text object\n     */\n    calcTextWidth: function() {\n      var maxWidth = this.getLineWidth(0);\n\n      for (var i = 1, len = this._textLines.length; i < len; i++) {\n        var currentLineWidth = this.getLineWidth(i);\n        if (currentLineWidth > maxWidth) {\n          maxWidth = currentLineWidth;\n        }\n      }\n      return maxWidth;\n    },\n\n    /**\n     * @private\n     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line Text to render\n     * @param {Number} left Left position of text\n     * @param {Number} top Top position of text\n     * @param {Number} lineIndex Index of a line in a text\n     */\n    _renderTextLine: function(method, ctx, line, left, top, lineIndex) {\n      this._renderChars(method, ctx, line, left, top, lineIndex);\n    },\n\n    /**\n     * Renders the text background for lines, taking care of style\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextLinesBackground: function(ctx) {\n      if (!this.textBackgroundColor && !this.styleHas('textBackgroundColor')) {\n        return;\n      }\n      var lineTopOffset = 0, heightOfLine,\n          lineLeftOffset, originalFill = ctx.fillStyle,\n          line, lastColor,\n          leftOffset = this._getLeftOffset(),\n          topOffset = this._getTopOffset(),\n          boxStart = 0, boxWidth = 0, charBox, currentColor;\n\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        heightOfLine = this.getHeightOfLine(i);\n        if (!this.textBackgroundColor && !this.styleHas('textBackgroundColor', i)) {\n          lineTopOffset += heightOfLine;\n          continue;\n        }\n        line = this._textLines[i];\n        lineLeftOffset = this._getLineLeftOffset(i);\n        boxWidth = 0;\n        boxStart = 0;\n        lastColor = this.getValueOfPropertyAt(i, 0, 'textBackgroundColor');\n        for (var j = 0, jlen = line.length; j < jlen; j++) {\n          charBox = this.__charBounds[i][j];\n          currentColor = this.getValueOfPropertyAt(i, j, 'textBackgroundColor');\n          if (currentColor !== lastColor) {\n            ctx.fillStyle = lastColor;\n            lastColor && ctx.fillRect(\n              leftOffset + lineLeftOffset + boxStart,\n              topOffset + lineTopOffset,\n              boxWidth,\n              heightOfLine / this.lineHeight\n            );\n            boxStart = charBox.left;\n            boxWidth = charBox.width;\n            lastColor = currentColor;\n          }\n          else {\n            boxWidth += charBox.kernedWidth;\n          }\n        }\n        if (currentColor) {\n          ctx.fillStyle = currentColor;\n          ctx.fillRect(\n            leftOffset + lineLeftOffset + boxStart,\n            topOffset + lineTopOffset,\n            boxWidth,\n            heightOfLine / this.lineHeight\n          );\n        }\n        lineTopOffset += heightOfLine;\n      }\n      ctx.fillStyle = originalFill;\n      // if there is text background color no\n      // other shadows should be casted\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * @private\n     * @param {Object} decl style declaration for cache\n     * @param {String} decl.fontFamily fontFamily\n     * @param {String} decl.fontStyle fontStyle\n     * @param {String} decl.fontWeight fontWeight\n     * @return {Object} reference to cache\n     */\n    getFontCache: function(decl) {\n      var fontFamily = decl.fontFamily.toLowerCase();\n      if (!fabric.charWidthsCache[fontFamily]) {\n        fabric.charWidthsCache[fontFamily] = { };\n      }\n      var cache = fabric.charWidthsCache[fontFamily],\n          cacheProp = decl.fontStyle.toLowerCase() + '_' + (decl.fontWeight + '').toLowerCase();\n      if (!cache[cacheProp]) {\n        cache[cacheProp] = { };\n      }\n      return cache[cacheProp];\n    },\n\n    /**\n     * apply all the character style to canvas for rendering\n     * @private\n     * @param {String} _char\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} [decl]\n     */\n    _applyCharStyles: function(method, ctx, lineIndex, charIndex, styleDeclaration) {\n\n      this._setFillStyles(ctx, styleDeclaration);\n      this._setStrokeStyles(ctx, styleDeclaration);\n\n      ctx.font = this._getFontDeclaration(styleDeclaration);\n    },\n\n    /**\n     * measure and return the width of a single character.\n     * possibly overridden to accommodate different measure logic or\n     * to hook some external lib for character measurement\n     * @private\n     * @param {String} char to be measured\n     * @param {Object} charStyle style of char to be measured\n     * @param {String} [previousChar] previous char\n     * @param {Object} [prevCharStyle] style of previous char\n     */\n    _measureChar: function(_char, charStyle, previousChar, prevCharStyle) {\n      // first i try to return from cache\n      var fontCache = this.getFontCache(charStyle), fontDeclaration = this._getFontDeclaration(charStyle),\n          previousFontDeclaration = this._getFontDeclaration(prevCharStyle), couple = previousChar + _char,\n          stylesAreEqual = fontDeclaration === previousFontDeclaration, width, coupleWidth, previousWidth,\n          fontMultiplier = charStyle.fontSize / CACHE_FONT_SIZE, kernedWidth;\n\n      if (previousChar && fontCache[previousChar]) {\n        previousWidth = fontCache[previousChar];\n      }\n      if (fontCache[_char]) {\n        kernedWidth = width = fontCache[_char];\n      }\n      if (stylesAreEqual && fontCache[couple]) {\n        coupleWidth = fontCache[couple];\n        kernedWidth = coupleWidth - previousWidth;\n      }\n      if (!width || !previousWidth || !coupleWidth) {\n        var ctx = this.getMeasuringContext();\n        // send a TRUE to specify measuring font size CACHE_FONT_SIZE\n        this._setTextStyles(ctx, charStyle, true);\n      }\n      if (!width) {\n        kernedWidth = width = ctx.measureText(_char).width;\n        fontCache[_char] = width;\n      }\n      if (!previousWidth && stylesAreEqual && previousChar) {\n        previousWidth = ctx.measureText(previousChar).width;\n        fontCache[previousChar] = previousWidth;\n      }\n      if (stylesAreEqual && !coupleWidth) {\n        // we can measure the kerning couple and subtract the width of the previous character\n        coupleWidth = ctx.measureText(couple).width;\n        fontCache[couple] = coupleWidth;\n        kernedWidth = coupleWidth - previousWidth;\n        // try to fix a MS browsers oddity\n        if (kernedWidth > width) {\n          var diff = kernedWidth - width;\n          fontCache[_char] = kernedWidth;\n          fontCache[couple] += diff;\n          width = kernedWidth;\n        }\n      }\n      return { width: width * fontMultiplier, kernedWidth: kernedWidth * fontMultiplier };\n    },\n\n    /**\n     * return height of char in fontSize for a character at lineIndex, charIndex\n     * @param {Number} l line Index\n     * @param {Number} c char index\n     * @return {Number} fontSize of that character\n     */\n    getHeightOfChar: function(l, c) {\n      return this.getValueOfPropertyAt(l, c, 'fontSize');\n    },\n\n    /**\n     * measure a text line measuring all characters.\n     * @param {Number} lineIndex line number\n     * @return {Number} Line width\n     */\n    measureLine: function(lineIndex) {\n      var lineInfo = this._measureLine(lineIndex);\n      if (this.charSpacing !== 0) {\n        lineInfo.width -= this._getWidthOfCharSpacing();\n      }\n      if (lineInfo.width < 0) {\n        lineInfo.width = 0;\n      }\n      return lineInfo;\n    },\n\n    /**\n     * measure every grapheme of a line, populating __charBounds\n     * @param {Number} lineIndex\n     * @return {Object} object.width total width of characters\n     * @return {Object} object.widthOfSpaces length of chars that match this._reSpacesAndTabs\n     */\n    _measureLine: function(lineIndex) {\n      var width = 0, i, grapheme, line = this._textLines[lineIndex], prevGrapheme,\n          graphemeInfo, numOfSpaces = 0, lineBounds = new Array(line.length);\n\n      this.__charBounds[lineIndex] = lineBounds;\n      for (i = 0; i < line.length; i++) {\n        grapheme = line[i];\n        graphemeInfo = this._getGraphemeBox(grapheme, lineIndex, i, prevGrapheme);\n        lineBounds[i] = graphemeInfo;\n        width += graphemeInfo.kernedWidth;\n        prevGrapheme = grapheme;\n      }\n      // this latest bound box represent the last character of the line\n      // to simplify cursor handling in interactive mode.\n      lineBounds[i] = {\n        left: graphemeInfo ? graphemeInfo.left + graphemeInfo.width : 0,\n        width: 0,\n        kernedWidth: 0,\n        height: this.fontSize\n      };\n      return { width: width, numOfSpaces: numOfSpaces };\n    },\n\n    /**\n     * Measure and return the info of a single grapheme.\n     * needs the the info of previous graphemes already filled\n     * @private\n     * @param {String} grapheme to be measured\n     * @param {Number} lineIndex index of the line where the char is\n     * @param {Number} charIndex position in the line\n     * @param {String} [previousChar] character preceding the one to be measured\n     */\n    _getGraphemeBox: function(grapheme, lineIndex, charIndex, previousGrapheme, skipLeft) {\n      var charStyle = this.getCompleteStyleDeclaration(lineIndex, charIndex),\n          prevCharStyle = previousGrapheme ? this.getCompleteStyleDeclaration(lineIndex, charIndex - 1) : { },\n          info = this._measureChar(grapheme, charStyle, previousGrapheme, prevCharStyle),\n          kernedWidth = info.kernedWidth, width = info.width;\n\n      if (this.charSpacing !== 0) {\n        width += this._getWidthOfCharSpacing();\n        kernedWidth += this._getWidthOfCharSpacing();\n      }\n      var box = {\n        width: width,\n        left: 0,\n        height: charStyle.fontSize,\n        kernedWidth: kernedWidth,\n      };\n      if (charIndex > 0 && !skipLeft) {\n        var previousBox = this.__charBounds[lineIndex][charIndex - 1];\n        box.left = previousBox.left + previousBox.width + info.kernedWidth - info.width;\n      }\n      return box;\n    },\n\n    /**\n     * Calculate height of chosen line\n     * height of line is based mainly on fontSize\n     * @private\n     * @param {Number} lineIndex index of the line to calculate\n     */\n    getHeightOfLine: function(lineIndex) {\n      if (this.__lineHeights[lineIndex]) {\n        return this.__lineHeights[lineIndex];\n      }\n\n      var line = this._textLines[lineIndex],\n          maxHeight = this.getHeightOfChar(lineIndex, 0);\n\n      for (var i = 1, len = line.length; i < len; i++) {\n        var currentCharHeight = this.getHeightOfChar(lineIndex, i);\n        if (currentCharHeight > maxHeight) {\n          maxHeight = currentCharHeight;\n        }\n      }\n      this.__lineHeights[lineIndex] = maxHeight * this.lineHeight * this._fontSizeMult;\n      return this.__lineHeights[lineIndex];\n    },\n\n    /**\n     * calculate text box height\n     * @private\n     */\n    calcTextHeight: function() {\n      var lineHeight, height = 0;\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        lineHeight = this.getHeightOfLine(i);\n        height += (i === len - 1 ? lineHeight / this.lineHeight : lineHeight);\n      }\n      return height;\n    },\n\n    /**\n     * @private\n     * @return {Number} Left offset\n     */\n    _getLeftOffset: function() {\n      return -this.width / 2;\n    },\n\n    /**\n     * @private\n     * @return {Number} Top offset\n     */\n    _getTopOffset: function() {\n      return -this.height / 2;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n     */\n    _renderTextCommon: function(ctx, method) {\n      ctx.save();\n      var lineHeights = 0, left = this._getLeftOffset(), top = this._getTopOffset(),\n          offsets = this._applyPatternGradientTransform(ctx, method === 'fillText' ? this.fill : this.stroke);\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        var heightOfLine = this.getHeightOfLine(i),\n            maxHeight = heightOfLine / this.lineHeight,\n            leftOffset = this._getLineLeftOffset(i);\n        this._renderTextLine(\n          method,\n          ctx,\n          this._textLines[i],\n          left + leftOffset - offsets.offsetX,\n          top + lineHeights + maxHeight - offsets.offsetY,\n          i\n        );\n        lineHeights += heightOfLine;\n      }\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextFill: function(ctx) {\n      if (!this.fill && !this.styleHas('fill')) {\n        return;\n      }\n\n      this._renderTextCommon(ctx, 'fillText');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextStroke: function(ctx) {\n      if ((!this.stroke || this.strokeWidth === 0) && this.isEmptyStyles()) {\n        return;\n      }\n\n      if (this.shadow && !this.shadow.affectStroke) {\n        this._removeShadow(ctx);\n      }\n\n      ctx.save();\n      this._setLineDash(ctx, this.strokeDashArray);\n      ctx.beginPath();\n      this._renderTextCommon(ctx, 'strokeText');\n      ctx.closePath();\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line Content of the line\n     * @param {Number} left\n     * @param {Number} top\n     * @param {Number} lineIndex\n     * @param {Number} charOffset\n     */\n    _renderChars: function(method, ctx, line, left, top, lineIndex) {\n      // set proper line offset\n      var lineHeight = this.getHeightOfLine(lineIndex),\n          isJustify = this.textAlign.indexOf('justify') !== -1,\n          actualStyle,\n          nextStyle,\n          charsToRender = '',\n          charBox,\n          boxWidth = 0,\n          timeToRender,\n          shortCut = !isJustify && this.charSpacing === 0 && this.isEmptyStyles(lineIndex);\n\n      ctx.save();\n      top -= lineHeight * this._fontSizeFraction / this.lineHeight;\n      if (shortCut) {\n        // render all the line in one pass without checking\n        this._renderChar(method, ctx, lineIndex, 0, this.textLines[lineIndex], left, top, lineHeight);\n        ctx.restore();\n        return;\n      }\n      for (var i = 0, len = line.length - 1; i <= len; i++) {\n        timeToRender = i === len || this.charSpacing;\n        charsToRender += line[i];\n        charBox = this.__charBounds[lineIndex][i];\n        if (boxWidth === 0) {\n          left += charBox.kernedWidth - charBox.width;\n          boxWidth += charBox.width;\n        }\n        else {\n          boxWidth += charBox.kernedWidth;\n        }\n        if (isJustify && !timeToRender) {\n          if (this._reSpaceAndTab.test(line[i])) {\n            timeToRender = true;\n          }\n        }\n        if (!timeToRender) {\n          // if we have charSpacing, we render char by char\n          actualStyle = actualStyle || this.getCompleteStyleDeclaration(lineIndex, i);\n          nextStyle = this.getCompleteStyleDeclaration(lineIndex, i + 1);\n          timeToRender = this._hasStyleChanged(actualStyle, nextStyle);\n        }\n        if (timeToRender) {\n          this._renderChar(method, ctx, lineIndex, i, charsToRender, left, top, lineHeight);\n          charsToRender = '';\n          actualStyle = nextStyle;\n          left += boxWidth;\n          boxWidth = 0;\n        }\n      }\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {String} _char\n     * @param {Number} left Left coordinate\n     * @param {Number} top Top coordinate\n     * @param {Number} lineHeight Height of the line\n     */\n    _renderChar: function(method, ctx, lineIndex, charIndex, _char, left, top) {\n      var decl = this._getStyleDeclaration(lineIndex, charIndex),\n          fullDecl = this.getCompleteStyleDeclaration(lineIndex, charIndex),\n          shouldFill = method === 'fillText' && fullDecl.fill,\n          shouldStroke = method === 'strokeText' && fullDecl.stroke && fullDecl.strokeWidth;\n\n      if (!shouldStroke && !shouldFill) {\n        return;\n      }\n      decl && ctx.save();\n\n      this._applyCharStyles(method, ctx, lineIndex, charIndex, fullDecl);\n\n      if (decl && decl.textBackgroundColor) {\n        this._removeShadow(ctx);\n      }\n      shouldFill && ctx.fillText(_char, left, top);\n      shouldStroke && ctx.strokeText(_char, left, top);\n      decl && ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {Object} prevStyle\n     * @param {Object} thisStyle\n     */\n    _hasStyleChanged: function(prevStyle, thisStyle) {\n      return prevStyle.fill !== thisStyle.fill ||\n              prevStyle.stroke !== thisStyle.stroke ||\n              prevStyle.strokeWidth !== thisStyle.strokeWidth ||\n              prevStyle.fontSize !== thisStyle.fontSize ||\n              prevStyle.fontFamily !== thisStyle.fontFamily ||\n              prevStyle.fontWeight !== thisStyle.fontWeight ||\n              prevStyle.fontStyle !== thisStyle.fontStyle;\n    },\n\n    /**\n     * @private\n     * @param {Object} prevStyle\n     * @param {Object} thisStyle\n     */\n    _hasStyleChangedForSvg: function(prevStyle, thisStyle) {\n      return this._hasStyleChanged(prevStyle, thisStyle) ||\n        prevStyle.overline !== thisStyle.overline ||\n        prevStyle.underline !== thisStyle.underline ||\n        prevStyle.linethrough !== thisStyle.linethrough;\n    },\n\n    /**\n     * @private\n     * @param {Number} lineIndex index text line\n     * @return {Number} Line left offset\n     */\n    _getLineLeftOffset: function(lineIndex) {\n      var lineWidth = this.getLineWidth(lineIndex);\n      if (this.textAlign === 'center') {\n        return (this.width - lineWidth) / 2;\n      }\n      if (this.textAlign === 'right') {\n        return this.width - lineWidth;\n      }\n      if (this.textAlign === 'justify-center' && this.isEndOfWrapping(lineIndex)) {\n        return (this.width - lineWidth) / 2;\n      }\n      if (this.textAlign === 'justify-right' && this.isEndOfWrapping(lineIndex)) {\n        return this.width - lineWidth;\n      }\n      return 0;\n    },\n\n    /**\n     * @private\n     */\n    _clearCache: function() {\n      this.__lineWidths = [];\n      this.__lineHeights = [];\n      this.__charBounds = [];\n    },\n\n    /**\n     * @private\n     */\n    _shouldClearDimensionCache: function() {\n      var shouldClear = this._forceClearCache;\n      shouldClear || (shouldClear = this.hasStateChanged('_dimensionAffectingProps'));\n      if (shouldClear) {\n        this.dirty = true;\n        this._forceClearCache = false;\n      }\n      return shouldClear;\n    },\n\n    /**\n     * Measure a single line given its index. Used to calculate the initial\n     * text bounding box. The values are calculated and stored in __lineWidths cache.\n     * @private\n     * @param {Number} lineIndex line number\n     * @return {Number} Line width\n     */\n    getLineWidth: function(lineIndex) {\n      if (this.__lineWidths[lineIndex]) {\n        return this.__lineWidths[lineIndex];\n      }\n\n      var width, line = this._textLines[lineIndex], lineInfo;\n\n      if (line === '') {\n        width = 0;\n      }\n      else {\n        lineInfo = this.measureLine(lineIndex);\n        width = lineInfo.width;\n      }\n      this.__lineWidths[lineIndex] = width;\n      return width;\n    },\n\n    _getWidthOfCharSpacing: function() {\n      if (this.charSpacing !== 0) {\n        return this.fontSize * this.charSpacing / 1000;\n      }\n      return 0;\n    },\n\n    /**\n     * @private\n     * @param {Number} LineIndex\n     * @param {Number} charIndex\n     * @param {String} property\n\n     */\n    getValueOfPropertyAt: function(lineIndex, charIndex, property) {\n      var charStyle = this._getStyleDeclaration(lineIndex, charIndex),\n          styleDecoration = charStyle && typeof charStyle[property] !== 'undefined';\n      return styleDecoration ? charStyle[property] : this[property];\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextDecoration: function(ctx, type) {\n      if (!this[type] && !this.styleHas(type)) {\n        return;\n      }\n      var heightOfLine,\n          lineLeftOffset,\n          line, lastDecoration,\n          leftOffset = this._getLeftOffset(),\n          topOffset = this._getTopOffset(),\n          boxStart, boxWidth, charBox, currentDecoration,\n          maxHeight, currentFill, lastFill;\n\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        heightOfLine = this.getHeightOfLine(i);\n        if (!this[type] && !this.styleHas(type, i)) {\n          topOffset += heightOfLine;\n          continue;\n        }\n        line = this._textLines[i];\n        maxHeight = heightOfLine / this.lineHeight;\n        lineLeftOffset = this._getLineLeftOffset(i);\n        boxStart = 0;\n        boxWidth = 0;\n        lastDecoration = this.getValueOfPropertyAt(i, 0, type);\n        lastFill = this.getValueOfPropertyAt(i, 0, 'fill');\n        for (var j = 0, jlen = line.length; j < jlen; j++) {\n          charBox = this.__charBounds[i][j];\n          currentDecoration = this.getValueOfPropertyAt(i, j, type);\n          currentFill = this.getValueOfPropertyAt(i, j, 'fill');\n          if ((currentDecoration !== lastDecoration || currentFill !== lastFill) && boxWidth > 0) {\n            ctx.fillStyle = lastFill;\n            lastDecoration && lastFill && ctx.fillRect(\n              leftOffset + lineLeftOffset + boxStart,\n              topOffset + maxHeight * (1 - this._fontSizeFraction) + this.offsets[type] * this.fontSize,\n              boxWidth,\n              this.fontSize / 15);\n            boxStart = charBox.left;\n            boxWidth = charBox.width;\n            lastDecoration = currentDecoration;\n            lastFill = currentFill;\n          }\n          else {\n            boxWidth += charBox.kernedWidth;\n          }\n        }\n        ctx.fillStyle = currentFill;\n        currentDecoration && currentFill && ctx.fillRect(\n          leftOffset + lineLeftOffset + boxStart,\n          topOffset + maxHeight * (1 - this._fontSizeFraction) + this.offsets[type] * this.fontSize,\n          boxWidth,\n          this.fontSize / 15\n        );\n        topOffset += heightOfLine;\n      }\n      // if there is text background color no\n      // other shadows should be casted\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * return font declaration string for canvas context\n     * @param {Object} [styleObject] object\n     * @returns {String} font declaration formatted for canvas context.\n     */\n    _getFontDeclaration: function(styleObject, forMeasuring) {\n      var style = styleObject || this;\n      return [\n        // node-canvas needs \"weight style\", while browsers need \"style weight\"\n        (fabric.isLikelyNode ? style.fontWeight : style.fontStyle),\n        (fabric.isLikelyNode ? style.fontStyle : style.fontWeight),\n        forMeasuring ? CACHE_FONT_SIZE + 'px' : style.fontSize + 'px',\n        (fabric.isLikelyNode ? ('\"' + style.fontFamily + '\"') : style.fontFamily)\n      ].join(' ');\n    },\n\n    /**\n     * Renders text instance on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    render: function(ctx) {\n      // do not render if object is not visible\n      if (!this.visible) {\n        return;\n      }\n      if (this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen()) {\n        return;\n      }\n      if (this._shouldClearDimensionCache()) {\n        this.initDimensions();\n      }\n      this.callSuper('render', ctx);\n    },\n\n    /**\n     * Returns the text as an array of lines.\n     * @param {String} text text to split\n     * @returns {Array} Lines in the text\n     */\n    _splitTextIntoLines: function(text) {\n      var lines = text.split(this._reNewline),\n          newLines = new Array(lines.length),\n          newLine = ['\\n'],\n          newText = [];\n      for (var i = 0; i < lines.length; i++) {\n        newLines[i] = fabric.util.string.graphemeSplit(lines[i]);\n        newText = newText.concat(newLines[i], newLine);\n      }\n      newText.pop();\n      return { _unwrappedLines: newLines, lines: lines, graphemeText: newText, graphemeLines: newLines };\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var additionalProperties = [\n        'text',\n        'fontSize',\n        'fontWeight',\n        'fontFamily',\n        'fontStyle',\n        'lineHeight',\n        'underline',\n        'overline',\n        'linethrough',\n        'textAlign',\n        'textBackgroundColor',\n        'charSpacing',\n      ].concat(propertiesToInclude);\n      var obj = this.callSuper('toObject', additionalProperties);\n      obj.styles = clone(this.styles, true);\n      return obj;\n    },\n\n    /**\n     * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\n     * @param {String|Object} key Property name or object (if object, iterate over the object properties)\n     * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    set: function(key, value) {\n      this.callSuper('set', key, value);\n      var needsDims = false;\n      if (typeof key === 'object') {\n        for (var _key in key) {\n          needsDims = needsDims || this._dimensionAffectingProps.indexOf(_key) !== -1;\n        }\n      }\n      else {\n        needsDims = this._dimensionAffectingProps.indexOf(key) !== -1;\n      }\n      if (needsDims) {\n        this.initDimensions();\n        this.setCoords();\n      }\n      return this;\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity\n     */\n    complexity: function() {\n      return 1;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Text.fromElement})\n   * @static\n   * @memberOf fabric.Text\n   * @see: http://www.w3.org/TR/SVG/text.html#TextElement\n   */\n  fabric.Text.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(\n    'x y dx dy font-family font-style font-weight font-size text-decoration text-anchor'.split(' '));\n\n  /**\n   * Default SVG font size\n   * @static\n   * @memberOf fabric.Text\n   */\n  fabric.Text.DEFAULT_SVG_FONT_SIZE = 16;\n\n  /**\n   * Returns fabric.Text instance from an SVG element (<b>not yet implemented</b>)\n   * @static\n   * @memberOf fabric.Text\n   * @param {SVGElement} element Element to parse\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n  fabric.Text.fromElement = function(element, callback, options) {\n    if (!element) {\n      return callback(null);\n    }\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Text.ATTRIBUTE_NAMES),\n        parsedAnchor = parsedAttributes.textAnchor || 'left';\n    options = fabric.util.object.extend((options ? clone(options) : { }), parsedAttributes);\n\n    options.top = options.top || 0;\n    options.left = options.left || 0;\n    if (parsedAttributes.textDecoration) {\n      var textDecoration = parsedAttributes.textDecoration;\n      if (textDecoration.indexOf('underline') !== -1) {\n        options.underline = true;\n      }\n      if (textDecoration.indexOf('overline') !== -1) {\n        options.overline = true;\n      }\n      if (textDecoration.indexOf('line-through') !== -1) {\n        options.linethrough = true;\n      }\n      delete options.textDecoration;\n    }\n    if ('dx' in parsedAttributes) {\n      options.left += parsedAttributes.dx;\n    }\n    if ('dy' in parsedAttributes) {\n      options.top += parsedAttributes.dy;\n    }\n    if (!('fontSize' in options)) {\n      options.fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n    }\n\n    var textContent = '';\n\n    // The XML is not properly parsed in IE9 so a workaround to get\n    // textContent is through firstChild.data. Another workaround would be\n    // to convert XML loaded from a file to be converted using DOMParser (same way loadSVGFromString() does)\n    if (!('textContent' in element)) {\n      if ('firstChild' in element && element.firstChild !== null) {\n        if ('data' in element.firstChild && element.firstChild.data !== null) {\n          textContent = element.firstChild.data;\n        }\n      }\n    }\n    else {\n      textContent = element.textContent;\n    }\n\n    textContent = textContent.replace(/^\\s+|\\s+$|\\n+/g, '').replace(/\\s+/g, ' ');\n\n    var text = new fabric.Text(textContent, options),\n        textHeightScaleFactor = text.getScaledHeight() / text.height,\n        lineHeightDiff = (text.height + text.strokeWidth) * text.lineHeight - text.height,\n        scaledDiff = lineHeightDiff * textHeightScaleFactor,\n        textHeight = text.getScaledHeight() + scaledDiff,\n        offX = 0;\n    /*\n      Adjust positioning:\n        x/y attributes in SVG correspond to the bottom-left corner of text bounding box\n        fabric output by default at top, left.\n    */\n    if (parsedAnchor === 'center') {\n      offX = text.getScaledWidth() / 2;\n    }\n    if (parsedAnchor === 'right') {\n      offX = text.getScaledWidth();\n    }\n    text.set({\n      left: text.left - offX,\n      top: text.top - (textHeight - text.fontSize * (0.18 + text._fontSizeFraction)) / text.lineHeight\n    });\n    callback(text);\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Text instance from an object representation\n   * @static\n   * @memberOf fabric.Text\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Text instance is created\n   */\n  fabric.Text.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Text', object, callback, 'text');\n  };\n\n  fabric.util.createAccessors && fabric.util.createAccessors(fabric.Text);\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n  fabric.util.object.extend(fabric.Text.prototype, /** @lends fabric.Text.prototype */ {\n    /**\n     * Returns true if object has no styling or no styling in a line\n     * @param {Number} lineIndex\n     * @return {Boolean}\n     */\n    isEmptyStyles: function(lineIndex) {\n      if (!this.styles) {\n        return true;\n      }\n      if (typeof lineIndex !== 'undefined' && !this.styles[lineIndex]) {\n        return true;\n      }\n      var obj = typeof lineIndex === 'undefined' ? this.styles : { line: this.styles[lineIndex] };\n      for (var p1 in obj) {\n        for (var p2 in obj[p1]) {\n          // eslint-disable-next-line no-unused-vars\n          for (var p3 in obj[p1][p2]) {\n            return false;\n          }\n        }\n      }\n      return true;\n    },\n\n    /**\n     * Returns true if object has a style property or has it ina specified line\n     * @param {Number} lineIndex\n     * @return {Boolean}\n     */\n    styleHas: function(property, lineIndex) {\n      if (!this.styles || !property || property === '') {\n        return false;\n      }\n      if (typeof lineIndex !== 'undefined' && !this.styles[lineIndex]) {\n        return false;\n      }\n      var obj = typeof lineIndex === 'undefined' ? this.styles : { line: this.styles[lineIndex] };\n      // eslint-disable-next-line\n      for (var p1 in obj) {\n        // eslint-disable-next-line\n        for (var p2 in obj[p1]) {\n          if (typeof obj[p1][p2][property] !== 'undefined') {\n            return true;\n          }\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Check if characters in a text have a value for a property\n     * whose value matches the textbox's value for that property.  If so,\n     * the character-level property is deleted.  If the character\n     * has no other properties, then it is also deleted.  Finally,\n     * if the line containing that character has no other characters\n     * then it also is deleted.\n     *\n     * @param {string} property The property to compare between characters and text.\n     */\n    cleanStyle: function(property) {\n      if (!this.styles || !property || property === '') {\n        return false;\n      }\n      var obj = this.styles, stylesCount = 0, letterCount, foundStyle = false, style,\n          canBeSwapped = true, graphemeCount = 0;\n      // eslint-disable-next-line\n      for (var p1 in obj) {\n        letterCount = 0;\n        // eslint-disable-next-line\n        for (var p2 in obj[p1]) {\n          stylesCount++;\n          if (!foundStyle) {\n            style = obj[p1][p2][property];\n            foundStyle = true;\n          }\n          else if (obj[p1][p2][property] !== style) {\n            canBeSwapped = false;\n          }\n          if (obj[p1][p2][property] === this[property]) {\n            delete obj[p1][p2][property];\n          }\n          if (Object.keys(obj[p1][p2]).length !== 0) {\n            letterCount++;\n          }\n          else {\n            delete obj[p1][p2];\n          }\n        }\n        if (letterCount === 0) {\n          delete obj[p1];\n        }\n      }\n      // if every grapheme has the same style set then\n      // delete those styles and set it on the parent\n      for (var i = 0; i < this._textLines.length; i++) {\n        graphemeCount += this._textLines[i].length;\n      }\n      if (canBeSwapped && stylesCount === graphemeCount) {\n        this[property] = style;\n        this.removeStyle(property);\n      }\n    },\n\n    /**\n     * Remove a style property or properties from all individual character styles\n     * in a text object.  Deletes the character style object if it contains no other style\n     * props.  Deletes a line style object if it contains no other character styles.\n     *\n     * @param {String} props The property to remove from character styles.\n     */\n    removeStyle: function(property) {\n      if (!this.styles || !property || property === '') {\n        return;\n      }\n      var obj = this.styles, line, lineNum, charNum;\n      for (lineNum in obj) {\n        line = obj[lineNum];\n        for (charNum in line) {\n          delete line[charNum][property];\n          if (Object.keys(line[charNum]).length === 0) {\n            delete line[charNum];\n          }\n        }\n        if (Object.keys(line).length === 0) {\n          delete obj[lineNum];\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _extendStyles: function(index, styles) {\n      var loc = this.get2DCursorLocation(index);\n\n      if (!this._getLineStyle(loc.lineIndex)) {\n        this._setLineStyle(loc.lineIndex, {});\n      }\n\n      if (!this._getStyleDeclaration(loc.lineIndex, loc.charIndex)) {\n        this._setStyleDeclaration(loc.lineIndex, loc.charIndex, {});\n      }\n\n      fabric.util.object.extend(this._getStyleDeclaration(loc.lineIndex, loc.charIndex), styles);\n    },\n\n    /**\n     * Returns 2d representation (lineIndex and charIndex) of cursor (or selection start)\n     * @param {Number} [selectionStart] Optional index. When not given, current selectionStart is used.\n     * @param {Boolean} [skipWrapping] consider the location for unwrapped lines. usefull to manage styles.\n     */\n    get2DCursorLocation: function(selectionStart, skipWrapping) {\n      if (typeof selectionStart === 'undefined') {\n        selectionStart = this.selectionStart;\n      }\n      var lines = skipWrapping ? this._unwrappedTextLines : this._textLines;\n      var len = lines.length;\n      for (var i = 0; i < len; i++) {\n        if (selectionStart <= lines[i].length) {\n          return {\n            lineIndex: i,\n            charIndex: selectionStart\n          };\n        }\n        selectionStart -= lines[i].length + 1;\n      }\n      return {\n        lineIndex: i - 1,\n        charIndex: lines[i - 1].length < selectionStart ? lines[i - 1].length : selectionStart\n      };\n    },\n\n    /**\n     * Gets style of a current selection/cursor (at the start position)\n     * if startIndex or endIndex are not provided, slectionStart or selectionEnd will be used.\n     * @param {Number} [startIndex] Start index to get styles at\n     * @param {Number} [endIndex] End index to get styles at, if not specified selectionEnd or startIndex + 1\n     * @param {Boolean} [complete] get full style or not\n     * @return {Array} styles an array with one, zero or more Style objects\n     */\n    getSelectionStyles: function(startIndex, endIndex, complete) {\n      if (typeof startIndex === 'undefined') {\n        startIndex = this.selectionStart || 0;\n      }\n      if (typeof endIndex === 'undefined') {\n        endIndex = this.selectionEnd || startIndex;\n      }\n      var styles = [];\n      for (var i = startIndex; i < endIndex; i++) {\n        styles.push(this.getStyleAtPosition(i, complete));\n      }\n      return styles;\n    },\n\n    /**\n     * Gets style of a current selection/cursor position\n     * @param {Number} position  to get styles at\n     * @param {Boolean} [complete] full style if true\n     * @return {Object} style Style object at a specified index\n     * @private\n     */\n    getStyleAtPosition: function(position, complete) {\n      var loc = this.get2DCursorLocation(position),\n          style = complete ? this.getCompleteStyleDeclaration(loc.lineIndex, loc.charIndex) :\n            this._getStyleDeclaration(loc.lineIndex, loc.charIndex);\n      return style || {};\n    },\n\n    /**\n     * Sets style of a current selection, if no selection exist, do not set anything.\n     * @param {Object} [styles] Styles object\n     * @param {Number} [startIndex] Start index to get styles at\n     * @param {Number} [endIndex] End index to get styles at, if not specified selectionEnd or startIndex + 1\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    setSelectionStyles: function(styles, startIndex, endIndex) {\n      if (typeof startIndex === 'undefined') {\n        startIndex = this.selectionStart || 0;\n      }\n      if (typeof endIndex === 'undefined') {\n        endIndex = this.selectionEnd || startIndex;\n      }\n      for (var i = startIndex; i < endIndex; i++) {\n        this._extendStyles(i, styles);\n      }\n      /* not included in _extendStyles to avoid clearing cache more than once */\n      this._forceClearCache = true;\n      return this;\n    },\n\n    /**\n     * get the reference, not a clone, of the style object for a given character\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @return {Object} style object\n     */\n    _getStyleDeclaration: function(lineIndex, charIndex) {\n      var lineStyle = this.styles && this.styles[lineIndex];\n      if (!lineStyle) {\n        return null;\n      }\n      return lineStyle[charIndex];\n    },\n\n    /**\n     * return a new object that contains all the style property for a character\n     * the object returned is newly created\n     * @param {Number} lineIndex of the line where the character is\n     * @param {Number} charIndex position of the character on the line\n     * @return {Object} style object\n     */\n    getCompleteStyleDeclaration: function(lineIndex, charIndex) {\n      var style = this._getStyleDeclaration(lineIndex, charIndex) || { },\n          styleObject = { }, prop;\n      for (var i = 0; i < this._styleProperties.length; i++) {\n        prop = this._styleProperties[i];\n        styleObject[prop] = typeof style[prop] === 'undefined' ? this[prop] : style[prop];\n      }\n      return styleObject;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} style\n     * @private\n     */\n    _setStyleDeclaration: function(lineIndex, charIndex, style) {\n      this.styles[lineIndex][charIndex] = style;\n    },\n\n    /**\n     *\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _deleteStyleDeclaration: function(lineIndex, charIndex) {\n      delete this.styles[lineIndex][charIndex];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _getLineStyle: function(lineIndex) {\n      return this.styles[lineIndex];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Object} style\n     * @private\n     */\n    _setLineStyle: function(lineIndex, style) {\n      this.styles[lineIndex] = style;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _deleteLineStyle: function(lineIndex) {\n      delete this.styles[lineIndex];\n    }\n  });\n})();\n\n\n(function() {\n\n  function parseDecoration(object) {\n    if (object.textDecoration) {\n      object.textDecoration.indexOf('underline') > -1 && (object.underline = true);\n      object.textDecoration.indexOf('line-through') > -1 && (object.linethrough = true);\n      object.textDecoration.indexOf('overline') > -1 && (object.overline = true);\n      delete object.textDecoration;\n    }\n  }\n\n  /**\n   * IText class (introduced in <b>v1.4</b>) Events are also fired with \"text:\"\n   * prefix when observing canvas.\n   * @class fabric.IText\n   * @extends fabric.Text\n   * @mixes fabric.Observable\n   *\n   * @fires changed\n   * @fires selection:changed\n   * @fires editing:entered\n   * @fires editing:exited\n   *\n   * @return {fabric.IText} thisArg\n   * @see {@link fabric.IText#initialize} for constructor definition\n   *\n   * <p>Supported key combinations:</p>\n   * <pre>\n   *   Move cursor:                    left, right, up, down\n   *   Select character:               shift + left, shift + right\n   *   Select text vertically:         shift + up, shift + down\n   *   Move cursor by word:            alt + left, alt + right\n   *   Select words:                   shift + alt + left, shift + alt + right\n   *   Move cursor to line start/end:  cmd + left, cmd + right or home, end\n   *   Select till start/end of line:  cmd + shift + left, cmd + shift + right or shift + home, shift + end\n   *   Jump to start/end of text:      cmd + up, cmd + down\n   *   Select till start/end of text:  cmd + shift + up, cmd + shift + down or shift + pgUp, shift + pgDown\n   *   Delete character:               backspace\n   *   Delete word:                    alt + backspace\n   *   Delete line:                    cmd + backspace\n   *   Forward delete:                 delete\n   *   Copy text:                      ctrl/cmd + c\n   *   Paste text:                     ctrl/cmd + v\n   *   Cut text:                       ctrl/cmd + x\n   *   Select entire text:             ctrl/cmd + a\n   *   Quit editing                    tab or esc\n   * </pre>\n   *\n   * <p>Supported mouse/touch combination</p>\n   * <pre>\n   *   Position cursor:                click/touch\n   *   Create selection:               click/touch & drag\n   *   Create selection:               click & shift + click\n   *   Select word:                    double click\n   *   Select line:                    triple click\n   * </pre>\n   */\n  fabric.IText = fabric.util.createClass(fabric.Text, fabric.Observable, /** @lends fabric.IText.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'i-text',\n\n    /**\n     * Index where text selection starts (or where cursor is when there is no selection)\n     * @type Number\n     * @default\n     */\n    selectionStart: 0,\n\n    /**\n     * Index where text selection ends\n     * @type Number\n     * @default\n     */\n    selectionEnd: 0,\n\n    /**\n     * Color of text selection\n     * @type String\n     * @default\n     */\n    selectionColor: 'rgba(17,119,255,0.3)',\n\n    /**\n     * Indicates whether text is in editing mode\n     * @type Boolean\n     * @default\n     */\n    isEditing: false,\n\n    /**\n     * Indicates whether a text can be edited\n     * @type Boolean\n     * @default\n     */\n    editable: true,\n\n    /**\n     * Border color of text object while it's in editing mode\n     * @type String\n     * @default\n     */\n    editingBorderColor: 'rgba(102,153,255,0.25)',\n\n    /**\n     * Width of cursor (in px)\n     * @type Number\n     * @default\n     */\n    cursorWidth: 2,\n\n    /**\n     * Color of default cursor (when not overwritten by character style)\n     * @type String\n     * @default\n     */\n    cursorColor: '#333',\n\n    /**\n     * Delay between cursor blink (in ms)\n     * @type Number\n     * @default\n     */\n    cursorDelay: 1000,\n\n    /**\n     * Duration of cursor fadein (in ms)\n     * @type Number\n     * @default\n     */\n    cursorDuration: 600,\n\n    /**\n     * Indicates whether internal text char widths can be cached\n     * @type Boolean\n     * @default\n     */\n    caching: true,\n\n    /**\n     * @private\n     */\n    _reSpace: /\\s|\\n/,\n\n    /**\n     * @private\n     */\n    _currentCursorOpacity: 0,\n\n    /**\n     * @private\n     */\n    _selectionDirection: null,\n\n    /**\n     * @private\n     */\n    _abortCursorAnimation: false,\n\n    /**\n     * @private\n     */\n    __widthOfSpace: [],\n\n    /**\n     * Helps determining when the text is in composition, so that the cursor\n     * rendering is altered.\n     */\n    inCompositionMode: false,\n\n    /**\n     * Constructor\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.IText} thisArg\n     */\n    initialize: function(text, options) {\n      this.callSuper('initialize', text, options);\n      this.initBehavior();\n    },\n\n    /**\n     * Sets selection start (left boundary of a selection)\n     * @param {Number} index Index to set selection start to\n     */\n    setSelectionStart: function(index) {\n      index = Math.max(index, 0);\n      this._updateAndFire('selectionStart', index);\n    },\n\n    /**\n     * Sets selection end (right boundary of a selection)\n     * @param {Number} index Index to set selection end to\n     */\n    setSelectionEnd: function(index) {\n      index = Math.min(index, this.text.length);\n      this._updateAndFire('selectionEnd', index);\n    },\n\n    /**\n     * @private\n     * @param {String} property 'selectionStart' or 'selectionEnd'\n     * @param {Number} index new position of property\n     */\n    _updateAndFire: function(property, index) {\n      if (this[property] !== index) {\n        this._fireSelectionChanged();\n        this[property] = index;\n      }\n      this._updateTextarea();\n    },\n\n    /**\n     * Fires the even of selection changed\n     * @private\n     */\n    _fireSelectionChanged: function() {\n      this.fire('selection:changed');\n      this.canvas && this.canvas.fire('text:selection:changed', { target: this });\n    },\n\n    /**\n     * Initialize text dimensions. Render all text on given context\n     * or on a offscreen canvas to get the text width with measureText.\n     * Updates this.width and this.height with the proper values.\n     * Does not return dimensions.\n     * @private\n     */\n    initDimensions: function() {\n      this.isEditing && this.initDelayedCursor();\n      this.clearContextTop();\n      this.callSuper('initDimensions');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    render: function(ctx) {\n      this.clearContextTop();\n      this.callSuper('render', ctx);\n      // clear the cursorOffsetCache, so we ensure to calculate once per renderCursor\n      // the correct position but not at every cursor animation.\n      this.cursorOffsetCache = { };\n      this.renderCursorOrSelection();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      this.callSuper('_render', ctx);\n    },\n\n    /**\n     * Prepare and clean the contextTop\n     */\n    clearContextTop: function(skipRestore) {\n      if (!this.isEditing) {\n        return;\n      }\n      if (this.canvas && this.canvas.contextTop) {\n        var ctx = this.canvas.contextTop, v = this.canvas.viewportTransform;\n        ctx.save();\n        ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n        this.transform(ctx);\n        this.transformMatrix && ctx.transform.apply(ctx, this.transformMatrix);\n        this._clearTextArea(ctx);\n        skipRestore || ctx.restore();\n      }\n    },\n\n    /**\n     * Renders cursor or selection (depending on what exists)\n     */\n    renderCursorOrSelection: function() {\n      if (!this.isEditing || !this.canvas) {\n        return;\n      }\n      var boundaries = this._getCursorBoundaries(), ctx;\n      if (this.canvas && this.canvas.contextTop) {\n        ctx = this.canvas.contextTop;\n        this.clearContextTop(true);\n      }\n      else {\n        ctx = this.canvas.contextContainer;\n        ctx.save();\n      }\n      if (this.selectionStart === this.selectionEnd) {\n        this.renderCursor(boundaries, ctx);\n      }\n      else {\n        this.renderSelection(boundaries, ctx);\n      }\n      ctx.restore();\n    },\n\n    _clearTextArea: function(ctx) {\n      // we add 4 pixel, to be sure to do not leave any pixel out\n      var width = this.width + 4, height = this.height + 4;\n      ctx.clearRect(-width / 2, -height / 2, width, height);\n    },\n\n    /**\n     * Returns cursor boundaries (left, top, leftOffset, topOffset)\n     * @private\n     * @param {Array} chars Array of characters\n     * @param {String} typeOfBoundaries\n     */\n    _getCursorBoundaries: function(position) {\n\n      // left/top are left/top of entire text box\n      // leftOffset/topOffset are offset from that left/top point of a text box\n\n      if (typeof position === 'undefined') {\n        position = this.selectionStart;\n      }\n\n      var left = this._getLeftOffset(),\n          top = this._getTopOffset(),\n          offsets = this._getCursorBoundariesOffsets(position);\n\n      return {\n        left: left,\n        top: top,\n        leftOffset: offsets.left,\n        topOffset: offsets.top\n      };\n    },\n\n    /**\n     * @private\n     */\n    _getCursorBoundariesOffsets: function(position) {\n      if (this.cursorOffsetCache && 'top' in this.cursorOffsetCache) {\n        return this.cursorOffsetCache;\n      }\n      var lineLeftOffset,\n          lineIndex = 0,\n          charIndex = 0,\n          topOffset = 0,\n          leftOffset = 0,\n          boundaries,\n          cursorPosition = this.get2DCursorLocation(position);\n      for (var i = 0; i < cursorPosition.lineIndex; i++) {\n        topOffset += this.getHeightOfLine(i);\n      }\n\n      lineLeftOffset = this._getLineLeftOffset(cursorPosition.lineIndex);\n      var bound = this.__charBounds[cursorPosition.lineIndex][cursorPosition.charIndex];\n      bound && (leftOffset = bound.left);\n      if (this.charSpacing !== 0 && charIndex === this._textLines[lineIndex].length) {\n        leftOffset -= this._getWidthOfCharSpacing();\n      }\n      boundaries = {\n        top: topOffset,\n        left: lineLeftOffset + (leftOffset > 0 ? leftOffset : 0),\n      };\n      this.cursorOffsetCache = boundaries;\n      return this.cursorOffsetCache;\n    },\n\n    /**\n     * Renders cursor\n     * @param {Object} boundaries\n     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n     */\n    renderCursor: function(boundaries, ctx) {\n      var cursorLocation = this.get2DCursorLocation(),\n          lineIndex = cursorLocation.lineIndex,\n          charIndex = cursorLocation.charIndex > 0 ? cursorLocation.charIndex - 1 : 0,\n          charHeight = this.getValueOfPropertyAt(lineIndex, charIndex, 'fontSize'),\n          multiplier = this.scaleX * this.canvas.getZoom(),\n          cursorWidth = this.cursorWidth / multiplier,\n          topOffset = boundaries.topOffset;\n\n      topOffset += (1 - this._fontSizeFraction) * this.getHeightOfLine(lineIndex) / this.lineHeight\n        - charHeight * (1 - this._fontSizeFraction);\n\n      if (this.inCompositionMode) {\n        this.renderSelection(boundaries, ctx);\n      }\n\n      ctx.fillStyle = this.getValueOfPropertyAt(lineIndex, charIndex, 'fill');\n      ctx.globalAlpha = this.__isMousedown ? 1 : this._currentCursorOpacity;\n      ctx.fillRect(\n        boundaries.left + boundaries.leftOffset - cursorWidth / 2,\n        topOffset + boundaries.top,\n        cursorWidth,\n        charHeight);\n    },\n\n    /**\n     * Renders text selection\n     * @param {Object} boundaries Object with left/top/leftOffset/topOffset\n     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n     */\n    renderSelection: function(boundaries, ctx) {\n\n      var selectionStart = this.inCompositionMode ? this.hiddenTextarea.selectionStart : this.selectionStart,\n          selectionEnd = this.inCompositionMode ? this.hiddenTextarea.selectionEnd : this.selectionEnd,\n          isJustify = this.textAlign.indexOf('justify') !== -1,\n          start = this.get2DCursorLocation(selectionStart),\n          end = this.get2DCursorLocation(selectionEnd),\n          startLine = start.lineIndex,\n          endLine = end.lineIndex,\n          startChar = start.charIndex < 0 ? 0 : start.charIndex,\n          endChar = end.charIndex < 0 ? 0 : end.charIndex;\n\n      for (var i = startLine; i <= endLine; i++) {\n        var lineOffset = this._getLineLeftOffset(i) || 0,\n            lineHeight = this.getHeightOfLine(i),\n            realLineHeight = 0, boxStart = 0, boxEnd = 0;\n\n        if (i === startLine) {\n          boxStart = this.__charBounds[startLine][startChar].left;\n        }\n        if (i >= startLine && i < endLine) {\n          boxEnd = isJustify && !this.isEndOfWrapping(i) ? this.width : this.getLineWidth(i) || 5; // WTF is this 5?\n        }\n        else if (i === endLine) {\n          if (endChar === 0) {\n            boxEnd = this.__charBounds[endLine][endChar].left;\n          }\n          else {\n            boxEnd = this.__charBounds[endLine][endChar - 1].left + this.__charBounds[endLine][endChar - 1].width;\n          }\n        }\n        realLineHeight = lineHeight;\n        if (this.lineHeight < 1 || (i === endLine && this.lineHeight > 1)) {\n          lineHeight /= this.lineHeight;\n        }\n        if (this.inCompositionMode) {\n          ctx.fillStyle = this.compositionColor || 'black';\n          ctx.fillRect(\n            boundaries.left + lineOffset + boxStart,\n            boundaries.top + boundaries.topOffset + lineHeight,\n            boxEnd - boxStart,\n            1);\n        }\n        else {\n          ctx.fillStyle = this.selectionColor;\n          ctx.fillRect(\n            boundaries.left + lineOffset + boxStart,\n            boundaries.top + boundaries.topOffset,\n            boxEnd - boxStart,\n            lineHeight);\n        }\n\n\n        boundaries.topOffset += realLineHeight;\n      }\n    },\n\n    /**\n     * High level function to know the height of the cursor.\n     * the currentChar is the one that precedes the cursor\n     * Returns fontSize of char at the current cursor\n     * @return {Number} Character font size\n     */\n    getCurrentCharFontSize: function() {\n      var cp = this._getCurrentCharIndex();\n      return this.getValueOfPropertyAt(cp.l, cp.c, 'fontSize');\n    },\n\n    /**\n     * High level function to know the color of the cursor.\n     * the currentChar is the one that precedes the cursor\n     * Returns color (fill) of char at the current cursor\n     * @return {String} Character color (fill)\n     */\n    getCurrentCharColor: function() {\n      var cp = this._getCurrentCharIndex();\n      return this.getValueOfPropertyAt(cp.l, cp.c, 'fill');\n    },\n\n    /**\n     * Returns the cursor position for the getCurrent.. functions\n     * @private\n     */\n    _getCurrentCharIndex: function() {\n      var cursorPosition = this.get2DCursorLocation(this.selectionStart, true),\n          charIndex = cursorPosition.charIndex > 0 ? cursorPosition.charIndex - 1 : 0;\n      return { l: cursorPosition.lineIndex, c: charIndex };\n    }\n  });\n\n  /**\n   * Returns fabric.IText instance from an object representation\n   * @static\n   * @memberOf fabric.IText\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as argument\n   */\n  fabric.IText.fromObject = function(object, callback) {\n    parseDecoration(object);\n    if (object.styles) {\n      for (var i in object.styles) {\n        for (var j in object.styles[i]) {\n          parseDecoration(object.styles[i][j]);\n        }\n      }\n    }\n    fabric.Object._fromObject('IText', object, callback, 'text');\n  };\n})();\n\n\n(function() {\n\n  var clone = fabric.util.object.clone;\n\n  fabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\n    /**\n     * Initializes all the interactive behavior of IText\n     */\n    initBehavior: function() {\n      this.initAddedHandler();\n      this.initRemovedHandler();\n      this.initCursorSelectionHandlers();\n      this.initDoubleClickSimulation();\n      this.mouseMoveHandler = this.mouseMoveHandler.bind(this);\n    },\n\n    onDeselect: function(options) {\n      this.isEditing && this.exitEditing();\n      this.selected = false;\n      fabric.Object.prototype.onDeselect.call(this, options);\n    },\n\n    /**\n     * Initializes \"added\" event handler\n     */\n    initAddedHandler: function() {\n      var _this = this;\n      this.on('added', function() {\n        var canvas = _this.canvas;\n        if (canvas) {\n          if (!canvas._hasITextHandlers) {\n            canvas._hasITextHandlers = true;\n            _this._initCanvasHandlers(canvas);\n          }\n          canvas._iTextInstances = canvas._iTextInstances || [];\n          canvas._iTextInstances.push(_this);\n        }\n      });\n    },\n\n    initRemovedHandler: function() {\n      var _this = this;\n      this.on('removed', function() {\n        var canvas = _this.canvas;\n        if (canvas) {\n          canvas._iTextInstances = canvas._iTextInstances || [];\n          fabric.util.removeFromArray(canvas._iTextInstances, _this);\n          if (canvas._iTextInstances.length === 0) {\n            canvas._hasITextHandlers = false;\n            _this._removeCanvasHandlers(canvas);\n          }\n        }\n      });\n    },\n\n    /**\n     * register canvas event to manage exiting on other instances\n     * @private\n     */\n    _initCanvasHandlers: function(canvas) {\n      canvas._mouseUpITextHandler = (function() {\n        if (canvas._iTextInstances) {\n          canvas._iTextInstances.forEach(function(obj) {\n            obj.__isMousedown = false;\n          });\n        }\n      }).bind(this);\n      canvas.on('mouse:up', canvas._mouseUpITextHandler);\n    },\n\n    /**\n     * remove canvas event to manage exiting on other instances\n     * @private\n     */\n    _removeCanvasHandlers: function(canvas) {\n      canvas.off('mouse:up', canvas._mouseUpITextHandler);\n    },\n\n    /**\n     * @private\n     */\n    _tick: function() {\n      this._currentTickState = this._animateCursor(this, 1, this.cursorDuration, '_onTickComplete');\n    },\n\n    /**\n     * @private\n     */\n    _animateCursor: function(obj, targetOpacity, duration, completeMethod) {\n\n      var tickState;\n\n      tickState = {\n        isAborted: false,\n        abort: function() {\n          this.isAborted = true;\n        },\n      };\n\n      obj.animate('_currentCursorOpacity', targetOpacity, {\n        duration: duration,\n        onComplete: function() {\n          if (!tickState.isAborted) {\n            obj[completeMethod]();\n          }\n        },\n        onChange: function() {\n          // we do not want to animate a selection, only cursor\n          if (obj.canvas && obj.selectionStart === obj.selectionEnd) {\n            obj.renderCursorOrSelection();\n          }\n        },\n        abort: function() {\n          return tickState.isAborted;\n        }\n      });\n      return tickState;\n    },\n\n    /**\n     * @private\n     */\n    _onTickComplete: function() {\n\n      var _this = this;\n\n      if (this._cursorTimeout1) {\n        clearTimeout(this._cursorTimeout1);\n      }\n      this._cursorTimeout1 = setTimeout(function() {\n        _this._currentTickCompleteState = _this._animateCursor(_this, 0, this.cursorDuration / 2, '_tick');\n      }, 100);\n    },\n\n    /**\n     * Initializes delayed cursor\n     */\n    initDelayedCursor: function(restart) {\n      var _this = this,\n          delay = restart ? 0 : this.cursorDelay;\n\n      this.abortCursorAnimation();\n      this._currentCursorOpacity = 1;\n      this._cursorTimeout2 = setTimeout(function() {\n        _this._tick();\n      }, delay);\n    },\n\n    /**\n     * Aborts cursor animation and clears all timeouts\n     */\n    abortCursorAnimation: function() {\n      var shouldClear = this._currentTickState || this._currentTickCompleteState,\n          canvas = this.canvas;\n      this._currentTickState && this._currentTickState.abort();\n      this._currentTickCompleteState && this._currentTickCompleteState.abort();\n\n      clearTimeout(this._cursorTimeout1);\n      clearTimeout(this._cursorTimeout2);\n\n      this._currentCursorOpacity = 0;\n      // to clear just itext area we need to transform the context\n      // it may not be worth it\n      if (shouldClear && canvas) {\n        canvas.clearContext(canvas.contextTop || canvas.contextContainer);\n      }\n\n    },\n\n    /**\n     * Selects entire text\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    selectAll: function() {\n      this.selectionStart = 0;\n      this.selectionEnd = this._text.length;\n      this._fireSelectionChanged();\n      this._updateTextarea();\n      return this;\n    },\n\n    /**\n     * Returns selected text\n     * @return {String}\n     */\n    getSelectedText: function() {\n      return this._text.slice(this.selectionStart, this.selectionEnd).join('');\n    },\n\n    /**\n     * Find new selection index representing start of current word according to current selection index\n     * @param {Number} startFrom Surrent selection index\n     * @return {Number} New selection index\n     */\n    findWordBoundaryLeft: function(startFrom) {\n      var offset = 0, index = startFrom - 1;\n\n      // remove space before cursor first\n      if (this._reSpace.test(this._text[index])) {\n        while (this._reSpace.test(this._text[index])) {\n          offset++;\n          index--;\n        }\n      }\n      while (/\\S/.test(this._text[index]) && index > -1) {\n        offset++;\n        index--;\n      }\n\n      return startFrom - offset;\n    },\n\n    /**\n     * Find new selection index representing end of current word according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findWordBoundaryRight: function(startFrom) {\n      var offset = 0, index = startFrom;\n\n      // remove space after cursor first\n      if (this._reSpace.test(this._text[index])) {\n        while (this._reSpace.test(this._text[index])) {\n          offset++;\n          index++;\n        }\n      }\n      while (/\\S/.test(this._text[index]) && index < this.text.length) {\n        offset++;\n        index++;\n      }\n\n      return startFrom + offset;\n    },\n\n    /**\n     * Find new selection index representing start of current line according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findLineBoundaryLeft: function(startFrom) {\n      var offset = 0, index = startFrom - 1;\n\n      while (!/\\n/.test(this._text[index]) && index > -1) {\n        offset++;\n        index--;\n      }\n\n      return startFrom - offset;\n    },\n\n    /**\n     * Find new selection index representing end of current line according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findLineBoundaryRight: function(startFrom) {\n      var offset = 0, index = startFrom;\n\n      while (!/\\n/.test(this._text[index]) && index < this.text.length) {\n        offset++;\n        index++;\n      }\n\n      return startFrom + offset;\n    },\n\n    /**\n     * Finds index corresponding to beginning or end of a word\n     * @param {Number} selectionStart Index of a character\n     * @param {Number} direction 1 or -1\n     * @return {Number} Index of the beginning or end of a word\n     */\n    searchWordBoundary: function(selectionStart, direction) {\n      var index     = this._reSpace.test(this.text.charAt(selectionStart)) ? selectionStart - 1 : selectionStart,\n          _char     = this.text.charAt(index),\n          reNonWord = /[ \\n\\.,;!\\?\\-]/;\n\n      while (!reNonWord.test(_char) && index > 0 && index < this.text.length) {\n        index += direction;\n        _char = this.text.charAt(index);\n      }\n      if (reNonWord.test(_char) && _char !== '\\n') {\n        index += direction === 1 ? 0 : 1;\n      }\n      return index;\n    },\n\n    /**\n     * Selects a word based on the index\n     * @param {Number} selectionStart Index of a character\n     */\n    selectWord: function(selectionStart) {\n      selectionStart = selectionStart || this.selectionStart;\n      var newSelectionStart = this.searchWordBoundary(selectionStart, -1), /* search backwards */\n          newSelectionEnd = this.searchWordBoundary(selectionStart, 1); /* search forward */\n\n      this.selectionStart = newSelectionStart;\n      this.selectionEnd = newSelectionEnd;\n      this._fireSelectionChanged();\n      this._updateTextarea();\n      this.renderCursorOrSelection();\n    },\n\n    /**\n     * Selects a line based on the index\n     * @param {Number} selectionStart Index of a character\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    selectLine: function(selectionStart) {\n      selectionStart = selectionStart || this.selectionStart;\n      var newSelectionStart = this.findLineBoundaryLeft(selectionStart),\n          newSelectionEnd = this.findLineBoundaryRight(selectionStart);\n\n      this.selectionStart = newSelectionStart;\n      this.selectionEnd = newSelectionEnd;\n      this._fireSelectionChanged();\n      this._updateTextarea();\n      return this;\n    },\n\n    /**\n     * Enters editing state\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    enterEditing: function(e) {\n      if (this.isEditing || !this.editable) {\n        return;\n      }\n\n      if (this.canvas) {\n        this.canvas.calcOffset();\n        this.exitEditingOnOthers(this.canvas);\n      }\n\n      this.isEditing = true;\n\n      this.initHiddenTextarea(e);\n      this.hiddenTextarea.focus();\n      this.hiddenTextarea.value = this.text;\n      this._updateTextarea();\n      this._saveEditingProps();\n      this._setEditingProps();\n      this._textBeforeEdit = this.text;\n\n      this._tick();\n      this.fire('editing:entered');\n      this._fireSelectionChanged();\n      if (!this.canvas) {\n        return this;\n      }\n      this.canvas.fire('text:editing:entered', { target: this });\n      this.initMouseMoveHandler();\n      this.canvas.requestRenderAll();\n      return this;\n    },\n\n    exitEditingOnOthers: function(canvas) {\n      if (canvas._iTextInstances) {\n        canvas._iTextInstances.forEach(function(obj) {\n          obj.selected = false;\n          if (obj.isEditing) {\n            obj.exitEditing();\n          }\n        });\n      }\n    },\n\n    /**\n     * Initializes \"mousemove\" event handler\n     */\n    initMouseMoveHandler: function() {\n      this.canvas.on('mouse:move', this.mouseMoveHandler);\n    },\n\n    /**\n     * @private\n     */\n    mouseMoveHandler: function(options) {\n      if (!this.__isMousedown || !this.isEditing) {\n        return;\n      }\n\n      var newSelectionStart = this.getSelectionStartFromPointer(options.e),\n          currentStart = this.selectionStart,\n          currentEnd = this.selectionEnd;\n      if (\n        (newSelectionStart !== this.__selectionStartOnMouseDown || currentStart === currentEnd)\n        &&\n        (currentStart === newSelectionStart || currentEnd === newSelectionStart)\n      ) {\n        return;\n      }\n      if (newSelectionStart > this.__selectionStartOnMouseDown) {\n        this.selectionStart = this.__selectionStartOnMouseDown;\n        this.selectionEnd = newSelectionStart;\n      }\n      else {\n        this.selectionStart = newSelectionStart;\n        this.selectionEnd = this.__selectionStartOnMouseDown;\n      }\n      if (this.selectionStart !== currentStart || this.selectionEnd !== currentEnd) {\n        this.restartCursorIfNeeded();\n        this._fireSelectionChanged();\n        this._updateTextarea();\n        this.renderCursorOrSelection();\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setEditingProps: function() {\n      this.hoverCursor = 'text';\n\n      if (this.canvas) {\n        this.canvas.defaultCursor = this.canvas.moveCursor = 'text';\n      }\n\n      this.borderColor = this.editingBorderColor;\n\n      this.hasControls = this.selectable = false;\n      this.lockMovementX = this.lockMovementY = true;\n    },\n\n    /**\n     * convert from textarea to grapheme indexes\n     */\n    fromStringToGraphemeSelection: function(start, end, text) {\n      var smallerTextStart = text.slice(0, start),\n          graphemeStart = fabric.util.string.graphemeSplit(smallerTextStart).length;\n      if (start === end) {\n        return { selectionStart: graphemeStart, selectionEnd: graphemeStart };\n      }\n      var smallerTextEnd = text.slice(start, end),\n          graphemeEnd = fabric.util.string.graphemeSplit(smallerTextEnd).length;\n      return { selectionStart: graphemeStart, selectionEnd: graphemeStart + graphemeEnd };\n    },\n\n    /**\n     * convert from fabric to textarea values\n     */\n    fromGraphemeToStringSelection: function(start, end, _text) {\n      var smallerTextStart = _text.slice(0, start),\n          graphemeStart = smallerTextStart.join('').length;\n      if (start === end) {\n        return { selectionStart: graphemeStart, selectionEnd: graphemeStart };\n      }\n      var smallerTextEnd = _text.slice(start, end),\n          graphemeEnd = smallerTextEnd.join('').length;\n      return { selectionStart: graphemeStart, selectionEnd: graphemeStart + graphemeEnd };\n    },\n\n    /**\n     * @private\n     */\n    _updateTextarea: function() {\n      this.cursorOffsetCache = { };\n      if (!this.hiddenTextarea) {\n        return;\n      }\n      if (!this.inCompositionMode) {\n        var newSelection = this.fromGraphemeToStringSelection(this.selectionStart, this.selectionEnd, this._text);\n        this.hiddenTextarea.selectionStart = newSelection.selectionStart;\n        this.hiddenTextarea.selectionEnd = newSelection.selectionEnd;\n      }\n      this.updateTextareaPosition();\n    },\n\n    /**\n     * @private\n     */\n    updateFromTextArea: function() {\n      if (!this.hiddenTextarea) {\n        return;\n      }\n      this.cursorOffsetCache = { };\n      this.text = this.hiddenTextarea.value;\n      if (this._shouldClearDimensionCache()) {\n        this.initDimensions();\n        this.setCoords();\n      }\n      var newSelection = this.fromStringToGraphemeSelection(\n        this.hiddenTextarea.selectionStart, this.hiddenTextarea.selectionEnd, this.hiddenTextarea.value);\n      this.selectionEnd = this.selectionStart = newSelection.selectionEnd;\n      if (!this.inCompositionMode) {\n        this.selectionStart = newSelection.selectionStart;\n      }\n      this.updateTextareaPosition();\n    },\n\n    /**\n     * @private\n     */\n    updateTextareaPosition: function() {\n      if (this.selectionStart === this.selectionEnd) {\n        var style = this._calcTextareaPosition();\n        this.hiddenTextarea.style.left = style.left;\n        this.hiddenTextarea.style.top = style.top;\n      }\n    },\n\n    /**\n     * @private\n     * @return {Object} style contains style for hiddenTextarea\n     */\n    _calcTextareaPosition: function() {\n      if (!this.canvas) {\n        return { x: 1, y: 1 };\n      }\n      var desiredPostion = this.inCompositionMode ? this.compositionStart : this.selectionStart,\n          boundaries = this._getCursorBoundaries(desiredPostion),\n          cursorLocation = this.get2DCursorLocation(desiredPostion),\n          lineIndex = cursorLocation.lineIndex,\n          charIndex = cursorLocation.charIndex,\n          charHeight = this.getValueOfPropertyAt(lineIndex, charIndex, 'fontSize') * this.lineHeight,\n          leftOffset = boundaries.leftOffset,\n          m = this.calcTransformMatrix(),\n          p = {\n            x: boundaries.left + leftOffset,\n            y: boundaries.top + boundaries.topOffset + charHeight\n          },\n          upperCanvas = this.canvas.upperCanvasEl,\n          maxWidth = upperCanvas.width - charHeight,\n          maxHeight = upperCanvas.height - charHeight;\n\n      p = fabric.util.transformPoint(p, m);\n      p = fabric.util.transformPoint(p, this.canvas.viewportTransform);\n      if (p.x < 0) {\n        p.x = 0;\n      }\n      if (p.x > maxWidth) {\n        p.x = maxWidth;\n      }\n      if (p.y < 0) {\n        p.y = 0;\n      }\n      if (p.y > maxHeight) {\n        p.y = maxHeight;\n      }\n\n      // add canvas offset on document\n      p.x += this.canvas._offset.left;\n      p.y += this.canvas._offset.top;\n\n      return { left: p.x + 'px', top: p.y + 'px', fontSize: charHeight + 'px', charHeight: charHeight };\n    },\n\n    /**\n     * @private\n     */\n    _saveEditingProps: function() {\n      this._savedProps = {\n        hasControls: this.hasControls,\n        borderColor: this.borderColor,\n        lockMovementX: this.lockMovementX,\n        lockMovementY: this.lockMovementY,\n        hoverCursor: this.hoverCursor,\n        defaultCursor: this.canvas && this.canvas.defaultCursor,\n        moveCursor: this.canvas && this.canvas.moveCursor\n      };\n    },\n\n    /**\n     * @private\n     */\n    _restoreEditingProps: function() {\n      if (!this._savedProps) {\n        return;\n      }\n\n      this.hoverCursor = this._savedProps.hoverCursor;\n      this.hasControls = this._savedProps.hasControls;\n      this.borderColor = this._savedProps.borderColor;\n      this.lockMovementX = this._savedProps.lockMovementX;\n      this.lockMovementY = this._savedProps.lockMovementY;\n\n      if (this.canvas) {\n        this.canvas.defaultCursor = this._savedProps.defaultCursor;\n        this.canvas.moveCursor = this._savedProps.moveCursor;\n      }\n    },\n\n    /**\n     * Exits from editing state\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    exitEditing: function() {\n      var isTextChanged = (this._textBeforeEdit !== this.text);\n      this.selected = false;\n      this.isEditing = false;\n      this.selectable = true;\n\n      this.selectionEnd = this.selectionStart;\n\n      if (this.hiddenTextarea) {\n        this.hiddenTextarea.blur && this.hiddenTextarea.blur();\n        this.canvas && this.hiddenTextarea.parentNode.removeChild(this.hiddenTextarea);\n        this.hiddenTextarea = null;\n      }\n\n      this.abortCursorAnimation();\n      this._restoreEditingProps();\n      this._currentCursorOpacity = 0;\n      if (this._shouldClearDimensionCache()) {\n        this.initDimensions();\n        this.setCoords();\n      }\n      this.fire('editing:exited');\n      isTextChanged && this.fire('modified');\n      if (this.canvas) {\n        this.canvas.off('mouse:move', this.mouseMoveHandler);\n        this.canvas.fire('text:editing:exited', { target: this });\n        isTextChanged && this.canvas.fire('object:modified', { target: this });\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _removeExtraneousStyles: function() {\n      for (var prop in this.styles) {\n        if (!this._textLines[prop]) {\n          delete this.styles[prop];\n        }\n      }\n    },\n\n    /**\n     * remove and reflow a style block from start to end.\n     * @param {Number} start linear start position for removal (included in removal)\n     * @param {Number} end linear end position for removal ( excluded from removal )\n     */\n    removeStyleFromTo: function(start, end) {\n      var cursorStart = this.get2DCursorLocation(start, true),\n          cursorEnd = this.get2DCursorLocation(end, true),\n          lineStart = cursorStart.lineIndex,\n          charStart = cursorStart.charIndex,\n          lineEnd = cursorEnd.lineIndex,\n          charEnd = cursorEnd.charIndex,\n          i, styleObj;\n      if (lineStart !== lineEnd) {\n        // step1 remove the trailing of lineStart\n        if (this.styles[lineStart]) {\n          for (i = charStart; i < this._unwrappedTextLines[lineStart].length; i++) {\n            delete this.styles[lineStart][i];\n          }\n        }\n        // step2 move the trailing of lineEnd to lineStart if needed\n        if (this.styles[lineEnd]) {\n          for (i = charEnd; i < this._unwrappedTextLines[lineEnd].length; i++) {\n            styleObj = this.styles[lineEnd][i];\n            if (styleObj) {\n              this.styles[lineStart] || (this.styles[lineStart] = { });\n              this.styles[lineStart][charStart + i - charEnd] = styleObj;\n            }\n          }\n        }\n        // step3 detects lines will be completely removed.\n        for (i = lineStart + 1; i <= lineEnd; i++) {\n          delete this.styles[i];\n        }\n        // step4 shift remaining lines.\n        this.shiftLineStyles(lineEnd, lineStart - lineEnd);\n      }\n      else {\n        // remove and shift left on the same line\n        if (this.styles[lineStart]) {\n          styleObj = this.styles[lineStart];\n          var diff = charEnd - charStart, numericChar, _char;\n          for (i = charStart; i < charEnd; i++) {\n            delete styleObj[i];\n          }\n          for (_char in this.styles[lineStart]) {\n            numericChar = parseInt(_char, 10);\n            if (numericChar >= charEnd) {\n              styleObj[numericChar - diff] = styleObj[_char];\n              delete styleObj[_char];\n            }\n          }\n        }\n      }\n    },\n\n    /**\n     * Shifts line styles up or down\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} offset Can any number?\n     */\n    shiftLineStyles: function(lineIndex, offset) {\n      // shift all line styles by offset upward or downward\n      // do not clone deep. we need new array, not new style objects\n      var clonedStyles = clone(this.styles);\n      for (var line in this.styles) {\n        var numericLine = parseInt(line, 10);\n        if (numericLine > lineIndex) {\n          this.styles[numericLine + offset] = clonedStyles[numericLine];\n          if (!clonedStyles[numericLine - offset]) {\n            delete this.styles[numericLine];\n          }\n        }\n      }\n    },\n\n    restartCursorIfNeeded: function() {\n      if (!this._currentTickState || this._currentTickState.isAborted\n        || !this._currentTickCompleteState || this._currentTickCompleteState.isAborted\n      ) {\n        this.initDelayedCursor();\n      }\n    },\n\n    /**\n     * Inserts new style object\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Number} qty number of lines to add\n     * @param {Array} copiedStyle Array of objects styles\n     */\n    insertNewlineStyleObject: function(lineIndex, charIndex, qty, copiedStyle) {\n      var currentCharStyle,\n          newLineStyles = {},\n          somethingAdded = false;\n\n      qty || (qty = 1);\n      this.shiftLineStyles(lineIndex, qty);\n      if (this.styles[lineIndex]) {\n        currentCharStyle = this.styles[lineIndex][charIndex === 0 ? charIndex : charIndex - 1];\n      }\n\n      // we clone styles of all chars\n      // after cursor onto the current line\n      for (var index in this.styles[lineIndex]) {\n        var numIndex = parseInt(index, 10);\n        if (numIndex >= charIndex) {\n          somethingAdded = true;\n          newLineStyles[numIndex - charIndex] = this.styles[lineIndex][index];\n          // remove lines from the previous line since they're on a new line now\n          delete this.styles[lineIndex][index];\n        }\n      }\n      if (somethingAdded) {\n        this.styles[lineIndex + qty] = newLineStyles;\n      }\n      else {\n        delete this.styles[lineIndex + qty];\n      }\n      // for the other lines\n      // we clone current char style onto the next (otherwise empty) line\n      while (qty > 1) {\n        qty--;\n        if (copiedStyle && copiedStyle[qty]) {\n          this.styles[lineIndex + qty] = { 0: clone(copiedStyle[qty]) };\n        }\n        else if (currentCharStyle) {\n          this.styles[lineIndex + qty] = { 0: clone(currentCharStyle) };\n        }\n        else {\n          delete this.styles[lineIndex + qty];\n        }\n      }\n      this._forceClearCache = true;\n    },\n\n    /**\n     * Inserts style object for a given line/char index\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Number} quantity number Style object to insert, if given\n     * @param {Array} copiedStyle array of style objecs\n     */\n    insertCharStyleObject: function(lineIndex, charIndex, quantity, copiedStyle) {\n      if (!this.styles) {\n        this.styles = {};\n      }\n      var currentLineStyles       = this.styles[lineIndex],\n          currentLineStylesCloned = currentLineStyles ? clone(currentLineStyles) : {};\n\n      quantity || (quantity = 1);\n      // shift all char styles by quantity forward\n      // 0,1,2,3 -> (charIndex=2) -> 0,1,3,4 -> (insert 2) -> 0,1,2,3,4\n      for (var index in currentLineStylesCloned) {\n        var numericIndex = parseInt(index, 10);\n        if (numericIndex >= charIndex) {\n          currentLineStyles[numericIndex + quantity] = currentLineStylesCloned[numericIndex];\n          // only delete the style if there was nothing moved there\n          if (!currentLineStylesCloned[numericIndex - quantity]) {\n            delete currentLineStyles[numericIndex];\n          }\n        }\n      }\n      this._forceClearCache = true;\n      if (copiedStyle) {\n        while (quantity--) {\n          if (!Object.keys(copiedStyle[quantity]).length) {\n            continue;\n          }\n          if (!this.styles[lineIndex]) {\n            this.styles[lineIndex] = {};\n          }\n          this.styles[lineIndex][charIndex + quantity] = clone(copiedStyle[quantity]);\n        }\n        return;\n      }\n      if (!currentLineStyles) {\n        return;\n      }\n      var newStyle = currentLineStyles[charIndex ? charIndex - 1 : 1];\n      while (newStyle && quantity--) {\n        this.styles[lineIndex][charIndex + quantity] = clone(newStyle);\n      }\n    },\n\n    /**\n     * Inserts style object(s)\n     * @param {Array} insertedText Characters at the location where style is inserted\n     * @param {Number} start cursor index for inserting style\n     * @param {Array} [copiedStyle] array of style objects to insert.\n     */\n    insertNewStyleBlock: function(insertedText, start, copiedStyle) {\n      var cursorLoc = this.get2DCursorLocation(start, true),\n          addedLines = [0], linesLenght = 0;\n      for (var i = 0; i < insertedText.length; i++) {\n        if (insertedText[i] === '\\n') {\n          linesLenght++;\n          addedLines[linesLenght] = 0;\n        }\n        else {\n          addedLines[linesLenght]++;\n        }\n      }\n      if (addedLines[0] > 0) {\n        this.insertCharStyleObject(cursorLoc.lineIndex, cursorLoc.charIndex, addedLines[0], copiedStyle);\n        copiedStyle = copiedStyle && copiedStyle.slice(addedLines[0] + 1);\n      }\n      linesLenght && this.insertNewlineStyleObject(\n        cursorLoc.lineIndex, cursorLoc.charIndex + addedLines[0], linesLenght);\n      for (var i = 1; i < linesLenght; i++) {\n        if (addedLines[i] > 0) {\n          this.insertCharStyleObject(cursorLoc.lineIndex + i, 0, addedLines[i], copiedStyle);\n        }\n        else if (copiedStyle) {\n          this.styles[cursorLoc.lineIndex + i][0] = copiedStyle[0];\n        }\n        copiedStyle = copiedStyle && copiedStyle.slice(addedLines[i] + 1);\n      }\n      // we use i outside the loop to get it like linesLength\n      if (addedLines[i] > 0) {\n        this.insertCharStyleObject(cursorLoc.lineIndex + i, 0, addedLines[i], copiedStyle);\n      }\n    },\n\n    /**\n     * Set the selectionStart and selectionEnd according to the ne postion of cursor\n     * mimic the key - mouse navigation when shift is pressed.\n     */\n    setSelectionStartEndWithShift: function(start, end, newSelection) {\n      if (newSelection <= start) {\n        if (end === start) {\n          this._selectionDirection = 'left';\n        }\n        else if (this._selectionDirection === 'right') {\n          this._selectionDirection = 'left';\n          this.selectionEnd = start;\n        }\n        this.selectionStart = newSelection;\n      }\n      else if (newSelection > start && newSelection < end) {\n        if (this._selectionDirection === 'right') {\n          this.selectionEnd = newSelection;\n        }\n        else {\n          this.selectionStart = newSelection;\n        }\n      }\n      else {\n        // newSelection is > selection start and end\n        if (end === start) {\n          this._selectionDirection = 'right';\n        }\n        else if (this._selectionDirection === 'left') {\n          this._selectionDirection = 'right';\n          this.selectionStart = end;\n        }\n        this.selectionEnd = newSelection;\n      }\n    },\n\n    setSelectionInBoundaries: function() {\n      var length = this.text.length;\n      if (this.selectionStart > length) {\n        this.selectionStart = length;\n      }\n      else if (this.selectionStart < 0) {\n        this.selectionStart = 0;\n      }\n      if (this.selectionEnd > length) {\n        this.selectionEnd = length;\n      }\n      else if (this.selectionEnd < 0) {\n        this.selectionEnd = 0;\n      }\n    }\n  });\n})();\n\n\nfabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n  /**\n   * Initializes \"dbclick\" event handler\n   */\n  initDoubleClickSimulation: function() {\n\n    // for double click\n    this.__lastClickTime = +new Date();\n\n    // for triple click\n    this.__lastLastClickTime = +new Date();\n\n    this.__lastPointer = { };\n\n    this.on('mousedown', this.onMouseDown.bind(this));\n  },\n\n  onMouseDown: function(options) {\n\n    this.__newClickTime = +new Date();\n    var newPointer = this.canvas.getPointer(options.e);\n\n    if (this.isTripleClick(newPointer, options.e)) {\n      this.fire('tripleclick', options);\n      this._stopEvent(options.e);\n    }\n    this.__lastLastClickTime = this.__lastClickTime;\n    this.__lastClickTime = this.__newClickTime;\n    this.__lastPointer = newPointer;\n    this.__lastIsEditing = this.isEditing;\n    this.__lastSelected = this.selected;\n  },\n\n  isTripleClick: function(newPointer) {\n    return this.__newClickTime - this.__lastClickTime < 500 &&\n        this.__lastClickTime - this.__lastLastClickTime < 500 &&\n        this.__lastPointer.x === newPointer.x &&\n        this.__lastPointer.y === newPointer.y;\n  },\n\n  /**\n   * @private\n   */\n  _stopEvent: function(e) {\n    e.preventDefault && e.preventDefault();\n    e.stopPropagation && e.stopPropagation();\n  },\n\n  /**\n   * Initializes event handlers related to cursor or selection\n   */\n  initCursorSelectionHandlers: function() {\n    this.initMousedownHandler();\n    this.initMouseupHandler();\n    this.initClicks();\n  },\n\n  /**\n   * Initializes double and triple click event handlers\n   */\n  initClicks: function() {\n    this.on('mousedblclick', function(options) {\n      this.selectWord(this.getSelectionStartFromPointer(options.e));\n    });\n    this.on('tripleclick', function(options) {\n      this.selectLine(this.getSelectionStartFromPointer(options.e));\n    });\n  },\n\n  /**\n   * Default event handler for the basic functionalities needed on _mouseDown\n   * can be overridden to do something different.\n   * Scope of this implementation is: find the click position, set selectionStart\n   * find selectionEnd, initialize the drawing of either cursor or selection area\n   */\n  _mouseDownHandler: function(options) {\n    if (!this.canvas || !this.editable || (options.e.button && options.e.button !== 1)) {\n      return;\n    }\n    var pointer = this.canvas.getPointer(options.e);\n\n    this.__mousedownX = pointer.x;\n    this.__mousedownY = pointer.y;\n    this.__isMousedown = true;\n\n    if (this.selected) {\n      this.setCursorByClick(options.e);\n    }\n\n    if (this.isEditing) {\n      this.__selectionStartOnMouseDown = this.selectionStart;\n      if (this.selectionStart === this.selectionEnd) {\n        this.abortCursorAnimation();\n      }\n      this.renderCursorOrSelection();\n    }\n  },\n\n  /**\n   * Initializes \"mousedown\" event handler\n   */\n  initMousedownHandler: function() {\n    this.on('mousedown', this._mouseDownHandler);\n  },\n\n  /**\n   * @private\n   */\n  _isObjectMoved: function(e) {\n    var pointer = this.canvas.getPointer(e);\n\n    return this.__mousedownX !== pointer.x ||\n           this.__mousedownY !== pointer.y;\n  },\n\n  /**\n   * Initializes \"mouseup\" event handler\n   */\n  initMouseupHandler: function() {\n    this.on('mouseup', function(options) {\n      this.__isMousedown = false;\n      if (!this.editable || this._isObjectMoved(options.e) || (options.e.button && options.e.button !== 1)) {\n        return;\n      }\n\n      if (this.__lastSelected && !this.__corner) {\n        this.enterEditing(options.e);\n        if (this.selectionStart === this.selectionEnd) {\n          this.initDelayedCursor(true);\n        }\n        else {\n          this.renderCursorOrSelection();\n        }\n      }\n      this.selected = true;\n    });\n  },\n\n  /**\n   * Changes cursor location in a text depending on passed pointer (x/y) object\n   * @param {Event} e Event object\n   */\n  setCursorByClick: function(e) {\n    var newSelection = this.getSelectionStartFromPointer(e),\n        start = this.selectionStart, end = this.selectionEnd;\n    if (e.shiftKey) {\n      this.setSelectionStartEndWithShift(start, end, newSelection);\n    }\n    else {\n      this.selectionStart = newSelection;\n      this.selectionEnd = newSelection;\n    }\n    if (this.isEditing) {\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Returns index of a character corresponding to where an object was clicked\n   * @param {Event} e Event object\n   * @return {Number} Index of a character\n   */\n  getSelectionStartFromPointer: function(e) {\n    var mouseOffset = this.getLocalPointer(e),\n        prevWidth = 0,\n        width = 0,\n        height = 0,\n        charIndex = 0,\n        lineIndex = 0,\n        lineLeftOffset,\n        line;\n\n    for (var i = 0, len = this._textLines.length; i < len; i++) {\n      if (height <= mouseOffset.y) {\n        height += this.getHeightOfLine(i) * this.scaleY;\n        lineIndex = i;\n        if (i > 0) {\n          charIndex += this._textLines[i - 1].length + 1;\n        }\n      }\n      else {\n        break;\n      }\n    }\n    lineLeftOffset = this._getLineLeftOffset(lineIndex);\n    width = lineLeftOffset * this.scaleX;\n    line = this._textLines[lineIndex];\n    for (var j = 0, jlen = line.length; j < jlen; j++) {\n      prevWidth = width;\n      // i removed something about flipX here, check.\n      width += this.__charBounds[lineIndex][j].kernedWidth * this.scaleX;\n      if (width <= mouseOffset.x) {\n        charIndex++;\n      }\n      else {\n        break;\n      }\n    }\n    return this._getNewSelectionStartFromOffset(mouseOffset, prevWidth, width, charIndex, jlen);\n  },\n\n  /**\n   * @private\n   */\n  _getNewSelectionStartFromOffset: function(mouseOffset, prevWidth, width, index, jlen) {\n    // we need Math.abs because when width is after the last char, the offset is given as 1, while is 0\n    var distanceBtwLastCharAndCursor = mouseOffset.x - prevWidth,\n        distanceBtwNextCharAndCursor = width - mouseOffset.x,\n        offset = distanceBtwNextCharAndCursor > distanceBtwLastCharAndCursor ||\n          distanceBtwNextCharAndCursor < 0 ? 0 : 1,\n        newSelectionStart = index + offset;\n    // if object is horizontally flipped, mirror cursor location from the end\n    if (this.flipX) {\n      newSelectionStart = jlen - newSelectionStart;\n    }\n\n    if (newSelectionStart > this._text.length) {\n      newSelectionStart = this._text.length;\n    }\n\n    return newSelectionStart;\n  }\n});\n\n\nfabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\n  /**\n   * Initializes hidden textarea (needed to bring up keyboard in iOS)\n   */\n  initHiddenTextarea: function() {\n    this.hiddenTextarea = fabric.document.createElement('textarea');\n    this.hiddenTextarea.setAttribute('autocapitalize', 'off');\n    this.hiddenTextarea.setAttribute('autocorrect', 'off');\n    this.hiddenTextarea.setAttribute('autocomplete', 'off');\n    this.hiddenTextarea.setAttribute('spellcheck', 'false');\n    this.hiddenTextarea.setAttribute('data-fabric-hiddentextarea', '');\n    this.hiddenTextarea.setAttribute('wrap', 'off');\n    var style = this._calcTextareaPosition();\n    this.hiddenTextarea.style.cssText = 'position: absolute; top: ' + style.top +\n    '; left: ' + style.left + '; z-index: -999; opacity: 0; width: 1px; height: 1px; font-size: 1px;' +\n    ' line-height: 1px; paddingｰtop: ' + style.fontSize + ';';\n    fabric.document.body.appendChild(this.hiddenTextarea);\n\n    fabric.util.addListener(this.hiddenTextarea, 'keydown', this.onKeyDown.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'keyup', this.onKeyUp.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'input', this.onInput.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'copy', this.copy.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'cut', this.copy.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'paste', this.paste.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionstart', this.onCompositionStart.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionupdate', this.onCompositionUpdate.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionend', this.onCompositionEnd.bind(this));\n\n    if (!this._clickHandlerInitialized && this.canvas) {\n      fabric.util.addListener(this.canvas.upperCanvasEl, 'click', this.onClick.bind(this));\n      this._clickHandlerInitialized = true;\n    }\n  },\n\n  /**\n   * For functionalities on keyDown\n   * Map a special key to a function of the instance/prototype\n   * If you need different behaviour for ESC or TAB or arrows, you have to change\n   * this map setting the name of a function that you build on the fabric.Itext or\n   * your prototype.\n   * the map change will affect all Instances unless you need for only some text Instances\n   * in that case you have to clone this object and assign your Instance.\n   * this.keysMap = fabric.util.object.clone(this.keysMap);\n   * The function must be in fabric.Itext.prototype.myFunction And will receive event as args[0]\n   */\n  keysMap: {\n    9:  'exitEditing',\n    27: 'exitEditing',\n    33: 'moveCursorUp',\n    34: 'moveCursorDown',\n    35: 'moveCursorRight',\n    36: 'moveCursorLeft',\n    37: 'moveCursorLeft',\n    38: 'moveCursorUp',\n    39: 'moveCursorRight',\n    40: 'moveCursorDown',\n  },\n\n  /**\n   * For functionalities on keyUp + ctrl || cmd\n   */\n  ctrlKeysMapUp: {\n    67: 'copy',\n    88: 'cut'\n  },\n\n  /**\n   * For functionalities on keyDown + ctrl || cmd\n   */\n  ctrlKeysMapDown: {\n    65: 'selectAll'\n  },\n\n  onClick: function() {\n    // No need to trigger click event here, focus is enough to have the keyboard appear on Android\n    this.hiddenTextarea && this.hiddenTextarea.focus();\n  },\n\n  /**\n   * Handles keyup event\n   * @param {Event} e Event object\n   */\n  onKeyDown: function(e) {\n    if (!this.isEditing || this.inCompositionMode) {\n      return;\n    }\n    if (e.keyCode in this.keysMap) {\n      this[this.keysMap[e.keyCode]](e);\n    }\n    else if ((e.keyCode in this.ctrlKeysMapDown) && (e.ctrlKey || e.metaKey)) {\n      this[this.ctrlKeysMapDown[e.keyCode]](e);\n    }\n    else {\n      return;\n    }\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    if (e.keyCode >= 33 && e.keyCode <= 40) {\n      // if i press an arrow key just update selection\n      this.clearContextTop();\n      this.renderCursorOrSelection();\n    }\n    else {\n      this.canvas && this.canvas.requestRenderAll();\n    }\n  },\n\n  /**\n   * Handles keyup event\n   * We handle KeyUp because ie11 and edge have difficulties copy/pasting\n   * if a copy/cut event fired, keyup is dismissed\n   * @param {Event} e Event object\n   */\n  onKeyUp: function(e) {\n    if (!this.isEditing || this._copyDone || this.inCompositionMode) {\n      this._copyDone = false;\n      return;\n    }\n    if ((e.keyCode in this.ctrlKeysMapUp) && (e.ctrlKey || e.metaKey)) {\n      this[this.ctrlKeysMapUp[e.keyCode]](e);\n    }\n    else {\n      return;\n    }\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    this.canvas && this.canvas.requestRenderAll();\n  },\n\n  /**\n   * Handles onInput event\n   * @param {Event} e Event object\n   */\n  onInput: function(e) {\n    var fromPaste = this.fromPaste;\n    this.fromPaste = false;\n    e && e.stopPropagation();\n    if (!this.isEditing) {\n      return;\n    }\n    // decisions about style changes.\n    var nextText = this._splitTextIntoLines(this.hiddenTextarea.value).graphemeText,\n        charCount = this._text.length,\n        nextCharCount = nextText.length,\n        removedText, insertedText,\n        charDiff = nextCharCount - charCount;\n    if (this.hiddenTextarea.value === '') {\n      this.styles = { };\n      this.updateFromTextArea();\n      this.fire('changed');\n      if (this.canvas) {\n        this.canvas.fire('text:changed', { target: this });\n        this.canvas.requestRenderAll();\n      }\n      return;\n    }\n\n    var textareaSelection = this.fromStringToGraphemeSelection(\n      this.hiddenTextarea.selectionStart,\n      this.hiddenTextarea.selectionEnd,\n      this.hiddenTextarea.value\n    );\n    var backDelete = this.selectionStart > textareaSelection.selectionStart;\n\n    if (this.selectionStart !== this.selectionEnd) {\n      removedText = this._text.slice(this.selectionStart, this.selectionEnd);\n      charDiff += this.selectionEnd - this.selectionStart;\n    }\n    else if (nextCharCount < charCount) {\n      if (backDelete) {\n        removedText = this._text.slice(this.selectionEnd + charDiff, this.selectionEnd);\n      }\n      else {\n        removedText = this._text.slice(this.selectionStart, this.selectionStart - charDiff);\n      }\n    }\n    insertedText = nextText.slice(textareaSelection.selectionEnd - charDiff, textareaSelection.selectionEnd);\n    if (removedText && removedText.length) {\n      if (this.selectionStart !== this.selectionEnd) {\n        this.removeStyleFromTo(this.selectionStart, this.selectionEnd);\n      }\n      else if (backDelete) {\n        // detect differencies between forwardDelete and backDelete\n        this.removeStyleFromTo(this.selectionEnd - removedText.length, this.selectionEnd);\n      }\n      else {\n        this.removeStyleFromTo(this.selectionEnd, this.selectionEnd + removedText.length);\n      }\n    }\n    if (insertedText.length) {\n      if (fromPaste && insertedText.join('') === fabric.copiedText) {\n        this.insertNewStyleBlock(insertedText, this.selectionStart, fabric.copiedTextStyle);\n      }\n      else {\n        this.insertNewStyleBlock(insertedText, this.selectionStart);\n      }\n    }\n    this.updateFromTextArea();\n    this.fire('changed');\n    if (this.canvas) {\n      this.canvas.fire('text:changed', { target: this });\n      this.canvas.requestRenderAll();\n    }\n  },\n  /**\n   * Composition start\n   */\n  onCompositionStart: function() {\n    this.inCompositionMode = true;\n  },\n\n  /**\n   * Composition end\n   */\n  onCompositionEnd: function() {\n    this.inCompositionMode = false;\n  },\n\n  // /**\n  //  * Composition update\n  //  */\n  onCompositionUpdate: function(e) {\n    this.compositionStart = e.target.selectionStart;\n    this.compositionEnd = e.target.selectionEnd;\n    this.updateTextareaPosition();\n  },\n\n  /**\n   * Copies selected text\n   * @param {Event} e Event object\n   */\n  copy: function() {\n    if (this.selectionStart === this.selectionEnd) {\n      //do not cut-copy if no selection\n      return;\n    }\n\n    fabric.copiedText = this.getSelectedText();\n    fabric.copiedTextStyle = this.getSelectionStyles(this.selectionStart, this.selectionEnd, true);\n    this._copyDone = true;\n  },\n\n  /**\n   * Pastes text\n   * @param {Event} e Event object\n   */\n  paste: function() {\n    this.fromPaste = true;\n  },\n\n  /**\n   * @private\n   * @param {Event} e Event object\n   * @return {Object} Clipboard data object\n   */\n  _getClipboardData: function(e) {\n    return (e && e.clipboardData) || fabric.window.clipboardData;\n  },\n\n  /**\n   * Finds the width in pixels before the cursor on the same line\n   * @private\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @return {Number} widthBeforeCursor width before cursor\n   */\n  _getWidthBeforeCursor: function(lineIndex, charIndex) {\n    var widthBeforeCursor = this._getLineLeftOffset(lineIndex), bound;\n\n    if (charIndex > 0) {\n      bound = this.__charBounds[lineIndex][charIndex - 1];\n      widthBeforeCursor += bound.left + bound.width;\n    }\n    return widthBeforeCursor;\n  },\n\n  /**\n   * Gets start offset of a selection\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getDownCursorOffset: function(e, isRight) {\n    var selectionProp = this._getSelectionForOffset(e, isRight),\n        cursorLocation = this.get2DCursorLocation(selectionProp),\n        lineIndex = cursorLocation.lineIndex;\n    // if on last line, down cursor goes to end of line\n    if (lineIndex === this._textLines.length - 1 || e.metaKey || e.keyCode === 34) {\n      // move to the end of a text\n      return this._text.length - selectionProp;\n    }\n    var charIndex = cursorLocation.charIndex,\n        widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n        indexOnOtherLine = this._getIndexOnLine(lineIndex + 1, widthBeforeCursor),\n        textAfterCursor = this._textLines[lineIndex].slice(charIndex);\n    return textAfterCursor.length + indexOnOtherLine + 2;\n  },\n\n  /**\n   * private\n   * Helps finding if the offset should be counted from Start or End\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  _getSelectionForOffset: function(e, isRight) {\n    if (e.shiftKey && this.selectionStart !== this.selectionEnd && isRight) {\n      return this.selectionEnd;\n    }\n    else {\n      return this.selectionStart;\n    }\n  },\n\n  /**\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getUpCursorOffset: function(e, isRight) {\n    var selectionProp = this._getSelectionForOffset(e, isRight),\n        cursorLocation = this.get2DCursorLocation(selectionProp),\n        lineIndex = cursorLocation.lineIndex;\n    if (lineIndex === 0 || e.metaKey || e.keyCode === 33) {\n      // if on first line, up cursor goes to start of line\n      return -selectionProp;\n    }\n    var charIndex = cursorLocation.charIndex,\n        widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n        indexOnOtherLine = this._getIndexOnLine(lineIndex - 1, widthBeforeCursor),\n        textBeforeCursor = this._textLines[lineIndex].slice(0, charIndex);\n    // return a negative offset\n    return -this._textLines[lineIndex - 1].length + indexOnOtherLine - textBeforeCursor.length;\n  },\n\n  /**\n   * for a given width it founds the matching character.\n   * @private\n   */\n  _getIndexOnLine: function(lineIndex, width) {\n\n    var line = this._textLines[lineIndex],\n        lineLeftOffset = this._getLineLeftOffset(lineIndex),\n        widthOfCharsOnLine = lineLeftOffset,\n        indexOnLine = 0, charWidth, foundMatch;\n\n    for (var j = 0, jlen = line.length; j < jlen; j++) {\n      charWidth = this.__charBounds[lineIndex][j].width;\n      widthOfCharsOnLine += charWidth;\n      if (widthOfCharsOnLine > width) {\n        foundMatch = true;\n        var leftEdge = widthOfCharsOnLine - charWidth,\n            rightEdge = widthOfCharsOnLine,\n            offsetFromLeftEdge = Math.abs(leftEdge - width),\n            offsetFromRightEdge = Math.abs(rightEdge - width);\n\n        indexOnLine = offsetFromRightEdge < offsetFromLeftEdge ? j : (j - 1);\n        break;\n      }\n    }\n\n    // reached end\n    if (!foundMatch) {\n      indexOnLine = line.length - 1;\n    }\n\n    return indexOnLine;\n  },\n\n\n  /**\n   * Moves cursor down\n   * @param {Event} e Event object\n   */\n  moveCursorDown: function(e) {\n    if (this.selectionStart >= this._text.length && this.selectionEnd >= this._text.length) {\n      return;\n    }\n    this._moveCursorUpOrDown('Down', e);\n  },\n\n  /**\n   * Moves cursor up\n   * @param {Event} e Event object\n   */\n  moveCursorUp: function(e) {\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n      return;\n    }\n    this._moveCursorUpOrDown('Up', e);\n  },\n\n  /**\n   * Moves cursor up or down, fires the events\n   * @param {String} direction 'Up' or 'Down'\n   * @param {Event} e Event object\n   */\n  _moveCursorUpOrDown: function(direction, e) {\n    // getUpCursorOffset\n    // getDownCursorOffset\n    var action = 'get' + direction + 'CursorOffset',\n        offset = this[action](e, this._selectionDirection === 'right');\n    if (e.shiftKey) {\n      this.moveCursorWithShift(offset);\n    }\n    else {\n      this.moveCursorWithoutShift(offset);\n    }\n    if (offset !== 0) {\n      this.setSelectionInBoundaries();\n      this.abortCursorAnimation();\n      this._currentCursorOpacity = 1;\n      this.initDelayedCursor();\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Moves cursor with shift\n   * @param {Number} offset\n   */\n  moveCursorWithShift: function(offset) {\n    var newSelection = this._selectionDirection === 'left'\n      ? this.selectionStart + offset\n      : this.selectionEnd + offset;\n    this.setSelectionStartEndWithShift(this.selectionStart, this.selectionEnd, newSelection);\n    return offset !== 0;\n  },\n\n  /**\n   * Moves cursor up without shift\n   * @param {Number} offset\n   */\n  moveCursorWithoutShift: function(offset) {\n    if (offset < 0) {\n      this.selectionStart += offset;\n      this.selectionEnd = this.selectionStart;\n    }\n    else {\n      this.selectionEnd += offset;\n      this.selectionStart = this.selectionEnd;\n    }\n    return offset !== 0;\n  },\n\n  /**\n   * Moves cursor left\n   * @param {Event} e Event object\n   */\n  moveCursorLeft: function(e) {\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n      return;\n    }\n    this._moveCursorLeftOrRight('Left', e);\n  },\n\n  /**\n   * @private\n   * @return {Boolean} true if a change happened\n   */\n  _move: function(e, prop, direction) {\n    var newValue;\n    if (e.altKey) {\n      newValue = this['findWordBoundary' + direction](this[prop]);\n    }\n    else if (e.metaKey || e.keyCode === 35 ||  e.keyCode === 36 ) {\n      newValue = this['findLineBoundary' + direction](this[prop]);\n    }\n    else {\n      this[prop] += direction === 'Left' ? -1 : 1;\n      return true;\n    }\n    if (typeof newValue !== undefined && this[prop] !== newValue) {\n      this[prop] = newValue;\n      return true;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _moveLeft: function(e, prop) {\n    return this._move(e, prop, 'Left');\n  },\n\n  /**\n   * @private\n   */\n  _moveRight: function(e, prop) {\n    return this._move(e, prop, 'Right');\n  },\n\n  /**\n   * Moves cursor left without keeping selection\n   * @param {Event} e\n   */\n  moveCursorLeftWithoutShift: function(e) {\n    var change = true;\n    this._selectionDirection = 'left';\n\n    // only move cursor when there is no selection,\n    // otherwise we discard it, and leave cursor on same place\n    if (this.selectionEnd === this.selectionStart && this.selectionStart !== 0) {\n      change = this._moveLeft(e, 'selectionStart');\n\n    }\n    this.selectionEnd = this.selectionStart;\n    return change;\n  },\n\n  /**\n   * Moves cursor left while keeping selection\n   * @param {Event} e\n   */\n  moveCursorLeftWithShift: function(e) {\n    if (this._selectionDirection === 'right' && this.selectionStart !== this.selectionEnd) {\n      return this._moveLeft(e, 'selectionEnd');\n    }\n    else if (this.selectionStart !== 0){\n      this._selectionDirection = 'left';\n      return this._moveLeft(e, 'selectionStart');\n    }\n  },\n\n  /**\n   * Moves cursor right\n   * @param {Event} e Event object\n   */\n  moveCursorRight: function(e) {\n    if (this.selectionStart >= this._text.length && this.selectionEnd >= this._text.length) {\n      return;\n    }\n    this._moveCursorLeftOrRight('Right', e);\n  },\n\n  /**\n   * Moves cursor right or Left, fires event\n   * @param {String} direction 'Left', 'Right'\n   * @param {Event} e Event object\n   */\n  _moveCursorLeftOrRight: function(direction, e) {\n    var actionName = 'moveCursor' + direction + 'With';\n    this._currentCursorOpacity = 1;\n\n    if (e.shiftKey) {\n      actionName += 'Shift';\n    }\n    else {\n      actionName += 'outShift';\n    }\n    if (this[actionName](e)) {\n      this.abortCursorAnimation();\n      this.initDelayedCursor();\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Moves cursor right while keeping selection\n   * @param {Event} e\n   */\n  moveCursorRightWithShift: function(e) {\n    if (this._selectionDirection === 'left' && this.selectionStart !== this.selectionEnd) {\n      return this._moveRight(e, 'selectionStart');\n    }\n    else if (this.selectionEnd !== this._text.length) {\n      this._selectionDirection = 'right';\n      return this._moveRight(e, 'selectionEnd');\n    }\n  },\n\n  /**\n   * Moves cursor right without keeping selection\n   * @param {Event} e Event object\n   */\n  moveCursorRightWithoutShift: function(e) {\n    var changed = true;\n    this._selectionDirection = 'right';\n\n    if (this.selectionStart === this.selectionEnd) {\n      changed = this._moveRight(e, 'selectionStart');\n      this.selectionEnd = this.selectionStart;\n    }\n    else {\n      this.selectionStart = this.selectionEnd;\n    }\n    return changed;\n  },\n\n  /**\n   * Removes characters from start/end\n   * start/end ar per grapheme position in _text array.\n   *\n   * @param {Number} start\n   * @param {Number} end default to start + 1\n   */\n  removeChars: function(start, end) {\n    if (typeof end === 'undefined') {\n      end = start + 1;\n    }\n    this.removeStyleFromTo(start, end);\n    this._text.splice(start, end - start);\n    this.text = this._text.join('');\n    this.set('dirty', true);\n    if (this._shouldClearDimensionCache()) {\n      this.initDimensions();\n      this.setCoords();\n    }\n    this._removeExtraneousStyles();\n  },\n\n  /**\n   * insert characters at start position, before start position.\n   * start  equal 1 it means the text get inserted between actual grapheme 0 and 1\n   * if style array is provided, it must be as the same length of text in graphemes\n   * if end is provided and is bigger than start, old text is replaced.\n   * start/end ar per grapheme position in _text array.\n   *\n   * @param {String} text text to insert\n   * @param {Array} style array of style objects\n   * @param {Number} start\n   * @param {Number} end default to start + 1\n   */\n  insertChars: function(text, style, start, end) {\n    if (typeof end === 'undefined') {\n      end = start;\n    }\n    if (end > start) {\n      this.removeStyleFromTo(start, end);\n    }\n    var graphemes = fabric.util.string.graphemeSplit(text);\n    this.insertNewStyleBlock(graphemes, start, style);\n    this._text = [].concat(this._text.slice(0, start), graphemes, this._text.slice(end));\n    this.text = this._text.join('');\n    this.set('dirty', true);\n    if (this._shouldClearDimensionCache()) {\n      this.initDimensions();\n      this.setCoords();\n    }\n    this._removeExtraneousStyles();\n  },\n\n});\n\n\n/* _TO_SVG_START_ */\n(function() {\n  var toFixed = fabric.util.toFixed;\n\n  fabric.util.object.extend(fabric.Text.prototype, /** @lends fabric.Text.prototype */ {\n\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(),\n          offsets = this._getSVGLeftTopOffsets(),\n          textAndBg = this._getSVGTextAndBg(offsets.textTop, offsets.textLeft);\n      this._wrapSVGTextAndBg(markup, textAndBg);\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n\n    /**\n     * @private\n     */\n    _getSVGLeftTopOffsets: function() {\n      return {\n        textLeft: -this.width / 2,\n        textTop: -this.height / 2,\n        lineTop: this.getHeightOfLine(0)\n      };\n    },\n\n    /**\n     * @private\n     */\n    _wrapSVGTextAndBg: function(markup, textAndBg) {\n      var noShadow = true, filter = this.getSvgFilter(),\n          style = filter === '' ? '' : ' style=\"' + filter + '\"',\n          textDecoration = this.getSvgTextDecoration(this);\n      markup.push(\n        '\\t<g ', this.getSvgId(), 'transform=\"', this.getSvgTransform(), this.getSvgTransformMatrix(), '\"',\n        style, '>\\n',\n        textAndBg.textBgRects.join(''),\n        '\\t\\t<text xml:space=\"preserve\" ',\n        (this.fontFamily ? 'font-family=\"' + this.fontFamily.replace(/\"/g, '\\'') + '\" ' : ''),\n        (this.fontSize ? 'font-size=\"' + this.fontSize + '\" ' : ''),\n        (this.fontStyle ? 'font-style=\"' + this.fontStyle + '\" ' : ''),\n        (this.fontWeight ? 'font-weight=\"' + this.fontWeight + '\" ' : ''),\n        (textDecoration ? 'text-decoration=\"' + textDecoration + '\" ' : ''),\n        'style=\"', this.getSvgStyles(noShadow), '\"', this.addPaintOrder(), ' >',\n        textAndBg.textSpans.join(''),\n        '</text>\\n',\n        '\\t</g>\\n'\n      );\n    },\n\n    /**\n     * @private\n     * @param {Number} textTopOffset Text top offset\n     * @param {Number} textLeftOffset Text left offset\n     * @return {Object}\n     */\n    _getSVGTextAndBg: function(textTopOffset, textLeftOffset) {\n      var textSpans = [],\n          textBgRects = [],\n          height = textTopOffset, lineOffset;\n      // bounding-box background\n      this._setSVGBg(textBgRects);\n\n      // text and text-background\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        lineOffset = this._getLineLeftOffset(i);\n        if (this.textBackgroundColor || this.styleHas('textBackgroundColor', i)) {\n          this._setSVGTextLineBg(textBgRects, i, textLeftOffset + lineOffset, height);\n        }\n        this._setSVGTextLineText(textSpans, i, textLeftOffset + lineOffset, height);\n        height += this.getHeightOfLine(i);\n      }\n\n      return {\n        textSpans: textSpans,\n        textBgRects: textBgRects\n      };\n    },\n\n    /**\n     * @private\n     */\n    _createTextCharSpan: function(_char, styleDecl, left, top) {\n      var styleProps = this.getSvgSpanStyles(styleDecl, _char !== _char.trim()),\n          fillStyles = styleProps ? 'style=\"' + styleProps + '\"' : '',\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n      return [\n        '<tspan x=\"', toFixed(left, NUM_FRACTION_DIGITS), '\" y=\"',\n        toFixed(top, NUM_FRACTION_DIGITS), '\" ',\n        fillStyles, '>',\n        fabric.util.string.escapeXml(_char),\n        '</tspan>'\n      ].join('');\n    },\n\n    _setSVGTextLineText: function(textSpans, lineIndex, textLeftOffset, textTopOffset) {\n      // set proper line offset\n      var lineHeight = this.getHeightOfLine(lineIndex),\n          isJustify = this.textAlign.indexOf('justify') !== -1,\n          actualStyle,\n          nextStyle,\n          charsToRender = '',\n          charBox, style,\n          boxWidth = 0,\n          line = this._textLines[lineIndex],\n          timeToRender;\n\n      textTopOffset += lineHeight * (1 - this._fontSizeFraction) / this.lineHeight;\n      for (var i = 0, len = line.length - 1; i <= len; i++) {\n        timeToRender = i === len || this.charSpacing;\n        charsToRender += line[i];\n        charBox = this.__charBounds[lineIndex][i];\n        if (boxWidth === 0) {\n          textLeftOffset += charBox.kernedWidth - charBox.width;\n          boxWidth += charBox.width;\n        }\n        else {\n          boxWidth += charBox.kernedWidth;\n        }\n        if (isJustify && !timeToRender) {\n          if (this._reSpaceAndTab.test(line[i])) {\n            timeToRender = true;\n          }\n        }\n        if (!timeToRender) {\n          // if we have charSpacing, we render char by char\n          actualStyle = actualStyle || this.getCompleteStyleDeclaration(lineIndex, i);\n          nextStyle = this.getCompleteStyleDeclaration(lineIndex, i + 1);\n          timeToRender = this._hasStyleChangedForSvg(actualStyle, nextStyle);\n        }\n        if (timeToRender) {\n          style = this._getStyleDeclaration(lineIndex, i) || { };\n          textSpans.push(this._createTextCharSpan(charsToRender, style, textLeftOffset, textTopOffset));\n          charsToRender = '';\n          actualStyle = nextStyle;\n          textLeftOffset += boxWidth;\n          boxWidth = 0;\n        }\n      }\n    },\n\n    _pushTextBgRect: function(textBgRects, color, left, top, width, height) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n      textBgRects.push(\n        '\\t\\t<rect ',\n        this._getFillAttributes(color),\n        ' x=\"',\n        toFixed(left, NUM_FRACTION_DIGITS),\n        '\" y=\"',\n        toFixed(top, NUM_FRACTION_DIGITS),\n        '\" width=\"',\n        toFixed(width, NUM_FRACTION_DIGITS),\n        '\" height=\"',\n        toFixed(height, NUM_FRACTION_DIGITS),\n        '\"></rect>\\n');\n    },\n\n    _setSVGTextLineBg: function(textBgRects, i, leftOffset, textTopOffset) {\n      var line = this._textLines[i],\n          heightOfLine = this.getHeightOfLine(i) / this.lineHeight,\n          boxWidth = 0,\n          boxStart = 0,\n          charBox, currentColor,\n          lastColor = this.getValueOfPropertyAt(i, 0, 'textBackgroundColor');\n      for (var j = 0, jlen = line.length; j < jlen; j++) {\n        charBox = this.__charBounds[i][j];\n        currentColor = this.getValueOfPropertyAt(i, j, 'textBackgroundColor');\n        if (currentColor !== lastColor) {\n          lastColor && this._pushTextBgRect(textBgRects, lastColor, leftOffset + boxStart,\n            textTopOffset, boxWidth, heightOfLine);\n          boxStart = charBox.left;\n          boxWidth = charBox.width;\n          lastColor = currentColor;\n        }\n        else {\n          boxWidth += charBox.kernedWidth;\n        }\n      }\n      currentColor && this._pushTextBgRect(textBgRects, currentColor, leftOffset + boxStart,\n        textTopOffset, boxWidth, heightOfLine);\n    },\n\n    /**\n     * Adobe Illustrator (at least CS5) is unable to render rgba()-based fill values\n     * we work around it by \"moving\" alpha channel into opacity attribute and setting fill's alpha to 1\n     *\n     * @private\n     * @param {*} value\n     * @return {String}\n     */\n    _getFillAttributes: function(value) {\n      var fillColor = (value && typeof value === 'string') ? new fabric.Color(value) : '';\n      if (!fillColor || !fillColor.getSource() || fillColor.getAlpha() === 1) {\n        return 'fill=\"' + value + '\"';\n      }\n      return 'opacity=\"' + fillColor.getAlpha() + '\" fill=\"' + fillColor.setAlpha(1).toRgb() + '\"';\n    },\n\n    /**\n     * @private\n     */\n    _getSVGLineTopOffset: function(lineIndex) {\n      var lineTopOffset = 0, lastHeight = 0;\n      for (var j = 0; j < lineIndex; j++) {\n        lineTopOffset += this.getHeightOfLine(j);\n      }\n      lastHeight = this.getHeightOfLine(j);\n      return {\n        lineTop: lineTopOffset,\n        offset: (this._fontSizeMult - this._fontSizeFraction) * lastHeight / (this.lineHeight * this._fontSizeMult)\n      };\n    },\n\n    /**\n     * Returns styles-string for svg-export\n     * @param {Boolean} skipShadow a boolean to skip shadow filter output\n     * @return {String}\n     */\n    getSvgStyles: function(skipShadow) {\n      var svgStyle = fabric.Object.prototype.getSvgStyles.call(this, skipShadow);\n      return svgStyle + ' white-space: pre;';\n    },\n  });\n})();\n/* _TO_SVG_END_ */\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {});\n\n  /**\n   * Textbox class, based on IText, allows the user to resize the text rectangle\n   * and wraps lines automatically. Textboxes have their Y scaling locked, the\n   * user can only change width. Height is adjusted automatically based on the\n   * wrapping of lines.\n   * @class fabric.Textbox\n   * @extends fabric.IText\n   * @mixes fabric.Observable\n   * @return {fabric.Textbox} thisArg\n   * @see {@link fabric.Textbox#initialize} for constructor definition\n   */\n  fabric.Textbox = fabric.util.createClass(fabric.IText, fabric.Observable, {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'textbox',\n\n    /**\n     * Minimum width of textbox, in pixels.\n     * @type Number\n     * @default\n     */\n    minWidth: 20,\n\n    /**\n     * Minimum calculated width of a textbox, in pixels.\n     * fixed to 2 so that an empty textbox cannot go to 0\n     * and is still selectable without text.\n     * @type Number\n     * @default\n     */\n    dynamicMinWidth: 2,\n\n    /**\n     * Cached array of text wrapping.\n     * @type Array\n     */\n    __cachedLines: null,\n\n    /**\n     * Override standard Object class values\n     */\n    lockScalingFlip: true,\n\n    /**\n     * Override standard Object class values\n     * Textbox needs this on false\n     */\n    noScaleCache: false,\n\n    /**\n     * Properties which when set cause object to change dimensions\n     * @type Object\n     * @private\n     */\n    _dimensionAffectingProps: fabric.Text.prototype._dimensionAffectingProps.concat('width'),\n\n    /**\n     * Constructor. Some scaling related property values are forced. Visibility\n     * of controls is also fixed; only the rotation and width controls are\n     * made available.\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.Textbox} thisArg\n     */\n    initialize: function(text, options) {\n      this.callSuper('initialize', text, options);\n    },\n\n    /**\n     * Unlike superclass's version of this function, Textbox does not update\n     * its width.\n     * @private\n     * @override\n     */\n    initDimensions: function() {\n      if (this.__skipDimension) {\n        return;\n      }\n      this.isEditing && this.initDelayedCursor();\n      this.clearContextTop();\n      this._clearCache();\n      // clear dynamicMinWidth as it will be different after we re-wrap line\n      this.dynamicMinWidth = 0;\n      // wrap lines\n      this._styleMap = this._generateStyleMap(this._splitText());\n      // if after wrapping, the width is smaller than dynamicMinWidth, change the width and re-wrap\n      if (this.dynamicMinWidth > this.width) {\n        this._set('width', this.dynamicMinWidth);\n      }\n      if (this.textAlign.indexOf('justify') !== -1) {\n        // once text is measured we need to make space fatter to make justified text.\n        this.enlargeSpaces();\n      }\n      // clear cache and re-calculate height\n      this.height = this.calcTextHeight();\n      this.saveState({ propertySet: '_dimensionAffectingProps' });\n    },\n\n    /**\n     * Generate an object that translates the style object so that it is\n     * broken up by visual lines (new lines and automatic wrapping).\n     * The original text styles object is broken up by actual lines (new lines only),\n     * which is only sufficient for Text / IText\n     * @private\n     */\n    _generateStyleMap: function(textInfo) {\n      var realLineCount     = 0,\n          realLineCharCount = 0,\n          charCount         = 0,\n          map               = {};\n\n      for (var i = 0; i < textInfo.graphemeLines.length; i++) {\n        if (textInfo.graphemeText[charCount] === '\\n' && i > 0) {\n          realLineCharCount = 0;\n          charCount++;\n          realLineCount++;\n        }\n        else if (this._reSpaceAndTab.test(textInfo.graphemeText[charCount]) && i > 0) {\n          // this case deals with space's that are removed from end of lines when wrapping\n          realLineCharCount++;\n          charCount++;\n        }\n\n        map[i] = { line: realLineCount, offset: realLineCharCount };\n\n        charCount += textInfo.graphemeLines[i].length;\n        realLineCharCount += textInfo.graphemeLines[i].length;\n      }\n\n      return map;\n    },\n\n    /**\n     * Returns true if object has a style property or has it ina specified line\n     * @param {Number} lineIndex\n     * @return {Boolean}\n     */\n    styleHas: function(property, lineIndex) {\n      if (this._styleMap && !this.isWrapping) {\n        var map = this._styleMap[lineIndex];\n        if (map) {\n          lineIndex = map.line;\n        }\n      }\n      return fabric.Text.prototype.styleHas.call(this, property, lineIndex);\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _getStyleDeclaration: function(lineIndex, charIndex) {\n      if (this._styleMap && !this.isWrapping) {\n        var map = this._styleMap[lineIndex];\n        if (!map) {\n          return null;\n        }\n        lineIndex = map.line;\n        charIndex = map.offset + charIndex;\n      }\n      return this.callSuper('_getStyleDeclaration', lineIndex, charIndex);\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} style\n     * @private\n     */\n    _setStyleDeclaration: function(lineIndex, charIndex, style) {\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n\n      this.styles[lineIndex][charIndex] = style;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _deleteStyleDeclaration: function(lineIndex, charIndex) {\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n\n      delete this.styles[lineIndex][charIndex];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _getLineStyle: function(lineIndex) {\n      var map = this._styleMap[lineIndex];\n      return this.styles[map.line];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Object} style\n     * @private\n     */\n    _setLineStyle: function(lineIndex, style) {\n      var map = this._styleMap[lineIndex];\n      this.styles[map.line] = style;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _deleteLineStyle: function(lineIndex) {\n      var map = this._styleMap[lineIndex];\n      delete this.styles[map.line];\n    },\n\n    /**\n     * Wraps text using the 'width' property of Textbox. First this function\n     * splits text on newlines, so we preserve newlines entered by the user.\n     * Then it wraps each line using the width of the Textbox by calling\n     * _wrapLine().\n     * @param {Array} lines The string array of text that is split into lines\n     * @param {Number} desiredWidth width you want to wrap to\n     * @returns {Array} Array of lines\n     */\n    _wrapText: function(lines, desiredWidth) {\n      var wrapped = [], i;\n      this.isWrapping = true;\n      for (i = 0; i < lines.length; i++) {\n        wrapped = wrapped.concat(this._wrapLine(lines[i], i, desiredWidth));\n      }\n      this.isWrapping = false;\n      return wrapped;\n    },\n\n    /**\n     * Helper function to measure a string of text, given its lineIndex and charIndex offset\n     * it gets called when charBounds are not available yet.\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {String} text\n     * @param {number} lineIndex\n     * @param {number} charOffset\n     * @returns {number}\n     * @private\n     */\n    _measureWord: function(word, lineIndex, charOffset) {\n      var width = 0, prevGrapheme, skipLeft = true;\n      charOffset = charOffset || 0;\n      for (var i = 0, len = word.length; i < len; i++) {\n        var box = this._getGraphemeBox(word[i], lineIndex, i + charOffset, prevGrapheme, skipLeft);\n        width += box.kernedWidth;\n        prevGrapheme = word[i];\n      }\n      return width;\n    },\n\n    /**\n     * Wraps a line of text using the width of the Textbox and a context.\n     * @param {Array} line The grapheme array that represent the line\n     * @param {Number} lineIndex\n     * @param {Number} desiredWidth width you want to wrap the line to\n     * @returns {Array} Array of line(s) into which the given text is wrapped\n     * to.\n     */\n    _wrapLine: function(_line, lineIndex, desiredWidth) {\n      var lineWidth        = 0,\n          graphemeLines    = [],\n          line             = [],\n          // spaces in different languges?\n          words            = _line.split(this._reSpaceAndTab),\n          word             = '',\n          offset           = 0,\n          infix            = ' ',\n          wordWidth        = 0,\n          infixWidth       = 0,\n          largestWordWidth = 0,\n          lineJustStarted = true,\n          additionalSpace = this._getWidthOfCharSpacing();\n      for (var i = 0; i < words.length; i++) {\n        // i would avoid resplitting the graphemes\n        word = fabric.util.string.graphemeSplit(words[i]);\n        wordWidth = this._measureWord(word, lineIndex, offset);\n        offset += word.length;\n\n        lineWidth += infixWidth + wordWidth - additionalSpace;\n\n        if (lineWidth >= desiredWidth && !lineJustStarted) {\n          graphemeLines.push(line);\n          line = [];\n          lineWidth = wordWidth;\n          lineJustStarted = true;\n        }\n\n        if (!lineJustStarted) {\n          line.push(infix);\n        }\n        line = line.concat(word);\n\n        infixWidth = this._measureWord([infix], lineIndex, offset);\n        offset++;\n        lineJustStarted = false;\n        // keep track of largest word\n        if (wordWidth > largestWordWidth) {\n          largestWordWidth = wordWidth;\n        }\n      }\n\n      i && graphemeLines.push(line);\n\n      if (largestWordWidth > this.dynamicMinWidth) {\n        this.dynamicMinWidth = largestWordWidth - additionalSpace;\n      }\n\n      return graphemeLines;\n    },\n\n    /**\n     * Detect if the text line is ended with an hard break\n     * text and itext do not have wrapping, return false\n     * @param {Number} lineIndex text to split\n     * @return {Boolean}\n     */\n    isEndOfWrapping: function(lineIndex) {\n      if (!this._styleMap[lineIndex + 1]) {\n        // is last line, return true;\n        return true;\n      }\n      if (this._styleMap[lineIndex + 1].line !== this._styleMap[lineIndex].line) {\n        // this is last line before a line break, return true;\n        return true;\n      }\n      return false;\n    },\n\n    /**\n    * Gets lines of text to render in the Textbox. This function calculates\n    * text wrapping on the fly every time it is called.\n    * @param {String} text text to split\n    * @returns {Array} Array of lines in the Textbox.\n    * @override\n    */\n    _splitTextIntoLines: function(text) {\n      var newText = fabric.Text.prototype._splitTextIntoLines.call(this, text),\n          graphemeLines = this._wrapText(newText.lines, this.width),\n          lines = new Array(graphemeLines.length);\n\n      for (var i = 0; i < graphemeLines.length; i++) {\n        lines[i] = graphemeLines[i].join('');\n      }\n      newText.lines = lines;\n      newText.graphemeLines = graphemeLines;\n      return newText;\n    },\n\n    getMinWidth: function() {\n      return Math.max(this.minWidth, this.dynamicMinWidth);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @method toObject\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['minWidth'].concat(propertiesToInclude));\n    }\n  });\n\n  /**\n   * Returns fabric.Textbox instance from an object representation\n   * @static\n   * @memberOf fabric.Textbox\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Textbox instance is created\n   */\n  fabric.Textbox.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Textbox', object, callback, 'text');\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  /**\n   * Override _setObjectScale and add Textbox specific resizing behavior. Resizing\n   * a Textbox doesn't scale text, it only changes width and makes text wrap automatically.\n   */\n  var setObjectScaleOverridden = fabric.Canvas.prototype._setObjectScale;\n\n  fabric.Canvas.prototype._setObjectScale = function(localMouse, transform,\n    lockScalingX, lockScalingY, by, lockScalingFlip, _dim) {\n\n    var t = transform.target;\n    if (by === 'x' && t instanceof fabric.Textbox) {\n      var tw = t._getTransformedDimensions().x;\n      var w = t.width * (localMouse.x / tw);\n      if (w >= t.getMinWidth()) {\n        t.set('width', w);\n        return true;\n      }\n    }\n    else {\n      return setObjectScaleOverridden.call(fabric.Canvas.prototype, localMouse, transform,\n        lockScalingX, lockScalingY, by, lockScalingFlip, _dim);\n    }\n  };\n\n  fabric.util.object.extend(fabric.Textbox.prototype, /** @lends fabric.IText.prototype */ {\n    /**\n     * @private\n     */\n    _removeExtraneousStyles: function() {\n      for (var prop in this._styleMap) {\n        if (!this._textLines[prop]) {\n          delete this.styles[this._styleMap[prop].line];\n        }\n      }\n    },\n\n  });\n})();\n","import CanvasObject from '../object.js';\nimport {fabric} from '../../core/fabric.js';\n\nexport default class FabricCanvasObject extends CanvasObject {\n  constructor(props) {\n    super(_.defaults(props, {\n      type: 'shape',\n      shape: 'rect'\n    }));\n\n    if (this.props.type === 'shape') {\n      var shapeFabricClassMap = {\n        rect: fabric.Rect,\n        polyline: fabric.Polyline,\n        circle: fabric.Circle\n      };\n\n      this.fabricObject = new shapeFabricClassMap[this.props.shape](this.props.points || []);\n    }\n    else if (this.props.type === 'image') {\n      this.fabricObject = new fabric.Image(this.props.image);\n    }\n\n    this.fabricObject.set({objectCaching: false, selectable: false});\n\n    this.set(props);\n  }\n\n  set(props) {\n    if (props.diameter) props.radius = props.diameter / 2;\n\n    super.set(props);\n\n    //this.fabricObject.set();\n  }\n\n  addToCanvasView(canvasView) {\n    super.addToCanvasView(canvasView);\n\n    this.canvas.add(this.fabricObject);\n  }\n\n  removeFromCanvasView(options) {\n    this.canvas.remove(this.fabricObject);\n\n    this.isRemoved = true;\n\n    super.removeFromCanvasView(options);\n  }\n\n  layout() {\n    super.layout();\n\n    var props = {\n      left: this.canvasView.offset.x + this.props.position.x * this.scale,\n      top: this.canvasView.offset.y + this.props.position.y * this.scale,\n      angle: this.props.rotation,\n      originX: this.props.origin.x,\n      originY: this.props.origin.y,\n    };\n\n    _.extend(props, _.pick(this.props, ['zIndex', 'opacity', 'fill', 'stroke', 'radius', 'strokeWidth']));\n\n    if (this.props.type === 'image') {\n      props.scaleX = (this.props.size.width * this.scale) / this.fabricObject.width;\n      props.scaleY = (this.props.size.height * this.scale) / this.fabricObject.height;\n\n      if (this.props.fill) {\n        this.fabricObject.filters[16] = new fabric.Image.filters.BlendColor({\n          color: this.props.fill,\n          mode: 'add',\n          alpha: 1\n        });\n\n        this.fabricObject.applyFilters();\n      }\n    }\n\n    if (this.props.type === 'shape' && _.includes(['rect'], this.props.shape)) {\n      _.extend(props, this.props.size);\n    }\n\n    var scalePropKeys = ['radius', 'width', 'height'];\n\n    _.forEach(_.pick(props, scalePropKeys), (prop, key) => props[key] = prop * this.scale);\n\n    this.fabricObject.set(props);\n  }\n\n  static loadImages(imageUrls) {\n    var promises = [];\n\n    _.forEach(imageUrls, (url, key) => {\n      promises.push(new Promise((success) => {\n        fabric.util.loadImage(url, image => {\n          success({key, image});\n        });\n      }));\n    });\n\n    return Promise.all(promises).then(m => _.mapValues(_.keyBy(m, 'key'), _.property('image')));\n  }\n}\n","import Class from '../core/class.js';\n\nexport default class CanvasObject extends Class {\n  constructor(props) {\n    super(_.defaults(props, {\n      position: {x: 0, y: 0},\n      size: {width: 0, height: 0},\n      rotation: 0,\n      origin: {x: 'center', y: 'center'},\n      fill: '',\n      stroke: ''\n    }));\n  }\n\n  set(props) {\n    super.set(props);\n  }\n\n  addToCanvasView(canvasView) {\n    this.canvasView = canvasView;\n    this.canvas = canvasView.canvas;\n  }\n\n  removeFromCanvasView({dereference=true} = {}) {\n    if (dereference) delete this.canvasView.objects[this];\n\n    delete this.canvasView;\n    delete this.canvas;\n  }\n\n  layout() {\n\n  }\n\n  toString() {\n    return Math.random() + ``;\n  }\n\n  get scale() {\n    return this.canvasView.scale;\n  }\n}\n","export default class Class {\n  constructor(props, options) {\n    this.props = props;\n    this.options = options;\n  }\n\n  set(props) {\n    _.extend(this.props, props);\n  }\n}\n","import Class from '../core/class.js';\nimport {fabric} from '../core/fabric.js';\n\nexport default class CanvasView extends Class {\n  constructor(props) {\n    super(_.defaults(props, {\n      _container: undefined,\n      scale: 1,\n      id: `canvas-${Math.floor(Math.random() * 1000000000)}`\n    }));\n\n    this.objects = {};\n\n    this.create();\n  }\n\n  set(props) {\n    super.set(props);\n\n    if (props.size || props.scale) this.resize();\n  }\n\n  create() {\n    this._container = this.props._container;\n    this._container.innerHTML = `<canvas id=\"${this.props.id}\">`;\n    this._canvas = document.getElementById(this.props.id);\n\n    this.canvas = new fabric.StaticCanvas(this.props.id, {\n      selection: false,\n      backgroundColor: '#fff',\n      objectCaching: false,\n      ...this.props.canvasOptions\n    });\n\n    this.canvas.renderOnAddRemove = false;\n\n    window.addEventListener('resize', this.resize.bind(this));\n\n    this.resize();\n  }\n\n  resize() {\n    this.canvas.setDimensions({\n      width: _.floor(this.props.size.width * this.scale),\n      height: _.floor(this.props.size.height * this.scale)\n    });\n\n    this.origin = {\n      x: this.props.size.width * this.scale / 2,\n      y: this.props.size.height * this.scale / 2\n    };\n\n    this.render({layout: true});\n  }\n\n  add({object}) {\n    this.objects[object] = object;\n\n    object.addToCanvasView(this);\n  }\n\n  remove({object}) {\n    delete this.objects[object];\n\n    object.removeFromCanvasView();\n  }\n\n  layout() {\n    this.forEachObject(object => object.layout());\n  }\n\n  forEachObject(fn) {\n    _.forEach(this.objects, (object, o) => {\n      if (!object.isRemoved) {\n        fn(object, o);\n      }\n    });\n  }\n\n  render({layout=false} = {}) {\n    if (layout) this.layout();\n\n    this.canvas.renderAll();\n  }\n\n  destroy() {\n    this.$canvas.remove();\n  }\n\n  get offset() {\n    return this.origin;\n  }\n\n  get scale() {\n    return this.props.scale;\n  }\n}\n","var lib = {\n  rand: (size=1, factor=0) => Math.random() * Math.abs(size) + (factor ? Math.abs(size) * factor : 0),\n  randInt: (factor) => _.floor(mo.rand() * factor),\n  math: {trig: {}}\n};\n\nexport default lib;\n","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","import FabricCanvasObject from '../canvas/fabric/object.js';\nimport CanvasView from '../canvas/view.js';\nimport CanvasObject from '../canvas/object.js';\n\nexport default {\n  classes: {\n    CanvasView, CanvasObject, FabricCanvasObject\n  }\n};\n","export default {\n  //a: () => console.log(1)\n};\n","/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.11';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g,\n      reTrimStart = /^\\s+/,\n      reTrimEnd = /\\s+$/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n      rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      // Use `util.types` for Node.js 10+.\n      var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n      if (types) {\n        return types;\n      }\n\n      // Legacy `process.binding('util')` for Node.js < 10.\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array and iteratees accept only\n     * one argument. The heuristic for whether a section qualifies for shortcut\n     * fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n     * following template settings to use alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      if (isSet(value)) {\n        value.forEach(function(subValue) {\n          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n        });\n\n        return result;\n      }\n\n      if (isMap(value)) {\n        value.forEach(function(subValue, key) {\n          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n        });\n\n        return result;\n      }\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = objIsArr ? arrayTag : getTag(object),\n          othTag = othIsArr ? arrayTag : getTag(other);\n\n      objTag = objTag == argsTag ? objectTag : objTag;\n      othTag = othTag == argsTag ? objectTag : othTag;\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        if (isObject(srcValue)) {\n          stack || (stack = new Stack);\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = safeGet(object, key),\n          srcValue = safeGet(source, key),\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || isFunction(objValue)) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      var index = -1;\n      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array == null ? 0 : array.length,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value)) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n        if (precision) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] === undefined\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n     * of source objects to the destination object for all destination properties\n     * that resolve to `undefined`.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n     * objects into destination objects that are passed thru.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n     * objects.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {string} key The key of the property to inspect.\n     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n     */\n    function customOmitClone(value) {\n      return isPlainObject(value) ? undefined : value;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(array);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = getAllKeys(object),\n          objLength = objProps.length,\n          othProps = getAllKeys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n      if (object == null) {\n        return [];\n      }\n      object = Object(object);\n      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n        return propertyIsEnumerable.call(object, symbol);\n      });\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return new Ctor;\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return new Ctor;\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      var type = typeof value;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n\n      return !!length &&\n        (type == 'number' ||\n          (type != 'symbol' && reIsUint.test(value))) &&\n            (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Gets the value at `key`, unless `key` is \"__proto__\".\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the property to get.\n     * @returns {*} Returns the property value.\n     */\n    function safeGet(object, key) {\n      if (key == '__proto__') {\n        return;\n      }\n\n      return object[key];\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (string.charCodeAt(0) === 46 /* . */) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, subString) {\n        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            timeWaiting = wait - timeSinceLastCall;\n\n        return maxing\n          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n          : timeWaiting;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are compared by strict equality, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return value\n        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n        : (value === 0 ? value : 0);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(object, sources) {\n      object = Object(object);\n\n      var index = -1;\n      var length = sources.length;\n      var guard = length > 2 ? sources[2] : undefined;\n\n      if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n        length = 1;\n      }\n\n      while (++index < length) {\n        var source = sources[index];\n        var props = keysIn(source);\n        var propsIndex = -1;\n        var propsLength = props.length;\n\n        while (++propsIndex < propsLength) {\n          var key = props[propsIndex];\n          var value = object[key];\n\n          if (value === undefined ||\n              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n            object[key] = source[key];\n          }\n        }\n      }\n\n      return object;\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, customDefaultsMerge);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = position == null\n        ? 0\n        : baseClamp(toInteger(position), 0, string.length);\n\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrim, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimEnd, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = (this.__filtered__ && !index)\n          ? new LazyWrapper(this)\n          : this.clone();\n\n        if (result.__filtered__) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = (lodashFunc.name + ''),\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n","import basic from '../ui/initializers/basic.js'\n\nexport default {basic};\n","import FabricCanvasObject from '../../canvas/fabric/object.js';\nimport CanvasView from '../../canvas/view.js';\nimport lib from '../../core/lib';\nimport _ from 'lodash';\n\nexport default function basic({\n  containerId,\n  images={},\n  overlay=true,\n  size={width: 500, height: 500},\n  renderScale=4,\n  backgroundColor='#ffffff'\n}) {\n  return new Promise((resolve, reject) => {\n    var onDomReady = () => {\n      var _container = document.getElementById(containerId);\n\n      _container.innerHTML = `\n        <div class=\"mo-canvas-container\"></div>\n        <div class=\"mo-render\">Render</div>\n        <div class=\"mo-render-print\">Render Print</div>\n      `;\n\n      var _render = _container.querySelector('.mo-render');\n      var _renderPrint = _container.querySelector('.mo-render-print');\n      var _upperCanvas = _container.querySelector('.upper-canvas');\n\n      var canvasView = new CanvasView({\n        _container: _container,\n        size,\n        canvasOptions: {backgroundColor}\n      });\n\n      if (overlay) {\n        var overlayObject;\n\n        images.overlay = 'https://i.imgur.com/aUVVjL1.jpg';\n\n        _renderPrint.addEventListener('click', () => {\n          if (overlayObject.canvasView) canvasView.remove({object: overlayObject});\n\n          canvasView.set({scale: renderScale});\n\n          _upperCanvas.remove();\n        });\n      }\n\n      _render.addEventListener('click', event => {\n        canvasView.set({scale: renderScale});\n\n        _upperCanvas.remove();\n      });\n\n      FabricCanvasObject.loadImages(images).then(images => {\n        overlayObject = new FabricCanvasObject({\n          type: 'image',\n          image: images.overlay,\n          size,\n          origin: {x: 'center', y: 'center'},\n          opacity: 0.4,\n          zIndex: 1000,\n          position: {x: 0, y: 0}\n        });\n\n        canvasView.add({object: overlayObject});\n\n        resolve({\n          canvasView, images, size,\n          render: () => canvasView.render({layout: true}),\n          offset: {x: 0, y: 0},\n          ..._.pick(lib, ['rand', 'randInt'])\n        });\n      }, null, 'Anonymous');\n    };\n\n    if (mo.domReady) {\n      onDomReady();\n    }\n    else {\n      document.addEventListener(\"DOMContentLoaded\", onDomReady);\n    }\n  });\n}\n","import generate from './core/generate.js';\nimport canvas from './core/canvas.js';\nimport initializers from './core/initialize.js'\nimport lib from './core/lib.js';\n\nvar mo = global.mo = {};\n\n_.extend(mo, canvas.classes);\n\nmo.g = mo.generate = generate;\nmo.c = mo.canvas = canvas;\nmo.lib = lib;\nmo.ui = {init: initializers};\n\nmo.domReady = false;\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  mo.domReady = true;\n});\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","module.exports = function(module) {\r\n\tif (!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif (!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n"],"sourceRoot":""}