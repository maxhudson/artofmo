{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/lodash/lodash.js","webpack:///./src/core/fabric.js","webpack:///./src/canvas/fabric/object.js","webpack:///./src/canvas/object.js","webpack:///./src/core/class.js","webpack:///./src/canvas/view.js","webpack:///./src/util/trig.js","webpack:///./src/core/util.js","webpack:///(webpack)/buildin/global.js","webpack:///./src/core/canvas.js","webpack:///./src/colors/index.js","webpack:///./src/core/generate.js","webpack:///./src/generators/positions/evenly-distributed-for.js","webpack:///./src/generators/positions/spiral-for.js","webpack:///./src/generators/path-commands/for-curve-through.js","webpack:///./src/core/initialize.js","webpack:///./src/ui/initializers/basic.js","webpack:///./src/index.js","webpack:///./node_modules/buffer/index.js","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/ieee754/index.js","webpack:///./node_modules/isarray/index.js","webpack:///(webpack)/buildin/module.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","global","__WEBPACK_AMD_DEFINE_RESULT__","undefined","LARGE_ARRAY_SIZE","CORE_ERROR_TEXT","FUNC_ERROR_TEXT","HASH_UNDEFINED","MAX_MEMOIZE_SIZE","PLACEHOLDER","CLONE_DEEP_FLAG","CLONE_FLAT_FLAG","CLONE_SYMBOLS_FLAG","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","WRAP_BIND_FLAG","WRAP_BIND_KEY_FLAG","WRAP_CURRY_BOUND_FLAG","WRAP_CURRY_FLAG","WRAP_CURRY_RIGHT_FLAG","WRAP_PARTIAL_FLAG","WRAP_PARTIAL_RIGHT_FLAG","WRAP_ARY_FLAG","WRAP_REARG_FLAG","WRAP_FLIP_FLAG","DEFAULT_TRUNC_LENGTH","DEFAULT_TRUNC_OMISSION","HOT_COUNT","HOT_SPAN","LAZY_FILTER_FLAG","LAZY_MAP_FLAG","INFINITY","MAX_SAFE_INTEGER","MAX_INTEGER","NAN","MAX_ARRAY_LENGTH","MAX_ARRAY_INDEX","HALF_MAX_ARRAY_LENGTH","wrapFlags","argsTag","arrayTag","asyncTag","boolTag","dateTag","domExcTag","errorTag","funcTag","genTag","mapTag","numberTag","nullTag","objectTag","proxyTag","regexpTag","setTag","stringTag","symbolTag","undefinedTag","weakMapTag","weakSetTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","reEscapedHtml","reUnescapedHtml","reHasEscapedHtml","RegExp","source","reHasUnescapedHtml","reEscape","reEvaluate","reInterpolate","reIsDeepProp","reIsPlainProp","rePropName","reRegExpChar","reHasRegExpChar","reTrim","reTrimStart","reTrimEnd","reWrapComment","reWrapDetails","reSplitDetails","reAsciiWord","reEscapeChar","reEsTemplate","reFlags","reIsBadHex","reIsBinary","reIsHostCtor","reIsOctal","reIsUint","reLatin","reNoMatch","reUnescapedString","rsComboRange","rsComboMarksRange","rsBreakRange","rsMathOpRange","rsAstral","rsBreak","rsCombo","rsDigits","rsDingbat","rsLower","rsMisc","rsFitz","rsNonAstral","rsRegional","rsSurrPair","rsUpper","rsMiscLower","rsMiscUpper","reOptMod","rsSeq","join","rsEmoji","rsSymbol","reApos","reComboMark","reUnicode","reUnicodeWord","reHasUnicode","reHasUnicodeWord","contextProps","templateCounter","typedArrayTags","cloneableTags","stringEscapes","\\","'","\n","\r"," "," ","freeParseFloat","parseFloat","freeParseInt","parseInt","freeGlobal","freeSelf","self","root","Function","freeExports","nodeType","freeModule","moduleExports","freeProcess","process","nodeUtil","types","require","binding","e","nodeIsArrayBuffer","isArrayBuffer","nodeIsDate","isDate","nodeIsMap","isMap","nodeIsRegExp","isRegExp","nodeIsSet","isSet","nodeIsTypedArray","isTypedArray","apply","func","thisArg","args","length","arrayAggregator","array","setter","iteratee","accumulator","index","arrayEach","arrayEachRight","arrayEvery","predicate","arrayFilter","resIndex","result","arrayIncludes","baseIndexOf","arrayIncludesWith","comparator","arrayMap","Array","arrayPush","values","offset","arrayReduce","initAccum","arrayReduceRight","arraySome","asciiSize","baseProperty","baseFindKey","collection","eachFunc","baseFindIndex","fromIndex","fromRight","strictIndexOf","baseIsNaN","baseIndexOfWith","baseMean","baseSum","basePropertyOf","baseReduce","current","baseTimes","baseUnary","baseValues","props","cacheHas","cache","has","charsStartIndex","strSymbols","chrSymbols","charsEndIndex","deburrLetter","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","Ā","Ă","Ą","ā","ă","ą","Ć","Ĉ","Ċ","Č","ć","ĉ","ċ","č","Ď","Đ","ď","đ","Ē","Ĕ","Ė","Ę","Ě","ē","ĕ","ė","ę","ě","Ĝ","Ğ","Ġ","Ģ","ĝ","ğ","ġ","ģ","Ĥ","Ħ","ĥ","ħ","Ĩ","Ī","Ĭ","Į","İ","ĩ","ī","ĭ","į","ı","Ĵ","ĵ","Ķ","ķ","ĸ","Ĺ","Ļ","Ľ","Ŀ","Ł","ĺ","ļ","ľ","ŀ","ł","Ń","Ņ","Ň","Ŋ","ń","ņ","ň","ŋ","Ō","Ŏ","Ő","ō","ŏ","ő","Ŕ","Ŗ","Ř","ŕ","ŗ","ř","Ś","Ŝ","Ş","Š","ś","ŝ","ş","š","Ţ","Ť","Ŧ","ţ","ť","ŧ","Ũ","Ū","Ŭ","Ů","Ű","Ų","ũ","ū","ŭ","ů","ű","ų","Ŵ","ŵ","Ŷ","ŷ","Ÿ","Ź","Ż","Ž","ź","ż","ž","Ĳ","ĳ","Œ","œ","ŉ","ſ","escapeHtmlChar","&","<",">","\"","escapeStringChar","chr","hasUnicode","string","test","mapToArray","map","size","forEach","overArg","transform","arg","replaceHolders","placeholder","setToArray","set","setToPairs","stringSize","lastIndex","unicodeSize","stringToArray","match","unicodeToArray","split","asciiToArray","unescapeHtmlChar","&amp;","&lt;","&gt;","&quot;","&#39;","_","runInContext","context","defaults","pick","Date","Error","Math","String","TypeError","arrayProto","funcProto","objectProto","coreJsData","funcToString","toString","idCounter","maskSrcKey","uid","exec","keys","IE_PROTO","nativeObjectToString","objectCtorString","oldDash","reIsNative","replace","Buffer","Uint8Array","allocUnsafe","getPrototype","getPrototypeOf","objectCreate","propertyIsEnumerable","splice","spreadableSymbol","isConcatSpreadable","symIterator","iterator","symToStringTag","getNative","ctxClearTimeout","clearTimeout","ctxNow","now","ctxSetTimeout","setTimeout","nativeCeil","ceil","nativeFloor","floor","nativeGetSymbols","getOwnPropertySymbols","nativeIsBuffer","isBuffer","nativeIsFinite","isFinite","nativeJoin","nativeKeys","nativeMax","max","nativeMin","min","nativeNow","nativeParseInt","nativeRandom","random","nativeReverse","reverse","DataView","Map","Promise","Set","WeakMap","nativeCreate","metaMap","realNames","dataViewCtorString","toSource","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","symbolValueOf","valueOf","symbolToString","lodash","isObjectLike","isArray","LazyWrapper","LodashWrapper","wrapperClone","baseCreate","proto","isObject","baseLodash","chainAll","this","__wrapped__","__actions__","__chain__","__index__","__values__","__dir__","__filtered__","__iteratees__","__takeCount__","__views__","Hash","entries","clear","entry","ListCache","MapCache","SetCache","__data__","add","Stack","data","arrayLikeKeys","inherited","isArr","isArg","isArguments","isBuff","isType","skipIndexes","isIndex","push","arraySample","baseRandom","arraySampleSize","shuffleSelf","copyArray","baseClamp","arrayShuffle","assignMergeValue","eq","baseAssignValue","assignValue","objValue","assocIndexOf","baseAggregator","baseEach","baseAssign","copyObject","configurable","writable","baseAt","paths","skip","number","lower","upper","baseClone","bitmask","customizer","stack","isDeep","isFlat","isFull","constructor","input","initCloneArray","tag","getTag","isFunc","cloneBuffer","initCloneObject","getSymbolsIn","copySymbolsIn","keysIn","baseAssignIn","getSymbols","copySymbols","Ctor","cloneArrayBuffer","dataView","buffer","byteOffset","byteLength","cloneDataView","cloneTypedArray","regexp","cloneRegExp","symbol","cloneSymbol","initCloneByTag","stacked","subValue","getAllKeysIn","getAllKeys","baseConformsTo","baseDelay","wait","baseDifference","includes","isCommon","valuesLength","outer","computed","valuesIndex","templateSettings","escape","evaluate","interpolate","variable","imports","pop","hash","getMapData","pairs","createBaseEach","baseForOwn","baseEachRight","baseForOwnRight","baseEvery","baseExtremum","isSymbol","baseFilter","baseFlatten","depth","isStrict","isFlattenable","baseFor","createBaseFor","baseForRight","baseFunctions","isFunction","baseGet","path","castPath","toKey","baseGetAllKeys","keysFunc","symbolsFunc","baseGetTag","isOwn","unmasked","getRawTag","objectToString","baseGt","other","baseHas","baseHasIn","baseIntersection","arrays","othLength","othIndex","caches","maxLength","Infinity","seen","baseInvoke","parent","last","baseIsArguments","baseIsEqual","equalFunc","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","equalArrays","message","convert","isPartial","equalByTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","objProps","objLength","skipCtor","othValue","compared","objCtor","othCtor","equalObjects","baseIsEqualDeep","baseIsMatch","matchData","noCustomizer","srcValue","baseIsNative","isMasked","baseIteratee","identity","baseMatchesProperty","baseMatches","baseKeys","isPrototype","baseKeysIn","nativeKeysIn","isProto","baseLt","baseMap","isArrayLike","getMatchData","matchesStrictComparable","isKey","isStrictComparable","hasIn","baseMerge","srcIndex","mergeFunc","safeGet","newValue","isTyped","isArrayLikeObject","isPlainObject","toPlainObject","baseMergeDeep","baseNth","baseOrderBy","iteratees","orders","getIteratee","comparer","sort","baseSortBy","criteria","objCriteria","othCriteria","ordersLength","compareAscending","order","compareMultiple","basePickBy","baseSet","basePullAll","indexOf","basePullAt","indexes","previous","baseUnset","baseRepeat","baseRest","start","setToString","overRest","baseSample","baseSampleSize","nested","baseSetData","baseSetToString","constant","baseShuffle","baseSlice","end","baseSome","baseSortedIndex","retHighest","low","high","mid","baseSortedIndexBy","valIsNaN","valIsNull","valIsSymbol","valIsUndefined","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","setLow","baseSortedUniq","baseToNumber","baseToString","baseUniq","createSet","seenIndex","baseUpdate","updater","baseWhile","isDrop","baseWrapperValue","actions","action","baseXor","baseZipObject","assignFunc","valsLength","castArrayLikeObject","castFunction","stringToPath","castRest","castSlice","id","slice","copy","arrayBuffer","typedArray","valIsDefined","valIsReflexive","composeArgs","partials","holders","isCurried","argsIndex","argsLength","holdersLength","leftIndex","leftLength","rangeLength","isUncurried","composeArgsRight","holdersIndex","rightIndex","rightLength","isNew","createAggregator","initializer","createAssigner","assigner","sources","guard","isIterateeCall","iterable","createCaseFirst","methodName","charAt","trailing","createCompounder","callback","words","deburr","createCtor","arguments","thisBinding","createFind","findIndexFunc","createFlow","flatRest","funcs","prereq","thru","wrapper","getFuncName","funcName","getData","isLaziable","plant","createHybrid","partialsRight","holdersRight","argPos","ary","arity","isAry","isBind","isBindKey","isFlip","getHolder","holdersCount","countHolders","newHolders","createRecurry","fn","arrLength","oldArray","reorder","createInverter","toIteratee","baseInverter","createMathOperation","operator","defaultValue","createOver","arrayFunc","createPadding","chars","charsLength","createRange","step","toFinite","baseRange","createRelationalOperation","toNumber","wrapFunc","isCurry","newData","setData","setWrapToString","createRound","precision","toInteger","pair","noop","createToPairs","baseToPairs","createWrap","srcBitmask","newBitmask","isCombo","mergeData","createCurry","createPartial","createBind","customDefaultsAssignIn","customDefaultsMerge","customOmitClone","arrValue","flatten","otherFunc","type","isKeyable","getValue","stubArray","hasPath","hasFunc","isLength","ArrayBuffer","resolve","ctorString","isMaskable","stubFalse","otherArgs","shortOut","reference","details","insertWrapDetails","updateWrapDetails","getWrapDetails","count","lastCalled","stamp","remaining","rand","memoize","memoizeCapped","charCodeAt","quote","subString","clone","difference","differenceBy","differenceWith","findIndex","findLastIndex","head","intersection","mapped","intersectionBy","intersectionWith","pull","pullAll","pullAt","union","unionBy","unionWith","unzip","group","unzipWith","without","xor","xorBy","xorWith","zip","zipWith","chain","interceptor","wrapperAt","countBy","find","findLast","forEachRight","groupBy","invokeMap","keyBy","partition","sortBy","before","bindKey","debounce","options","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","invokeFunc","time","shouldInvoke","timeSinceLastCall","timerExpired","trailingEdge","timeWaiting","remainingWait","debounced","isInvoking","leadingEdge","cancel","flush","defer","delay","resolver","memoized","Cache","negate","overArgs","transforms","funcsLength","partial","partialRight","rearg","gt","gte","isError","isInteger","isNumber","isString","lt","lte","toArray","next","done","iteratorToArray","remainder","toLength","isBinary","assign","assignIn","assignInWith","assignWith","at","propsIndex","propsLength","defaultsDeep","mergeWith","invert","invertBy","invoke","merge","omit","basePick","pickBy","prop","toPairs","toPairsIn","camelCase","word","toLowerCase","capitalize","upperFirst","kebabCase","lowerCase","lowerFirst","snakeCase","startCase","upperCase","toUpperCase","pattern","hasUnicodeWord","unicodeWords","asciiWords","attempt","bindAll","methodNames","flow","flowRight","method","methodOf","mixin","over","overEvery","overSome","basePropertyDeep","range","rangeRight","augend","addend","divide","dividend","divisor","multiply","multiplier","multiplicand","round","subtract","minuend","subtrahend","after","castArray","chunk","compact","concat","cond","conforms","baseConforms","properties","curry","curryRight","drop","dropRight","dropRightWhile","dropWhile","fill","baseFill","filter","flatMap","flatMapDeep","flatMapDepth","flattenDeep","flattenDepth","flip","fromPairs","functions","functionsIn","initial","mapKeys","mapValues","matches","matchesProperty","nthArg","omitBy","once","orderBy","propertyOf","pullAllBy","pullAllWith","reject","remove","rest","sampleSize","setWith","shuffle","sortedUniq","sortedUniqBy","separator","limit","spread","tail","take","takeRight","takeRightWhile","takeWhile","tap","throttle","toPath","isArrLike","unary","uniq","uniqBy","uniqWith","unset","update","updateWith","valuesIn","wrap","zipObject","zipObjectDeep","entriesIn","extend","extendWith","clamp","cloneDeep","cloneDeepWith","cloneWith","conformsTo","defaultTo","endsWith","target","position","escapeRegExp","every","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","inRange","baseInRange","isBoolean","isElement","isEmpty","isEqual","isEqualWith","isMatch","isMatchWith","isNaN","isNative","isNil","isNull","isSafeInteger","isUndefined","isWeakMap","isWeakSet","lastIndexOf","strictLastIndexOf","maxBy","mean","meanBy","minBy","stubObject","stubString","stubTrue","nth","noConflict","pad","strLength","padEnd","padStart","radix","floating","temp","reduce","reduceRight","repeat","sample","some","sortedIndex","sortedIndexBy","sortedIndexOf","sortedLastIndex","sortedLastIndexBy","sortedLastIndexOf","startsWith","sum","sumBy","template","settings","isEscaping","isEvaluating","importsKeys","importsValues","reDelimiters","sourceURL","escapeValue","interpolateValue","esTemplateValue","evaluateValue","times","toLower","toSafeInteger","toUpper","trim","trimEnd","trimStart","truncate","omission","search","substring","newEnd","unescape","uniqueId","prefix","each","eachRight","first","VERSION","isFilter","takeName","dropName","checkIteratee","isTaker","lodashFunc","retUnwrapped","isLazy","useLazy","isHybrid","isUnwrapped","onlyLazy","chainName","dir","isRight","view","getView","iterLength","takeCount","iterIndex","commit","wrapped","toJSON","fabric","version","copyGLTo2DDrawImage","gl","pipelineState","glCanvas","canvas","targetCanvas","ctx","getContext","translate","height","scale","sourceY","drawImage","width","copyGLTo2DPutImageData","dWidth","destinationWidth","dHeight","destinationHeight","numBytes","u8","imageBuffer","u8Clamped","Uint8ClampedArray","readPixels","RGBA","UNSIGNED_BYTE","imgData","ImageData","putImageData","document","window","isTouchSupported","isLikelyNode","SHARED_ATTRIBUTES","DPI","reNum","fontPaths","iMatrix","canvasModule","perfLimitSizeTotal","maxCacheSideLimit","minCacheSideLimit","charWidthsCache","textureSize","enableGLFiltering","devicePixelRatio","webkitDevicePixelRatio","mozDevicePixelRatio","browserShadowBlurConstant","initFilterBackend","isWebglSupported","console","log","maxTextureSize","WebglFilterBackend","tileSize","Canvas2dFilterBackend","_removeEventListener","eventName","handler","__eventListeners","eventListener","util","observe","on","stopObserving","fire","listenersForEvent","len","Observable","off","trigger","Collection","_objects","_onObjectAdded","renderOnAddRemove","requestRenderAll","insertAt","nonSplicing","objects","getObjects","somethingRemoved","_onObjectRemoved","forEachObject","item","contains","complexity","memo","CommonMethods","_setOptions","_initGradient","filler","colorStops","Gradient","_initPattern","Pattern","_initClipping","clipTo","functionBody","getFunctionBody","_setObject","obj","_set","toggle","sqrt","atan2","pow","abs","PiBy180","PI","removeFromArray","idx","getRandomInt","degreesToRadians","degrees","radiansToDegrees","radians","rotatePoint","point","origin","subtractEquals","v","rotateVector","Point","x","y","addEquals","vector","sin","cos","transformPoint","ignoreOffset","makeBoundingBoxFromPoints","points","xPoints","minX","yPoints","minY","left","top","invertTransform","a","toFixed","fractionDigits","Number","parseUnit","fontSize","unit","Text","DEFAULT_SVG_FONT_SIZE","falseFunction","getKlass","namespace","camelize","resolveNamespace","getSvgAttributes","attributes","parts","loadImage","url","crossOrigin","img","createImage","onLoadCallback","onload","onerror","src","loadImageInDom","div","createElement","style","appendChild","querySelector","parentNode","removeChild","enlivenObjects","reviver","onLoaded","numLoadedObjects","numTotalObjects","enlivenedObjects","fromObject","error","enlivenPatterns","patterns","numLoadedPatterns","numPatterns","enlivenedPatterns","groupSVGElements","elements","centerPoint","Group","sourcePath","populateWithProperties","destination","drawDashedLine","x2","y2","da","dx","dy","rot","dc","di","draw","save","moveTo","rotate","restore","createCanvasElement","clipContext","receiver","beginPath","clip","multiplyTransformMatrices","b","is2x2","qrDecompose","angle","denom","scaleX","scaleY","skewX","skewY","translateX","translateY","customTransformMatrix","skewMatrixX","tan","scaleMatrix","resetObjectTransform","flipX","flipY","isTransparent","tolerance","_isTransparent","imageData","getImageData","parsePreserveAspectRatioAttribute","attribute","align","meetOrSlice","aspectRatioAttrs","alignX","alignY","clearFabricFontCache","fontFamily","limitDimsByArea","ar","maximumArea","roughWidth","perfLimitSizeY","capValue","findScaleToFit","findScaleToCover","arcToSegmentsCache","segmentToBezierCache","boundsOfCurveCache","_join","arcToSegments","toX","toY","rx","ry","large","sweep","rotateX","argsString","th","sinTh","cosTh","fromX","fromY","px","py","rx2","ry2","py2","px2","pl","cx","cy","cx1","cy1","mTheta","calcVectorAngle","dtheta","segments","mDelta","mT","th3","segmentToBezier","th2","argsString2","costh2","sinth2","costh3","sinth3","cp1X","cp1Y","cp2X","cp2Y","ux","uy","vx","vy","ta","tb","getBoundsOfCurve","x0","y0","x1","y1","x3","y3","t1","t2","b2ac","sqrtb2ac","tvalues","bounds","mt","j","jlen","drawArc","fx","fy","coords","segs","segsNorm","bezierCurveTo","getBoundsOfArc","tx","ty","bound","byProperty","condition","k","value1","value2","deep","Element","getWholeChar","str","code","prev","character","firstLetterOnly","escapeXml","graphemeSplit","textstring","graphemes","emptyFunction","IS_DONTENUM_BUGGY","addMethods","klass","superclass","returnValue","Subclass","callSuper","parentMethod","_this","superClassMethod","createClass","initialize","shift","subclasses","unknown","areHostMethods","getElement","setElement","getUniqueId","element","__uniqueID","createListener","wrappedHandler","event","createWrappedHandler","addListener","removeListener","shouldUseAddListenerRemoveListener","documentElement","shouldUseAttachEventDetachEvent","listeners","handlers","addEventListener","removeEventListener","listener","attachEvent","detachEvent","existingHandler","handlersForEvent","createDispatcher","pointerX","clientX","pointerY","clientY","_getPointer","pageProp","clientProp","touchProp","getPointer","srcElement","scroll","getScrollLeftTop","parseEl","supportsOpacity","opacity","supportsFilters","reOpacity","setOpacity","es","currentStyle","hasLayout","zoom","setStyle","styles","elementStyle","cssText","styleFloat","_slice","sliceCanConvertNodelists","getElementStyle","arrayLike","childNodes","err","makeElement","tagName","el","className","htmlFor","setAttribute","docElement","body","scrollLeft","scrollTop","host","arr","defaultView","getComputedStyle","attr","selectProp","makeElementUnselectable","onselectstart","unselectable","makeElementSelectable","getScript","headEl","getElementsByTagName","scriptEl","loading","onreadystatechange","readyState","getById","getElementById","addClass","wrapElement","replaceChild","getElementOffset","docElem","scrollLeftTop","doc","ownerDocument","box","offsetAttributes","borderLeftWidth","borderTopWidth","paddingLeft","paddingTop","getBoundingClientRect","clientLeft","clientTop","getNodeCanvas","impl","jsdomImplForWrapper","_canvas","_image","makeXHR","factories","ActiveXObject","XMLHttpRequest","emptyFn","request","onComplete","xhr","parameters","param","addParamToUrl","open","setRequestHeader","send","warn","_requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","_cancelAnimFrame","cancelAnimationFrame","requestAnimFrame","animate","timestamp","duration","finish","onChange","abort","easing","startValue","endValue","byValue","onStart","tick","ticktime","currentTime","timePerc","valuePerc","cancelAnimFrame","animateColor","fromColor","toColor","startColor","Color","getSource","endColor","begin","pos","color","calculateColor","colorEasing","normalize","asin","elastic","opts","easeInBounce","easeOutBounce","ease","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInOutBounce","attributesMap","display","visibility","fill-opacity","fill-rule","font-family","font-size","font-style","font-weight","paint-order","stroke-dasharray","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","text-decoration","text-anchor","colorAttributes","stroke","normalizeAttr","normalizeValue","parentAttributes","parsed","transformMatrix","parseTransformAttribute","visible","fillIndex","strokeIndex","getSvgRegex","_getMultipleNodes","nodeNames","nodeName","nodeList","nodeArray","elementMatchesRule","selectors","firstMatching","parentMatching","selectorMatches","selector","doesSomeParentMatch","matcher","classNames","getAttribute","elementById","node","nodelist","svgValidTagNamesRegEx","svgViewBoxElementsRegEx","svgInvalidAncestorsRegEx","svgValidParentsRegEx","cssRules","gradientDefs","skewMatrix","matrix","commaWsp","reTransformList","reTransform","attributeValue","matrices","operation","translateMatrix","rotateMatrix","multiplierX","multiplierY","combinedMatrix","reViewBoxAttrValue","applyViewboxTransform","viewBoxWidth","viewBoxHeight","viewBoxAttr","widthAttr","heightAttr","preserveAspectRatio","missingViewBox","missingDimAttr","toBeParsed","parsedDim","firstChild","parseSVGDocument","parsingOptions","attrs","xlink","substr","el2","cloneNode","currentTrans","oldLength","el3","nodeValue","removeAttribute","parseUseDirectives","svgUid","__uid","descendants","selectNodes","hasAncestorWithNodeName","getGradientDefs","getCSSRules","parseElements","instances","reFontDeclaration","parseFontDeclaration","oStyle","fontStyle","fontWeight","lineHeight","elList","idsToXlinkMap","parseAttributes","ownAttributes","rule","getGlobalStylesForElement","parseStyleAttribute","normalizedAttr","normalizedValue","normalizedStyle","font","mergedAttrs","setAlpha","getAlpha","toRgba","_setStrokeFillOpacity","ElementsParser","parse","parseStyleString","parseStyleObject","parsePointsAttribute","parsedPoints","allRules","styleContents","textContent","text","ruleObj","propertyValuePairs","_rule","loadSVGFromURL","xml","responseXML","responseText","async","loadXML","results","_options","allElements","loadSVGFromString","DOMParser","parser","parseFromString","numElements","createObjects","_obj","createObject","fromElement","_createObject","checkIfDone","createCallback","resolveGradient","Image","_removeTransformMatrix","instanceFillValue","gradientId","that","scalarAdd","scalar","scalarAddEquals","scalarSubtract","scalarSubtractEquals","multiplyEquals","divideEquals","lerp","distanceFrom","midPointFrom","setXY","setX","setY","setFromPoint","swap","Intersection","status","appendPoint","appendPoints","intersectLineLine","a1","a2","b1","b2","uaT","ubT","uB","ua","ub","intersectLinePolygon","inter","intersectPolygonPolygon","points1","points2","intersectPolygonRectangle","r1","r2","topRight","bottomLeft","inter1","inter2","inter3","inter4","_tryParsingColor","setSource","hue2rgb","q","colorNameMap","sourceFromHex","sourceFromRgb","sourceFromHsl","_rgbToHsl","g","h","_source","toRgb","toHsl","hsl","toHsla","toHex","toHexa","alpha","toGrayscale","average","currentAlpha","toBlackWhite","threshold","overlayWith","otherColor","otherSource","reRGBa","reHSLa","reHex","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgrey","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","grey","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","fromRgb","fromSource","fromRgba","fromHsl","fromHsla","fromHex","isShortNotation","isRGBa","oColor","getColorStop","colorAlpha","keyValuePairs","_convertPercentUnitsToValues","gradientUnits","propValue","addFactor","multFactor","ellipseMatrix","scaleFactor","offsetX","offsetY","gradientTransform","addColorStop","toObject","propertiesToInclude","toSVG","markup","commonAttributes","needsSwap","pathOffset","minRadius","percentageShift","colorStop","toLive","gradient","createLinearGradient","createRadialGradient","instance","colorStopEls","getLinearCoords","getRadialCoords","forObject","patternTransform","setOptions","NUM_FRACTION_DIGITS","toDataURL","patternSource","patternWidth","patternHeight","patternOffsetX","patternOffsetY","patternImgSrc","complete","naturalWidth","naturalHeight","createPattern","Shadow","blur","affectStroke","includeDefaultValues","_parseShadow","shadow","shadowStr","offsetsAndBlur","reOffsetsAndBlur","fBoxX","fBoxY","StaticCanvas","CANVAS_INIT_ERROR","renderAndResetBound","renderAndReset","requestRenderAllBound","_initStatic","backgroundColor","backgroundImage","overlayColor","overlayImage","stateful","controlsAboveOverlay","allowTouchScrolling","imageSmoothingEnabled","viewportTransform","backgroundVpt","overlayVpt","onBeforeScaleRotate","enableRetinaScaling","vptCoords","skipOffscreen","cb","_createLowerCanvas","_initOptions","_setImageSmoothing","interactive","_initRetinaScaling","setOverlayImage","setBackgroundImage","setBackgroundColor","setOverlayColor","calcOffset","_isRetinaScaling","getRetinaScaling","lowerCanvasEl","contextContainer","_offset","image","__setBgOverlayImage","__setBgOverlayColor","webkitImageSmoothingEnabled","mozImageSmoothingEnabled","msImageSmoothingEnabled","oImageSmoothingEnabled","_createCanvasElement","canvasEl","_applyCanvasStyle","getWidth","getHeight","setWidth","setDimensions","setHeight","dimensions","cssValue","cssOnly","_setBackstoreDimension","backstoreOnly","_setCssDimension","_isCurrentlyDrawing","freeDrawingBrush","_setBrushStyles","upperCanvasEl","cacheCanvasEl","wrapperEl","getZoom","setViewportTransform","vpt","activeObject","_activeObject","setCoords","calcViewportBoundaries","zoomToPoint","setZoom","absolutePan","relativePan","setupState","clearContext","clearRect","_hasITextHandlers","_mouseUpITextHandler","_iTextInstances","renderAll","canvasToDrawOn","objsToRender","zIndex","renderCanvas","isRendering","iVpt","tl","br","tr","bl","_renderBackground","_renderObjects","drawControls","_renderOverlay","render","_renderBackgroundOrOverlay","fillStyle","fillRect","getCenter","centerObjectH","_centerObject","getCenterPoint","centerObjectV","centerObject","center","viewportCenterObject","vpCenter","getVpCenter","viewportCenterObjectH","viewportCenterObjectV","setPositionByOrigin","toDatalessJSON","toDatalessObject","_toObjectMethod","_toObjects","__serializeBgOverlay","excludeFromExport","_toObject","originalValue","bgImage","overlay","background","svgViewportTransformation","_setSVGPreamble","_setSVGHeader","_setSVGBgOverlayColor","_setSVGBgOverlayImage","_setSVGObjects","suppressPreamble","encoding","viewBox","createSVGFontFacesMarkup","createSVGRefElementsMarkup","row","rowIndex","charIndex","fontList","_setSVGObject","sendToBack","objs","activeSelection","unshift","bringToFront","sendBackwards","intersecting","newIdx","objsMoved","_findNewLowerIndex","intersectsWithObject","isContainedWithinObject","bringForward","_findNewUpperIndex","dispose","DataURLExporter","EMPTY_JSON","supports","setLineDash","createPNGStream","createJPEGStream","BaseBrush","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeDashArray","setShadow","contextTop","strokeStyle","lineWidth","lineCap","miterLimit","lineJoin","_saveAndTransform","_setShadow","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","_resetShadow","PencilBrush","_points","onMouseDown","pointer","_prepareForDrawing","_captureDrawingPath","_render","onMouseMove","onMouseUp","_finalizeAndAddPath","_reset","_addPoint","pointerPoint","p1","p2","midPoint","quadraticCurveTo","lineTo","convertPointsToSVGPath","multSignX","multSignY","manyPoints","createPath","pathData","Path","strokeWidth","translateToGivenOrigin","originX","originY","closePath","CircleBrush","drawDot","addPoint","arc","radius","originalRenderOnAddRemove","circles","circle","Circle","circleRadius","circleColor","SprayBrush","density","dotWidth","dotWidthVariance","randomOpacity","optimizeOverlapping","sprayChunks","addSprayChunk","sprayChunkPoints","rects","ilen","sprayChunk","rect","Rect","_getOptimizedRects","uniqueRects","uniqueRectsArray","globalAlpha","PatternBrush","getPatternSrc","patternCanvas","patternCtx","getPatternSrcFunction","getPattern","topLeft","_getLeftTopCoords","supportLineDash","Canvas","_initInteractive","_createCacheCanvas","uniScaleTransform","uniScaleKey","centeredScaling","centeredRotation","centeredKey","altActionKey","selection","selectionKey","altSelectionKey","selectionColor","selectionDashArray","selectionBorderColor","selectionLineWidth","selectionFullyContained","hoverCursor","moveCursor","defaultCursor","freeDrawingCursor","rotationCursor","notAllowedCursor","containerClass","perPixelTargetFind","targetFindTolerance","skipTargetFind","isDrawingMode","preserveObjectStacking","snapAngle","snapThreshold","stopContextMenu","fireRightClick","fireMiddleClick","_currentTransform","_groupSelector","_initWrapperElement","_createUpperCanvas","_initEventListeners","_chooseObjectsToRender","activeGroupObjects","activeObjects","getActiveObjects","contextTopDirty","renderTop","_drawSelection","_resetCurrentTransform","original","_shouldCenterTransform","_setOriginToCenter","mouseXSign","mouseYSign","containsPoint","xy","_normalizePointer","_findTargetCorner","calcTransformMatrix","invertedM","vptPointer","restorePointerVpt","isTargetTransparent","contextCache","originalColor","selectionBackgroundColor","_renderControls","hasBorders","transparentCorners","_isSelectionKeyPressed","_shouldClearSelection","evented","selectable","centerTransform","altKey","_getOriginFromCorner","corner","_getActionFromCorner","_setupCurrentTransform","ex","ey","lastX","lastY","theta","shiftKey","_translateObject","newLeft","newTop","moveX","moveY","_changeSkewTransformOrigin","mouseMove","by","origins","0","skew","originA","originB","flipSign","skewSign","_skewObject","skewed","lockSkewingX","lockSkewingY","actualMouseByOrigin","constraintPosition","actualMouseByCenter","toLocalPoint","lastMouseByCenter","dim","_getTransformedDimensions","translateToOriginPoint","_setObjectSkew","localMouse","_dim","newDim","dimNoSkew","otherBy","_otherBy","_by","newDimMouse","atan","_scaleObject","lockScalingX","lockScalingY","lockScalingFlip","scaled","_setLocalMouse","_setObjectScale","changeX","changeY","forbidScalingX","forbidScalingY","_scaleObjectEqually","newScaleX","newScaleY","_flipObject","dist","lastDist","signX","signY","padding","_rotateObject","lastAngle","curAngle","hasRotated","rightAngleLocked","leftAngleLocked","setCursor","cursor","_resetObjectTransform","groupSelector","aleft","atop","_setLineDash","strokeRect","findTarget","skipGroup","activeTarget","activeTargetSubs","aObjects","targets","_searchPossibleTargets","_checkTarget","isEditing","normalizedPointer","subTarget","subTargetCheck","ignoreZoom","cssScale","boundsWidth","boundsHeight","bottom","right","lowerCanvasClass","_copyCanvasStyle","class","touch-action","fromEl","toEl","getSelectionContext","getSelectionElement","getActiveObject","active","_discardActiveObject","_hoveredTarget","_fireSelectionEvents","oldObjects","somethingChanged","added","removed","opt","oldObject","selected","deselected","updated","setActiveObject","currentActives","_setActiveObject","onSelect","onDeselect","discardActiveObject","removeListeners","originalProperties","_realizeGroupTransformOnObject","_unwindGroupTransformOnObject","originalValues","realizeTransform","_setCursorFromEvent","cursorOffset","mr","mb","ml","checkClick","which","button","cursorMap","_bindEvents","_onResize","_onMouseDown","_onDoubleClick","_onMouseMove","_onMouseOut","_onMouseEnter","_onMouseWheel","_onContextMenu","passive","eventjs","_onGesture","_onDrag","_onOrientationChange","_onShake","_onLongPress","eventsBinded","_onMouseUp","__onTransformGesture","__onDrag","__onMouseWheel","hiddenTextarea","focus","__onOrientationChange","__onShake","__onLongPress","stopPropagation","preventDefault","_handleEvent","__onMouseDown","__onMouseUp","__onMouseMove","_shouldRender","isMoving","_previousPointer","searchTarget","isClick","_onMouseUpInDrawingMode","_finalizeCurrentTransform","actionPerformed","shouldRender","_maybeGroupObjects","__corner","eventType","targetObj","subTargets","_scaling","_restoreOriginXY","hasStateChanged","_previousOriginX","_previousOriginY","originPoint","_onMouseDownInDrawingMode","_onMouseMoveInDrawingMode","shouldGroup","_shouldGroup","_handleGrouping","_beforeTransform","saveState","_setCenterToOrigin","touches","_transformObject","_fireOverOutEvents","overOpt","outOpt","hoveredTarget","previousTarget","nextTarget","reset","_beforeScaleTransform","_performTransformAction","_fire","_onScale","_isUniscalePossible","currentAction","getCornerCursor","actionIsDisabled","_getRotatedCornerCursor","hasRotatingPoint","lockRotation","_updateActiveSelection","_createActiveSelection","currentActiveObjects","removeWithUpdate","addWithUpdate","_createGroup","groupObjects","exitEditing","ActiveSelection","_groupSelectedObjects","aGroup","_collectObjects","currentObject","selectionX1Y1","selectionX2Y2","allowIntersect","intersectsWithRect","isContainedWithinRect","supportQuality","format","quality","cropping","__toDataURLWithMultiplier","origWidth","origHeight","scaledWidth","scaledHeight","newZoom","vp","newVp","originalInteractive","originalSkipOffScreen","needsResize","__toDataURL","loadFromDatalessJSON","json","loadFromJSON","serialized","JSON","_enlivenObjects","_setBgOverlay","loaded","cbIfLoaded","__setBgOverlay","enlivedObject","_toDataURL","_toDataURLWithMultiplier","toDataURLWithMultiplier","stringify","cloneWithoutData","backgroundImageOpacity","backgroundImageStretch","supportsLineDash","objectCaching","cornerSize","borderColor","borderDashArray","cornerColor","cornerStrokeColor","cornerStyle","cornerDashArray","fillRule","globalCompositeOperation","borderOpacityWhenMoving","borderScaleFactor","minScaleLimit","hasControls","rotatingPointOffset","lockMovementX","lockMovementY","lockUniScaling","statefullCache","noScaleCache","dirty","paintFirst","stateProperties","cacheProperties","_cacheProperties","_cacheCanvas","_cacheContext","_updateCacheCanvas","_limitCacheSize","dims","limitedDims","zoomX","capped","zoomY","_getCacheCanvasDimensions","objectScale","getObjectScaling","retina","_getNonTransformedDimensions","drawingWidth","drawingHeight","minCacheSize","dimensionsChanged","cacheWidth","cacheHeight","zoomChanged","shouldRedraw","additionalWidth","additionalHeight","shouldResizeCanvas","canvasWidth","canvasHeight","sizeGrowing","setTransform","cacheTranslationX","cacheTranslationY","_transformDone","calcOwnMatrix","_removeDefaultValues","scaling","getObjectOpacity","shouldConstrainValue","isChanged","groupNeedsUpdate","_constrainScale","isOnACache","setOnGroup","getViewportTransform","isNotVisible","isOnScreen","_setupCompositeOperation","drawSelectionBackground","_setOpacity","shouldCache","isCacheDirty","propertySet","drawObject","drawCacheOnCanvas","_removeCacheCanvas","needsItsOwnCache","ownCaching","willDrawShadow","_setStrokeStyles","_setFillStyles","skipCanvas","_removeShadow","decl","dashArray","alternative","styleOverride","drawBorders","forActiveSelection","drawBordersInGroup","multX","multY","_applyPatternGradientTransform","_renderPaintInOrder","_renderStroke","_renderFill","_renderDashedStroke","_findCenterFromElement","_assignTransformMatrixProps","preserveAspectRatioOptions","cropX","cropY","offsetLeft","offsetTop","objectForm","_fromObject","cloneAsImage","dataUrl","boundingRect","getBoundingRect","origParams","originalCanvas","setGradient","setPatternFill","setColor","shouldCenterOrigin","_resetOrigin","centerH","viewportCenterH","centerV","viewportCenterV","viewportCenter","getLocalPointer","pClicked","objectLeftTop","createAccessors","extraParam","originXOffset","originYOffset","fromOriginX","fromOriginY","toOriginX","toOriginY","translateToCenterPoint","leftTop","getPointByOrigin","adjustPosition","to","offsetFrom","offsetTo","hypotFull","getScaledWidth","xFull","yFull","_originalOriginX","_originalOriginY","multiplyMatrices","oCoords","aCoords","ownMatrixCache","matrixCache","getCoords","absolute","calculate","calcCoords","pointTL","pointBR","lines","_getImageLines","_findCrossPoints","topline","rightline","bottomline","leftline","xi","iLine","xcount","lineKey","getScaledHeight","scaleToWidth","boundingRectFactor","scaleToHeight","_calculateCurrentDimensions","currentWidth","currentHeight","_angle","_hypotenuse","mtr","skipAbsolute","_setCornerCoords","_calcRotateMatrix","transformMatrixKey","dimensionMatrix","_calcDimensionsTransformMatrix","flipping","bbox","dimX","dimY","getSvgColorString","getSvgStyles","skipShadow","getSvgFilter","getSvgSpanStyles","useWhiteSpace","textDecoration","getSvgTextDecoration","overline","underline","linethrough","getSvgId","getSvgTransform","translatePart","anglePart","scalePart","skewXPart","skewYPart","getSvgTransformMatrix","_setSVGBg","textBgRects","_getFillAttributes","_createBaseSVGMarkup","addPaintOrder","saveProps","tmpObj","dashedPropertySet","_isEqual","origValue","currentValue","firstPass","_controlsVisibility","isControlVisible","newTheta","cornerHypotenuse","cosHalfOffset","sinHalfOffset","wh","drawRotatingPoint","rotateHeight","scaleOffset","_drawControl","control","controlName","_getControlsVisibility","setControlVisible","setControlsVisibility","FX_DURATION","fxCenterObjectH","callbacks","empty","fxCenterObjectV","fxRemove","skipCallbacks","propsToAnimate","_animate","propPair","from","valueProgress","timeProgress","coordProps","makeEdgeToOriginGetter","propertyNames","originValues","axis1","axis2","dimension","nearest","farthest","Line","_setWidthHeight","_getLeftToOriginX","_getTopToOriginY","calcLinePoints","origStrokeStyle","xMult","yMult","ATTRIBUTE_NAMES","parsedAttributes","pi","startAngle","endAngle","setRadius","startX","startY","endX","endY","largeFlag","getRadiusX","getRadiusY","isValidRadius","Triangle","widthBy2","heightBy2","piBy2","Ellipse","getRx","getRy","_initRxRy","w","isRounded","Polyline","calcDim","_calcDimensions","diffX","diffY","commonRender","Polygon","_toString","commandLengths","repeatedCommands","M","fromArray","_parsePath","_setPositionDimensions","_parseDimensions","_renderPathCommands","tempX","tempY","subpathStartX","subpathStartY","controlX","controlY","addTransform","chunks","currentPath","coordsStr","coordsParsed","re","command","commandLength","repeatedCommand","klen","aX","aY","pathUrl","useSetOnGroup","isAlreadyGrouped","_updateObjectsACoords","_calcBounds","_updateObjectsCoords","_updateObjectCoords","objectLeft","objectTop","_restoreObjectsState","objsToObject","originalDefaults","ownCache","_restoreObjectState","destroy","toActiveSelection","ungroupOnCanvas","setObjectsCoords","onlyWidthHeight","iLen","jLen","_getBounds","minXY","maxXY","toGroup","newGroup","childrenOverride","_lastScaleX","_lastScaleY","_filterScalingX","_filterScalingY","minimumScaleTrigger","cacheKey","filters","_initElement","_element","backend","filterBackend","evictCachesForKey","_originalElement","_initConfig","resizeFilter","applyResizeFilters","applyFilters","_filteredEl","setCrossOrigin","getOriginalSize","_stroke","filterObj","getSrc","imageMarkup","getSvgSrc","origFill","filtered","setSrc","retinaScaling","minimumScale","elementToFilter","sourceWidth","sourceHeight","imgElement","_needsResize","sW","sH","elementToDraw","_resetWidthHeight","CSS_CANVAS","_initFilters","pAR","rWidth","rHeight","pWidth","pHeight","_object","resizeFilters","fromURL","imgOptions","_getAngleValueForStraighten","straighten","fxStraighten","straightenObject","fxStraightenObject","testPrecision","fragmentSource","fragmentShader","createShader","FRAGMENT_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","setupGLContext","captureGPUInfo","isSupported","getParameter","MAX_TEXTURE_SIZE","precisions","webGlPrecision","resources","createWebGLCanvas","aPosition","Float32Array","chooseFastestCopyGLTo2DMethod","canUseImageData","canMeasurePerf","performance","canUseArrayBuffer","canUseUint8Clamped","startTime","drawImageTime","testContext","copyGLTo2D","glOptions","premultipliedAlpha","clearColor","cachedTexture","getCachedTexture","originalWidth","originalHeight","sourceTexture","createTexture","targetTexture","originalTexture","passes","webgl","programCache","pass","tempFbo","createFramebuffer","bindFramebuffer","FRAMEBUFFER","applyTo","resizeCanvasIfNeeded","bindTexture","TEXTURE_2D","deleteTexture","deleteFramebuffer","applyFiltersDebug","ret","glError","getError","NO_ERROR","errorString","glErrorToString","glErrorCode","errorCode","INVALID_ENUM","INVALID_VALUE","INVALID_OPERATION","INVALID_FRAMEBUFFER_OPERATION","OUT_OF_MEMORY","CONTEXT_LOST_WEBGL","clearWebGLCaches","textureCache","textureImageSource","texture","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","texImage2D","gpuInfo","ext","getExtension","renderer","vendor","UNMASKED_RENDERER_WEBGL","UNMASKED_VENDOR_WEBGL","sourceElement","originalEl","originalImageData","BaseFilter","vertexSource","createProgram","vertexShader","VERTEX_SHADER","getShaderInfoLog","program","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","attributeLocations","getAttributeLocations","uniformLocations","getUniformLocations","uStepW","getUniformLocation","uStepH","getAttribLocation","sendAttributeData","aPositionData","attributeLocation","aPostion","createBuffer","bindBuffer","ARRAY_BUFFER","enableVertexAttribArray","vertexAttribPointer","FLOAT","bufferData","STATIC_DRAW","_setupFrameBuffer","framebufferTexture2D","COLOR_ATTACHMENT0","_swapTextures","isNeutralState","applyToWebGL","applyTo2d","retrieveShader","shader","useProgram","uniform1f","sendUniformData","viewport","drawArrays","TRIANGLE_STRIP","bindAdditionalTexture","textureUnit","activeTexture","TEXTURE0","unbindAdditionalTexture","getMainParameter","mainParameter","setMainParameter","createHelpLayer","helpLayer","mainP","ColorMatrix","colorsOnly","_class","uColorMatrix","uConstants","constants","uniformMatrix4fv","uniform4fv","Brightness","brightness","uBrightness","Convolute","opaque","Convolute_3_1","Convolute_3_0","Convolute_5_1","Convolute_5_0","Convolute_7_1","Convolute_7_0","Convolute_9_1","Convolute_9_0","dstOff","scx","scy","srcOff","wt","weights","side","halfSide","sw","sh","output","createImageData","dst","alphaFac","uMatrix","uOpaque","uHalfSize","uSize","uniform1fv","Grayscale","lightness","luminosity","uMode","uniform1i","Invert","uInvert","Noise","noise","uNoise","uSeed","Pixelate","blocksize","_i","_j","_iLen","_jLen","uBlocksize","RemoveColor","distance","useAlpha","lowC","highC","uLow","uHigh","Brownie","Vintage","Kodachrome","Technicolor","Polaroid","Sepia","BlackWhite","BlendColor","screen","diff","lighten","darken","exclusion","tint","tg","alpha1","uColor","BlendImage","mask","TEXTURE1","calculateMatrix","canvas1","blendData","blendImage","uTransformMatrix","uImage","uniformMatrix3fv","Resize","resizeType","lanczosLobes","uDelta","uTaps","uniform2fv","horizontal","taps","filterWindow","getFilterWindow","generateShader","tempScale","getTaps","lobeFunction","lanczosCreate","offsets","fragmentSourceTOP","dW","dH","lobes","xx","rcpScaleX","rcpScaleY","oW","oH","sliceByTwo","hermiteFastResize","bilinearFiltering","lanczosResize","tmpCanvas","doneW","doneH","stepW","stepH","sX","sY","dX","dY","srcData","destImg","destData","lanczos","ratioX","ratioY","rcpRatioX","rcpRatioY","range2X","range2Y","cacheLanc","icenter","u","weight","fX","fY","xDiff","yDiff","chnl","origPix","w4","pixels","destImage","destPixels","ratioW","ratioH","ratioWHalf","ratioHHalf","img2","data2","weightsAlpha","gxR","gxG","gxB","gxA","centerY","yy","centerX","w0","Contrast","contrast","contrastF","uContrast","Saturation","saturation","adjust","uSaturation","Blur","aspectRatio","simpleBlur","canvas2","blurLayer1","blurLayer2","percent","ctx1","ctx2","newImageData","delta","chooseRightDelta","blurScale","Gamma","gamma","rInv","gInv","bInv","rVals","gVals","bVals","uGamma","uniform3fv","Composed","subFilters","HueRotation","rotation","rad","aThirdSqtSin","OneMinusCos","_dimensionAffectingProps","_reNewline","_reSpacesAndTabs","_reSpaceAndTab","_reWords","textAlign","textBackgroundColor","_fontSizeFraction","_fontSizeMult","charSpacing","_measuringContext","_styleProperties","__charBounds","__skipDimension","initDimensions","getMeasuringContext","_splitText","newLines","_splitTextIntoLines","textLines","_textLines","graphemeLines","_unwrappedTextLines","_unwrappedLines","_text","graphemeText","_clearCache","calcTextWidth","cursorWidth","enlargeSpaces","calcTextHeight","diffSpace","currentLineWidth","numberOfSpaces","accumulatedSpace","line","charBound","spaces","isEndOfWrapping","getLineWidth","kernedWidth","lineIndex","_setTextStyles","_renderTextLinesBackground","_renderTextDecoration","_renderText","_renderTextStroke","_renderTextFill","charStyle","forMeasuring","textBaseline","_getFontDeclaration","maxWidth","_renderTextLine","_renderChars","styleHas","heightOfLine","lineLeftOffset","lastColor","charBox","currentColor","lineTopOffset","originalFill","leftOffset","_getLeftOffset","topOffset","_getTopOffset","boxStart","boxWidth","getHeightOfLine","_getLineLeftOffset","getValueOfPropertyAt","getFontCache","cacheProp","_applyCharStyles","styleDeclaration","_measureChar","_char","previousChar","prevCharStyle","coupleWidth","previousWidth","fontCache","couple","stylesAreEqual","fontMultiplier","measureText","getHeightOfChar","measureLine","lineInfo","_measureLine","_getWidthOfCharSpacing","grapheme","prevGrapheme","graphemeInfo","lineBounds","_getGraphemeBox","numOfSpaces","previousGrapheme","skipLeft","getCompleteStyleDeclaration","info","previousBox","__lineHeights","maxHeight","currentCharHeight","_renderTextCommon","lineHeights","isEmptyStyles","actualStyle","nextStyle","timeToRender","isJustify","charsToRender","shortCut","_renderChar","_hasStyleChanged","_getStyleDeclaration","fullDecl","shouldFill","shouldStroke","fillText","strokeText","prevStyle","thisStyle","_hasStyleChangedForSvg","__lineWidths","_shouldClearDimensionCache","shouldClear","_forceClearCache","lastDecoration","currentDecoration","currentFill","lastFill","styleObject","CACHE_FONT_SIZE","newLine","newText","additionalProperties","needsDims","_key","parsedAnchor","textAnchor","textHeightScaleFactor","scaledDiff","textHeight","offX","p3","cleanStyle","letterCount","stylesCount","foundStyle","canBeSwapped","graphemeCount","removeStyle","lineNum","charNum","_extendStyles","loc","get2DCursorLocation","_getLineStyle","_setLineStyle","_setStyleDeclaration","selectionStart","skipWrapping","getSelectionStyles","startIndex","endIndex","selectionEnd","getStyleAtPosition","setSelectionStyles","lineStyle","_deleteStyleDeclaration","_deleteLineStyle","parseDecoration","IText","editable","editingBorderColor","cursorColor","cursorDelay","cursorDuration","caching","_reSpace","_currentCursorOpacity","_selectionDirection","_abortCursorAnimation","__widthOfSpace","inCompositionMode","initBehavior","setSelectionStart","_updateAndFire","setSelectionEnd","_fireSelectionChanged","_updateTextarea","initDelayedCursor","clearContextTop","cursorOffsetCache","renderCursorOrSelection","skipRestore","_clearTextArea","boundaries","_getCursorBoundaries","renderCursor","renderSelection","_getCursorBoundariesOffsets","cursorPosition","cursorLocation","charHeight","__isMousedown","startLine","endLine","startChar","endChar","realLineHeight","lineOffset","boxEnd","compositionColor","getCurrentCharFontSize","cp","_getCurrentCharIndex","getCurrentCharColor","initAddedHandler","initRemovedHandler","initCursorSelectionHandlers","initDoubleClickSimulation","mouseMoveHandler","_initCanvasHandlers","_removeCanvasHandlers","_tick","_currentTickState","_animateCursor","targetOpacity","completeMethod","tickState","isAborted","_onTickComplete","_cursorTimeout1","_currentTickCompleteState","restart","abortCursorAnimation","_cursorTimeout2","selectAll","getSelectedText","findWordBoundaryLeft","startFrom","findWordBoundaryRight","findLineBoundaryLeft","findLineBoundaryRight","searchWordBoundary","direction","reNonWord","selectWord","newSelectionStart","newSelectionEnd","selectLine","enterEditing","exitEditingOnOthers","initHiddenTextarea","_saveEditingProps","_setEditingProps","_textBeforeEdit","initMouseMoveHandler","getSelectionStartFromPointer","currentStart","currentEnd","__selectionStartOnMouseDown","restartCursorIfNeeded","fromStringToGraphemeSelection","smallerTextStart","graphemeStart","smallerTextEnd","fromGraphemeToStringSelection","newSelection","updateTextareaPosition","updateFromTextArea","_calcTextareaPosition","desiredPostion","compositionStart","upperCanvas","_savedProps","_restoreEditingProps","isTextChanged","_removeExtraneousStyles","removeStyleFromTo","styleObj","cursorStart","cursorEnd","lineStart","charStart","lineEnd","charEnd","shiftLineStyles","numericChar","clonedStyles","numericLine","insertNewlineStyleObject","qty","copiedStyle","currentCharStyle","newLineStyles","somethingAdded","numIndex","insertCharStyleObject","quantity","currentLineStyles","currentLineStylesCloned","numericIndex","newStyle","insertNewStyleBlock","insertedText","cursorLoc","addedLines","linesLenght","setSelectionStartEndWithShift","setSelectionInBoundaries","__lastClickTime","__lastLastClickTime","__lastPointer","__newClickTime","newPointer","isTripleClick","_stopEvent","__lastIsEditing","__lastSelected","initMousedownHandler","initMouseupHandler","initClicks","_mouseDownHandler","__mousedownX","__mousedownY","setCursorByClick","_isObjectMoved","mouseOffset","prevWidth","_getNewSelectionStartFromOffset","distanceBtwLastCharAndCursor","distanceBtwNextCharAndCursor","onKeyDown","onKeyUp","onInput","paste","onCompositionStart","onCompositionUpdate","onCompositionEnd","_clickHandlerInitialized","onClick","keysMap","9","27","33","34","35","36","37","38","39","40","ctrlKeysMapUp","67","88","ctrlKeysMapDown","65","keyCode","ctrlKey","metaKey","stopImmediatePropagation","_copyDone","fromPaste","removedText","nextText","charCount","nextCharCount","charDiff","textareaSelection","backDelete","copiedText","copiedTextStyle","compositionEnd","_getClipboardData","clipboardData","_getWidthBeforeCursor","widthBeforeCursor","getDownCursorOffset","selectionProp","_getSelectionForOffset","indexOnOtherLine","_getIndexOnLine","getUpCursorOffset","textBeforeCursor","charWidth","foundMatch","widthOfCharsOnLine","indexOnLine","leftEdge","rightEdge","offsetFromLeftEdge","moveCursorDown","_moveCursorUpOrDown","moveCursorUp","moveCursorWithShift","moveCursorWithoutShift","moveCursorLeft","_moveCursorLeftOrRight","_move","_moveLeft","_moveRight","moveCursorLeftWithoutShift","change","moveCursorLeftWithShift","moveCursorRight","actionName","moveCursorRightWithShift","moveCursorRightWithoutShift","changed","removeChars","insertChars","_getSVGLeftTopOffsets","textAndBg","_getSVGTextAndBg","textTop","textLeft","_wrapSVGTextAndBg","lineTop","textSpans","textTopOffset","textLeftOffset","_setSVGTextLineBg","_setSVGTextLineText","_createTextCharSpan","styleDecl","styleProps","fillStyles","_pushTextBgRect","fillColor","_getSVGLineTopOffset","lastHeight","Textbox","minWidth","dynamicMinWidth","__cachedLines","_styleMap","_generateStyleMap","textInfo","realLineCount","realLineCharCount","isWrapping","_wrapText","desiredWidth","_wrapLine","_measureWord","charOffset","_line","wordWidth","infixWidth","largestWordWidth","lineJustStarted","additionalSpace","getMinWidth","setObjectScaleOverridden","tw","__webpack_exports__","FabricCanvasObject","_object_js__WEBPACK_IMPORTED_MODULE_0__","_core_fabric_js__WEBPACK_IMPORTED_MODULE_1__","[object Object]","super","shape","defaultArg","shapeFabricClassMap","polyline","fabricObject","diameter","canvasView","addToCanvasView","isRemoved","removeFromCanvasView","layout","pathArrayFrom","commands","pathArray","quadratic","curvePoint","closed","imageUrls","promises","success","all","then","CanvasObject","_core_class_js__WEBPACK_IMPORTED_MODULE_0__","dereference","Class","CanvasView","_container","resize","innerHTML","canvasOptions","$canvas","trig","factor","randInt","lodash_default","arrayArgsOrVariadicArgsToArray","variadicArgs","loadImages","downscaledSize","$container","$","canvasContext","rgba","dpi","feet","inches","dist2","fromPoint","toLine","toPoint","lp1","lp2","l2","onLine","atob","dot","canvasPosition","byRadians","byDegrees","aroundOrigin","perpendicular","K","EPSILON","polygon","inside","yi","xj","yj","deltas","angleDelta","eval","_canvas_fabric_object_js__WEBPACK_IMPORTED_MODULE_0__","_canvas_view_js__WEBPACK_IMPORTED_MODULE_1__","_canvas_object_js__WEBPACK_IMPORTED_MODULE_2__","classes","fetch","model","samples","response","rgb","catch","positions","evenlyDistributedFor","spacing","spiralFor","ringCount","pathCommands","forCurveThrough","basic","containerId","images","renderScale","onDomReady","overlayObject","_renderPrint","_upperCanvas","_canvasContainer","mo","domReady","_core_generate_js__WEBPACK_IMPORTED_MODULE_0__","_core_canvas_js__WEBPACK_IMPORTED_MODULE_1__","_core_initialize_js__WEBPACK_IMPORTED_MODULE_2__","_core_util_js__WEBPACK_IMPORTED_MODULE_3__","_colors_index_js__WEBPACK_IMPORTED_MODULE_4__","generate","ui","init","colors","base64","ieee754","kMaxLength","TYPED_ARRAY_SUPPORT","RangeError","__proto__","encodingOrOffset","fromArrayLike","fromArrayBuffer","isEncoding","actual","write","fromString","checked","val","isnan","assertSize","isView","loweredCase","utf8ToBytes","base64ToBytes","bidirectionalIndexOf","arrayIndexOf","indexSize","valLength","read","buf","readUInt16BE","foundIndex","found","hexWrite","strLen","utf8Write","blitBuffer","asciiWrite","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","base64Slice","fromByteArray","utf8Slice","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","foo","subarray","typedArraySupport","poolSize","_augment","species","allocUnsafeSlow","_isBuffer","compare","list","swap16","swap32","swap64","hexSlice","asciiSlice","latin1Slice","utf16leSlice","equals","inspect","thisStart","thisEnd","thisCopy","targetCopy","_arr","out","bytes","checkOffset","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","INVALID_BASE64_RE","leadSurrogate","toByteArray","stringtrim","base64clean","b64","lens","getLens","validLen","placeHoldersLen","tmp","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","len2","encodeChunk","lookup","tripletToBase64","num","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","LN2","webpackPolyfill","deprecate","children"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 12);\n","/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.11';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g,\n      reTrimStart = /^\\s+/,\n      reTrimEnd = /\\s+$/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n      rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      // Use `util.types` for Node.js 10+.\n      var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n      if (types) {\n        return types;\n      }\n\n      // Legacy `process.binding('util')` for Node.js < 10.\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array and iteratees accept only\n     * one argument. The heuristic for whether a section qualifies for shortcut\n     * fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n     * following template settings to use alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      if (isSet(value)) {\n        value.forEach(function(subValue) {\n          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n        });\n\n        return result;\n      }\n\n      if (isMap(value)) {\n        value.forEach(function(subValue, key) {\n          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n        });\n\n        return result;\n      }\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = objIsArr ? arrayTag : getTag(object),\n          othTag = othIsArr ? arrayTag : getTag(other);\n\n      objTag = objTag == argsTag ? objectTag : objTag;\n      othTag = othTag == argsTag ? objectTag : othTag;\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        if (isObject(srcValue)) {\n          stack || (stack = new Stack);\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = safeGet(object, key),\n          srcValue = safeGet(source, key),\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || isFunction(objValue)) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      var index = -1;\n      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array == null ? 0 : array.length,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value)) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n        if (precision) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] === undefined\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n     * of source objects to the destination object for all destination properties\n     * that resolve to `undefined`.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n     * objects into destination objects that are passed thru.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n     * objects.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {string} key The key of the property to inspect.\n     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n     */\n    function customOmitClone(value) {\n      return isPlainObject(value) ? undefined : value;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(array);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = getAllKeys(object),\n          objLength = objProps.length,\n          othProps = getAllKeys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n      if (object == null) {\n        return [];\n      }\n      object = Object(object);\n      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n        return propertyIsEnumerable.call(object, symbol);\n      });\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return new Ctor;\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return new Ctor;\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      var type = typeof value;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n\n      return !!length &&\n        (type == 'number' ||\n          (type != 'symbol' && reIsUint.test(value))) &&\n            (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Gets the value at `key`, unless `key` is \"__proto__\".\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the property to get.\n     * @returns {*} Returns the property value.\n     */\n    function safeGet(object, key) {\n      if (key == '__proto__') {\n        return;\n      }\n\n      return object[key];\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (string.charCodeAt(0) === 46 /* . */) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, subString) {\n        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            timeWaiting = wait - timeSinceLastCall;\n\n        return maxing\n          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n          : timeWaiting;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are compared by strict equality, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return value\n        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n        : (value === 0 ? value : 0);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(object, sources) {\n      object = Object(object);\n\n      var index = -1;\n      var length = sources.length;\n      var guard = length > 2 ? sources[2] : undefined;\n\n      if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n        length = 1;\n      }\n\n      while (++index < length) {\n        var source = sources[index];\n        var props = keysIn(source);\n        var propsIndex = -1;\n        var propsLength = props.length;\n\n        while (++propsIndex < propsLength) {\n          var key = props[propsIndex];\n          var value = object[key];\n\n          if (value === undefined ||\n              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n            object[key] = source[key];\n          }\n        }\n      }\n\n      return object;\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, customDefaultsMerge);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = position == null\n        ? 0\n        : baseClamp(toInteger(position), 0, string.length);\n\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrim, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimEnd, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = (this.__filtered__ && !index)\n          ? new LazyWrapper(this)\n          : this.clone();\n\n        if (result.__filtered__) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = (lodashFunc.name + ''),\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n","\n\n/* build: `node build.js modules=ALL exclude=gestures,accessors minifier=uglifyjs` */\n/*! Fabric.js Copyright 2008-2015, Printio (Juriy Zaytsev, Maxim Chernyak) */\n\nvar fabric = fabric || { version: '2.0.1' };\n\nif (typeof exports !== 'undefined') {\n  exports.fabric = fabric;\n}\n\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n  fabric.document = document;\n  fabric.window = window;\n}\n// else {\n//   // assume we're running under node.js when document/window are not present\n//   fabric.document = require('jsdom')\n//     .jsdom(\n//       decodeURIComponent('%3C!DOCTYPE%20html%3E%3Chtml%3E%3Chead%3E%3C%2Fhead%3E%3Cbody%3E%3C%2Fbody%3E%3C%2Fhtml%3E'),\n//       { features: {\n//         FetchExternalResources: ['img']\n//       }\n//     });\n//   fabric.jsdomImplForWrapper = require('jsdom/lib/jsdom/living/generated/utils').implForWrapper;\n//   fabric.nodeCanvas = require('jsdom/lib/jsdom/utils').Canvas;\n//   fabric.window = fabric.document.defaultView;\n//   DOMParser = require('xmldom').DOMParser;\n// }\n\n/**\n * True when in environment that supports touch events\n * @type boolean\n */\nfabric.isTouchSupported = 'ontouchstart' in fabric.window;\n\n/**\n * True when in environment that's probably Node.js\n * @type boolean\n */\nfabric.isLikelyNode = typeof Buffer !== 'undefined' &&\n                      typeof window === 'undefined';\n\n/* _FROM_SVG_START_ */\n/**\n * Attributes parsed from all SVG elements\n * @type array\n */\nfabric.SHARED_ATTRIBUTES = [\n  \"display\",\n  \"transform\",\n  \"fill\", \"fill-opacity\", \"fill-rule\",\n  \"opacity\",\n  \"stroke\", \"stroke-dasharray\", \"stroke-linecap\",\n  \"stroke-linejoin\", \"stroke-miterlimit\",\n  \"stroke-opacity\", \"stroke-width\",\n  \"id\", \"paint-order\",\n  \"instantiated_by_use\"\n];\n/* _FROM_SVG_END_ */\n\n/**\n * Pixel per Inch as a default value set to 96. Can be changed for more realistic conversion.\n */\nfabric.DPI = 96;\nfabric.reNum = '(?:[-+]?(?:\\\\d+|\\\\d*\\\\.\\\\d+)(?:e[-+]?\\\\d+)?)';\nfabric.fontPaths = { };\nfabric.iMatrix = [1, 0, 0, 1, 0, 0];\nfabric.canvasModule = 'canvas';\n\n/**\n * Pixel limit for cache canvases. 1Mpx , 4Mpx should be fine.\n * @since 1.7.14\n * @type Number\n * @default\n */\nfabric.perfLimitSizeTotal = 2097152;\n\n/**\n * Pixel limit for cache canvases width or height. IE fixes the maximum at 5000\n * @since 1.7.14\n * @type Number\n * @default\n */\nfabric.maxCacheSideLimit = 4096;\n\n/**\n * Lowest pixel limit for cache canvases, set at 256PX\n * @since 1.7.14\n * @type Number\n * @default\n */\nfabric.minCacheSideLimit = 256;\n\n/**\n * Cache Object for widths of chars in text rendering.\n */\nfabric.charWidthsCache = { };\n\n/**\n * if webgl is enabled and available, textureSize will determine the size\n * of the canvas backend\n * @since 2.0.0\n * @type Number\n * @default\n */\nfabric.textureSize = 2048;\n\n/**\n * Enable webgl for filtering picture is available\n * A filtering backend will be initialized, this will both take memory and\n * time since a default 2048x2048 canvas will be created for the gl context\n * @since 2.0.0\n * @type Boolean\n * @default\n */\nfabric.enableGLFiltering = true;\n\n/**\n * Device Pixel Ratio\n * @see https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/HTML-canvas-guide/SettingUptheCanvas/SettingUptheCanvas.html\n */\nfabric.devicePixelRatio = fabric.window.devicePixelRatio ||\n                          fabric.window.webkitDevicePixelRatio ||\n                          fabric.window.mozDevicePixelRatio ||\n                          1;\n/**\n * Browser-specific constant to adjust CanvasRenderingContext2D.shadowBlur value,\n * which is unitless and not rendered equally across browsers.\n *\n * Values that work quite well (as of October 2017) are:\n * - Chrome: 1.5\n * - Edge: 1.75\n * - Firefox: 0.9\n * - Safari: 0.95\n *\n * @since 2.0.0\n * @type Number\n * @default 1\n */\nfabric.browserShadowBlurConstant = 1;\n\nfabric.initFilterBackend = function() {\n  if (fabric.enableGLFiltering && fabric.isWebglSupported && fabric.isWebglSupported(fabric.textureSize)) {\n    console.log('max texture size: ' + fabric.maxTextureSize);\n    return (new fabric.WebglFilterBackend({ tileSize: fabric.textureSize }));\n  }\n  else if (fabric.Canvas2dFilterBackend) {\n    return (new fabric.Canvas2dFilterBackend());\n  }\n};\n\n\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n  // ensure globality even if entire library were function wrapped (as in Meteor.js packaging system)\n  window.fabric = fabric;\n}\n\n\n(function() {\n\n  /**\n   * @private\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  function _removeEventListener(eventName, handler) {\n    if (!this.__eventListeners[eventName]) {\n      return;\n    }\n    var eventListener = this.__eventListeners[eventName];\n    if (handler) {\n      eventListener[eventListener.indexOf(handler)] = false;\n    }\n    else {\n      fabric.util.array.fill(eventListener, false);\n    }\n  }\n\n  /**\n   * Observes specified event\n   * @deprecated `observe` deprecated since 0.8.34 (use `on` instead)\n   * @memberOf fabric.Observable\n   * @alias on\n   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function that receives a notification when an event of the specified type occurs\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function observe(eventName, handler) {\n    if (!this.__eventListeners) {\n      this.__eventListeners = { };\n    }\n    // one object with key/value pairs was passed\n    if (arguments.length === 1) {\n      for (var prop in eventName) {\n        this.on(prop, eventName[prop]);\n      }\n    }\n    else {\n      if (!this.__eventListeners[eventName]) {\n        this.__eventListeners[eventName] = [];\n      }\n      this.__eventListeners[eventName].push(handler);\n    }\n    return this;\n  }\n\n  /**\n   * Stops event observing for a particular event handler. Calling this method\n   * without arguments removes all handlers for all events\n   * @deprecated `stopObserving` deprecated since 0.8.34 (use `off` instead)\n   * @memberOf fabric.Observable\n   * @alias off\n   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function to be deleted from EventListeners\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function stopObserving(eventName, handler) {\n    if (!this.__eventListeners) {\n      return;\n    }\n\n    // remove all key/value pairs (event name -> event handler)\n    if (arguments.length === 0) {\n      for (eventName in this.__eventListeners) {\n        _removeEventListener.call(this, eventName);\n      }\n    }\n    // one object with key/value pairs was passed\n    else if (arguments.length === 1 && typeof arguments[0] === 'object') {\n      for (var prop in eventName) {\n        _removeEventListener.call(this, prop, eventName[prop]);\n      }\n    }\n    else {\n      _removeEventListener.call(this, eventName, handler);\n    }\n    return this;\n  }\n\n  /**\n   * Fires event with an optional options object\n   * @deprecated `fire` deprecated since 1.0.7 (use `trigger` instead)\n   * @memberOf fabric.Observable\n   * @alias trigger\n   * @param {String} eventName Event name to fire\n   * @param {Object} [options] Options object\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function fire(eventName, options) {\n    if (!this.__eventListeners) {\n      return;\n    }\n\n    var listenersForEvent = this.__eventListeners[eventName];\n    if (!listenersForEvent) {\n      return;\n    }\n\n    for (var i = 0, len = listenersForEvent.length; i < len; i++) {\n      listenersForEvent[i] && listenersForEvent[i].call(this, options || { });\n    }\n    this.__eventListeners[eventName] = listenersForEvent.filter(function(value) {\n      return value !== false;\n    });\n    return this;\n  }\n\n  /**\n   * @namespace fabric.Observable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#events}\n   * @see {@link http://fabricjs.com/events|Events demo}\n   */\n  fabric.Observable = {\n    observe: observe,\n    stopObserving: stopObserving,\n    fire: fire,\n\n    on: observe,\n    off: stopObserving,\n    trigger: fire\n  };\n})();\n\n\n/**\n * @namespace fabric.Collection\n */\nfabric.Collection = {\n\n  _objects: [],\n\n  /**\n   * Adds objects to collection, Canvas or Group, then renders canvas\n   * (if `renderOnAddRemove` is not `false`).\n   * in case of Group no changes to bounding box are made.\n   * Objects should be instances of (or inherit from) fabric.Object\n   * Use of this function is highly discouraged for groups.\n   * you can add a bunch of objects with the add method but then you NEED\n   * to run a addWithUpdate call for the Group class or position/bbox will be wrong.\n   * @param {...fabric.Object} object Zero or more fabric instances\n   * @return {Self} thisArg\n   * @chainable\n   */\n  add: function () {\n    this._objects.push.apply(this._objects, arguments);\n    if (this._onObjectAdded) {\n      for (var i = 0, length = arguments.length; i < length; i++) {\n        this._onObjectAdded(arguments[i]);\n      }\n    }\n    this.renderOnAddRemove && this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Inserts an object into collection at specified index, then renders canvas (if `renderOnAddRemove` is not `false`)\n   * An object should be an instance of (or inherit from) fabric.Object\n   * Use of this function is highly discouraged for groups.\n   * you can add a bunch of objects with the insertAt method but then you NEED\n   * to run a addWithUpdate call for the Group class or position/bbox will be wrong.\n   * @param {Object} object Object to insert\n   * @param {Number} index Index to insert object at\n   * @param {Boolean} nonSplicing When `true`, no splicing (shifting) of objects occurs\n   * @return {Self} thisArg\n   * @chainable\n   */\n  insertAt: function (object, index, nonSplicing) {\n    var objects = this.getObjects();\n    if (nonSplicing) {\n      objects[index] = object;\n    }\n    else {\n      objects.splice(index, 0, object);\n    }\n    this._onObjectAdded && this._onObjectAdded(object);\n    this.renderOnAddRemove && this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Removes objects from a collection, then renders canvas (if `renderOnAddRemove` is not `false`)\n   * @param {...fabric.Object} object Zero or more fabric instances\n   * @return {Self} thisArg\n   * @chainable\n   */\n  remove: function() {\n    var objects = this.getObjects(),\n        index, somethingRemoved = false;\n\n    for (var i = 0, length = arguments.length; i < length; i++) {\n      index = objects.indexOf(arguments[i]);\n\n      // only call onObjectRemoved if an object was actually removed\n      if (index !== -1) {\n        somethingRemoved = true;\n        objects.splice(index, 1);\n        this._onObjectRemoved && this._onObjectRemoved(arguments[i]);\n      }\n    }\n\n    this.renderOnAddRemove && somethingRemoved && this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Executes given function for each object in this group\n   * @param {Function} callback\n   *                   Callback invoked with current object as first argument,\n   *                   index - as second and an array of all objects - as third.\n   *                   Callback is invoked in a context of Global Object (e.g. `window`)\n   *                   when no `context` argument is given\n   *\n   * @param {Object} context Context (aka thisObject)\n   * @return {Self} thisArg\n   * @chainable\n   */\n  forEachObject: function(callback, context) {\n    var objects = this.getObjects();\n    for (var i = 0, len = objects.length; i < len; i++) {\n      callback.call(context, objects[i], i, objects);\n    }\n    return this;\n  },\n\n  /**\n   * Returns an array of children objects of this instance\n   * Type parameter introduced in 1.3.10\n   * @param {String} [type] When specified, only objects of this type are returned\n   * @return {Array}\n   */\n  getObjects: function(type) {\n    if (typeof type === 'undefined') {\n      return this._objects;\n    }\n    return this._objects.filter(function(o) {\n      return o.type === type;\n    });\n  },\n\n  /**\n   * Returns object at specified index\n   * @param {Number} index\n   * @return {Self} thisArg\n   */\n  item: function (index) {\n    return this.getObjects()[index];\n  },\n\n  /**\n   * Returns true if collection contains no objects\n   * @return {Boolean} true if collection is empty\n   */\n  isEmpty: function () {\n    return this.getObjects().length === 0;\n  },\n\n  /**\n   * Returns a size of a collection (i.e: length of an array containing its objects)\n   * @return {Number} Collection size\n   */\n  size: function() {\n    return this.getObjects().length;\n  },\n\n  /**\n   * Returns true if collection contains an object\n   * @param {Object} object Object to check against\n   * @return {Boolean} `true` if collection contains an object\n   */\n  contains: function(object) {\n    return this.getObjects().indexOf(object) > -1;\n  },\n\n  /**\n   * Returns number representation of a collection complexity\n   * @return {Number} complexity\n   */\n  complexity: function () {\n    return this.getObjects().reduce(function (memo, current) {\n      memo += current.complexity ? current.complexity() : 0;\n      return memo;\n    }, 0);\n  }\n};\n\n\n/**\n * @namespace fabric.CommonMethods\n */\nfabric.CommonMethods = {\n\n  /**\n   * Sets object's properties from options\n   * @param {Object} [options] Options object\n   */\n  _setOptions: function(options) {\n    for (var prop in options) {\n      this.set(prop, options[prop]);\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [filler] Options object\n   * @param {String} [property] property to set the Gradient to\n   */\n  _initGradient: function(filler, property) {\n    if (filler && filler.colorStops && !(filler instanceof fabric.Gradient)) {\n      this.set(property, new fabric.Gradient(filler));\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [filler] Options object\n   * @param {String} [property] property to set the Pattern to\n   * @param {Function} [callback] callback to invoke after pattern load\n   */\n  _initPattern: function(filler, property, callback) {\n    if (filler && filler.source && !(filler instanceof fabric.Pattern)) {\n      this.set(property, new fabric.Pattern(filler, callback));\n    }\n    else {\n      callback && callback();\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [options] Options object\n   */\n  _initClipping: function(options) {\n    if (!options.clipTo || typeof options.clipTo !== 'string') {\n      return;\n    }\n\n    var functionBody = fabric.util.getFunctionBody(options.clipTo);\n    if (typeof functionBody !== 'undefined') {\n      this.clipTo = new Function('ctx', functionBody);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _setObject: function(obj) {\n    for (var prop in obj) {\n      this._set(prop, obj[prop]);\n    }\n  },\n\n  /**\n   * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\n   * @param {String|Object} key Property name or object (if object, iterate over the object properties)\n   * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  set: function(key, value) {\n    if (typeof key === 'object') {\n      this._setObject(key);\n    }\n    else {\n      if (typeof value === 'function' && key !== 'clipTo') {\n        this._set(key, value(this.get(key)));\n      }\n      else {\n        this._set(key, value);\n      }\n    }\n    return this;\n  },\n\n  _set: function(key, value) {\n    this[key] = value;\n  },\n\n  /**\n   * Toggles specified property from `true` to `false` or from `false` to `true`\n   * @param {String} property Property to toggle\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  toggle: function(property) {\n    var value = this.get(property);\n    if (typeof value === 'boolean') {\n      this.set(property, !value);\n    }\n    return this;\n  },\n\n  /**\n   * Basic getter\n   * @param {String} property Property name\n   * @return {*} value of a property\n   */\n  get: function(property) {\n    return this[property];\n  }\n};\n\n\n(function(global) {\n\n  var sqrt = Math.sqrt,\n      atan2 = Math.atan2,\n      pow = Math.pow,\n      abs = Math.abs,\n      PiBy180 = Math.PI / 180;\n\n  /**\n   * @namespace fabric.util\n   */\n  fabric.util = {\n\n    /**\n     * Removes value from an array.\n     * Presence of value (and its position in an array) is determined via `Array.prototype.indexOf`\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} array\n     * @param {*} value\n     * @return {Array} original array\n     */\n    removeFromArray: function(array, value) {\n      var idx = array.indexOf(value);\n      if (idx !== -1) {\n        array.splice(idx, 1);\n      }\n      return array;\n    },\n\n    /**\n     * Returns random number between 2 specified ones.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} min lower limit\n     * @param {Number} max upper limit\n     * @return {Number} random value (between min and max)\n     */\n    getRandomInt: function(min, max) {\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n    },\n\n    /**\n     * Transforms degrees to radians.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} degrees value in degrees\n     * @return {Number} value in radians\n     */\n    degreesToRadians: function(degrees) {\n      return degrees * PiBy180;\n    },\n\n    /**\n     * Transforms radians to degrees.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} radians value in radians\n     * @return {Number} value in degrees\n     */\n    radiansToDegrees: function(radians) {\n      return radians / PiBy180;\n    },\n\n    /**\n     * Rotates `point` around `origin` with `radians`\n     * @static\n     * @memberOf fabric.util\n     * @param {fabric.Point} point The point to rotate\n     * @param {fabric.Point} origin The origin of the rotation\n     * @param {Number} radians The radians of the angle for the rotation\n     * @return {fabric.Point} The new rotated point\n     */\n    rotatePoint: function(point, origin, radians) {\n      point.subtractEquals(origin);\n      var v = fabric.util.rotateVector(point, radians);\n      return new fabric.Point(v.x, v.y).addEquals(origin);\n    },\n\n    /**\n     * Rotates `vector` with `radians`\n     * @static\n     * @memberOf fabric.util\n     * @param {Object} vector The vector to rotate (x and y)\n     * @param {Number} radians The radians of the angle for the rotation\n     * @return {Object} The new rotated point\n     */\n    rotateVector: function(vector, radians) {\n      var sin = Math.sin(radians),\n          cos = Math.cos(radians),\n          rx = vector.x * cos - vector.y * sin,\n          ry = vector.x * sin + vector.y * cos;\n      return {\n        x: rx,\n        y: ry\n      };\n    },\n\n    /**\n     * Apply transform t to point p\n     * @static\n     * @memberOf fabric.util\n     * @param  {fabric.Point} p The point to transform\n     * @param  {Array} t The transform\n     * @param  {Boolean} [ignoreOffset] Indicates that the offset should not be applied\n     * @return {fabric.Point} The transformed point\n     */\n    transformPoint: function(p, t, ignoreOffset) {\n      if (ignoreOffset) {\n        return new fabric.Point(\n          t[0] * p.x + t[2] * p.y,\n          t[1] * p.x + t[3] * p.y\n        );\n      }\n      return new fabric.Point(\n        t[0] * p.x + t[2] * p.y + t[4],\n        t[1] * p.x + t[3] * p.y + t[5]\n      );\n    },\n\n    /**\n     * Returns coordinates of points's bounding rectangle (left, top, width, height)\n     * @param {Array} points 4 points array\n     * @return {Object} Object with left, top, width, height properties\n     */\n    makeBoundingBoxFromPoints: function(points) {\n      var xPoints = [points[0].x, points[1].x, points[2].x, points[3].x],\n          minX = fabric.util.array.min(xPoints),\n          maxX = fabric.util.array.max(xPoints),\n          width = maxX - minX,\n          yPoints = [points[0].y, points[1].y, points[2].y, points[3].y],\n          minY = fabric.util.array.min(yPoints),\n          maxY = fabric.util.array.max(yPoints),\n          height = maxY - minY;\n\n      return {\n        left: minX,\n        top: minY,\n        width: width,\n        height: height\n      };\n    },\n\n    /**\n     * Invert transformation t\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} t The transform\n     * @return {Array} The inverted transform\n     */\n    invertTransform: function(t) {\n      var a = 1 / (t[0] * t[3] - t[1] * t[2]),\n          r = [a * t[3], -a * t[1], -a * t[2], a * t[0]],\n          o = fabric.util.transformPoint({ x: t[4], y: t[5] }, r, true);\n      r[4] = -o.x;\n      r[5] = -o.y;\n      return r;\n    },\n\n    /**\n     * A wrapper around Number#toFixed, which contrary to native method returns number, not string.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number|String} number number to operate on\n     * @param {Number} fractionDigits number of fraction digits to \"leave\"\n     * @return {Number}\n     */\n    toFixed: function(number, fractionDigits) {\n      return parseFloat(Number(number).toFixed(fractionDigits));\n    },\n\n    /**\n     * Converts from attribute value to pixel value if applicable.\n     * Returns converted pixels or original value not converted.\n     * @param {Number|String} value number to operate on\n     * @param {Number} fontSize\n     * @return {Number|String}\n     */\n    parseUnit: function(value, fontSize) {\n      var unit = /\\D{0,2}$/.exec(value),\n          number = parseFloat(value);\n      if (!fontSize) {\n        fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n      }\n      switch (unit[0]) {\n        case 'mm':\n          return number * fabric.DPI / 25.4;\n\n        case 'cm':\n          return number * fabric.DPI / 2.54;\n\n        case 'in':\n          return number * fabric.DPI;\n\n        case 'pt':\n          return number * fabric.DPI / 72; // or * 4 / 3\n\n        case 'pc':\n          return number * fabric.DPI / 72 * 12; // or * 16\n\n        case 'em':\n          return number * fontSize;\n\n        default:\n          return number;\n      }\n    },\n\n    /**\n     * Function which always returns `false`.\n     * @static\n     * @memberOf fabric.util\n     * @return {Boolean}\n     */\n    falseFunction: function() {\n      return false;\n    },\n\n    /**\n     * Returns klass \"Class\" object of given namespace\n     * @memberOf fabric.util\n     * @param {String} type Type of object (eg. 'circle')\n     * @param {String} namespace Namespace to get klass \"Class\" object from\n     * @return {Object} klass \"Class\"\n     */\n    getKlass: function(type, namespace) {\n      // capitalize first letter only\n      type = fabric.util.string.camelize(type.charAt(0).toUpperCase() + type.slice(1));\n      return fabric.util.resolveNamespace(namespace)[type];\n    },\n\n    /**\n     * Returns array of attributes for given svg that fabric parses\n     * @memberOf fabric.util\n     * @param {String} type Type of svg element (eg. 'circle')\n     * @return {Array} string names of supported attributes\n     */\n    getSvgAttributes: function(type) {\n      var attributes = [\n        'instantiated_by_use',\n        'style',\n        'id',\n        'class'\n      ];\n      switch (type) {\n        case 'linearGradient':\n          attributes = attributes.concat(['x1', 'y1', 'x2', 'y2', 'gradientUnits', 'gradientTransform']);\n          break;\n        case 'radialGradient':\n          attributes = attributes.concat(['gradientUnits', 'gradientTransform', 'cx', 'cy', 'r', 'fx', 'fy', 'fr']);\n          break;\n        case 'stop':\n          attributes = attributes.concat(['offset', 'stop-color', 'stop-opacity']);\n          break;\n      }\n      return attributes;\n    },\n\n    /**\n     * Returns object of given namespace\n     * @memberOf fabric.util\n     * @param {String} namespace Namespace string e.g. 'fabric.Image.filter' or 'fabric'\n     * @return {Object} Object for given namespace (default fabric)\n     */\n    resolveNamespace: function(namespace) {\n      if (!namespace) {\n        return fabric;\n      }\n\n      var parts = namespace.split('.'),\n          len = parts.length, i,\n          obj = global || fabric.window;\n\n      for (i = 0; i < len; ++i) {\n        obj = obj[parts[i]];\n      }\n\n      return obj;\n    },\n\n    /**\n     * Loads image element from given url and passes it to a callback\n     * @memberOf fabric.util\n     * @param {String} url URL representing an image\n     * @param {Function} callback Callback; invoked with loaded image\n     * @param {*} [context] Context to invoke callback in\n     * @param {Object} [crossOrigin] crossOrigin value to set image element to\n     */\n    loadImage: function(url, callback, context, crossOrigin) {\n      if (!url) {\n        callback && callback.call(context, url);\n        return;\n      }\n\n      var img = fabric.util.createImage();\n\n      /** @ignore */\n      var onLoadCallback = function () {\n        callback && callback.call(context, img);\n        img = img.onload = img.onerror = null;\n      };\n\n      img.onload = onLoadCallback;\n      /** @ignore */\n      img.onerror = function() {\n        fabric.log('Error loading ' + img.src);\n        callback && callback.call(context, null, true);\n        img = img.onload = img.onerror = null;\n      };\n\n      // data-urls appear to be buggy with crossOrigin\n      // https://github.com/kangax/fabric.js/commit/d0abb90f1cd5c5ef9d2a94d3fb21a22330da3e0a#commitcomment-4513767\n      // see https://code.google.com/p/chromium/issues/detail?id=315152\n      //     https://bugzilla.mozilla.org/show_bug.cgi?id=935069\n      if (url.indexOf('data') !== 0 && crossOrigin) {\n        img.crossOrigin = crossOrigin;\n      }\n\n      // IE10 / IE11-Fix: SVG contents from data: URI\n      // will only be available if the IMG is present\n      // in the DOM (and visible)\n      if (url.substring(0,14) === 'data:image/svg') {\n        img.onload = null;\n        fabric.util.loadImageInDom(img, onLoadCallback);\n      }\n\n      img.src = url;\n    },\n\n    /**\n     * Attaches SVG image with data: URL to the dom\n     * @memberOf fabric.util\n     * @param {Object} img Image object with data:image/svg src\n     * @param {Function} callback Callback; invoked with loaded image\n     * @return {Object} DOM element (div containing the SVG image)\n     */\n    loadImageInDom: function(img, onLoadCallback) {\n      var div = fabric.document.createElement('div');\n      div.style.width = div.style.height = '1px';\n      div.style.left = div.style.top = '-100%';\n      div.style.position = 'absolute';\n      div.appendChild(img);\n      fabric.document.querySelector('body').appendChild(div);\n      /**\n       * Wrap in function to:\n       *   1. Call existing callback\n       *   2. Cleanup DOM\n       */\n      img.onload = function () {\n        onLoadCallback();\n        div.parentNode.removeChild(div);\n        div = null;\n      };\n    },\n\n    /**\n     * Creates corresponding fabric instances from their object representations\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} objects Objects to enliven\n     * @param {Function} callback Callback to invoke when all objects are created\n     * @param {String} namespace Namespace to get klass \"Class\" object from\n     * @param {Function} reviver Method for further parsing of object elements,\n     * called after each fabric object created.\n     */\n    enlivenObjects: function(objects, callback, namespace, reviver) {\n      objects = objects || [];\n\n      function onLoaded() {\n        if (++numLoadedObjects === numTotalObjects) {\n          callback && callback(enlivenedObjects);\n        }\n      }\n\n      var enlivenedObjects = [],\n          numLoadedObjects = 0,\n          numTotalObjects = objects.length;\n\n      if (!numTotalObjects) {\n        callback && callback(enlivenedObjects);\n        return;\n      }\n\n      objects.forEach(function (o, index) {\n        // if sparse array\n        if (!o || !o.type) {\n          onLoaded();\n          return;\n        }\n        var klass = fabric.util.getKlass(o.type, namespace);\n        klass.fromObject(o, function (obj, error) {\n          error || (enlivenedObjects[index] = obj);\n          reviver && reviver(o, obj, error);\n          onLoaded();\n        });\n      });\n    },\n\n    /**\n     * Create and wait for loading of patterns\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} patterns Objects to enliven\n     * @param {Function} callback Callback to invoke when all objects are created\n     * called after each fabric object created.\n     */\n    enlivenPatterns: function(patterns, callback) {\n      patterns = patterns || [];\n\n      function onLoaded() {\n        if (++numLoadedPatterns === numPatterns) {\n          callback && callback(enlivenedPatterns);\n        }\n      }\n\n      var enlivenedPatterns = [],\n          numLoadedPatterns = 0,\n          numPatterns = patterns.length;\n\n      if (!numPatterns) {\n        callback && callback(enlivenedPatterns);\n        return;\n      }\n\n      patterns.forEach(function (p, index) {\n        if (p && p.source) {\n          new fabric.Pattern(p, function(pattern) {\n            enlivenedPatterns[index] = pattern;\n            onLoaded();\n          });\n        }\n        else {\n          enlivenedPatterns[index] = p;\n          onLoaded();\n        }\n      });\n    },\n\n    /**\n     * Groups SVG elements (usually those retrieved from SVG document)\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} elements SVG elements to group\n     * @param {Object} [options] Options object\n     * @param {String} path Value to set sourcePath to\n     * @return {fabric.Object|fabric.Group}\n     */\n    groupSVGElements: function(elements, options, path) {\n      var object;\n      if (elements.length === 1) {\n        return elements[0];\n      }\n      if (options) {\n        if (options.width && options.height) {\n          options.centerPoint = {\n            x: options.width / 2,\n            y: options.height / 2\n          };\n        }\n        else {\n          delete options.width;\n          delete options.height;\n        }\n      }\n      object = new fabric.Group(elements, options);\n      if (typeof path !== 'undefined') {\n        object.sourcePath = path;\n      }\n      return object;\n    },\n\n    /**\n     * Populates an object with properties of another object\n     * @static\n     * @memberOf fabric.util\n     * @param {Object} source Source object\n     * @param {Object} destination Destination object\n     * @return {Array} properties Properties names to include\n     */\n    populateWithProperties: function(source, destination, properties) {\n      if (properties && Object.prototype.toString.call(properties) === '[object Array]') {\n        for (var i = 0, len = properties.length; i < len; i++) {\n          if (properties[i] in source) {\n            destination[properties[i]] = source[properties[i]];\n          }\n        }\n      }\n    },\n\n    /**\n     * Draws a dashed line between two points\n     *\n     * This method is used to draw dashed line around selection area.\n     * See <a href=\"http://stackoverflow.com/questions/4576724/dotted-stroke-in-canvas\">dotted stroke in canvas</a>\n     *\n     * @param {CanvasRenderingContext2D} ctx context\n     * @param {Number} x  start x coordinate\n     * @param {Number} y start y coordinate\n     * @param {Number} x2 end x coordinate\n     * @param {Number} y2 end y coordinate\n     * @param {Array} da dash array pattern\n     */\n    drawDashedLine: function(ctx, x, y, x2, y2, da) {\n      var dx = x2 - x,\n          dy = y2 - y,\n          len = sqrt(dx * dx + dy * dy),\n          rot = atan2(dy, dx),\n          dc = da.length,\n          di = 0,\n          draw = true;\n\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.moveTo(0, 0);\n      ctx.rotate(rot);\n\n      x = 0;\n      while (len > x) {\n        x += da[di++ % dc];\n        if (x > len) {\n          x = len;\n        }\n        ctx[draw ? 'lineTo' : 'moveTo'](x, 0);\n        draw = !draw;\n      }\n\n      ctx.restore();\n    },\n\n    /**\n     * Creates canvas element\n     * @static\n     * @memberOf fabric.util\n     * @return {CanvasElement} initialized canvas element\n     */\n    createCanvasElement: function() {\n      return fabric.document.createElement('canvas');\n    },\n\n    /**\n     * Creates image element (works on client and node)\n     * @static\n     * @memberOf fabric.util\n     * @return {HTMLImageElement} HTML image element\n     */\n    createImage: function() {\n      return fabric.document.createElement('img');\n    },\n\n    /**\n     * @static\n     * @memberOf fabric.util\n     * @deprecated since 2.0.0\n     * @param {fabric.Object} receiver Object implementing `clipTo` method\n     * @param {CanvasRenderingContext2D} ctx Context to clip\n     */\n    clipContext: function(receiver, ctx) {\n      ctx.save();\n      ctx.beginPath();\n      receiver.clipTo(ctx);\n      ctx.clip();\n    },\n\n    /**\n     * Multiply matrix A by matrix B to nest transformations\n     * @static\n     * @memberOf fabric.util\n     * @param  {Array} a First transformMatrix\n     * @param  {Array} b Second transformMatrix\n     * @param  {Boolean} is2x2 flag to multiply matrices as 2x2 matrices\n     * @return {Array} The product of the two transform matrices\n     */\n    multiplyTransformMatrices: function(a, b, is2x2) {\n      // Matrix multiply a * b\n      return [\n        a[0] * b[0] + a[2] * b[1],\n        a[1] * b[0] + a[3] * b[1],\n        a[0] * b[2] + a[2] * b[3],\n        a[1] * b[2] + a[3] * b[3],\n        is2x2 ? 0 : a[0] * b[4] + a[2] * b[5] + a[4],\n        is2x2 ? 0 : a[1] * b[4] + a[3] * b[5] + a[5]\n      ];\n    },\n\n    /**\n     * Decomposes standard 2x2 matrix into transform componentes\n     * @static\n     * @memberOf fabric.util\n     * @param  {Array} a transformMatrix\n     * @return {Object} Components of transform\n     */\n    qrDecompose: function(a) {\n      var angle = atan2(a[1], a[0]),\n          denom = pow(a[0], 2) + pow(a[1], 2),\n          scaleX = sqrt(denom),\n          scaleY = (a[0] * a[3] - a[2] * a [1]) / scaleX,\n          skewX = atan2(a[0] * a[2] + a[1] * a [3], denom);\n      return {\n        angle: angle  / PiBy180,\n        scaleX: scaleX,\n        scaleY: scaleY,\n        skewX: skewX / PiBy180,\n        skewY: 0,\n        translateX: a[4],\n        translateY: a[5]\n      };\n    },\n\n    customTransformMatrix: function(scaleX, scaleY, skewX) {\n      var skewMatrixX = [1, 0, abs(Math.tan(skewX * PiBy180)), 1],\n          scaleMatrix = [abs(scaleX), 0, 0, abs(scaleY)];\n      return fabric.util.multiplyTransformMatrices(scaleMatrix, skewMatrixX, true);\n    },\n\n    resetObjectTransform: function (target) {\n      target.scaleX = 1;\n      target.scaleY = 1;\n      target.skewX = 0;\n      target.skewY = 0;\n      target.flipX = false;\n      target.flipY = false;\n      target.rotate(0);\n    },\n\n    /**\n     * Returns string representation of function body\n     * @param {Function} fn Function to get body of\n     * @return {String} Function body\n     */\n    getFunctionBody: function(fn) {\n      return (String(fn).match(/function[^{]*\\{([\\s\\S]*)\\}/) || {})[1];\n    },\n\n    /**\n     * Returns true if context has transparent pixel\n     * at specified location (taking tolerance into account)\n     * @param {CanvasRenderingContext2D} ctx context\n     * @param {Number} x x coordinate\n     * @param {Number} y y coordinate\n     * @param {Number} tolerance Tolerance\n     */\n    isTransparent: function(ctx, x, y, tolerance) {\n\n      // If tolerance is > 0 adjust start coords to take into account.\n      // If moves off Canvas fix to 0\n      if (tolerance > 0) {\n        if (x > tolerance) {\n          x -= tolerance;\n        }\n        else {\n          x = 0;\n        }\n        if (y > tolerance) {\n          y -= tolerance;\n        }\n        else {\n          y = 0;\n        }\n      }\n\n      var _isTransparent = true, i, temp,\n          imageData = ctx.getImageData(x, y, (tolerance * 2) || 1, (tolerance * 2) || 1),\n          l = imageData.data.length;\n\n      // Split image data - for tolerance > 1, pixelDataSize = 4;\n      for (i = 3; i < l; i += 4) {\n        temp = imageData.data[i];\n        _isTransparent = temp <= 0;\n        if (_isTransparent === false) {\n          break; // Stop if colour found\n        }\n      }\n\n      imageData = null;\n\n      return _isTransparent;\n    },\n\n    /**\n     * Parse preserveAspectRatio attribute from element\n     * @param {string} attribute to be parsed\n     * @return {Object} an object containing align and meetOrSlice attribute\n     */\n    parsePreserveAspectRatioAttribute: function(attribute) {\n      var meetOrSlice = 'meet', alignX = 'Mid', alignY = 'Mid',\n          aspectRatioAttrs = attribute.split(' '), align;\n\n      if (aspectRatioAttrs && aspectRatioAttrs.length) {\n        meetOrSlice = aspectRatioAttrs.pop();\n        if (meetOrSlice !== 'meet' && meetOrSlice !== 'slice') {\n          align = meetOrSlice;\n          meetOrSlice = 'meet';\n        }\n        else if (aspectRatioAttrs.length) {\n          align = aspectRatioAttrs.pop();\n        }\n      }\n      //divide align in alignX and alignY\n      alignX = align !== 'none' ? align.slice(1, 4) : 'none';\n      alignY = align !== 'none' ? align.slice(5, 8) : 'none';\n      return {\n        meetOrSlice: meetOrSlice,\n        alignX: alignX,\n        alignY: alignY\n      };\n    },\n\n    /**\n     * Clear char widths cache for a font family.\n     * @memberOf fabric.util\n     * @param {String} [fontFamily] font family to clear\n     */\n    clearFabricFontCache: function(fontFamily) {\n      if (!fontFamily) {\n        fabric.charWidthsCache = { };\n      }\n      else if (fabric.charWidthsCache[fontFamily]) {\n        delete fabric.charWidthsCache[fontFamily];\n      }\n    },\n\n    /**\n     * Clear char widths cache for a font family.\n     * @memberOf fabric.util\n     * @param {Number} ar aspect ratio\n     * @param {Number} maximumArea Maximum area you want to achieve\n     * @return {Object.x} Limited dimensions by X\n     * @return {Object.y} Limited dimensions by Y\n     */\n    limitDimsByArea: function(ar, maximumArea) {\n      var roughWidth = Math.sqrt(maximumArea * ar),\n          perfLimitSizeY = Math.floor(maximumArea / roughWidth);\n      return { x: Math.floor(roughWidth), y: perfLimitSizeY };\n    },\n\n    capValue: function(min, value, max) {\n      return Math.max(min, Math.min(value, max));\n    },\n\n    findScaleToFit: function(source, destination) {\n      return Math.min(destination.width / source.width, destination.height / source.height);\n    },\n\n    findScaleToCover: function(source, destination) {\n      return Math.max(destination.width / source.width, destination.height / source.height);\n    }\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  var arcToSegmentsCache = { },\n      segmentToBezierCache = { },\n      boundsOfCurveCache = { },\n      _join = Array.prototype.join;\n\n  /* Adapted from http://dxr.mozilla.org/mozilla-central/source/content/svg/content/src/nsSVGPathDataParser.cpp\n   * by Andrea Bogazzi code is under MPL. if you don't have a copy of the license you can take it here\n   * http://mozilla.org/MPL/2.0/\n   */\n  function arcToSegments(toX, toY, rx, ry, large, sweep, rotateX) {\n    var argsString = _join.call(arguments);\n    if (arcToSegmentsCache[argsString]) {\n      return arcToSegmentsCache[argsString];\n    }\n\n    var PI = Math.PI, th = rotateX * PI / 180,\n        sinTh = Math.sin(th),\n        cosTh = Math.cos(th),\n        fromX = 0, fromY = 0;\n\n    rx = Math.abs(rx);\n    ry = Math.abs(ry);\n\n    var px = -cosTh * toX * 0.5 - sinTh * toY * 0.5,\n        py = -cosTh * toY * 0.5 + sinTh * toX * 0.5,\n        rx2 = rx * rx, ry2 = ry * ry, py2 = py * py, px2 = px * px,\n        pl = rx2 * ry2 - rx2 * py2 - ry2 * px2,\n        root = 0;\n\n    if (pl < 0) {\n      var s = Math.sqrt(1 - pl / (rx2 * ry2));\n      rx *= s;\n      ry *= s;\n    }\n    else {\n      root = (large === sweep ? -1.0 : 1.0) *\n              Math.sqrt( pl / (rx2 * py2 + ry2 * px2));\n    }\n\n    var cx = root * rx * py / ry,\n        cy = -root * ry * px / rx,\n        cx1 = cosTh * cx - sinTh * cy + toX * 0.5,\n        cy1 = sinTh * cx + cosTh * cy + toY * 0.5,\n        mTheta = calcVectorAngle(1, 0, (px - cx) / rx, (py - cy) / ry),\n        dtheta = calcVectorAngle((px - cx) / rx, (py - cy) / ry, (-px - cx) / rx, (-py - cy) / ry);\n\n    if (sweep === 0 && dtheta > 0) {\n      dtheta -= 2 * PI;\n    }\n    else if (sweep === 1 && dtheta < 0) {\n      dtheta += 2 * PI;\n    }\n\n    // Convert into cubic bezier segments <= 90deg\n    var segments = Math.ceil(Math.abs(dtheta / PI * 2)),\n        result = [], mDelta = dtheta / segments,\n        mT = 8 / 3 * Math.sin(mDelta / 4) * Math.sin(mDelta / 4) / Math.sin(mDelta / 2),\n        th3 = mTheta + mDelta;\n\n    for (var i = 0; i < segments; i++) {\n      result[i] = segmentToBezier(mTheta, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY);\n      fromX = result[i][4];\n      fromY = result[i][5];\n      mTheta = th3;\n      th3 += mDelta;\n    }\n    arcToSegmentsCache[argsString] = result;\n    return result;\n  }\n\n  function segmentToBezier(th2, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY) {\n    var argsString2 = _join.call(arguments);\n    if (segmentToBezierCache[argsString2]) {\n      return segmentToBezierCache[argsString2];\n    }\n\n    var costh2 = Math.cos(th2),\n        sinth2 = Math.sin(th2),\n        costh3 = Math.cos(th3),\n        sinth3 = Math.sin(th3),\n        toX = cosTh * rx * costh3 - sinTh * ry * sinth3 + cx1,\n        toY = sinTh * rx * costh3 + cosTh * ry * sinth3 + cy1,\n        cp1X = fromX + mT * ( -cosTh * rx * sinth2 - sinTh * ry * costh2),\n        cp1Y = fromY + mT * ( -sinTh * rx * sinth2 + cosTh * ry * costh2),\n        cp2X = toX + mT * ( cosTh * rx * sinth3 + sinTh * ry * costh3),\n        cp2Y = toY + mT * ( sinTh * rx * sinth3 - cosTh * ry * costh3);\n\n    segmentToBezierCache[argsString2] = [\n      cp1X, cp1Y,\n      cp2X, cp2Y,\n      toX, toY\n    ];\n    return segmentToBezierCache[argsString2];\n  }\n\n  /*\n   * Private\n   */\n  function calcVectorAngle(ux, uy, vx, vy) {\n    var ta = Math.atan2(uy, ux),\n        tb = Math.atan2(vy, vx);\n    if (tb >= ta) {\n      return tb - ta;\n    }\n    else {\n      return 2 * Math.PI - (ta - tb);\n    }\n  }\n\n  /**\n   * Draws arc\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {Number} fx\n   * @param {Number} fy\n   * @param {Array} coords\n   */\n  fabric.util.drawArc = function(ctx, fx, fy, coords) {\n    var rx = coords[0],\n        ry = coords[1],\n        rot = coords[2],\n        large = coords[3],\n        sweep = coords[4],\n        tx = coords[5],\n        ty = coords[6],\n        segs = [[], [], [], []],\n        segsNorm = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\n    for (var i = 0, len = segsNorm.length; i < len; i++) {\n      segs[i][0] = segsNorm[i][0] + fx;\n      segs[i][1] = segsNorm[i][1] + fy;\n      segs[i][2] = segsNorm[i][2] + fx;\n      segs[i][3] = segsNorm[i][3] + fy;\n      segs[i][4] = segsNorm[i][4] + fx;\n      segs[i][5] = segsNorm[i][5] + fy;\n      ctx.bezierCurveTo.apply(ctx, segs[i]);\n    }\n  };\n\n  /**\n   * Calculate bounding box of a elliptic-arc\n   * @param {Number} fx start point of arc\n   * @param {Number} fy\n   * @param {Number} rx horizontal radius\n   * @param {Number} ry vertical radius\n   * @param {Number} rot angle of horizontal axe\n   * @param {Number} large 1 or 0, whatever the arc is the big or the small on the 2 points\n   * @param {Number} sweep 1 or 0, 1 clockwise or counterclockwise direction\n   * @param {Number} tx end point of arc\n   * @param {Number} ty\n   */\n  fabric.util.getBoundsOfArc = function(fx, fy, rx, ry, rot, large, sweep, tx, ty) {\n\n    var fromX = 0, fromY = 0, bound, bounds = [],\n        segs = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\n    for (var i = 0, len = segs.length; i < len; i++) {\n      bound = getBoundsOfCurve(fromX, fromY, segs[i][0], segs[i][1], segs[i][2], segs[i][3], segs[i][4], segs[i][5]);\n      bounds.push({ x: bound[0].x + fx, y: bound[0].y + fy });\n      bounds.push({ x: bound[1].x + fx, y: bound[1].y + fy });\n      fromX = segs[i][4];\n      fromY = segs[i][5];\n    }\n    return bounds;\n  };\n\n  /**\n   * Calculate bounding box of a beziercurve\n   * @param {Number} x0 starting point\n   * @param {Number} y0\n   * @param {Number} x1 first control point\n   * @param {Number} y1\n   * @param {Number} x2 secondo control point\n   * @param {Number} y2\n   * @param {Number} x3 end of beizer\n   * @param {Number} y3\n   */\n  // taken from http://jsbin.com/ivomiq/56/edit  no credits available for that.\n  function getBoundsOfCurve(x0, y0, x1, y1, x2, y2, x3, y3) {\n    var argsString = _join.call(arguments);\n    if (boundsOfCurveCache[argsString]) {\n      return boundsOfCurveCache[argsString];\n    }\n\n    var sqrt = Math.sqrt,\n        min = Math.min, max = Math.max,\n        abs = Math.abs, tvalues = [],\n        bounds = [[], []],\n        a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n\n    b = 6 * x0 - 12 * x1 + 6 * x2;\n    a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n    c = 3 * x1 - 3 * x0;\n\n    for (var i = 0; i < 2; ++i) {\n      if (i > 0) {\n        b = 6 * y0 - 12 * y1 + 6 * y2;\n        a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n        c = 3 * y1 - 3 * y0;\n      }\n\n      if (abs(a) < 1e-12) {\n        if (abs(b) < 1e-12) {\n          continue;\n        }\n        t = -c / b;\n        if (0 < t && t < 1) {\n          tvalues.push(t);\n        }\n        continue;\n      }\n      b2ac = b * b - 4 * c * a;\n      if (b2ac < 0) {\n        continue;\n      }\n      sqrtb2ac = sqrt(b2ac);\n      t1 = (-b + sqrtb2ac) / (2 * a);\n      if (0 < t1 && t1 < 1) {\n        tvalues.push(t1);\n      }\n      t2 = (-b - sqrtb2ac) / (2 * a);\n      if (0 < t2 && t2 < 1) {\n        tvalues.push(t2);\n      }\n    }\n\n    var x, y, j = tvalues.length, jlen = j, mt;\n    while (j--) {\n      t = tvalues[j];\n      mt = 1 - t;\n      x = (mt * mt * mt * x0) + (3 * mt * mt * t * x1) + (3 * mt * t * t * x2) + (t * t * t * x3);\n      bounds[0][j] = x;\n\n      y = (mt * mt * mt * y0) + (3 * mt * mt * t * y1) + (3 * mt * t * t * y2) + (t * t * t * y3);\n      bounds[1][j] = y;\n    }\n\n    bounds[0][jlen] = x0;\n    bounds[1][jlen] = y0;\n    bounds[0][jlen + 1] = x3;\n    bounds[1][jlen + 1] = y3;\n    var result = [\n      {\n        x: min.apply(null, bounds[0]),\n        y: min.apply(null, bounds[1])\n      },\n      {\n        x: max.apply(null, bounds[0]),\n        y: max.apply(null, bounds[1])\n      }\n    ];\n    boundsOfCurveCache[argsString] = result;\n    return result;\n  }\n\n  fabric.util.getBoundsOfCurve = getBoundsOfCurve;\n\n})();\n\n\n(function() {\n\n  var slice = Array.prototype.slice;\n\n  /**\n   * Invokes method on all items in a given array\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} method Name of a method to invoke\n   * @return {Array}\n   */\n  function invoke(array, method) {\n    var args = slice.call(arguments, 2), result = [];\n    for (var i = 0, len = array.length; i < len; i++) {\n      result[i] = args.length ? array[i][method].apply(array[i], args) : array[i][method].call(array[i]);\n    }\n    return result;\n  }\n\n  /**\n   * Finds maximum value in array (not necessarily \"first\" one)\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} byProperty\n   * @return {*}\n   */\n  function max(array, byProperty) {\n    return find(array, byProperty, function(value1, value2) {\n      return value1 >= value2;\n    });\n  }\n\n  /**\n   * Finds minimum value in array (not necessarily \"first\" one)\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} byProperty\n   * @return {*}\n   */\n  function min(array, byProperty) {\n    return find(array, byProperty, function(value1, value2) {\n      return value1 < value2;\n    });\n  }\n\n  /**\n   * @private\n   */\n  function fill(array, value) {\n    var k = array.length;\n    while (k--) {\n      array[k] = value;\n    }\n    return array;\n  }\n\n  /**\n   * @private\n   */\n  function find(array, byProperty, condition) {\n    if (!array || array.length === 0) {\n      return;\n    }\n\n    var i = array.length - 1,\n        result = byProperty ? array[i][byProperty] : array[i];\n    if (byProperty) {\n      while (i--) {\n        if (condition(array[i][byProperty], result)) {\n          result = array[i][byProperty];\n        }\n      }\n    }\n    else {\n      while (i--) {\n        if (condition(array[i], result)) {\n          result = array[i];\n        }\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @namespace fabric.util.array\n   */\n  fabric.util.array = {\n    fill: fill,\n    invoke: invoke,\n    min: min,\n    max: max\n  };\n\n})();\n\n\n(function() {\n  /**\n   * Copies all enumerable properties of one js object to another\n   * Does not clone or extend fabric.Object subclasses.\n   * @memberOf fabric.util.object\n   * @param {Object} destination Where to copy to\n   * @param {Object} source Where to copy from\n   * @return {Object}\n   */\n\n  function extend(destination, source, deep) {\n    // JScript DontEnum bug is not taken care of\n    // the deep clone is for internal use, is not meant to avoid\n    // javascript traps or cloning html element or self referenced objects.\n    if (deep) {\n      if (!fabric.isLikelyNode && source instanceof Element) {\n        // avoid cloning deep images, canvases,\n        destination = source;\n      }\n      else if (source instanceof Array) {\n        destination = [];\n        for (var i = 0, len = source.length; i < len; i++) {\n          destination[i] = extend({ }, source[i], deep);\n        }\n      }\n      else if (source && typeof source === 'object') {\n        for (var property in source) {\n          if (source.hasOwnProperty(property)) {\n            destination[property] = extend({ }, source[property], deep);\n          }\n        }\n      }\n      else {\n        // this sounds odd for an extend but is ok for recursive use\n        destination = source;\n      }\n    }\n    else {\n      for (var property in source) {\n        destination[property] = source[property];\n      }\n    }\n    return destination;\n  }\n\n  /**\n   * Creates an empty object and copies all enumerable properties of another object to it\n   * @memberOf fabric.util.object\n   * TODO: this function return an empty object if you try to clone null\n   * @param {Object} object Object to clone\n   * @return {Object}\n   */\n  function clone(object, deep) {\n    return extend({ }, object, deep);\n  }\n\n  /** @namespace fabric.util.object */\n  fabric.util.object = {\n    extend: extend,\n    clone: clone\n  };\n  fabric.util.object.extend(fabric.util, fabric.Observable);\n})();\n\n\n(function() {\n\n  /**\n   * Camelizes a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to camelize\n   * @return {String} Camelized version of a string\n   */\n  function camelize(string) {\n    return string.replace(/-+(.)?/g, function(match, character) {\n      return character ? character.toUpperCase() : '';\n    });\n  }\n\n  /**\n   * Capitalizes a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to capitalize\n   * @param {Boolean} [firstLetterOnly] If true only first letter is capitalized\n   * and other letters stay untouched, if false first letter is capitalized\n   * and other letters are converted to lowercase.\n   * @return {String} Capitalized version of a string\n   */\n  function capitalize(string, firstLetterOnly) {\n    return string.charAt(0).toUpperCase() +\n      (firstLetterOnly ? string.slice(1) : string.slice(1).toLowerCase());\n  }\n\n  /**\n   * Escapes XML in a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to escape\n   * @return {String} Escaped version of a string\n   */\n  function escapeXml(string) {\n    return string.replace(/&/g, '&amp;')\n      .replace(/\"/g, '&quot;')\n      .replace(/'/g, '&apos;')\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;');\n  }\n\n  /**\n   * Divide a string in the user perceived single units\n   * @memberOf fabric.util.string\n   * @param {String} textstring String to escape\n   * @return {Array} array containing the graphemes\n   */\n  function graphemeSplit(textstring) {\n    var i = 0, chr, graphemes = [];\n    for (i = 0, chr; i < textstring.length; i++) {\n      if ((chr = getWholeChar(textstring, i)) === false) {\n        continue;\n      }\n      graphemes.push(chr);\n    }\n    return graphemes;\n  }\n\n  // taken from mdn in the charAt doc page.\n  function getWholeChar(str, i) {\n    var code = str.charCodeAt(i);\n\n    if (isNaN(code)) {\n      return ''; // Position not found\n    }\n    if (code < 0xD800 || code > 0xDFFF) {\n      return str.charAt(i);\n    }\n\n    // High surrogate (could change last hex to 0xDB7F to treat high private\n    // surrogates as single characters)\n    if (0xD800 <= code && code <= 0xDBFF) {\n      if (str.length <= (i + 1)) {\n        throw 'High surrogate without following low surrogate';\n      }\n      var next = str.charCodeAt(i + 1);\n      if (0xDC00 > next || next > 0xDFFF) {\n        throw 'High surrogate without following low surrogate';\n      }\n      return str.charAt(i) + str.charAt(i + 1);\n    }\n    // Low surrogate (0xDC00 <= code && code <= 0xDFFF)\n    if (i === 0) {\n      throw 'Low surrogate without preceding high surrogate';\n    }\n    var prev = str.charCodeAt(i - 1);\n\n    // (could change last hex to 0xDB7F to treat high private\n    // surrogates as single characters)\n    if (0xD800 > prev || prev > 0xDBFF) {\n      throw 'Low surrogate without preceding high surrogate';\n    }\n    // We can pass over low surrogates now as the second component\n    // in a pair which we have already processed\n    return false;\n  }\n\n\n  /**\n   * String utilities\n   * @namespace fabric.util.string\n   */\n  fabric.util.string = {\n    camelize: camelize,\n    capitalize: capitalize,\n    escapeXml: escapeXml,\n    graphemeSplit: graphemeSplit\n  };\n})();\n\n\n(function() {\n\n  var slice = Array.prototype.slice, emptyFunction = function() { },\n\n      IS_DONTENUM_BUGGY = (function() {\n        for (var p in { toString: 1 }) {\n          if (p === 'toString') {\n            return false;\n          }\n        }\n        return true;\n      })(),\n\n      /** @ignore */\n      addMethods = function(klass, source, parent) {\n        for (var property in source) {\n\n          if (property in klass.prototype &&\n              typeof klass.prototype[property] === 'function' &&\n              (source[property] + '').indexOf('callSuper') > -1) {\n\n            klass.prototype[property] = (function(property) {\n              return function() {\n\n                var superclass = this.constructor.superclass;\n                this.constructor.superclass = parent;\n                var returnValue = source[property].apply(this, arguments);\n                this.constructor.superclass = superclass;\n\n                if (property !== 'initialize') {\n                  return returnValue;\n                }\n              };\n            })(property);\n          }\n          else {\n            klass.prototype[property] = source[property];\n          }\n\n          if (IS_DONTENUM_BUGGY) {\n            if (source.toString !== Object.prototype.toString) {\n              klass.prototype.toString = source.toString;\n            }\n            if (source.valueOf !== Object.prototype.valueOf) {\n              klass.prototype.valueOf = source.valueOf;\n            }\n          }\n        }\n      };\n\n  function Subclass() { }\n\n  function callSuper(methodName) {\n    var parentMethod = null,\n        _this = this;\n\n    // climb prototype chain to find method not equal to callee's method\n    while (_this.constructor.superclass) {\n      var superClassMethod = _this.constructor.superclass.prototype[methodName];\n      if (_this[methodName] !== superClassMethod) {\n        parentMethod = superClassMethod;\n        break;\n      }\n      // eslint-disable-next-line\n      _this = _this.constructor.superclass.prototype;\n    }\n\n    if (!parentMethod) {\n      return console.log('tried to callSuper ' + methodName + ', method not found in prototype chain', this);\n    }\n\n    return (arguments.length > 1)\n      ? parentMethod.apply(this, slice.call(arguments, 1))\n      : parentMethod.call(this);\n  }\n\n  /**\n   * Helper for creation of \"classes\".\n   * @memberOf fabric.util\n   * @param {Function} [parent] optional \"Class\" to inherit from\n   * @param {Object} [properties] Properties shared by all instances of this class\n   *                  (be careful modifying objects defined here as this would affect all instances)\n   */\n  function createClass() {\n    var parent = null,\n        properties = slice.call(arguments, 0);\n\n    if (typeof properties[0] === 'function') {\n      parent = properties.shift();\n    }\n    function klass() {\n      this.initialize.apply(this, arguments);\n    }\n\n    klass.superclass = parent;\n    klass.subclasses = [];\n\n    if (parent) {\n      Subclass.prototype = parent.prototype;\n      klass.prototype = new Subclass();\n      parent.subclasses.push(klass);\n    }\n    for (var i = 0, length = properties.length; i < length; i++) {\n      addMethods(klass, properties[i], parent);\n    }\n    if (!klass.prototype.initialize) {\n      klass.prototype.initialize = emptyFunction;\n    }\n    klass.prototype.constructor = klass;\n    klass.prototype.callSuper = callSuper;\n    return klass;\n  }\n\n  fabric.util.createClass = createClass;\n})();\n\n\n(function () {\n\n  var unknown = 'unknown';\n\n  /* EVENT HANDLING */\n\n  function areHostMethods(object) {\n    var methodNames = Array.prototype.slice.call(arguments, 1),\n        t, i, len = methodNames.length;\n    for (i = 0; i < len; i++) {\n      t = typeof object[methodNames[i]];\n      if (!(/^(?:function|object|unknown)$/).test(t)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /** @ignore */\n  var getElement,\n      setElement,\n      getUniqueId = (function () {\n        var uid = 0;\n        return function (element) {\n          return element.__uniqueID || (element.__uniqueID = 'uniqueID__' + uid++);\n        };\n      })();\n\n  (function () {\n    var elements = { };\n    /** @ignore */\n    getElement = function (uid) {\n      return elements[uid];\n    };\n    /** @ignore */\n    setElement = function (uid, element) {\n      elements[uid] = element;\n    };\n  })();\n\n  function createListener(uid, handler) {\n    return {\n      handler: handler,\n      wrappedHandler: createWrappedHandler(uid, handler)\n    };\n  }\n\n  function createWrappedHandler(uid, handler) {\n    return function (e) {\n      handler.call(getElement(uid), e || fabric.window.event);\n    };\n  }\n\n  function createDispatcher(uid, eventName) {\n    return function (e) {\n      if (handlers[uid] && handlers[uid][eventName]) {\n        var handlersForEvent = handlers[uid][eventName];\n        for (var i = 0, len = handlersForEvent.length; i < len; i++) {\n          handlersForEvent[i].call(this, e || fabric.window.event);\n        }\n      }\n    };\n  }\n\n  var shouldUseAddListenerRemoveListener = (\n        areHostMethods(fabric.document.documentElement, 'addEventListener', 'removeEventListener') &&\n        areHostMethods(fabric.window, 'addEventListener', 'removeEventListener')),\n\n      shouldUseAttachEventDetachEvent = (\n        areHostMethods(fabric.document.documentElement, 'attachEvent', 'detachEvent') &&\n        areHostMethods(fabric.window, 'attachEvent', 'detachEvent')),\n\n      // IE branch\n      listeners = { },\n\n      // DOM L0 branch\n      handlers = { },\n\n      addListener, removeListener;\n\n  if (shouldUseAddListenerRemoveListener) {\n    /** @ignore */\n    addListener = function (element, eventName, handler, options) {\n      // since ie10 or ie9 can use addEventListener but they do not support options, i need to check\n      element && element.addEventListener(eventName, handler, shouldUseAttachEventDetachEvent ? false : options);\n    };\n    /** @ignore */\n    removeListener = function (element, eventName, handler, options) {\n      element && element.removeEventListener(eventName, handler, shouldUseAttachEventDetachEvent ? false : options);\n    };\n  }\n\n  else if (shouldUseAttachEventDetachEvent) {\n    /** @ignore */\n    addListener = function (element, eventName, handler) {\n      if (!element) {\n        return;\n      }\n      var uid = getUniqueId(element);\n      setElement(uid, element);\n      if (!listeners[uid]) {\n        listeners[uid] = { };\n      }\n      if (!listeners[uid][eventName]) {\n        listeners[uid][eventName] = [];\n\n      }\n      var listener = createListener(uid, handler);\n      listeners[uid][eventName].push(listener);\n      element.attachEvent('on' + eventName, listener.wrappedHandler);\n    };\n    /** @ignore */\n    removeListener = function (element, eventName, handler) {\n      if (!element) {\n        return;\n      }\n      var uid = getUniqueId(element), listener;\n      if (listeners[uid] && listeners[uid][eventName]) {\n        for (var i = 0, len = listeners[uid][eventName].length; i < len; i++) {\n          listener = listeners[uid][eventName][i];\n          if (listener && listener.handler === handler) {\n            element.detachEvent('on' + eventName, listener.wrappedHandler);\n            listeners[uid][eventName][i] = null;\n          }\n        }\n      }\n    };\n  }\n  else {\n    /** @ignore */\n    addListener = function (element, eventName, handler) {\n      if (!element) {\n        return;\n      }\n      var uid = getUniqueId(element);\n      if (!handlers[uid]) {\n        handlers[uid] = { };\n      }\n      if (!handlers[uid][eventName]) {\n        handlers[uid][eventName] = [];\n        var existingHandler = element['on' + eventName];\n        if (existingHandler) {\n          handlers[uid][eventName].push(existingHandler);\n        }\n        element['on' + eventName] = createDispatcher(uid, eventName);\n      }\n      handlers[uid][eventName].push(handler);\n    };\n    /** @ignore */\n    removeListener = function (element, eventName, handler) {\n      if (!element) {\n        return;\n      }\n      var uid = getUniqueId(element);\n      if (handlers[uid] && handlers[uid][eventName]) {\n        var handlersForEvent = handlers[uid][eventName];\n        for (var i = 0, len = handlersForEvent.length; i < len; i++) {\n          if (handlersForEvent[i] === handler) {\n            handlersForEvent.splice(i, 1);\n          }\n        }\n      }\n    };\n  }\n\n  /**\n   * Adds an event listener to an element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  fabric.util.addListener = addListener;\n\n  /**\n   * Removes an event listener from an element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  fabric.util.removeListener = removeListener;\n\n  /**\n   * Cross-browser wrapper for getting event's coordinates\n   * @memberOf fabric.util\n   * @param {Event} event Event object\n   */\n  function getPointer(event) {\n    event || (event = fabric.window.event);\n\n    var element = event.target ||\n                  (typeof event.srcElement !== unknown ? event.srcElement : null),\n\n        scroll = fabric.util.getScrollLeftTop(element);\n\n    return {\n      x: pointerX(event) + scroll.left,\n      y: pointerY(event) + scroll.top\n    };\n  }\n\n  var pointerX = function(event) {\n        return event.clientX;\n      },\n\n      pointerY = function(event) {\n        return event.clientY;\n      };\n\n  function _getPointer(event, pageProp, clientProp) {\n    var touchProp = event.type === 'touchend' ? 'changedTouches' : 'touches';\n\n    return (event[touchProp] && event[touchProp][0]\n      ? (event[touchProp][0][pageProp] - (event[touchProp][0][pageProp] - event[touchProp][0][clientProp]))\n        || event[clientProp]\n      : event[clientProp]);\n  }\n\n  if (fabric.isTouchSupported) {\n    pointerX = function(event) {\n      return _getPointer(event, 'pageX', 'clientX');\n    };\n    pointerY = function(event) {\n      return _getPointer(event, 'pageY', 'clientY');\n    };\n  }\n\n  fabric.util.getPointer = getPointer;\n\n})();\n\n\n(function () {\n\n  /**\n   * Cross-browser wrapper for setting element's style\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {Object} styles\n   * @return {HTMLElement} Element that was passed as a first argument\n   */\n  function setStyle(element, styles) {\n    var elementStyle = element.style;\n    if (!elementStyle) {\n      return element;\n    }\n    if (typeof styles === 'string') {\n      element.style.cssText += ';' + styles;\n      return styles.indexOf('opacity') > -1\n        ? setOpacity(element, styles.match(/opacity:\\s*(\\d?\\.?\\d*)/)[1])\n        : element;\n    }\n    for (var property in styles) {\n      if (property === 'opacity') {\n        setOpacity(element, styles[property]);\n      }\n      else {\n        var normalizedProperty = (property === 'float' || property === 'cssFloat')\n          ? (typeof elementStyle.styleFloat === 'undefined' ? 'cssFloat' : 'styleFloat')\n          : property;\n        elementStyle[normalizedProperty] = styles[property];\n      }\n    }\n    return element;\n  }\n\n  var parseEl = fabric.document.createElement('div'),\n      supportsOpacity = typeof parseEl.style.opacity === 'string',\n      supportsFilters = typeof parseEl.style.filter === 'string',\n      reOpacity = /alpha\\s*\\(\\s*opacity\\s*=\\s*([^\\)]+)\\)/,\n\n      /** @ignore */\n      setOpacity = function (element) { return element; };\n\n  if (supportsOpacity) {\n    /** @ignore */\n    setOpacity = function(element, value) {\n      element.style.opacity = value;\n      return element;\n    };\n  }\n  else if (supportsFilters) {\n    /** @ignore */\n    setOpacity = function(element, value) {\n      var es = element.style;\n      if (element.currentStyle && !element.currentStyle.hasLayout) {\n        es.zoom = 1;\n      }\n      if (reOpacity.test(es.filter)) {\n        value = value >= 0.9999 ? '' : ('alpha(opacity=' + (value * 100) + ')');\n        es.filter = es.filter.replace(reOpacity, value);\n      }\n      else {\n        es.filter += ' alpha(opacity=' + (value * 100) + ')';\n      }\n      return element;\n    };\n  }\n\n  fabric.util.setStyle = setStyle;\n\n})();\n\n\n(function() {\n\n  var _slice = Array.prototype.slice;\n\n  /**\n   * Takes id and returns an element with that id (if one exists in a document)\n   * @memberOf fabric.util\n   * @param {String|HTMLElement} id\n   * @return {HTMLElement|null}\n   */\n  function getById(id) {\n    return typeof id === 'string' ? fabric.document.getElementById(id) : id;\n  }\n\n  var sliceCanConvertNodelists,\n      /**\n       * Converts an array-like object (e.g. arguments or NodeList) to an array\n       * @memberOf fabric.util\n       * @param {Object} arrayLike\n       * @return {Array}\n       */\n      toArray = function(arrayLike) {\n        return _slice.call(arrayLike, 0);\n      };\n\n  try {\n    sliceCanConvertNodelists = toArray(fabric.document.childNodes) instanceof Array;\n  }\n  catch (err) { }\n\n  if (!sliceCanConvertNodelists) {\n    toArray = function(arrayLike) {\n      var arr = new Array(arrayLike.length), i = arrayLike.length;\n      while (i--) {\n        arr[i] = arrayLike[i];\n      }\n      return arr;\n    };\n  }\n\n  /**\n   * Creates specified element with specified attributes\n   * @memberOf fabric.util\n   * @param {String} tagName Type of an element to create\n   * @param {Object} [attributes] Attributes to set on an element\n   * @return {HTMLElement} Newly created element\n   */\n  function makeElement(tagName, attributes) {\n    var el = fabric.document.createElement(tagName);\n    for (var prop in attributes) {\n      if (prop === 'class') {\n        el.className = attributes[prop];\n      }\n      else if (prop === 'for') {\n        el.htmlFor = attributes[prop];\n      }\n      else {\n        el.setAttribute(prop, attributes[prop]);\n      }\n    }\n    return el;\n  }\n\n  /**\n   * Adds class to an element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to add class to\n   * @param {String} className Class to add to an element\n   */\n  function addClass(element, className) {\n    if (element && (' ' + element.className + ' ').indexOf(' ' + className + ' ') === -1) {\n      element.className += (element.className ? ' ' : '') + className;\n    }\n  }\n\n  /**\n   * Wraps element with another element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to wrap\n   * @param {HTMLElement|String} wrapper Element to wrap with\n   * @param {Object} [attributes] Attributes to set on a wrapper\n   * @return {HTMLElement} wrapper\n   */\n  function wrapElement(element, wrapper, attributes) {\n    if (typeof wrapper === 'string') {\n      wrapper = makeElement(wrapper, attributes);\n    }\n    if (element.parentNode) {\n      element.parentNode.replaceChild(wrapper, element);\n    }\n    wrapper.appendChild(element);\n    return wrapper;\n  }\n\n  /**\n   * Returns element scroll offsets\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to operate on\n   * @return {Object} Object with left/top values\n   */\n  function getScrollLeftTop(element) {\n\n    var left = 0,\n        top = 0,\n        docElement = fabric.document.documentElement,\n        body = fabric.document.body || {\n          scrollLeft: 0, scrollTop: 0\n        };\n\n    // While loop checks (and then sets element to) .parentNode OR .host\n    //  to account for ShadowDOM. We still want to traverse up out of ShadowDOM,\n    //  but the .parentNode of a root ShadowDOM node will always be null, instead\n    //  it should be accessed through .host. See http://stackoverflow.com/a/24765528/4383938\n    while (element && (element.parentNode || element.host)) {\n\n      // Set element to element parent, or 'host' in case of ShadowDOM\n      element = element.parentNode || element.host;\n\n      if (element === fabric.document) {\n        left = body.scrollLeft || docElement.scrollLeft || 0;\n        top = body.scrollTop ||  docElement.scrollTop || 0;\n      }\n      else {\n        left += element.scrollLeft || 0;\n        top += element.scrollTop || 0;\n      }\n\n      if (element.nodeType === 1 && element.style.position === 'fixed') {\n        break;\n      }\n    }\n\n    return { left: left, top: top };\n  }\n\n  /**\n   * Returns offset for a given element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to get offset for\n   * @return {Object} Object with \"left\" and \"top\" properties\n   */\n  function getElementOffset(element) {\n    var docElem,\n        doc = element && element.ownerDocument,\n        box = { left: 0, top: 0 },\n        offset = { left: 0, top: 0 },\n        scrollLeftTop,\n        offsetAttributes = {\n          borderLeftWidth: 'left',\n          borderTopWidth:  'top',\n          paddingLeft:     'left',\n          paddingTop:      'top'\n        };\n\n    if (!doc) {\n      return offset;\n    }\n\n    for (var attr in offsetAttributes) {\n      offset[offsetAttributes[attr]] += parseInt(getElementStyle(element, attr), 10) || 0;\n    }\n\n    docElem = doc.documentElement;\n    if ( typeof element.getBoundingClientRect !== 'undefined' ) {\n      box = element.getBoundingClientRect();\n    }\n\n    scrollLeftTop = getScrollLeftTop(element);\n\n    return {\n      left: box.left + scrollLeftTop.left - (docElem.clientLeft || 0) + offset.left,\n      top: box.top + scrollLeftTop.top - (docElem.clientTop || 0)  + offset.top\n    };\n  }\n\n  /**\n   * Returns style attribute value of a given element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to get style attribute for\n   * @param {String} attr Style attribute to get for element\n   * @return {String} Style attribute value of the given element.\n   */\n  var getElementStyle;\n  if (fabric.document.defaultView && fabric.document.defaultView.getComputedStyle) {\n    getElementStyle = function(element, attr) {\n      var style = fabric.document.defaultView.getComputedStyle(element, null);\n      return style ? style[attr] : undefined;\n    };\n  }\n  else {\n    getElementStyle = function(element, attr) {\n      var value = element.style[attr];\n      if (!value && element.currentStyle) {\n        value = element.currentStyle[attr];\n      }\n      return value;\n    };\n  }\n\n  (function () {\n    var style = fabric.document.documentElement.style,\n        selectProp = 'userSelect' in style\n          ? 'userSelect'\n          : 'MozUserSelect' in style\n            ? 'MozUserSelect'\n            : 'WebkitUserSelect' in style\n              ? 'WebkitUserSelect'\n              : 'KhtmlUserSelect' in style\n                ? 'KhtmlUserSelect'\n                : '';\n\n    /**\n     * Makes element unselectable\n     * @memberOf fabric.util\n     * @param {HTMLElement} element Element to make unselectable\n     * @return {HTMLElement} Element that was passed in\n     */\n    function makeElementUnselectable(element) {\n      if (typeof element.onselectstart !== 'undefined') {\n        element.onselectstart = fabric.util.falseFunction;\n      }\n      if (selectProp) {\n        element.style[selectProp] = 'none';\n      }\n      else if (typeof element.unselectable === 'string') {\n        element.unselectable = 'on';\n      }\n      return element;\n    }\n\n    /**\n     * Makes element selectable\n     * @memberOf fabric.util\n     * @param {HTMLElement} element Element to make selectable\n     * @return {HTMLElement} Element that was passed in\n     */\n    function makeElementSelectable(element) {\n      if (typeof element.onselectstart !== 'undefined') {\n        element.onselectstart = null;\n      }\n      if (selectProp) {\n        element.style[selectProp] = '';\n      }\n      else if (typeof element.unselectable === 'string') {\n        element.unselectable = '';\n      }\n      return element;\n    }\n\n    fabric.util.makeElementUnselectable = makeElementUnselectable;\n    fabric.util.makeElementSelectable = makeElementSelectable;\n  })();\n\n  (function() {\n\n    /**\n     * Inserts a script element with a given url into a document; invokes callback, when that script is finished loading\n     * @memberOf fabric.util\n     * @param {String} url URL of a script to load\n     * @param {Function} callback Callback to execute when script is finished loading\n     */\n    function getScript(url, callback) {\n      var headEl = fabric.document.getElementsByTagName('head')[0],\n          scriptEl = fabric.document.createElement('script'),\n          loading = true;\n\n      /** @ignore */\n      scriptEl.onload = /** @ignore */ scriptEl.onreadystatechange = function(e) {\n        if (loading) {\n          if (typeof this.readyState === 'string' &&\n              this.readyState !== 'loaded' &&\n              this.readyState !== 'complete') {\n            return;\n          }\n          loading = false;\n          callback(e || fabric.window.event);\n          scriptEl = scriptEl.onload = scriptEl.onreadystatechange = null;\n        }\n      };\n      scriptEl.src = url;\n      headEl.appendChild(scriptEl);\n      // causes issue in Opera\n      // headEl.removeChild(scriptEl);\n    }\n\n    fabric.util.getScript = getScript;\n  })();\n\n  function getNodeCanvas(element) {\n    var impl = fabric.jsdomImplForWrapper(element);\n    return impl._canvas || impl._image;\n  };\n\n  fabric.util.getById = getById;\n  fabric.util.toArray = toArray;\n  fabric.util.makeElement = makeElement;\n  fabric.util.addClass = addClass;\n  fabric.util.wrapElement = wrapElement;\n  fabric.util.getScrollLeftTop = getScrollLeftTop;\n  fabric.util.getElementOffset = getElementOffset;\n  fabric.util.getElementStyle = getElementStyle;\n  fabric.util.getNodeCanvas = getNodeCanvas;\n\n})();\n\n\n(function() {\n\n  function addParamToUrl(url, param) {\n    return url + (/\\?/.test(url) ? '&' : '?') + param;\n  }\n\n  var makeXHR = (function() {\n    var factories = [\n      function() { return new ActiveXObject('Microsoft.XMLHTTP'); },\n      function() { return new ActiveXObject('Msxml2.XMLHTTP'); },\n      function() { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); },\n      function() { return new XMLHttpRequest(); }\n    ];\n    for (var i = factories.length; i--; ) {\n      try {\n        var req = factories[i]();\n        if (req) {\n          return factories[i];\n        }\n      }\n      catch (err) { }\n    }\n  })();\n\n  function emptyFn() { }\n\n  /**\n   * Cross-browser abstraction for sending XMLHttpRequest\n   * @memberOf fabric.util\n   * @param {String} url URL to send XMLHttpRequest to\n   * @param {Object} [options] Options object\n   * @param {String} [options.method=\"GET\"]\n   * @param {String} [options.parameters] parameters to append to url in GET or in body\n   * @param {String} [options.body] body to send with POST or PUT request\n   * @param {Function} options.onComplete Callback to invoke when request is completed\n   * @return {XMLHttpRequest} request\n   */\n  function request(url, options) {\n\n    options || (options = { });\n\n    var method = options.method ? options.method.toUpperCase() : 'GET',\n        onComplete = options.onComplete || function() { },\n        xhr = makeXHR(),\n        body = options.body || options.parameters;\n\n    /** @ignore */\n    xhr.onreadystatechange = function() {\n      if (xhr.readyState === 4) {\n        onComplete(xhr);\n        xhr.onreadystatechange = emptyFn;\n      }\n    };\n\n    if (method === 'GET') {\n      body = null;\n      if (typeof options.parameters === 'string') {\n        url = addParamToUrl(url, options.parameters);\n      }\n    }\n\n    xhr.open(method, url, true);\n\n    if (method === 'POST' || method === 'PUT') {\n      xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n    }\n\n    xhr.send(body);\n    return xhr;\n  }\n\n  fabric.util.request = request;\n})();\n\n\n/**\n * Wrapper around `console.log` (when available)\n * @param {*} [values] Values to log\n */\nfabric.log = function() { };\n\n/**\n * Wrapper around `console.warn` (when available)\n * @param {*} [values] Values to log as a warning\n */\nfabric.warn = function() { };\n\n/* eslint-disable */\nif (typeof console !== 'undefined') {\n\n  ['log', 'warn'].forEach(function(methodName) {\n\n    if (typeof console[methodName] !== 'undefined' &&\n        typeof console[methodName].apply === 'function') {\n\n      fabric[methodName] = function() {\n        return console[methodName].apply(console, arguments);\n      };\n    }\n  });\n}\n/* eslint-enable */\n\n\n(function() {\n\n  function noop() {\n    return false;\n  }\n\n  /**\n   * Changes value from one to another within certain period of time, invoking callbacks as value is being changed.\n   * @memberOf fabric.util\n   * @param {Object} [options] Animation options\n   * @param {Function} [options.onChange] Callback; invoked on every value change\n   * @param {Function} [options.onComplete] Callback; invoked when value change is completed\n   * @param {Number} [options.startValue=0] Starting value\n   * @param {Number} [options.endValue=100] Ending value\n   * @param {Number} [options.byValue=100] Value to modify the property by\n   * @param {Function} [options.easing] Easing function\n   * @param {Number} [options.duration=500] Duration of change (in ms)\n   */\n  function animate(options) {\n\n    requestAnimFrame(function(timestamp) {\n      options || (options = { });\n\n      var start = timestamp || +new Date(),\n          duration = options.duration || 500,\n          finish = start + duration, time,\n          onChange = options.onChange || noop,\n          abort = options.abort || noop,\n          onComplete = options.onComplete || noop,\n          easing = options.easing || function(t, b, c, d) {return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;},\n          startValue = 'startValue' in options ? options.startValue : 0,\n          endValue = 'endValue' in options ? options.endValue : 100,\n          byValue = options.byValue || endValue - startValue;\n\n      options.onStart && options.onStart();\n\n      (function tick(ticktime) {\n        if (abort()) {\n          onComplete(endValue, 1, 1);\n          return;\n        }\n        time = ticktime || +new Date();\n        var currentTime = time > finish ? duration : (time - start),\n            timePerc = currentTime / duration,\n            current = easing(currentTime, startValue, byValue, duration),\n            valuePerc = Math.abs((current - startValue) / byValue);\n        onChange(current, valuePerc, timePerc);\n        if (time > finish) {\n          options.onComplete && options.onComplete();\n          return;\n        }\n        requestAnimFrame(tick);\n      })(start);\n    });\n\n  }\n\n  var _requestAnimFrame = fabric.window.requestAnimationFrame       ||\n                          fabric.window.webkitRequestAnimationFrame ||\n                          fabric.window.mozRequestAnimationFrame    ||\n                          fabric.window.oRequestAnimationFrame      ||\n                          fabric.window.msRequestAnimationFrame     ||\n                          function(callback) {\n                            return fabric.window.setTimeout(callback, 1000 / 60);\n                          };\n\n  var _cancelAnimFrame = fabric.window.cancelAnimationFrame || fabric.window.clearTimeout;\n\n  /**\n   * requestAnimationFrame polyfill based on http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n   * In order to get a precise start time, `requestAnimFrame` should be called as an entry into the method\n   * @memberOf fabric.util\n   * @param {Function} callback Callback to invoke\n   * @param {DOMElement} element optional Element to associate with animation\n   */\n  function requestAnimFrame() {\n    return _requestAnimFrame.apply(fabric.window, arguments);\n  }\n\n  function cancelAnimFrame() {\n    return _cancelAnimFrame.apply(fabric.window, arguments);\n  }\n\n  fabric.util.animate = animate;\n  fabric.util.requestAnimFrame = requestAnimFrame;\n  fabric.util.cancelAnimFrame = cancelAnimFrame;\n})();\n\n\n(function() {\n  // Calculate an in-between color. Returns a \"rgba()\" string.\n  // Credit: Edwin Martin <edwin@bitstorm.org>\n  //         http://www.bitstorm.org/jquery/color-animation/jquery.animate-colors.js\n  function calculateColor(begin, end, pos) {\n    var color = 'rgba('\n        + parseInt((begin[0] + pos * (end[0] - begin[0])), 10) + ','\n        + parseInt((begin[1] + pos * (end[1] - begin[1])), 10) + ','\n        + parseInt((begin[2] + pos * (end[2] - begin[2])), 10);\n\n    color += ',' + (begin && end ? parseFloat(begin[3] + pos * (end[3] - begin[3])) : 1);\n    color += ')';\n    return color;\n  }\n\n  /**\n   * Changes the color from one to another within certain period of time, invoking callbacks as value is being changed.\n   * @memberOf fabric.util\n   * @param {String} fromColor The starting color in hex or rgb(a) format.\n   * @param {String} toColor The starting color in hex or rgb(a) format.\n   * @param {Number} [duration] Duration of change (in ms).\n   * @param {Object} [options] Animation options\n   * @param {Function} [options.onChange] Callback; invoked on every value change\n   * @param {Function} [options.onComplete] Callback; invoked when value change is completed\n   * @param {Function} [options.colorEasing] Easing function. Note that this function only take two arguments (currentTime, duration). Thus the regular animation easing functions cannot be used.\n   */\n  function animateColor(fromColor, toColor, duration, options) {\n    var startColor = new fabric.Color(fromColor).getSource(),\n        endColor = new fabric.Color(toColor).getSource();\n\n    options = options || {};\n\n    fabric.util.animate(fabric.util.object.extend(options, {\n      duration: duration || 500,\n      startValue: startColor,\n      endValue: endColor,\n      byValue: endColor,\n      easing: function (currentTime, startValue, byValue, duration) {\n        var posValue = options.colorEasing\n          ? options.colorEasing(currentTime, duration)\n          : 1 - Math.cos(currentTime / duration * (Math.PI / 2));\n        return calculateColor(startValue, byValue, posValue);\n      }\n    }));\n  }\n\n  fabric.util.animateColor = animateColor;\n\n})();\n\n\n(function() {\n\n  function normalize(a, c, p, s) {\n    if (a < Math.abs(c)) {\n      a = c;\n      s = p / 4;\n    }\n    else {\n      //handle the 0/0 case:\n      if (c === 0 && a === 0) {\n        s = p / (2 * Math.PI) * Math.asin(1);\n      }\n      else {\n        s = p / (2 * Math.PI) * Math.asin(c / a);\n      }\n    }\n    return { a: a, c: c, p: p, s: s };\n  }\n\n  function elastic(opts, t, d) {\n    return opts.a *\n      Math.pow(2, 10 * (t -= 1)) *\n      Math.sin( (t * d - opts.s) * (2 * Math.PI) / opts.p );\n  }\n\n  /**\n   * Cubic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutCubic(t, b, c, d) {\n    return c * ((t = t / d - 1) * t * t + 1) + b;\n  }\n\n  /**\n   * Cubic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutCubic(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t + b;\n    }\n    return c / 2 * ((t -= 2) * t * t + 2) + b;\n  }\n\n  /**\n   * Quartic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInQuart(t, b, c, d) {\n    return c * (t /= d) * t * t * t + b;\n  }\n\n  /**\n   * Quartic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutQuart(t, b, c, d) {\n    return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n  }\n\n  /**\n   * Quartic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutQuart(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t * t + b;\n    }\n    return -c / 2 * ((t -= 2) * t * t * t - 2) + b;\n  }\n\n  /**\n   * Quintic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInQuint(t, b, c, d) {\n    return c * (t /= d) * t * t * t * t + b;\n  }\n\n  /**\n   * Quintic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutQuint(t, b, c, d) {\n    return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n  }\n\n  /**\n   * Quintic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutQuint(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t * t * t + b;\n    }\n    return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n  }\n\n  /**\n   * Sinusoidal easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInSine(t, b, c, d) {\n    return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\n  }\n\n  /**\n   * Sinusoidal easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutSine(t, b, c, d) {\n    return c * Math.sin(t / d * (Math.PI / 2)) + b;\n  }\n\n  /**\n   * Sinusoidal easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutSine(t, b, c, d) {\n    return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;\n  }\n\n  /**\n   * Exponential easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInExpo(t, b, c, d) {\n    return (t === 0) ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;\n  }\n\n  /**\n   * Exponential easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutExpo(t, b, c, d) {\n    return (t === d) ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\n  }\n\n  /**\n   * Exponential easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutExpo(t, b, c, d) {\n    if (t === 0) {\n      return b;\n    }\n    if (t === d) {\n      return b + c;\n    }\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * Math.pow(2, 10 * (t - 1)) + b;\n    }\n    return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;\n  }\n\n  /**\n   * Circular easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInCirc(t, b, c, d) {\n    return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\n  }\n\n  /**\n   * Circular easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutCirc(t, b, c, d) {\n    return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\n  }\n\n  /**\n   * Circular easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutCirc(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;\n    }\n    return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\n  }\n\n  /**\n   * Elastic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d;\n    if (t === 1) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * 0.3;\n    }\n    var opts = normalize(a, c, p, s);\n    return -elastic(opts, t, d) + b;\n  }\n\n  /**\n   * Elastic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d;\n    if (t === 1) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * 0.3;\n    }\n    var opts = normalize(a, c, p, s);\n    return opts.a * Math.pow(2, -10 * t) * Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) + opts.c + b;\n  }\n\n  /**\n   * Elastic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d / 2;\n    if (t === 2) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * (0.3 * 1.5);\n    }\n    var opts = normalize(a, c, p, s);\n    if (t < 1) {\n      return -0.5 * elastic(opts, t, d) + b;\n    }\n    return opts.a * Math.pow(2, -10 * (t -= 1)) *\n      Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) * 0.5 + opts.c + b;\n  }\n\n  /**\n   * Backwards easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    return c * (t /= d) * t * ((s + 1) * t - s) + b;\n  }\n\n  /**\n   * Backwards easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n  }\n\n  /**\n   * Backwards easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b;\n    }\n    return c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;\n  }\n\n  /**\n   * Bouncing easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInBounce(t, b, c, d) {\n    return c - easeOutBounce (d - t, 0, c, d) + b;\n  }\n\n  /**\n   * Bouncing easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutBounce(t, b, c, d) {\n    if ((t /= d) < (1 / 2.75)) {\n      return c * (7.5625 * t * t) + b;\n    }\n    else if (t < (2 / 2.75)) {\n      return c * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75) + b;\n    }\n    else if (t < (2.5 / 2.75)) {\n      return c * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375) + b;\n    }\n    else {\n      return c * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375) + b;\n    }\n  }\n\n  /**\n   * Bouncing easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutBounce(t, b, c, d) {\n    if (t < d / 2) {\n      return easeInBounce (t * 2, 0, c, d) * 0.5 + b;\n    }\n    return easeOutBounce(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;\n  }\n\n  /**\n   * Easing functions\n   * See <a href=\"http://gizma.com/easing/\">Easing Equations by Robert Penner</a>\n   * @namespace fabric.util.ease\n   */\n  fabric.util.ease = {\n\n    /**\n     * Quadratic easing in\n     * @memberOf fabric.util.ease\n     */\n    easeInQuad: function(t, b, c, d) {\n      return c * (t /= d) * t + b;\n    },\n\n    /**\n     * Quadratic easing out\n     * @memberOf fabric.util.ease\n     */\n    easeOutQuad: function(t, b, c, d) {\n      return -c * (t /= d) * (t - 2) + b;\n    },\n\n    /**\n     * Quadratic easing in and out\n     * @memberOf fabric.util.ease\n     */\n    easeInOutQuad: function(t, b, c, d) {\n      t /= (d / 2);\n      if (t < 1) {\n        return c / 2 * t * t + b;\n      }\n      return -c / 2 * ((--t) * (t - 2) - 1) + b;\n    },\n\n    /**\n     * Cubic easing in\n     * @memberOf fabric.util.ease\n     */\n    easeInCubic: function(t, b, c, d) {\n      return c * (t /= d) * t * t + b;\n    },\n\n    easeOutCubic: easeOutCubic,\n    easeInOutCubic: easeInOutCubic,\n    easeInQuart: easeInQuart,\n    easeOutQuart: easeOutQuart,\n    easeInOutQuart: easeInOutQuart,\n    easeInQuint: easeInQuint,\n    easeOutQuint: easeOutQuint,\n    easeInOutQuint: easeInOutQuint,\n    easeInSine: easeInSine,\n    easeOutSine: easeOutSine,\n    easeInOutSine: easeInOutSine,\n    easeInExpo: easeInExpo,\n    easeOutExpo: easeOutExpo,\n    easeInOutExpo: easeInOutExpo,\n    easeInCirc: easeInCirc,\n    easeOutCirc: easeOutCirc,\n    easeInOutCirc: easeInOutCirc,\n    easeInElastic: easeInElastic,\n    easeOutElastic: easeOutElastic,\n    easeInOutElastic: easeInOutElastic,\n    easeInBack: easeInBack,\n    easeOutBack: easeOutBack,\n    easeInOutBack: easeInOutBack,\n    easeInBounce: easeInBounce,\n    easeOutBounce: easeOutBounce,\n    easeInOutBounce: easeInOutBounce\n  };\n\n})();\n\n\n(function(global) {\n\n  'use strict';\n\n  /**\n   * @name fabric\n   * @namespace\n   */\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      toFixed = fabric.util.toFixed,\n      parseUnit = fabric.util.parseUnit,\n      multiplyTransformMatrices = fabric.util.multiplyTransformMatrices,\n\n      svgValidTagNames = ['path', 'circle', 'polygon', 'polyline', 'ellipse', 'rect', 'line',\n        'image', 'text', 'linearGradient', 'radialGradient', 'stop'],\n      svgViewBoxElements = ['symbol', 'image', 'marker', 'pattern', 'view', 'svg'],\n      svgInvalidAncestors = ['pattern', 'defs', 'symbol', 'metadata', 'clipPath', 'mask', 'desc'],\n      svgValidParents = ['symbol', 'g', 'a', 'svg'],\n\n      attributesMap = {\n        cx:                   'left',\n        x:                    'left',\n        r:                    'radius',\n        cy:                   'top',\n        y:                    'top',\n        display:              'visible',\n        visibility:           'visible',\n        transform:            'transformMatrix',\n        'fill-opacity':       'fillOpacity',\n        'fill-rule':          'fillRule',\n        'font-family':        'fontFamily',\n        'font-size':          'fontSize',\n        'font-style':         'fontStyle',\n        'font-weight':        'fontWeight',\n        'paint-order':        'paintFirst',\n        'stroke-dasharray':   'strokeDashArray',\n        'stroke-linecap':     'strokeLineCap',\n        'stroke-linejoin':    'strokeLineJoin',\n        'stroke-miterlimit':  'strokeMiterLimit',\n        'stroke-opacity':     'strokeOpacity',\n        'stroke-width':       'strokeWidth',\n        'text-decoration':    'textDecoration',\n        'text-anchor':        'textAnchor',\n        opacity:              'opacity'\n      },\n\n      colorAttributes = {\n        stroke: 'strokeOpacity',\n        fill:   'fillOpacity'\n      };\n\n  fabric.svgValidTagNamesRegEx = getSvgRegex(svgValidTagNames);\n  fabric.svgViewBoxElementsRegEx = getSvgRegex(svgViewBoxElements);\n  fabric.svgInvalidAncestorsRegEx = getSvgRegex(svgInvalidAncestors);\n  fabric.svgValidParentsRegEx = getSvgRegex(svgValidParents);\n\n  fabric.cssRules = { };\n  fabric.gradientDefs = { };\n\n  function normalizeAttr(attr) {\n    // transform attribute names\n    if (attr in attributesMap) {\n      return attributesMap[attr];\n    }\n    return attr;\n  }\n\n  function normalizeValue(attr, value, parentAttributes, fontSize) {\n    var isArray = Object.prototype.toString.call(value) === '[object Array]',\n        parsed;\n\n    if ((attr === 'fill' || attr === 'stroke') && value === 'none') {\n      value = '';\n    }\n    else if (attr === 'strokeDashArray') {\n      if (value === 'none') {\n        value = null;\n      }\n      else {\n        value = value.replace(/,/g, ' ').split(/\\s+/).map(function(n) {\n          return parseFloat(n);\n        });\n      }\n    }\n    else if (attr === 'transformMatrix') {\n      if (parentAttributes && parentAttributes.transformMatrix) {\n        value = multiplyTransformMatrices(\n          parentAttributes.transformMatrix, fabric.parseTransformAttribute(value));\n      }\n      else {\n        value = fabric.parseTransformAttribute(value);\n      }\n    }\n    else if (attr === 'visible') {\n      value = value !== 'none' && value !== 'hidden';\n      // display=none on parent element always takes precedence over child element\n      if (parentAttributes && parentAttributes.visible === false) {\n        value = false;\n      }\n    }\n    else if (attr === 'opacity') {\n      value = parseFloat(value);\n      if (parentAttributes && typeof parentAttributes.opacity !== 'undefined') {\n        value *= parentAttributes.opacity;\n      }\n    }\n    else if (attr === 'textAnchor' /* text-anchor */) {\n      value = value === 'start' ? 'left' : value === 'end' ? 'right' : 'center';\n    }\n    else if (attr === 'paintFirst') {\n      var fillIndex = value.indexOf('fill');\n      var strokeIndex = value.indexOf('stroke');\n      var value = 'fill';\n      if (fillIndex > -1 && strokeIndex > -1 && strokeIndex < fillIndex) {\n        value = 'stroke';\n      }\n      else if (fillIndex === -1 && strokeIndex > -1) {\n        value = 'stroke';\n      }\n    }\n    else {\n      parsed = isArray ? value.map(parseUnit) : parseUnit(value, fontSize);\n    }\n\n    return (!isArray && isNaN(parsed) ? value : parsed);\n  }\n\n  /**\n    * @private\n    */\n  function getSvgRegex(arr) {\n    return new RegExp('^(' + arr.join('|') + ')\\\\b', 'i');\n  }\n\n  /**\n   * @private\n   * @param {Object} attributes Array of attributes to parse\n   */\n  function _setStrokeFillOpacity(attributes) {\n    for (var attr in colorAttributes) {\n\n      if (typeof attributes[colorAttributes[attr]] === 'undefined' || attributes[attr] === '') {\n        continue;\n      }\n\n      if (typeof attributes[attr] === 'undefined') {\n        if (!fabric.Object.prototype[attr]) {\n          continue;\n        }\n        attributes[attr] = fabric.Object.prototype[attr];\n      }\n\n      if (attributes[attr].indexOf('url(') === 0) {\n        continue;\n      }\n\n      var color = new fabric.Color(attributes[attr]);\n      attributes[attr] = color.setAlpha(toFixed(color.getAlpha() * attributes[colorAttributes[attr]], 2)).toRgba();\n    }\n    return attributes;\n  }\n\n  /**\n   * @private\n   */\n  function _getMultipleNodes(doc, nodeNames) {\n    var nodeName, nodeArray = [], nodeList, i, len;\n    for (i = 0, len = nodeNames.length; i < len; i++) {\n      nodeName = nodeNames[i];\n      nodeList = doc.getElementsByTagName(nodeName);\n      nodeArray = nodeArray.concat(Array.prototype.slice.call(nodeList));\n    }\n    return nodeArray;\n  }\n\n  /**\n   * Parses \"transform\" attribute, returning an array of values\n   * @static\n   * @function\n   * @memberOf fabric\n   * @param {String} attributeValue String containing attribute value\n   * @return {Array} Array of 6 elements representing transformation matrix\n   */\n  fabric.parseTransformAttribute = (function() {\n    function rotateMatrix(matrix, args) {\n      var cos = Math.cos(args[0]), sin = Math.sin(args[0]),\n          x = 0, y = 0;\n      if (args.length === 3) {\n        x = args[1];\n        y = args[2];\n      }\n\n      matrix[0] = cos;\n      matrix[1] = sin;\n      matrix[2] = -sin;\n      matrix[3] = cos;\n      matrix[4] = x - (cos * x - sin * y);\n      matrix[5] = y - (sin * x + cos * y);\n    }\n\n    function scaleMatrix(matrix, args) {\n      var multiplierX = args[0],\n          multiplierY = (args.length === 2) ? args[1] : args[0];\n\n      matrix[0] = multiplierX;\n      matrix[3] = multiplierY;\n    }\n\n    function skewMatrix(matrix, args, pos) {\n      matrix[pos] = Math.tan(fabric.util.degreesToRadians(args[0]));\n    }\n\n    function translateMatrix(matrix, args) {\n      matrix[4] = args[0];\n      if (args.length === 2) {\n        matrix[5] = args[1];\n      }\n    }\n\n    // identity matrix\n    var iMatrix = [\n          1, // a\n          0, // b\n          0, // c\n          1, // d\n          0, // e\n          0  // f\n        ],\n\n        // == begin transform regexp\n        number = fabric.reNum,\n\n        commaWsp = '(?:\\\\s+,?\\\\s*|,\\\\s*)',\n\n        skewX = '(?:(skewX)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n\n        skewY = '(?:(skewY)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n\n        rotate = '(?:(rotate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + ')' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        scale = '(?:(scale)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        translate = '(?:(translate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        matrix = '(?:(matrix)\\\\s*\\\\(\\\\s*' +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' +\n                  '\\\\s*\\\\))',\n\n        transform = '(?:' +\n                    matrix + '|' +\n                    translate + '|' +\n                    scale + '|' +\n                    rotate + '|' +\n                    skewX + '|' +\n                    skewY +\n                    ')',\n\n        transforms = '(?:' + transform + '(?:' + commaWsp + '*' + transform + ')*' + ')',\n\n        transformList = '^\\\\s*(?:' + transforms + '?)\\\\s*$',\n\n        // http://www.w3.org/TR/SVG/coords.html#TransformAttribute\n        reTransformList = new RegExp(transformList),\n        // == end transform regexp\n\n        reTransform = new RegExp(transform, 'g');\n\n    return function(attributeValue) {\n\n      // start with identity matrix\n      var matrix = iMatrix.concat(),\n          matrices = [];\n\n      // return if no argument was given or\n      // an argument does not match transform attribute regexp\n      if (!attributeValue || (attributeValue && !reTransformList.test(attributeValue))) {\n        return matrix;\n      }\n\n      attributeValue.replace(reTransform, function(match) {\n\n        var m = new RegExp(transform).exec(match).filter(function (match) {\n              // match !== '' && match != null\n              return (!!match);\n            }),\n            operation = m[1],\n            args = m.slice(2).map(parseFloat);\n\n        switch (operation) {\n          case 'translate':\n            translateMatrix(matrix, args);\n            break;\n          case 'rotate':\n            args[0] = fabric.util.degreesToRadians(args[0]);\n            rotateMatrix(matrix, args);\n            break;\n          case 'scale':\n            scaleMatrix(matrix, args);\n            break;\n          case 'skewX':\n            skewMatrix(matrix, args, 2);\n            break;\n          case 'skewY':\n            skewMatrix(matrix, args, 1);\n            break;\n          case 'matrix':\n            matrix = args;\n            break;\n        }\n\n        // snapshot current matrix into matrices array\n        matrices.push(matrix.concat());\n        // reset\n        matrix = iMatrix.concat();\n      });\n\n      var combinedMatrix = matrices[0];\n      while (matrices.length > 1) {\n        matrices.shift();\n        combinedMatrix = fabric.util.multiplyTransformMatrices(combinedMatrix, matrices[0]);\n      }\n      return combinedMatrix;\n    };\n  })();\n\n  /**\n   * @private\n   */\n  function parseStyleString(style, oStyle) {\n    var attr, value;\n    style.replace(/;\\s*$/, '').split(';').forEach(function (chunk) {\n      var pair = chunk.split(':');\n\n      attr = pair[0].trim().toLowerCase();\n      value =  pair[1].trim();\n\n      oStyle[attr] = value;\n    });\n  }\n\n  /**\n   * @private\n   */\n  function parseStyleObject(style, oStyle) {\n    var attr, value;\n    for (var prop in style) {\n      if (typeof style[prop] === 'undefined') {\n        continue;\n      }\n\n      attr = prop.toLowerCase();\n      value = style[prop];\n\n      oStyle[attr] = value;\n    }\n  }\n\n  /**\n   * @private\n   */\n  function getGlobalStylesForElement(element, svgUid) {\n    var styles = { };\n    for (var rule in fabric.cssRules[svgUid]) {\n      if (elementMatchesRule(element, rule.split(' '))) {\n        for (var property in fabric.cssRules[svgUid][rule]) {\n          styles[property] = fabric.cssRules[svgUid][rule][property];\n        }\n      }\n    }\n    return styles;\n  }\n\n  /**\n   * @private\n   */\n  function elementMatchesRule(element, selectors) {\n    var firstMatching, parentMatching = true;\n    //start from rightmost selector.\n    firstMatching = selectorMatches(element, selectors.pop());\n    if (firstMatching && selectors.length) {\n      parentMatching = doesSomeParentMatch(element, selectors);\n    }\n    return firstMatching && parentMatching && (selectors.length === 0);\n  }\n\n  function doesSomeParentMatch(element, selectors) {\n    var selector, parentMatching = true;\n    while (element.parentNode && element.parentNode.nodeType === 1 && selectors.length) {\n      if (parentMatching) {\n        selector = selectors.pop();\n      }\n      element = element.parentNode;\n      parentMatching = selectorMatches(element, selector);\n    }\n    return selectors.length === 0;\n  }\n\n  /**\n   * @private\n   */\n  function selectorMatches(element, selector) {\n    var nodeName = element.nodeName,\n        classNames = element.getAttribute('class'),\n        id = element.getAttribute('id'), matcher, i;\n    // i check if a selector matches slicing away part from it.\n    // if i get empty string i should match\n    matcher = new RegExp('^' + nodeName, 'i');\n    selector = selector.replace(matcher, '');\n    if (id && selector.length) {\n      matcher = new RegExp('#' + id + '(?![a-zA-Z\\\\-]+)', 'i');\n      selector = selector.replace(matcher, '');\n    }\n    if (classNames && selector.length) {\n      classNames = classNames.split(' ');\n      for (i = classNames.length; i--;) {\n        matcher = new RegExp('\\\\.' + classNames[i] + '(?![a-zA-Z\\\\-]+)', 'i');\n        selector = selector.replace(matcher, '');\n      }\n    }\n    return selector.length === 0;\n  }\n\n  /**\n   * @private\n   * to support IE8 missing getElementById on SVGdocument\n   */\n  function elementById(doc, id) {\n    var el;\n    doc.getElementById && (el = doc.getElementById(id));\n    if (el) {\n      return el;\n    }\n    var node, i, len, nodelist = doc.getElementsByTagName('*');\n    for (i = 0, len = nodelist.length; i < len; i++) {\n      node = nodelist[i];\n      if (id === node.getAttribute('id')) {\n        return node;\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  function parseUseDirectives(doc) {\n    var nodelist = _getMultipleNodes(doc, ['use', 'svg:use']), i = 0;\n\n    while (nodelist.length && i < nodelist.length) {\n      var el = nodelist[i],\n          xlink = el.getAttribute('xlink:href').substr(1),\n          x = el.getAttribute('x') || 0,\n          y = el.getAttribute('y') || 0,\n          el2 = elementById(doc, xlink).cloneNode(true),\n          currentTrans = (el2.getAttribute('transform') || '') + ' translate(' + x + ', ' + y + ')',\n          parentNode, oldLength = nodelist.length, attr, j, attrs, len;\n\n      applyViewboxTransform(el2);\n      if (/^svg$/i.test(el2.nodeName)) {\n        var el3 = el2.ownerDocument.createElement('g');\n        for (j = 0, attrs = el2.attributes, len = attrs.length; j < len; j++) {\n          attr = attrs.item(j);\n          el3.setAttribute(attr.nodeName, attr.nodeValue);\n        }\n        // el2.firstChild != null\n        while (el2.firstChild) {\n          el3.appendChild(el2.firstChild);\n        }\n        el2 = el3;\n      }\n\n      for (j = 0, attrs = el.attributes, len = attrs.length; j < len; j++) {\n        attr = attrs.item(j);\n        if (attr.nodeName === 'x' || attr.nodeName === 'y' || attr.nodeName === 'xlink:href') {\n          continue;\n        }\n\n        if (attr.nodeName === 'transform') {\n          currentTrans = attr.nodeValue + ' ' + currentTrans;\n        }\n        else {\n          el2.setAttribute(attr.nodeName, attr.nodeValue);\n        }\n      }\n\n      el2.setAttribute('transform', currentTrans);\n      el2.setAttribute('instantiated_by_use', '1');\n      el2.removeAttribute('id');\n      parentNode = el.parentNode;\n      parentNode.replaceChild(el2, el);\n      // some browsers do not shorten nodelist after replaceChild (IE8)\n      if (nodelist.length === oldLength) {\n        i++;\n      }\n    }\n  }\n\n  // http://www.w3.org/TR/SVG/coords.html#ViewBoxAttribute\n  // matches, e.g.: +14.56e-12, etc.\n  var reViewBoxAttrValue = new RegExp(\n    '^' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*' +\n    '$'\n  );\n\n  /**\n   * Add a <g> element that envelop all child elements and makes the viewbox transformMatrix descend on all elements\n   */\n  function applyViewboxTransform(element) {\n\n    var viewBoxAttr = element.getAttribute('viewBox'),\n        scaleX = 1,\n        scaleY = 1,\n        minX = 0,\n        minY = 0,\n        viewBoxWidth, viewBoxHeight, matrix, el,\n        widthAttr = element.getAttribute('width'),\n        heightAttr = element.getAttribute('height'),\n        x = element.getAttribute('x') || 0,\n        y = element.getAttribute('y') || 0,\n        preserveAspectRatio = element.getAttribute('preserveAspectRatio') || '',\n        missingViewBox = (!viewBoxAttr || !fabric.svgViewBoxElementsRegEx.test(element.nodeName)\n                           || !(viewBoxAttr = viewBoxAttr.match(reViewBoxAttrValue))),\n        missingDimAttr = (!widthAttr || !heightAttr || widthAttr === '100%' || heightAttr === '100%'),\n        toBeParsed = missingViewBox && missingDimAttr,\n        parsedDim = { }, translateMatrix = '';\n\n    parsedDim.width = 0;\n    parsedDim.height = 0;\n    parsedDim.toBeParsed = toBeParsed;\n\n    if (toBeParsed) {\n      return parsedDim;\n    }\n\n    if (missingViewBox) {\n      parsedDim.width = parseUnit(widthAttr);\n      parsedDim.height = parseUnit(heightAttr);\n      return parsedDim;\n    }\n\n    minX = -parseFloat(viewBoxAttr[1]);\n    minY = -parseFloat(viewBoxAttr[2]);\n    viewBoxWidth = parseFloat(viewBoxAttr[3]);\n    viewBoxHeight = parseFloat(viewBoxAttr[4]);\n\n    if (!missingDimAttr) {\n      parsedDim.width = parseUnit(widthAttr);\n      parsedDim.height = parseUnit(heightAttr);\n      scaleX = parsedDim.width / viewBoxWidth;\n      scaleY = parsedDim.height / viewBoxHeight;\n    }\n    else {\n      parsedDim.width = viewBoxWidth;\n      parsedDim.height = viewBoxHeight;\n    }\n\n    // default is to preserve aspect ratio\n    preserveAspectRatio = fabric.util.parsePreserveAspectRatioAttribute(preserveAspectRatio);\n    if (preserveAspectRatio.alignX !== 'none') {\n      //translate all container for the effect of Mid, Min, Max\n      scaleY = scaleX = (scaleX > scaleY ? scaleY : scaleX);\n    }\n\n    if (scaleX === 1 && scaleY === 1 && minX === 0 && minY === 0 && x === 0 && y === 0) {\n      return parsedDim;\n    }\n\n    if (x || y) {\n      translateMatrix = ' translate(' + parseUnit(x) + ' ' + parseUnit(y) + ') ';\n    }\n\n    matrix = translateMatrix + ' matrix(' + scaleX +\n                  ' 0' +\n                  ' 0 ' +\n                  scaleY + ' ' +\n                  (minX * scaleX) + ' ' +\n                  (minY * scaleY) + ') ';\n\n    if (element.nodeName === 'svg') {\n      el = element.ownerDocument.createElement('g');\n      // element.firstChild != null\n      while (element.firstChild) {\n        el.appendChild(element.firstChild);\n      }\n      element.appendChild(el);\n    }\n    else {\n      el = element;\n      matrix = el.getAttribute('transform') + matrix;\n    }\n\n    el.setAttribute('transform', matrix);\n    return parsedDim;\n  }\n\n  function hasAncestorWithNodeName(element, nodeName) {\n    while (element && (element = element.parentNode)) {\n      if (element.nodeName && nodeName.test(element.nodeName.replace('svg:', ''))\n        && !element.getAttribute('instantiated_by_use')) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Parses an SVG document, converts it to an array of corresponding fabric.* instances and passes them to a callback\n   * @static\n   * @function\n   * @memberOf fabric\n   * @param {SVGDocument} doc SVG document to parse\n   * @param {Function} callback Callback to call when parsing is finished;\n   * It's being passed an array of elements (parsed from a document).\n   * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n   * @param {Object} [parsingOptions] options for parsing document\n   * @param {String} [parsingOptions.crossOrigin] crossOrigin settings\n   */\n  fabric.parseSVGDocument = function(doc, callback, reviver, parsingOptions) {\n    if (!doc) {\n      return;\n    }\n\n    parseUseDirectives(doc);\n\n    var svgUid =  fabric.Object.__uid++, i, len,\n        options = applyViewboxTransform(doc),\n        descendants = fabric.util.toArray(doc.getElementsByTagName('*'));\n    options.crossOrigin = parsingOptions && parsingOptions.crossOrigin;\n    options.svgUid = svgUid;\n\n    if (descendants.length === 0 && fabric.isLikelyNode) {\n      // we're likely in node, where \"o3-xml\" library fails to gEBTN(\"*\")\n      // https://github.com/ajaxorg/node-o3-xml/issues/21\n      descendants = doc.selectNodes('//*[name(.)!=\"svg\"]');\n      var arr = [];\n      for (i = 0, len = descendants.length; i < len; i++) {\n        arr[i] = descendants[i];\n      }\n      descendants = arr;\n    }\n\n    var elements = descendants.filter(function(el) {\n      applyViewboxTransform(el);\n      return fabric.svgValidTagNamesRegEx.test(el.nodeName.replace('svg:', '')) &&\n            !hasAncestorWithNodeName(el, fabric.svgInvalidAncestorsRegEx); // http://www.w3.org/TR/SVG/struct.html#DefsElement\n    });\n\n    if (!elements || (elements && !elements.length)) {\n      callback && callback([], {});\n      return;\n    }\n\n    fabric.gradientDefs[svgUid] = fabric.getGradientDefs(doc);\n    fabric.cssRules[svgUid] = fabric.getCSSRules(doc);\n    // Precedence of rules:   style > class > attribute\n    fabric.parseElements(elements, function(instances, elements) {\n      if (callback) {\n        callback(instances, options, elements, descendants);\n      }\n    }, clone(options), reviver, parsingOptions);\n  };\n\n  var reFontDeclaration = new RegExp(\n    '(normal|italic)?\\\\s*(normal|small-caps)?\\\\s*' +\n    '(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)?\\\\s*(' +\n      fabric.reNum +\n    '(?:px|cm|mm|em|pt|pc|in)*)(?:\\\\/(normal|' + fabric.reNum + '))?\\\\s+(.*)');\n\n  extend(fabric, {\n    /**\n     * Parses a short font declaration, building adding its properties to a style object\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {String} value font declaration\n     * @param {Object} oStyle definition\n     */\n    parseFontDeclaration: function(value, oStyle) {\n      var match = value.match(reFontDeclaration);\n\n      if (!match) {\n        return;\n      }\n      var fontStyle = match[1],\n          // font variant is not used\n          // fontVariant = match[2],\n          fontWeight = match[3],\n          fontSize = match[4],\n          lineHeight = match[5],\n          fontFamily = match[6];\n\n      if (fontStyle) {\n        oStyle.fontStyle = fontStyle;\n      }\n      if (fontWeight) {\n        oStyle.fontWeight = isNaN(parseFloat(fontWeight)) ? fontWeight : parseFloat(fontWeight);\n      }\n      if (fontSize) {\n        oStyle.fontSize = parseUnit(fontSize);\n      }\n      if (fontFamily) {\n        oStyle.fontFamily = fontFamily;\n      }\n      if (lineHeight) {\n        oStyle.lineHeight = lineHeight === 'normal' ? 1 : lineHeight;\n      }\n    },\n\n    /**\n     * Parses an SVG document, returning all of the gradient declarations found in it\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {SVGDocument} doc SVG document to parse\n     * @return {Object} Gradient definitions; key corresponds to element id, value -- to gradient definition element\n     */\n    getGradientDefs: function(doc) {\n      var tagArray = [\n            'linearGradient',\n            'radialGradient',\n            'svg:linearGradient',\n            'svg:radialGradient'],\n          elList = _getMultipleNodes(doc, tagArray),\n          el, j = 0, id, xlink,\n          gradientDefs = { }, idsToXlinkMap = { };\n\n      j = elList.length;\n\n      while (j--) {\n        el = elList[j];\n        xlink = el.getAttribute('xlink:href');\n        id = el.getAttribute('id');\n        if (xlink) {\n          idsToXlinkMap[id] = xlink.substr(1);\n        }\n        gradientDefs[id] = el;\n      }\n\n      for (id in idsToXlinkMap) {\n        var el2 = gradientDefs[idsToXlinkMap[id]].cloneNode(true);\n        el = gradientDefs[id];\n        while (el2.firstChild) {\n          el.appendChild(el2.firstChild);\n        }\n      }\n      return gradientDefs;\n    },\n\n    /**\n     * Returns an object of attributes' name/value, given element and an array of attribute names;\n     * Parses parent \"g\" nodes recursively upwards.\n     * @static\n     * @memberOf fabric\n     * @param {DOMElement} element Element to parse\n     * @param {Array} attributes Array of attributes to parse\n     * @return {Object} object containing parsed attributes' names/values\n     */\n    parseAttributes: function(element, attributes, svgUid) {\n\n      if (!element) {\n        return;\n      }\n\n      var value,\n          parentAttributes = { },\n          fontSize;\n\n      if (typeof svgUid === 'undefined') {\n        svgUid = element.getAttribute('svgUid');\n      }\n      // if there's a parent container (`g` or `a` or `symbol` node), parse its attributes recursively upwards\n      if (element.parentNode && fabric.svgValidParentsRegEx.test(element.parentNode.nodeName)) {\n        parentAttributes = fabric.parseAttributes(element.parentNode, attributes, svgUid);\n      }\n      fontSize = (parentAttributes && parentAttributes.fontSize ) ||\n                 element.getAttribute('font-size') || fabric.Text.DEFAULT_SVG_FONT_SIZE;\n\n      var ownAttributes = attributes.reduce(function(memo, attr) {\n        value = element.getAttribute(attr);\n        if (value) { // eslint-disable-line\n          memo[attr] = value;\n        }\n        return memo;\n      }, { });\n      // add values parsed from style, which take precedence over attributes\n      // (see: http://www.w3.org/TR/SVG/styling.html#UsingPresentationAttributes)\n      ownAttributes = extend(ownAttributes,\n        extend(getGlobalStylesForElement(element, svgUid), fabric.parseStyleAttribute(element)));\n\n      var normalizedAttr, normalizedValue, normalizedStyle = {};\n      for (var attr in ownAttributes) {\n        normalizedAttr = normalizeAttr(attr);\n        normalizedValue = normalizeValue(normalizedAttr, ownAttributes[attr], parentAttributes, fontSize);\n        normalizedStyle[normalizedAttr] = normalizedValue;\n      }\n      if (normalizedStyle && normalizedStyle.font) {\n        fabric.parseFontDeclaration(normalizedStyle.font, normalizedStyle);\n      }\n      var mergedAttrs = extend(parentAttributes, normalizedStyle);\n      return fabric.svgValidParentsRegEx.test(element.nodeName) ? mergedAttrs : _setStrokeFillOpacity(mergedAttrs);\n    },\n\n    /**\n     * Transforms an array of svg elements to corresponding fabric.* instances\n     * @static\n     * @memberOf fabric\n     * @param {Array} elements Array of elements to parse\n     * @param {Function} callback Being passed an array of fabric instances (transformed from SVG elements)\n     * @param {Object} [options] Options object\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     */\n    parseElements: function(elements, callback, options, reviver, parsingOptions) {\n      new fabric.ElementsParser(elements, callback, options, reviver, parsingOptions).parse();\n    },\n\n    /**\n     * Parses \"style\" attribute, retuning an object with values\n     * @static\n     * @memberOf fabric\n     * @param {SVGElement} element Element to parse\n     * @return {Object} Objects with values parsed from style attribute of an element\n     */\n    parseStyleAttribute: function(element) {\n      var oStyle = { },\n          style = element.getAttribute('style');\n\n      if (!style) {\n        return oStyle;\n      }\n\n      if (typeof style === 'string') {\n        parseStyleString(style, oStyle);\n      }\n      else {\n        parseStyleObject(style, oStyle);\n      }\n\n      return oStyle;\n    },\n\n    /**\n     * Parses \"points\" attribute, returning an array of values\n     * @static\n     * @memberOf fabric\n     * @param {String} points points attribute string\n     * @return {Array} array of points\n     */\n    parsePointsAttribute: function(points) {\n\n      // points attribute is required and must not be empty\n      if (!points) {\n        return null;\n      }\n\n      // replace commas with whitespace and remove bookending whitespace\n      points = points.replace(/,/g, ' ').trim();\n\n      points = points.split(/\\s+/);\n      var parsedPoints = [], i, len;\n\n      for (i = 0, len = points.length; i < len; i += 2) {\n        parsedPoints.push({\n          x: parseFloat(points[i]),\n          y: parseFloat(points[i + 1])\n        });\n      }\n\n      // odd number of points is an error\n      // if (parsedPoints.length % 2 !== 0) {\n      //   return null;\n      // }\n\n      return parsedPoints;\n    },\n\n    /**\n     * Returns CSS rules for a given SVG document\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {SVGDocument} doc SVG document to parse\n     * @return {Object} CSS rules of this document\n     */\n    getCSSRules: function(doc) {\n      var styles = doc.getElementsByTagName('style'), i, len,\n          allRules = { }, rules;\n\n      // very crude parsing of style contents\n      for (i = 0, len = styles.length; i < len; i++) {\n        // IE9 doesn't support textContent, but provides text instead.\n        var styleContents = styles[i].textContent || styles[i].text;\n\n        // remove comments\n        styleContents = styleContents.replace(/\\/\\*[\\s\\S]*?\\*\\//g, '');\n        if (styleContents.trim() === '') {\n          continue;\n        }\n        rules = styleContents.match(/[^{]*\\{[\\s\\S]*?\\}/g);\n        rules = rules.map(function(rule) { return rule.trim(); });\n        // eslint-disable-next-line no-loop-func\n        rules.forEach(function(rule) {\n\n          var match = rule.match(/([\\s\\S]*?)\\s*\\{([^}]*)\\}/),\n              ruleObj = { }, declaration = match[2].trim(),\n              propertyValuePairs = declaration.replace(/;$/, '').split(/\\s*;\\s*/);\n\n          for (i = 0, len = propertyValuePairs.length; i < len; i++) {\n            var pair = propertyValuePairs[i].split(/\\s*:\\s*/),\n                property = pair[0],\n                value = pair[1];\n            ruleObj[property] = value;\n          }\n          rule = match[1];\n          rule.split(',').forEach(function(_rule) {\n            _rule = _rule.replace(/^svg/i, '').trim();\n            if (_rule === '') {\n              return;\n            }\n            if (allRules[_rule]) {\n              fabric.util.object.extend(allRules[_rule], ruleObj);\n            }\n            else {\n              allRules[_rule] = fabric.util.object.clone(ruleObj);\n            }\n          });\n        });\n      }\n      return allRules;\n    },\n\n    /**\n     * Takes url corresponding to an SVG document, and parses it into a set of fabric objects.\n     * Note that SVG is fetched via XMLHttpRequest, so it needs to conform to SOP (Same Origin Policy)\n     * @memberOf fabric\n     * @param {String} url\n     * @param {Function} callback\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     * @param {Object} [options] Object containing options for parsing\n     * @param {String} [options.crossOrigin] crossOrigin crossOrigin setting to use for external resources\n     */\n    loadSVGFromURL: function(url, callback, reviver, options) {\n\n      url = url.replace(/^\\n\\s*/, '').trim();\n      new fabric.util.request(url, {\n        method: 'get',\n        onComplete: onComplete\n      });\n\n      function onComplete(r) {\n\n        var xml = r.responseXML;\n        if (xml && !xml.documentElement && fabric.window.ActiveXObject && r.responseText) {\n          xml = new ActiveXObject('Microsoft.XMLDOM');\n          xml.async = 'false';\n          //IE chokes on DOCTYPE\n          xml.loadXML(r.responseText.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\n        }\n        if (!xml || !xml.documentElement) {\n          callback && callback(null);\n        }\n\n        fabric.parseSVGDocument(xml.documentElement, function (results, _options, elements, allElements) {\n          callback && callback(results, _options, elements, allElements);\n        }, reviver, options);\n      }\n    },\n\n    /**\n     * Takes string corresponding to an SVG document, and parses it into a set of fabric objects\n     * @memberOf fabric\n     * @param {String} string\n     * @param {Function} callback\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     * @param {Object} [options] Object containing options for parsing\n     * @param {String} [options.crossOrigin] crossOrigin crossOrigin setting to use for external resources\n     */\n    loadSVGFromString: function(string, callback, reviver, options) {\n      string = string.trim();\n      var doc;\n      if (typeof DOMParser !== 'undefined') {\n        var parser = new DOMParser();\n        if (parser && parser.parseFromString) {\n          doc = parser.parseFromString(string, 'text/xml');\n        }\n      }\n      else if (fabric.window.ActiveXObject) {\n        doc = new ActiveXObject('Microsoft.XMLDOM');\n        doc.async = 'false';\n        // IE chokes on DOCTYPE\n        doc.loadXML(string.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\n      }\n\n      fabric.parseSVGDocument(doc.documentElement, function (results, _options, elements, allElements) {\n        callback(results, _options, elements, allElements);\n      }, reviver, options);\n    }\n  });\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\nfabric.ElementsParser = function(elements, callback, options, reviver, parsingOptions) {\n  this.elements = elements;\n  this.callback = callback;\n  this.options = options;\n  this.reviver = reviver;\n  this.svgUid = (options && options.svgUid) || 0;\n  this.parsingOptions = parsingOptions;\n};\n\nfabric.ElementsParser.prototype.parse = function() {\n  this.instances = new Array(this.elements.length);\n  this.numElements = this.elements.length;\n\n  this.createObjects();\n};\n\nfabric.ElementsParser.prototype.createObjects = function() {\n  for (var i = 0, len = this.elements.length; i < len; i++) {\n    this.elements[i].setAttribute('svgUid', this.svgUid);\n    (function(_obj, i) {\n      setTimeout(function() {\n        _obj.createObject(_obj.elements[i], i);\n      }, 0);\n    })(this, i);\n  }\n};\n\nfabric.ElementsParser.prototype.createObject = function(el, index) {\n  var klass = fabric[fabric.util.string.capitalize(el.tagName.replace('svg:', ''))];\n  if (klass && klass.fromElement) {\n    try {\n      this._createObject(klass, el, index);\n    }\n    catch (err) {\n      fabric.log(err);\n    }\n  }\n  else {\n    this.checkIfDone();\n  }\n};\n\nfabric.ElementsParser.prototype._createObject = function(klass, el, index) {\n  klass.fromElement(el, this.createCallback(index, el), this.options);\n};\n\nfabric.ElementsParser.prototype.createCallback = function(index, el) {\n  var _this = this;\n  return function(obj) {\n    var _options;\n    _this.resolveGradient(obj, 'fill');\n    _this.resolveGradient(obj, 'stroke');\n    if (obj instanceof fabric.Image) {\n      _options = obj.parsePreserveAspectRatioAttribute(el);\n    }\n    obj._removeTransformMatrix(_options);\n    _this.reviver && _this.reviver(el, obj);\n    _this.instances[index] = obj;\n    _this.checkIfDone();\n  };\n};\n\nfabric.ElementsParser.prototype.resolveGradient = function(obj, property) {\n\n  var instanceFillValue = obj.get(property);\n  if (!(/^url\\(/).test(instanceFillValue)) {\n    return;\n  }\n  var gradientId = instanceFillValue.slice(5, instanceFillValue.length - 1);\n  if (fabric.gradientDefs[this.svgUid][gradientId]) {\n    obj.set(property,\n      fabric.Gradient.fromElement(fabric.gradientDefs[this.svgUid][gradientId], obj));\n  }\n};\n\nfabric.ElementsParser.prototype.checkIfDone = function() {\n  if (--this.numElements === 0) {\n    this.instances = this.instances.filter(function(el) {\n      // eslint-disable-next-line no-eq-null, eqeqeq\n      return el != null;\n    });\n    this.callback(this.instances, this.elements);\n  }\n};\n\n\n(function(global) {\n\n  'use strict';\n\n  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Point) {\n    fabric.warn('fabric.Point is already defined');\n    return;\n  }\n\n  fabric.Point = Point;\n\n  /**\n   * Point class\n   * @class fabric.Point\n   * @memberOf fabric\n   * @constructor\n   * @param {Number} x\n   * @param {Number} y\n   * @return {fabric.Point} thisArg\n   */\n  function Point(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  Point.prototype = /** @lends fabric.Point.prototype */ {\n\n    type: 'point',\n\n    constructor: Point,\n\n    /**\n     * Adds another point to this one and returns another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} new Point instance with added values\n     */\n    add: function (that) {\n      return new Point(this.x + that.x, this.y + that.y);\n    },\n\n    /**\n     * Adds another point to this one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    addEquals: function (that) {\n      this.x += that.x;\n      this.y += that.y;\n      return this;\n    },\n\n    /**\n     * Adds value to this point and returns a new one\n     * @param {Number} scalar\n     * @return {fabric.Point} new Point with added value\n     */\n    scalarAdd: function (scalar) {\n      return new Point(this.x + scalar, this.y + scalar);\n    },\n\n    /**\n     * Adds value to this point\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    scalarAddEquals: function (scalar) {\n      this.x += scalar;\n      this.y += scalar;\n      return this;\n    },\n\n    /**\n     * Subtracts another point from this point and returns a new one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} new Point object with subtracted values\n     */\n    subtract: function (that) {\n      return new Point(this.x - that.x, this.y - that.y);\n    },\n\n    /**\n     * Subtracts another point from this point\n     * @param {fabric.Point} that\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    subtractEquals: function (that) {\n      this.x -= that.x;\n      this.y -= that.y;\n      return this;\n    },\n\n    /**\n     * Subtracts value from this point and returns a new one\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    scalarSubtract: function (scalar) {\n      return new Point(this.x - scalar, this.y - scalar);\n    },\n\n    /**\n     * Subtracts value from this point\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    scalarSubtractEquals: function (scalar) {\n      this.x -= scalar;\n      this.y -= scalar;\n      return this;\n    },\n\n    /**\n     * Multiplies this point by a value and returns a new one\n     * TODO: rename in scalarMultiply in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    multiply: function (scalar) {\n      return new Point(this.x * scalar, this.y * scalar);\n    },\n\n    /**\n     * Multiplies this point by a value\n     * TODO: rename in scalarMultiplyEquals in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    multiplyEquals: function (scalar) {\n      this.x *= scalar;\n      this.y *= scalar;\n      return this;\n    },\n\n    /**\n     * Divides this point by a value and returns a new one\n     * TODO: rename in scalarDivide in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    divide: function (scalar) {\n      return new Point(this.x / scalar, this.y / scalar);\n    },\n\n    /**\n     * Divides this point by a value\n     * TODO: rename in scalarDivideEquals in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    divideEquals: function (scalar) {\n      this.x /= scalar;\n      this.y /= scalar;\n      return this;\n    },\n\n    /**\n     * Returns true if this point is equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    eq: function (that) {\n      return (this.x === that.x && this.y === that.y);\n    },\n\n    /**\n     * Returns true if this point is less than another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    lt: function (that) {\n      return (this.x < that.x && this.y < that.y);\n    },\n\n    /**\n     * Returns true if this point is less than or equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    lte: function (that) {\n      return (this.x <= that.x && this.y <= that.y);\n    },\n\n    /**\n\n     * Returns true if this point is greater another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    gt: function (that) {\n      return (this.x > that.x && this.y > that.y);\n    },\n\n    /**\n     * Returns true if this point is greater than or equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    gte: function (that) {\n      return (this.x >= that.x && this.y >= that.y);\n    },\n\n    /**\n     * Returns new point which is the result of linear interpolation with this one and another one\n     * @param {fabric.Point} that\n     * @param {Number} t , position of interpolation, between 0 and 1 default 0.5\n     * @return {fabric.Point}\n     */\n    lerp: function (that, t) {\n      if (typeof t === 'undefined') {\n        t = 0.5;\n      }\n      t = Math.max(Math.min(1, t), 0);\n      return new Point(this.x + (that.x - this.x) * t, this.y + (that.y - this.y) * t);\n    },\n\n    /**\n     * Returns distance from this point and another one\n     * @param {fabric.Point} that\n     * @return {Number}\n     */\n    distanceFrom: function (that) {\n      var dx = this.x - that.x,\n          dy = this.y - that.y;\n      return Math.sqrt(dx * dx + dy * dy);\n    },\n\n    /**\n     * Returns the point between this point and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    midPointFrom: function (that) {\n      return this.lerp(that);\n    },\n\n    /**\n     * Returns a new point which is the min of this and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    min: function (that) {\n      return new Point(Math.min(this.x, that.x), Math.min(this.y, that.y));\n    },\n\n    /**\n     * Returns a new point which is the max of this and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    max: function (that) {\n      return new Point(Math.max(this.x, that.x), Math.max(this.y, that.y));\n    },\n\n    /**\n     * Returns string representation of this point\n     * @return {String}\n     */\n    toString: function () {\n      return this.x + ',' + this.y;\n    },\n\n    /**\n     * Sets x/y of this point\n     * @param {Number} x\n     * @param {Number} y\n     * @chainable\n     */\n    setXY: function (x, y) {\n      this.x = x;\n      this.y = y;\n      return this;\n    },\n\n    /**\n     * Sets x of this point\n     * @param {Number} x\n     * @chainable\n     */\n    setX: function (x) {\n      this.x = x;\n      return this;\n    },\n\n    /**\n     * Sets y of this point\n     * @param {Number} y\n     * @chainable\n     */\n    setY: function (y) {\n      this.y = y;\n      return this;\n    },\n\n    /**\n     * Sets x/y of this point from another point\n     * @param {fabric.Point} that\n     * @chainable\n     */\n    setFromPoint: function (that) {\n      this.x = that.x;\n      this.y = that.y;\n      return this;\n    },\n\n    /**\n     * Swaps x/y of this point and another point\n     * @param {fabric.Point} that\n     */\n    swap: function (that) {\n      var x = this.x,\n          y = this.y;\n      this.x = that.x;\n      this.y = that.y;\n      that.x = x;\n      that.y = y;\n    },\n\n    /**\n     * return a cloned instance of the point\n     * @return {fabric.Point}\n     */\n    clone: function () {\n      return new Point(this.x, this.y);\n    }\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Intersection) {\n    fabric.warn('fabric.Intersection is already defined');\n    return;\n  }\n\n  /**\n   * Intersection class\n   * @class fabric.Intersection\n   * @memberOf fabric\n   * @constructor\n   */\n  function Intersection(status) {\n    this.status = status;\n    this.points = [];\n  }\n\n  fabric.Intersection = Intersection;\n\n  fabric.Intersection.prototype = /** @lends fabric.Intersection.prototype */ {\n\n    constructor: Intersection,\n\n    /**\n     * Appends a point to intersection\n     * @param {fabric.Point} point\n     * @return {fabric.Intersection} thisArg\n     * @chainable\n     */\n    appendPoint: function (point) {\n      this.points.push(point);\n      return this;\n    },\n\n    /**\n     * Appends points to intersection\n     * @param {Array} points\n     * @return {fabric.Intersection} thisArg\n     * @chainable\n     */\n    appendPoints: function (points) {\n      this.points = this.points.concat(points);\n      return this;\n    }\n  };\n\n  /**\n   * Checks if one line intersects another\n   * TODO: rename in intersectSegmentSegment\n   * @static\n   * @param {fabric.Point} a1\n   * @param {fabric.Point} a2\n   * @param {fabric.Point} b1\n   * @param {fabric.Point} b2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectLineLine = function (a1, a2, b1, b2) {\n    var result,\n        uaT = (b2.x - b1.x) * (a1.y - b1.y) - (b2.y - b1.y) * (a1.x - b1.x),\n        ubT = (a2.x - a1.x) * (a1.y - b1.y) - (a2.y - a1.y) * (a1.x - b1.x),\n        uB = (b2.y - b1.y) * (a2.x - a1.x) - (b2.x - b1.x) * (a2.y - a1.y);\n    if (uB !== 0) {\n      var ua = uaT / uB,\n          ub = ubT / uB;\n      if (0 <= ua && ua <= 1 && 0 <= ub && ub <= 1) {\n        result = new Intersection('Intersection');\n        result.appendPoint(new fabric.Point(a1.x + ua * (a2.x - a1.x), a1.y + ua * (a2.y - a1.y)));\n      }\n      else {\n        result = new Intersection();\n      }\n    }\n    else {\n      if (uaT === 0 || ubT === 0) {\n        result = new Intersection('Coincident');\n      }\n      else {\n        result = new Intersection('Parallel');\n      }\n    }\n    return result;\n  };\n\n  /**\n   * Checks if line intersects polygon\n   * TODO: rename in intersectSegmentPolygon\n   * fix detection of coincident\n   * @static\n   * @param {fabric.Point} a1\n   * @param {fabric.Point} a2\n   * @param {Array} points\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectLinePolygon = function(a1, a2, points) {\n    var result = new Intersection(),\n        length = points.length,\n        b1, b2, inter, i;\n\n    for (i = 0; i < length; i++) {\n      b1 = points[i];\n      b2 = points[(i + 1) % length];\n      inter = Intersection.intersectLineLine(a1, a2, b1, b2);\n\n      result.appendPoints(inter.points);\n    }\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n  /**\n   * Checks if polygon intersects another polygon\n   * @static\n   * @param {Array} points1\n   * @param {Array} points2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectPolygonPolygon = function (points1, points2) {\n    var result = new Intersection(),\n        length = points1.length, i;\n\n    for (i = 0; i < length; i++) {\n      var a1 = points1[i],\n          a2 = points1[(i + 1) % length],\n          inter = Intersection.intersectLinePolygon(a1, a2, points2);\n\n      result.appendPoints(inter.points);\n    }\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n  /**\n   * Checks if polygon intersects rectangle\n   * @static\n   * @param {Array} points\n   * @param {fabric.Point} r1\n   * @param {fabric.Point} r2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectPolygonRectangle = function (points, r1, r2) {\n    var min = r1.min(r2),\n        max = r1.max(r2),\n        topRight = new fabric.Point(max.x, min.y),\n        bottomLeft = new fabric.Point(min.x, max.y),\n        inter1 = Intersection.intersectLinePolygon(min, topRight, points),\n        inter2 = Intersection.intersectLinePolygon(topRight, max, points),\n        inter3 = Intersection.intersectLinePolygon(max, bottomLeft, points),\n        inter4 = Intersection.intersectLinePolygon(bottomLeft, min, points),\n        result = new Intersection();\n\n    result.appendPoints(inter1.points);\n    result.appendPoints(inter2.points);\n    result.appendPoints(inter3.points);\n    result.appendPoints(inter4.points);\n\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Color) {\n    fabric.warn('fabric.Color is already defined.');\n    return;\n  }\n\n  /**\n   * Color class\n   * The purpose of {@link fabric.Color} is to abstract and encapsulate common color operations;\n   * {@link fabric.Color} is a constructor and creates instances of {@link fabric.Color} objects.\n   *\n   * @class fabric.Color\n   * @param {String} color optional in hex or rgb(a) or hsl format or from known color list\n   * @return {fabric.Color} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2/#colors}\n   */\n  function Color(color) {\n    if (!color) {\n      this.setSource([0, 0, 0, 1]);\n    }\n    else {\n      this._tryParsingColor(color);\n    }\n  }\n\n  fabric.Color = Color;\n\n  fabric.Color.prototype = /** @lends fabric.Color.prototype */ {\n\n    /**\n     * @private\n     * @param {String|Array} color Color value to parse\n     */\n    _tryParsingColor: function(color) {\n      var source;\n\n      if (color in Color.colorNameMap) {\n        color = Color.colorNameMap[color];\n      }\n\n      if (color === 'transparent') {\n        source = [255, 255, 255, 0];\n      }\n\n      if (!source) {\n        source = Color.sourceFromHex(color);\n      }\n      if (!source) {\n        source = Color.sourceFromRgb(color);\n      }\n      if (!source) {\n        source = Color.sourceFromHsl(color);\n      }\n      if (!source) {\n        //if color is not recognize let's make black as canvas does\n        source = [0, 0, 0, 1];\n      }\n      if (source) {\n        this.setSource(source);\n      }\n    },\n\n    /**\n     * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n     * @private\n     * @param {Number} r Red color value\n     * @param {Number} g Green color value\n     * @param {Number} b Blue color value\n     * @return {Array} Hsl color\n     */\n    _rgbToHsl: function(r, g, b) {\n      r /= 255; g /= 255; b /= 255;\n\n      var h, s, l,\n          max = fabric.util.array.max([r, g, b]),\n          min = fabric.util.array.min([r, g, b]);\n\n      l = (max + min) / 2;\n\n      if (max === min) {\n        h = s = 0; // achromatic\n      }\n      else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n          case r:\n            h = (g - b) / d + (g < b ? 6 : 0);\n            break;\n          case g:\n            h = (b - r) / d + 2;\n            break;\n          case b:\n            h = (r - g) / d + 4;\n            break;\n        }\n        h /= 6;\n      }\n\n      return [\n        Math.round(h * 360),\n        Math.round(s * 100),\n        Math.round(l * 100)\n      ];\n    },\n\n    /**\n     * Returns source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n     * @return {Array}\n     */\n    getSource: function() {\n      return this._source;\n    },\n\n    /**\n     * Sets source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n     * @param {Array} source\n     */\n    setSource: function(source) {\n      this._source = source;\n    },\n\n    /**\n     * Returns color representation in RGB format\n     * @return {String} ex: rgb(0-255,0-255,0-255)\n     */\n    toRgb: function() {\n      var source = this.getSource();\n      return 'rgb(' + source[0] + ',' + source[1] + ',' + source[2] + ')';\n    },\n\n    /**\n     * Returns color representation in RGBA format\n     * @return {String} ex: rgba(0-255,0-255,0-255,0-1)\n     */\n    toRgba: function() {\n      var source = this.getSource();\n      return 'rgba(' + source[0] + ',' + source[1] + ',' + source[2] + ',' + source[3] + ')';\n    },\n\n    /**\n     * Returns color representation in HSL format\n     * @return {String} ex: hsl(0-360,0%-100%,0%-100%)\n     */\n    toHsl: function() {\n      var source = this.getSource(),\n          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\n      return 'hsl(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%)';\n    },\n\n    /**\n     * Returns color representation in HSLA format\n     * @return {String} ex: hsla(0-360,0%-100%,0%-100%,0-1)\n     */\n    toHsla: function() {\n      var source = this.getSource(),\n          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\n      return 'hsla(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%,' + source[3] + ')';\n    },\n\n    /**\n     * Returns color representation in HEX format\n     * @return {String} ex: FF5555\n     */\n    toHex: function() {\n      var source = this.getSource(), r, g, b;\n\n      r = source[0].toString(16);\n      r = (r.length === 1) ? ('0' + r) : r;\n\n      g = source[1].toString(16);\n      g = (g.length === 1) ? ('0' + g) : g;\n\n      b = source[2].toString(16);\n      b = (b.length === 1) ? ('0' + b) : b;\n\n      return r.toUpperCase() + g.toUpperCase() + b.toUpperCase();\n    },\n\n    /**\n     * Returns color representation in HEXA format\n     * @return {String} ex: FF5555CC\n     */\n    toHexa: function() {\n      var source = this.getSource(), a;\n\n      a = Math.round(source[3] * 255);\n      a = a.toString(16);\n      a = (a.length === 1) ? ('0' + a) : a;\n\n      return this.toHex() + a.toUpperCase();\n    },\n\n    /**\n     * Gets value of alpha channel for this color\n     * @return {Number} 0-1\n     */\n    getAlpha: function() {\n      return this.getSource()[3];\n    },\n\n    /**\n     * Sets value of alpha channel for this color\n     * @param {Number} alpha Alpha value 0-1\n     * @return {fabric.Color} thisArg\n     */\n    setAlpha: function(alpha) {\n      var source = this.getSource();\n      source[3] = alpha;\n      this.setSource(source);\n      return this;\n    },\n\n    /**\n     * Transforms color to its grayscale representation\n     * @return {fabric.Color} thisArg\n     */\n    toGrayscale: function() {\n      var source = this.getSource(),\n          average = parseInt((source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0), 10),\n          currentAlpha = source[3];\n      this.setSource([average, average, average, currentAlpha]);\n      return this;\n    },\n\n    /**\n     * Transforms color to its black and white representation\n     * @param {Number} threshold\n     * @return {fabric.Color} thisArg\n     */\n    toBlackWhite: function(threshold) {\n      var source = this.getSource(),\n          average = (source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0),\n          currentAlpha = source[3];\n\n      threshold = threshold || 127;\n\n      average = (Number(average) < Number(threshold)) ? 0 : 255;\n      this.setSource([average, average, average, currentAlpha]);\n      return this;\n    },\n\n    /**\n     * Overlays color with another color\n     * @param {String|fabric.Color} otherColor\n     * @return {fabric.Color} thisArg\n     */\n    overlayWith: function(otherColor) {\n      if (!(otherColor instanceof Color)) {\n        otherColor = new Color(otherColor);\n      }\n\n      var result = [],\n          alpha = this.getAlpha(),\n          otherAlpha = 0.5,\n          source = this.getSource(),\n          otherSource = otherColor.getSource(), i;\n\n      for (i = 0; i < 3; i++) {\n        result.push(Math.round((source[i] * (1 - otherAlpha)) + (otherSource[i] * otherAlpha)));\n      }\n\n      result[3] = alpha;\n      this.setSource(result);\n      return this;\n    }\n  };\n\n  /**\n   * Regex matching color in RGB or RGBA formats (ex: rgb(0, 0, 0), rgba(255, 100, 10, 0.5), rgba( 255 , 100 , 10 , 0.5 ), rgb(1,1,1), rgba(100%, 60%, 10%, 0.5))\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  // eslint-disable-next-line max-len\n  fabric.Color.reRGBa = /^rgba?\\(\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*(?:\\s*,\\s*((?:\\d*\\.?\\d+)?)\\s*)?\\)$/;\n\n  /**\n   * Regex matching color in HSL or HSLA formats (ex: hsl(200, 80%, 10%), hsla(300, 50%, 80%, 0.5), hsla( 300 , 50% , 80% , 0.5 ))\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  fabric.Color.reHSLa = /^hsla?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3}\\%)\\s*,\\s*(\\d{1,3}\\%)\\s*(?:\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)$/;\n\n  /**\n   * Regex matching color in HEX format (ex: #FF5544CC, #FF5555, 010155, aff)\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  fabric.Color.reHex = /^#?([0-9a-f]{8}|[0-9a-f]{6}|[0-9a-f]{4}|[0-9a-f]{3})$/i;\n\n  /**\n   * Map of the 148 color names with HEX code\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   * @see: https://www.w3.org/TR/css3-color/#svg-color\n   */\n  fabric.Color.colorNameMap = {\n    aliceblue:            '#F0F8FF',\n    antiquewhite:         '#FAEBD7',\n    aqua:                 '#00FFFF',\n    aquamarine:           '#7FFFD4',\n    azure:                '#F0FFFF',\n    beige:                '#F5F5DC',\n    bisque:               '#FFE4C4',\n    black:                '#000000',\n    blanchedalmond:       '#FFEBCD',\n    blue:                 '#0000FF',\n    blueviolet:           '#8A2BE2',\n    brown:                '#A52A2A',\n    burlywood:            '#DEB887',\n    cadetblue:            '#5F9EA0',\n    chartreuse:           '#7FFF00',\n    chocolate:            '#D2691E',\n    coral:                '#FF7F50',\n    cornflowerblue:       '#6495ED',\n    cornsilk:             '#FFF8DC',\n    crimson:              '#DC143C',\n    cyan:                 '#00FFFF',\n    darkblue:             '#00008B',\n    darkcyan:             '#008B8B',\n    darkgoldenrod:        '#B8860B',\n    darkgray:             '#A9A9A9',\n    darkgrey:             '#A9A9A9',\n    darkgreen:            '#006400',\n    darkkhaki:            '#BDB76B',\n    darkmagenta:          '#8B008B',\n    darkolivegreen:       '#556B2F',\n    darkorange:           '#FF8C00',\n    darkorchid:           '#9932CC',\n    darkred:              '#8B0000',\n    darksalmon:           '#E9967A',\n    darkseagreen:         '#8FBC8F',\n    darkslateblue:        '#483D8B',\n    darkslategray:        '#2F4F4F',\n    darkslategrey:        '#2F4F4F',\n    darkturquoise:        '#00CED1',\n    darkviolet:           '#9400D3',\n    deeppink:             '#FF1493',\n    deepskyblue:          '#00BFFF',\n    dimgray:              '#696969',\n    dimgrey:              '#696969',\n    dodgerblue:           '#1E90FF',\n    firebrick:            '#B22222',\n    floralwhite:          '#FFFAF0',\n    forestgreen:          '#228B22',\n    fuchsia:              '#FF00FF',\n    gainsboro:            '#DCDCDC',\n    ghostwhite:           '#F8F8FF',\n    gold:                 '#FFD700',\n    goldenrod:            '#DAA520',\n    gray:                 '#808080',\n    grey:                 '#808080',\n    green:                '#008000',\n    greenyellow:          '#ADFF2F',\n    honeydew:             '#F0FFF0',\n    hotpink:              '#FF69B4',\n    indianred:            '#CD5C5C',\n    indigo:               '#4B0082',\n    ivory:                '#FFFFF0',\n    khaki:                '#F0E68C',\n    lavender:             '#E6E6FA',\n    lavenderblush:        '#FFF0F5',\n    lawngreen:            '#7CFC00',\n    lemonchiffon:         '#FFFACD',\n    lightblue:            '#ADD8E6',\n    lightcoral:           '#F08080',\n    lightcyan:            '#E0FFFF',\n    lightgoldenrodyellow: '#FAFAD2',\n    lightgray:            '#D3D3D3',\n    lightgrey:            '#D3D3D3',\n    lightgreen:           '#90EE90',\n    lightpink:            '#FFB6C1',\n    lightsalmon:          '#FFA07A',\n    lightseagreen:        '#20B2AA',\n    lightskyblue:         '#87CEFA',\n    lightslategray:       '#778899',\n    lightslategrey:       '#778899',\n    lightsteelblue:       '#B0C4DE',\n    lightyellow:          '#FFFFE0',\n    lime:                 '#00FF00',\n    limegreen:            '#32CD32',\n    linen:                '#FAF0E6',\n    magenta:              '#FF00FF',\n    maroon:               '#800000',\n    mediumaquamarine:     '#66CDAA',\n    mediumblue:           '#0000CD',\n    mediumorchid:         '#BA55D3',\n    mediumpurple:         '#9370DB',\n    mediumseagreen:       '#3CB371',\n    mediumslateblue:      '#7B68EE',\n    mediumspringgreen:    '#00FA9A',\n    mediumturquoise:      '#48D1CC',\n    mediumvioletred:      '#C71585',\n    midnightblue:         '#191970',\n    mintcream:            '#F5FFFA',\n    mistyrose:            '#FFE4E1',\n    moccasin:             '#FFE4B5',\n    navajowhite:          '#FFDEAD',\n    navy:                 '#000080',\n    oldlace:              '#FDF5E6',\n    olive:                '#808000',\n    olivedrab:            '#6B8E23',\n    orange:               '#FFA500',\n    orangered:            '#FF4500',\n    orchid:               '#DA70D6',\n    palegoldenrod:        '#EEE8AA',\n    palegreen:            '#98FB98',\n    paleturquoise:        '#AFEEEE',\n    palevioletred:        '#DB7093',\n    papayawhip:           '#FFEFD5',\n    peachpuff:            '#FFDAB9',\n    peru:                 '#CD853F',\n    pink:                 '#FFC0CB',\n    plum:                 '#DDA0DD',\n    powderblue:           '#B0E0E6',\n    purple:               '#800080',\n    rebeccapurple:        '#663399',\n    red:                  '#FF0000',\n    rosybrown:            '#BC8F8F',\n    royalblue:            '#4169E1',\n    saddlebrown:          '#8B4513',\n    salmon:               '#FA8072',\n    sandybrown:           '#F4A460',\n    seagreen:             '#2E8B57',\n    seashell:             '#FFF5EE',\n    sienna:               '#A0522D',\n    silver:               '#C0C0C0',\n    skyblue:              '#87CEEB',\n    slateblue:            '#6A5ACD',\n    slategray:            '#708090',\n    slategrey:            '#708090',\n    snow:                 '#FFFAFA',\n    springgreen:          '#00FF7F',\n    steelblue:            '#4682B4',\n    tan:                  '#D2B48C',\n    teal:                 '#008080',\n    thistle:              '#D8BFD8',\n    tomato:               '#FF6347',\n    turquoise:            '#40E0D0',\n    violet:               '#EE82EE',\n    wheat:                '#F5DEB3',\n    white:                '#FFFFFF',\n    whitesmoke:           '#F5F5F5',\n    yellow:               '#FFFF00',\n    yellowgreen:          '#9ACD32'\n  };\n\n  /**\n   * @private\n   * @param {Number} p\n   * @param {Number} q\n   * @param {Number} t\n   * @return {Number}\n   */\n  function hue2rgb(p, q, t) {\n    if (t < 0) {\n      t += 1;\n    }\n    if (t > 1) {\n      t -= 1;\n    }\n    if (t < 1 / 6) {\n      return p + (q - p) * 6 * t;\n    }\n    if (t < 1 / 2) {\n      return q;\n    }\n    if (t < 2 / 3) {\n      return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n  }\n\n  /**\n   * Returns new color object, when given a color in RGB format\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255)\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromRgb = function(color) {\n    return Color.fromSource(Color.sourceFromRgb(color));\n  };\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in RGB or RGBA format\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255), rgb(0%-100%,0%-100%,0%-100%)\n   * @return {Array} source\n   */\n  fabric.Color.sourceFromRgb = function(color) {\n    var match = color.match(Color.reRGBa);\n    if (match) {\n      var r = parseInt(match[1], 10) / (/%$/.test(match[1]) ? 100 : 1) * (/%$/.test(match[1]) ? 255 : 1),\n          g = parseInt(match[2], 10) / (/%$/.test(match[2]) ? 100 : 1) * (/%$/.test(match[2]) ? 255 : 1),\n          b = parseInt(match[3], 10) / (/%$/.test(match[3]) ? 100 : 1) * (/%$/.test(match[3]) ? 255 : 1);\n\n      return [\n        parseInt(r, 10),\n        parseInt(g, 10),\n        parseInt(b, 10),\n        match[4] ? parseFloat(match[4]) : 1\n      ];\n    }\n  };\n\n  /**\n   * Returns new color object, when given a color in RGBA format\n   * @static\n   * @function\n   * @memberOf fabric.Color\n   * @param {String} color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromRgba = Color.fromRgb;\n\n  /**\n   * Returns new color object, when given a color in HSL format\n   * @param {String} color Color value ex: hsl(0-260,0%-100%,0%-100%)\n   * @memberOf fabric.Color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHsl = function(color) {\n    return Color.fromSource(Color.sourceFromHsl(color));\n  };\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HSL or HSLA format.\n   * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: hsl(0-360,0%-100%,0%-100%) or hsla(0-360,0%-100%,0%-100%, 0-1)\n   * @return {Array} source\n   * @see http://http://www.w3.org/TR/css3-color/#hsl-color\n   */\n  fabric.Color.sourceFromHsl = function(color) {\n    var match = color.match(Color.reHSLa);\n    if (!match) {\n      return;\n    }\n\n    var h = (((parseFloat(match[1]) % 360) + 360) % 360) / 360,\n        s = parseFloat(match[2]) / (/%$/.test(match[2]) ? 100 : 1),\n        l = parseFloat(match[3]) / (/%$/.test(match[3]) ? 100 : 1),\n        r, g, b;\n\n    if (s === 0) {\n      r = g = b = l;\n    }\n    else {\n      var q = l <= 0.5 ? l * (s + 1) : l + s - l * s,\n          p = l * 2 - q;\n\n      r = hue2rgb(p, q, h + 1 / 3);\n      g = hue2rgb(p, q, h);\n      b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [\n      Math.round(r * 255),\n      Math.round(g * 255),\n      Math.round(b * 255),\n      match[4] ? parseFloat(match[4]) : 1\n    ];\n  };\n\n  /**\n   * Returns new color object, when given a color in HSLA format\n   * @static\n   * @function\n   * @memberOf fabric.Color\n   * @param {String} color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHsla = Color.fromHsl;\n\n  /**\n   * Returns new color object, when given a color in HEX format\n   * @static\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: FF5555\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHex = function(color) {\n    return Color.fromSource(Color.sourceFromHex(color));\n  };\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HEX format\n   * @static\n   * @memberOf fabric.Color\n   * @param {String} color ex: FF5555 or FF5544CC (RGBa)\n   * @return {Array} source\n   */\n  fabric.Color.sourceFromHex = function(color) {\n    if (color.match(Color.reHex)) {\n      var value = color.slice(color.indexOf('#') + 1),\n          isShortNotation = (value.length === 3 || value.length === 4),\n          isRGBa = (value.length === 8 || value.length === 4),\n          r = isShortNotation ? (value.charAt(0) + value.charAt(0)) : value.substring(0, 2),\n          g = isShortNotation ? (value.charAt(1) + value.charAt(1)) : value.substring(2, 4),\n          b = isShortNotation ? (value.charAt(2) + value.charAt(2)) : value.substring(4, 6),\n          a = isRGBa ? (isShortNotation ? (value.charAt(3) + value.charAt(3)) : value.substring(6, 8)) : 'FF';\n\n      return [\n        parseInt(r, 16),\n        parseInt(g, 16),\n        parseInt(b, 16),\n        parseFloat((parseInt(a, 16) / 255).toFixed(2))\n      ];\n    }\n  };\n\n  /**\n   * Returns new color object, when given color in array representation (ex: [200, 100, 100, 0.5])\n   * @static\n   * @memberOf fabric.Color\n   * @param {Array} source\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromSource = function(source) {\n    var oColor = new Color();\n    oColor.setSource(source);\n    return oColor;\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  /* _FROM_SVG_START_ */\n  function getColorStop(el) {\n    var style = el.getAttribute('style'),\n        offset = el.getAttribute('offset') || 0,\n        color, colorAlpha, opacity, i;\n\n    // convert percents to absolute values\n    offset = parseFloat(offset) / (/%$/.test(offset) ? 100 : 1);\n    offset = offset < 0 ? 0 : offset > 1 ? 1 : offset;\n    if (style) {\n      var keyValuePairs = style.split(/\\s*;\\s*/);\n\n      if (keyValuePairs[keyValuePairs.length - 1] === '') {\n        keyValuePairs.pop();\n      }\n\n      for (i = keyValuePairs.length; i--; ) {\n\n        var split = keyValuePairs[i].split(/\\s*:\\s*/),\n            key = split[0].trim(),\n            value = split[1].trim();\n\n        if (key === 'stop-color') {\n          color = value;\n        }\n        else if (key === 'stop-opacity') {\n          opacity = value;\n        }\n      }\n    }\n\n    if (!color) {\n      color = el.getAttribute('stop-color') || 'rgb(0,0,0)';\n    }\n    if (!opacity) {\n      opacity = el.getAttribute('stop-opacity');\n    }\n\n    color = new fabric.Color(color);\n    colorAlpha = color.getAlpha();\n    opacity = isNaN(parseFloat(opacity)) ? 1 : parseFloat(opacity);\n    opacity *= colorAlpha;\n\n    return {\n      offset: offset,\n      color: color.toRgb(),\n      opacity: opacity\n    };\n  }\n\n  function getLinearCoords(el) {\n    return {\n      x1: el.getAttribute('x1') || 0,\n      y1: el.getAttribute('y1') || 0,\n      x2: el.getAttribute('x2') || '100%',\n      y2: el.getAttribute('y2') || 0\n    };\n  }\n\n  function getRadialCoords(el) {\n    return {\n      x1: el.getAttribute('fx') || el.getAttribute('cx') || '50%',\n      y1: el.getAttribute('fy') || el.getAttribute('cy') || '50%',\n      r1: 0,\n      x2: el.getAttribute('cx') || '50%',\n      y2: el.getAttribute('cy') || '50%',\n      r2: el.getAttribute('r') || '50%'\n    };\n  }\n  /* _FROM_SVG_END_ */\n\n  var clone = fabric.util.object.clone;\n\n  /**\n   * Gradient class\n   * @class fabric.Gradient\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#gradients}\n   * @see {@link fabric.Gradient#initialize} for constructor definition\n   */\n  fabric.Gradient = fabric.util.createClass(/** @lends fabric.Gradient.prototype */ {\n\n    /**\n     * Horizontal offset for aligning gradients coming from SVG when outside pathgroups\n     * @type Number\n     * @default 0\n     */\n    offsetX: 0,\n\n    /**\n     * Vertical offset for aligning gradients coming from SVG when outside pathgroups\n     * @type Number\n     * @default 0\n     */\n    offsetY: 0,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object with type, coords, gradientUnits and colorStops\n     * @return {fabric.Gradient} thisArg\n     */\n    initialize: function(options) {\n      options || (options = { });\n\n      var coords = { };\n\n      this.id = fabric.Object.__uid++;\n      this.type = options.type || 'linear';\n\n      coords = {\n        x1: options.coords.x1 || 0,\n        y1: options.coords.y1 || 0,\n        x2: options.coords.x2 || 0,\n        y2: options.coords.y2 || 0\n      };\n\n      if (this.type === 'radial') {\n        coords.r1 = options.coords.r1 || 0;\n        coords.r2 = options.coords.r2 || 0;\n      }\n      this.coords = coords;\n      this.colorStops = options.colorStops.slice();\n      if (options.gradientTransform) {\n        this.gradientTransform = options.gradientTransform;\n      }\n      this.offsetX = options.offsetX || this.offsetX;\n      this.offsetY = options.offsetY || this.offsetY;\n    },\n\n    /**\n     * Adds another colorStop\n     * @param {Object} colorStop Object with offset and color\n     * @return {fabric.Gradient} thisArg\n     */\n    addColorStop: function(colorStops) {\n      for (var position in colorStops) {\n        var color = new fabric.Color(colorStops[position]);\n        this.colorStops.push({\n          offset: parseFloat(position),\n          color: color.toRgb(),\n          opacity: color.getAlpha()\n        });\n      }\n      return this;\n    },\n\n    /**\n     * Returns object representation of a gradient\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object}\n     */\n    toObject: function(propertiesToInclude) {\n      var object = {\n        type: this.type,\n        coords: this.coords,\n        colorStops: this.colorStops,\n        offsetX: this.offsetX,\n        offsetY: this.offsetY,\n        gradientTransform: this.gradientTransform ? this.gradientTransform.concat() : this.gradientTransform\n      };\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n\n      return object;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an gradient\n     * @param {Object} object Object to create a gradient for\n     * @return {String} SVG representation of an gradient (linear/radial)\n     */\n    toSVG: function(object) {\n      var coords = clone(this.coords, true), i, len,\n          markup, commonAttributes, colorStops = clone(this.colorStops, true),\n          needsSwap = coords.r1 > coords.r2,\n          offsetX = object.width / 2, offsetY = object.height / 2;\n      // colorStops must be sorted ascending\n      colorStops.sort(function(a, b) {\n        return a.offset - b.offset;\n      });\n      if (object.type === 'path') {\n        offsetX -= object.pathOffset.x;\n        offsetY -= object.pathOffset.y;\n      }\n      for (var prop in coords) {\n        if (prop === 'x1' || prop === 'x2') {\n          coords[prop] += this.offsetX - offsetX;\n        }\n        else if (prop === 'y1' || prop === 'y2') {\n          coords[prop] += this.offsetY - offsetY;\n        }\n      }\n\n      commonAttributes = 'id=\"SVGID_' + this.id +\n                     '\" gradientUnits=\"userSpaceOnUse\"';\n      if (this.gradientTransform) {\n        commonAttributes += ' gradientTransform=\"matrix(' + this.gradientTransform.join(' ') + ')\" ';\n      }\n      if (this.type === 'linear') {\n        markup = [\n          '<linearGradient ',\n          commonAttributes,\n          ' x1=\"', coords.x1,\n          '\" y1=\"', coords.y1,\n          '\" x2=\"', coords.x2,\n          '\" y2=\"', coords.y2,\n          '\">\\n'\n        ];\n      }\n      else if (this.type === 'radial') {\n        // svg radial gradient has just 1 radius. the biggest.\n        markup = [\n          '<radialGradient ',\n          commonAttributes,\n          ' cx=\"', needsSwap ? coords.x1 : coords.x2,\n          '\" cy=\"', needsSwap ? coords.y1 : coords.y2,\n          '\" r=\"', needsSwap ? coords.r1 : coords.r2,\n          '\" fx=\"', needsSwap ? coords.x2 : coords.x1,\n          '\" fy=\"', needsSwap ? coords.y2 : coords.y1,\n          '\">\\n'\n        ];\n      }\n\n      if (this.type === 'radial') {\n        if (needsSwap) {\n          // svg goes from internal to external radius. if radius are inverted, swap color stops.\n          colorStops = colorStops.concat();\n          colorStops.reverse();\n          for (i = 0, len = colorStops.length; i < len; i++) {\n            colorStops[i].offset = 1 - colorStops[i].offset;\n          }\n        }\n        var minRadius = Math.min(coords.r1, coords.r2);\n        if (minRadius > 0) {\n          // i have to shift all colorStops and add new one in 0.\n          var maxRadius = Math.max(coords.r1, coords.r2),\n              percentageShift = minRadius / maxRadius;\n          for (i = 0, len = colorStops.length; i < len; i++) {\n            colorStops[i].offset += percentageShift * (1 - colorStops[i].offset);\n          }\n        }\n      }\n\n      for (i = 0, len = colorStops.length; i < len; i++) {\n        var colorStop = colorStops[i];\n        markup.push(\n          '<stop ',\n          'offset=\"', (colorStop.offset * 100) + '%',\n          '\" style=\"stop-color:', colorStop.color,\n          (colorStop.opacity !== null ? ';stop-opacity: ' + colorStop.opacity : ';'),\n          '\"/>\\n'\n        );\n      }\n\n      markup.push((this.type === 'linear' ? '</linearGradient>\\n' : '</radialGradient>\\n'));\n\n      return markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns an instance of CanvasGradient\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @return {CanvasGradient}\n     */\n    toLive: function(ctx) {\n      var gradient, coords = fabric.util.object.clone(this.coords), i, len;\n\n      if (!this.type) {\n        return;\n      }\n\n      if (this.type === 'linear') {\n        gradient = ctx.createLinearGradient(\n          coords.x1, coords.y1, coords.x2, coords.y2);\n      }\n      else if (this.type === 'radial') {\n        gradient = ctx.createRadialGradient(\n          coords.x1, coords.y1, coords.r1, coords.x2, coords.y2, coords.r2);\n      }\n\n      for (i = 0, len = this.colorStops.length; i < len; i++) {\n        var color = this.colorStops[i].color,\n            opacity = this.colorStops[i].opacity,\n            offset = this.colorStops[i].offset;\n\n        if (typeof opacity !== 'undefined') {\n          color = new fabric.Color(color).setAlpha(opacity).toRgba();\n        }\n        gradient.addColorStop(offset, color);\n      }\n\n      return gradient;\n    }\n  });\n\n  fabric.util.object.extend(fabric.Gradient, {\n\n    /* _FROM_SVG_START_ */\n    /**\n     * Returns {@link fabric.Gradient} instance from an SVG element\n     * @static\n     * @memberOf fabric.Gradient\n     * @param {SVGGradientElement} el SVG gradient element\n     * @param {fabric.Object} instance\n     * @return {fabric.Gradient} Gradient instance\n     * @see http://www.w3.org/TR/SVG/pservers.html#LinearGradientElement\n     * @see http://www.w3.org/TR/SVG/pservers.html#RadialGradientElement\n     */\n    fromElement: function(el, instance) {\n\n      /**\n       *  @example:\n       *\n       *  <linearGradient id=\"linearGrad1\">\n       *    <stop offset=\"0%\" stop-color=\"white\"/>\n       *    <stop offset=\"100%\" stop-color=\"black\"/>\n       *  </linearGradient>\n       *\n       *  OR\n       *\n       *  <linearGradient id=\"linearGrad2\">\n       *    <stop offset=\"0\" style=\"stop-color:rgb(255,255,255)\"/>\n       *    <stop offset=\"1\" style=\"stop-color:rgb(0,0,0)\"/>\n       *  </linearGradient>\n       *\n       *  OR\n       *\n       *  <radialGradient id=\"radialGrad1\">\n       *    <stop offset=\"0%\" stop-color=\"white\" stop-opacity=\"1\" />\n       *    <stop offset=\"50%\" stop-color=\"black\" stop-opacity=\"0.5\" />\n       *    <stop offset=\"100%\" stop-color=\"white\" stop-opacity=\"1\" />\n       *  </radialGradient>\n       *\n       *  OR\n       *\n       *  <radialGradient id=\"radialGrad2\">\n       *    <stop offset=\"0\" stop-color=\"rgb(255,255,255)\" />\n       *    <stop offset=\"0.5\" stop-color=\"rgb(0,0,0)\" />\n       *    <stop offset=\"1\" stop-color=\"rgb(255,255,255)\" />\n       *  </radialGradient>\n       *\n       */\n\n      var colorStopEls = el.getElementsByTagName('stop'),\n          type,\n          gradientUnits = el.getAttribute('gradientUnits') || 'objectBoundingBox',\n          gradientTransform = el.getAttribute('gradientTransform'),\n          colorStops = [],\n          coords, ellipseMatrix, i;\n\n      if (el.nodeName === 'linearGradient' || el.nodeName === 'LINEARGRADIENT') {\n        type = 'linear';\n      }\n      else {\n        type = 'radial';\n      }\n\n      if (type === 'linear') {\n        coords = getLinearCoords(el);\n      }\n      else if (type === 'radial') {\n        coords = getRadialCoords(el);\n      }\n\n      for (i = colorStopEls.length; i--; ) {\n        colorStops.push(getColorStop(colorStopEls[i]));\n      }\n\n      ellipseMatrix = _convertPercentUnitsToValues(instance, coords, gradientUnits);\n\n      var gradient = new fabric.Gradient({\n        type: type,\n        coords: coords,\n        colorStops: colorStops,\n        offsetX: -instance.left,\n        offsetY: -instance.top\n      });\n\n      if (gradientTransform || ellipseMatrix !== '') {\n        gradient.gradientTransform = fabric.parseTransformAttribute((gradientTransform || '') + ellipseMatrix);\n      }\n\n      return gradient;\n    },\n    /* _FROM_SVG_END_ */\n\n    /**\n     * Returns {@link fabric.Gradient} instance from its object representation\n     * @static\n     * @memberOf fabric.Gradient\n     * @param {Object} obj\n     * @param {Object} [options] Options object\n     */\n    forObject: function(obj, options) {\n      options || (options = { });\n      _convertPercentUnitsToValues(obj, options.coords, 'userSpaceOnUse');\n      return new fabric.Gradient(options);\n    }\n  });\n\n  /**\n   * @private\n   */\n  function _convertPercentUnitsToValues(object, options, gradientUnits) {\n    var propValue, addFactor = 0, multFactor = 1, ellipseMatrix = '';\n    for (var prop in options) {\n      if (options[prop] === 'Infinity') {\n        options[prop] = 1;\n      }\n      else if (options[prop] === '-Infinity') {\n        options[prop] = 0;\n      }\n      propValue = parseFloat(options[prop], 10);\n      if (typeof options[prop] === 'string' && /^(\\d+\\.\\d+)%|(\\d+)%$/.test(options[prop])) {\n        multFactor = 0.01;\n      }\n      else {\n        multFactor = 1;\n      }\n      if (prop === 'x1' || prop === 'x2' || prop === 'r2') {\n        multFactor *= gradientUnits === 'objectBoundingBox' ? object.width : 1;\n        addFactor = gradientUnits === 'objectBoundingBox' ? object.left || 0 : 0;\n      }\n      else if (prop === 'y1' || prop === 'y2') {\n        multFactor *= gradientUnits === 'objectBoundingBox' ? object.height : 1;\n        addFactor = gradientUnits === 'objectBoundingBox' ? object.top || 0 : 0;\n      }\n      options[prop] = propValue * multFactor + addFactor;\n    }\n    if (object.type === 'ellipse' &&\n        options.r2 !== null &&\n        gradientUnits === 'objectBoundingBox' &&\n        object.rx !== object.ry) {\n\n      var scaleFactor = object.ry / object.rx;\n      ellipseMatrix = ' scale(1, ' + scaleFactor + ')';\n      if (options.y1) {\n        options.y1 /= scaleFactor;\n      }\n      if (options.y2) {\n        options.y2 /= scaleFactor;\n      }\n    }\n    return ellipseMatrix;\n  }\n})();\n\n\n(function() {\n\n  'use strict';\n\n  var toFixed = fabric.util.toFixed;\n\n  /**\n   * Pattern class\n   * @class fabric.Pattern\n   * @see {@link http://fabricjs.com/patterns|Pattern demo}\n   * @see {@link http://fabricjs.com/dynamic-patterns|DynamicPattern demo}\n   * @see {@link fabric.Pattern#initialize} for constructor definition\n   */\n\n\n  fabric.Pattern = fabric.util.createClass(/** @lends fabric.Pattern.prototype */ {\n\n    /**\n     * Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n     * @type String\n     * @default\n     */\n    repeat: 'repeat',\n\n    /**\n     * Pattern horizontal offset from object's left/top corner\n     * @type Number\n     * @default\n     */\n    offsetX: 0,\n\n    /**\n     * Pattern vertical offset from object's left/top corner\n     * @type Number\n     * @default\n     */\n    offsetY: 0,\n\n    /**\n     * crossOrigin value (one of \"\", \"anonymous\", \"use-credentials\")\n     * @see https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes\n     * @type String\n     * @default\n     */\n    crossOrigin: '',\n\n    /**\n     * transform matrix to change the pattern, imported from svgs.\n     * @type Array\n     * @default\n     */\n    patternTransform: null,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @param {Function} [callback] function to invoke after callback init.\n     * @return {fabric.Pattern} thisArg\n     */\n    initialize: function(options, callback) {\n      options || (options = { });\n\n      this.id = fabric.Object.__uid++;\n      this.setOptions(options);\n      if (!options.source || (options.source && typeof options.source !== 'string')) {\n        callback && callback(this);\n        return;\n      }\n      // function string\n      if (typeof fabric.util.getFunctionBody(options.source) !== 'undefined') {\n        this.source = new Function(fabric.util.getFunctionBody(options.source));\n        callback && callback(this);\n      }\n      else {\n        // img src string\n        var _this = this;\n        this.source = fabric.util.createImage();\n        fabric.util.loadImage(options.source, function(img) {\n          _this.source = img;\n          callback && callback(_this);\n        }, null, this.crossOrigin);\n      }\n    },\n\n    /**\n     * Returns object representation of a pattern\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of a pattern instance\n     */\n    toObject: function(propertiesToInclude) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n          source, object;\n\n      // callback\n      if (typeof this.source === 'function') {\n        source = String(this.source);\n      }\n      // <img> element\n      else if (typeof this.source.src === 'string') {\n        source = this.source.src;\n      }\n      // <canvas> element\n      else if (typeof this.source === 'object' && this.source.toDataURL) {\n        source = this.source.toDataURL();\n      }\n\n      object = {\n        type: 'pattern',\n        source: source,\n        repeat: this.repeat,\n        crossOrigin: this.crossOrigin,\n        offsetX: toFixed(this.offsetX, NUM_FRACTION_DIGITS),\n        offsetY: toFixed(this.offsetY, NUM_FRACTION_DIGITS),\n        patternTransform: this.patternTransform ? this.patternTransform.concat() : null\n      };\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n\n      return object;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of a pattern\n     * @param {fabric.Object} object\n     * @return {String} SVG representation of a pattern\n     */\n    toSVG: function(object) {\n      var patternSource = typeof this.source === 'function' ? this.source() : this.source,\n          patternWidth = patternSource.width / object.width,\n          patternHeight = patternSource.height / object.height,\n          patternOffsetX = this.offsetX / object.width,\n          patternOffsetY = this.offsetY / object.height,\n          patternImgSrc = '';\n      if (this.repeat === 'repeat-x' || this.repeat === 'no-repeat') {\n        patternHeight = 1;\n      }\n      if (this.repeat === 'repeat-y' || this.repeat === 'no-repeat') {\n        patternWidth = 1;\n      }\n      if (patternSource.src) {\n        patternImgSrc = patternSource.src;\n      }\n      else if (patternSource.toDataURL) {\n        patternImgSrc = patternSource.toDataURL();\n      }\n\n      return '<pattern id=\"SVGID_' + this.id +\n                    '\" x=\"' + patternOffsetX +\n                    '\" y=\"' + patternOffsetY +\n                    '\" width=\"' + patternWidth +\n                    '\" height=\"' + patternHeight + '\">\\n' +\n               '<image x=\"0\" y=\"0\"' +\n                      ' width=\"' + patternSource.width +\n                      '\" height=\"' + patternSource.height +\n                      '\" xlink:href=\"' + patternImgSrc +\n               '\"></image>\\n' +\n             '</pattern>\\n';\n    },\n    /* _TO_SVG_END_ */\n\n    setOptions: function(options) {\n      for (var prop in options) {\n        this[prop] = options[prop];\n      }\n    },\n\n    /**\n     * Returns an instance of CanvasPattern\n     * @param {CanvasRenderingContext2D} ctx Context to create pattern\n     * @return {CanvasPattern}\n     */\n    toLive: function(ctx) {\n      var source = typeof this.source === 'function' ? this.source() : this.source;\n\n      // if the image failed to load, return, and allow rest to continue loading\n      if (!source) {\n        return '';\n      }\n\n      // if an image\n      if (typeof source.src !== 'undefined') {\n        if (!source.complete) {\n          return '';\n        }\n        if (source.naturalWidth === 0 || source.naturalHeight === 0) {\n          return '';\n        }\n      }\n      return ctx.createPattern(source, this.repeat);\n    }\n  });\n})();\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      toFixed = fabric.util.toFixed;\n\n  if (fabric.Shadow) {\n    fabric.warn('fabric.Shadow is already defined.');\n    return;\n  }\n\n  /**\n   * Shadow class\n   * @class fabric.Shadow\n   * @see {@link http://fabricjs.com/shadows|Shadow demo}\n   * @see {@link fabric.Shadow#initialize} for constructor definition\n   */\n  fabric.Shadow = fabric.util.createClass(/** @lends fabric.Shadow.prototype */ {\n\n    /**\n     * Shadow color\n     * @type String\n     * @default\n     */\n    color: 'rgb(0,0,0)',\n\n    /**\n     * Shadow blur\n     * @type Number\n     */\n    blur: 0,\n\n    /**\n     * Shadow horizontal offset\n     * @type Number\n     * @default\n     */\n    offsetX: 0,\n\n    /**\n     * Shadow vertical offset\n     * @type Number\n     * @default\n     */\n    offsetY: 0,\n\n    /**\n     * Whether the shadow should affect stroke operations\n     * @type Boolean\n     * @default\n     */\n    affectStroke: false,\n\n    /**\n     * Indicates whether toObject should include default values\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues: true,\n\n    /**\n     * Constructor\n     * @param {Object|String} [options] Options object with any of color, blur, offsetX, offsetY properties or string (e.g. \"rgba(0,0,0,0.2) 2px 2px 10px\")\n     * @return {fabric.Shadow} thisArg\n     */\n    initialize: function(options) {\n\n      if (typeof options === 'string') {\n        options = this._parseShadow(options);\n      }\n\n      for (var prop in options) {\n        this[prop] = options[prop];\n      }\n\n      this.id = fabric.Object.__uid++;\n    },\n\n    /**\n     * @private\n     * @param {String} shadow Shadow value to parse\n     * @return {Object} Shadow object with color, offsetX, offsetY and blur\n     */\n    _parseShadow: function(shadow) {\n      var shadowStr = shadow.trim(),\n          offsetsAndBlur = fabric.Shadow.reOffsetsAndBlur.exec(shadowStr) || [],\n          color = shadowStr.replace(fabric.Shadow.reOffsetsAndBlur, '') || 'rgb(0,0,0)';\n\n      return {\n        color: color.trim(),\n        offsetX: parseInt(offsetsAndBlur[1], 10) || 0,\n        offsetY: parseInt(offsetsAndBlur[2], 10) || 0,\n        blur: parseInt(offsetsAndBlur[3], 10) || 0\n      };\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @see http://www.w3.org/TR/css-text-decor-3/#text-shadow\n     * @return {String} Returns CSS3 text-shadow declaration\n     */\n    toString: function() {\n      return [this.offsetX, this.offsetY, this.blur, this.color].join('px ');\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of a shadow\n     * @param {fabric.Object} object\n     * @return {String} SVG representation of a shadow\n     */\n    toSVG: function(object) {\n      var fBoxX = 40, fBoxY = 40, NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n          offset = fabric.util.rotateVector(\n            { x: this.offsetX, y: this.offsetY },\n            fabric.util.degreesToRadians(-object.angle)),\n          BLUR_BOX = 20;\n\n      if (object.width && object.height) {\n        //http://www.w3.org/TR/SVG/filters.html#FilterEffectsRegion\n        // we add some extra space to filter box to contain the blur ( 20 )\n        fBoxX = toFixed((Math.abs(offset.x) + this.blur) / object.width, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n        fBoxY = toFixed((Math.abs(offset.y) + this.blur) / object.height, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n      }\n      if (object.flipX) {\n        offset.x *= -1;\n      }\n      if (object.flipY) {\n        offset.y *= -1;\n      }\n      return (\n        '<filter id=\"SVGID_' + this.id + '\" y=\"-' + fBoxY + '%\" height=\"' + (100 + 2 * fBoxY) + '%\" ' +\n          'x=\"-' + fBoxX + '%\" width=\"' + (100 + 2 * fBoxX) + '%\" ' + '>\\n' +\n          '\\t<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"' +\n            toFixed(this.blur ? this.blur / 2 : 0, NUM_FRACTION_DIGITS) + '\"></feGaussianBlur>\\n' +\n          '\\t<feOffset dx=\"' + toFixed(offset.x, NUM_FRACTION_DIGITS) +\n          '\" dy=\"' + toFixed(offset.y, NUM_FRACTION_DIGITS) + '\" result=\"oBlur\" ></feOffset>\\n' +\n          '\\t<feFlood flood-color=\"' + this.color + '\"/>\\n' +\n          '\\t<feComposite in2=\"oBlur\" operator=\"in\" />\\n' +\n          '\\t<feMerge>\\n' +\n            '\\t\\t<feMergeNode></feMergeNode>\\n' +\n            '\\t\\t<feMergeNode in=\"SourceGraphic\"></feMergeNode>\\n' +\n          '\\t</feMerge>\\n' +\n        '</filter>\\n');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns object representation of a shadow\n     * @return {Object} Object representation of a shadow instance\n     */\n    toObject: function() {\n      if (this.includeDefaultValues) {\n        return {\n          color: this.color,\n          blur: this.blur,\n          offsetX: this.offsetX,\n          offsetY: this.offsetY,\n          affectStroke: this.affectStroke\n        };\n      }\n      var obj = { }, proto = fabric.Shadow.prototype;\n\n      ['color', 'blur', 'offsetX', 'offsetY', 'affectStroke'].forEach(function(prop) {\n        if (this[prop] !== proto[prop]) {\n          obj[prop] = this[prop];\n        }\n      }, this);\n\n      return obj;\n    }\n  });\n\n  /**\n   * Regex matching shadow offsetX, offsetY and blur (ex: \"2px 2px 10px rgba(0,0,0,0.2)\", \"rgb(0,255,0) 2px 2px\")\n   * @static\n   * @field\n   * @memberOf fabric.Shadow\n   */\n  // eslint-disable-next-line max-len\n  fabric.Shadow.reOffsetsAndBlur = /(?:\\s|^)(-?\\d+(?:px)?(?:\\s?|$))?(-?\\d+(?:px)?(?:\\s?|$))?(\\d+(?:px)?)?(?:\\s?|$)(?:$|\\s)/;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function () {\n\n  'use strict';\n\n  if (fabric.StaticCanvas) {\n    fabric.warn('fabric.StaticCanvas is already defined.');\n    return;\n  }\n\n  // aliases for faster resolution\n  var extend = fabric.util.object.extend,\n      getElementOffset = fabric.util.getElementOffset,\n      removeFromArray = fabric.util.removeFromArray,\n      toFixed = fabric.util.toFixed,\n      transformPoint = fabric.util.transformPoint,\n      invertTransform = fabric.util.invertTransform,\n\n      CANVAS_INIT_ERROR = new Error('Could not initialize `canvas` element');\n\n  /**\n   * Static canvas class\n   * @class fabric.StaticCanvas\n   * @mixes fabric.Collection\n   * @mixes fabric.Observable\n   * @see {@link http://fabricjs.com/static_canvas|StaticCanvas demo}\n   * @see {@link fabric.StaticCanvas#initialize} for constructor definition\n   * @fires before:render\n   * @fires after:render\n   * @fires canvas:cleared\n   * @fires object:added\n   * @fires object:removed\n   */\n  fabric.StaticCanvas = fabric.util.createClass(fabric.CommonMethods, /** @lends fabric.StaticCanvas.prototype */ {\n\n    /**\n     * Constructor\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(el, options) {\n      options || (options = { });\n      this.renderAndResetBound = this.renderAndReset.bind(this);\n      this.requestRenderAllBound = this.requestRenderAll.bind(this);\n      this._initStatic(el, options);\n    },\n\n    /**\n     * Background color of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setBackgroundColor}.\n     * @type {(String|fabric.Pattern)}\n     * @default\n     */\n    backgroundColor: '',\n\n    /**\n     * Background image of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setBackgroundImage}.\n     * <b>Backwards incompatibility note:</b> The \"backgroundImageOpacity\"\n     * and \"backgroundImageStretch\" properties are deprecated since 1.3.9.\n     * Use {@link fabric.Image#opacity}, {@link fabric.Image#width} and {@link fabric.Image#height}.\n     * @type fabric.Image\n     * @default\n     */\n    backgroundImage: null,\n\n    /**\n     * Overlay color of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setOverlayColor}\n     * @since 1.3.9\n     * @type {(String|fabric.Pattern)}\n     * @default\n     */\n    overlayColor: '',\n\n    /**\n     * Overlay image of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setOverlayImage}.\n     * <b>Backwards incompatibility note:</b> The \"overlayImageLeft\"\n     * and \"overlayImageTop\" properties are deprecated since 1.3.9.\n     * Use {@link fabric.Image#left} and {@link fabric.Image#top}.\n     * @type fabric.Image\n     * @default\n     */\n    overlayImage: null,\n\n    /**\n     * Indicates whether toObject/toDatalessObject should include default values\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues: true,\n\n    /**\n     * Indicates whether objects' state should be saved\n     * @type Boolean\n     * @default\n     */\n    stateful: false,\n\n    /**\n     * Indicates whether {@link fabric.Collection.add}, {@link fabric.Collection.insertAt} and {@link fabric.Collection.remove},\n     * {@link fabric.StaticCanvas.moveTo}, {@link fabric.StaticCanvas.clear} and many more, should also re-render canvas.\n     * Disabling this option will not give a performance boost when adding/removing a lot of objects to/from canvas at once\n     * since the renders are quequed and executed one per frame.\n     * Disabling is suggested anyway and managing the renders of the app manually is not a big effort ( canvas.requestRenderAll() )\n     * Left default to true to do not break documentation and old app, fiddles.\n     * @type Boolean\n     * @default\n     */\n    renderOnAddRemove: true,\n\n    /**\n     * Function that determines clipping of entire canvas area\n     * Being passed context as first argument. See clipping canvas area in {@link https://github.com/kangax/fabric.js/wiki/FAQ}\n     * @deprecated since 2.0.0\n     * @type Function\n     * @default\n     */\n    clipTo: null,\n\n    /**\n     * Indicates whether object controls (borders/controls) are rendered above overlay image\n     * @type Boolean\n     * @default\n     */\n    controlsAboveOverlay: false,\n\n    /**\n     * Indicates whether the browser can be scrolled when using a touchscreen and dragging on the canvas\n     * @type Boolean\n     * @default\n     */\n    allowTouchScrolling: false,\n\n    /**\n     * Indicates whether this canvas will use image smoothing, this is on by default in browsers\n     * @type Boolean\n     * @default\n     */\n    imageSmoothingEnabled: true,\n\n    /**\n     * The transformation (in the format of Canvas transform) which focuses the viewport\n     * @type Array\n     * @default\n     */\n    viewportTransform: fabric.iMatrix.concat(),\n\n    /**\n     * if set to false background image is not affected by viewport transform\n     * @since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    backgroundVpt: true,\n\n    /**\n     * if set to false overlya image is not affected by viewport transform\n     * @since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    overlayVpt: true,\n\n    /**\n     * Callback; invoked right before object is about to be scaled/rotated\n     */\n    onBeforeScaleRotate: function () {\n      /* NOOP */\n    },\n\n    /**\n     * When true, canvas is scaled by devicePixelRatio for better rendering on retina screens\n     * @type Boolean\n     * @default\n     */\n    enableRetinaScaling: true,\n\n    /**\n     * Describe canvas element extension over design\n     * properties are tl,tr,bl,br.\n     * if canvas is not zoomed/panned those points are the four corner of canvas\n     * if canvas is viewportTransformed you those points indicate the extension\n     * of canvas element in plain untrasformed coordinates\n     * The coordinates get updated with @method calcViewportBoundaries.\n     * @memberOf fabric.StaticCanvas.prototype\n     */\n    vptCoords: { },\n\n    /**\n     * Based on vptCoords and object.aCoords, skip rendering of objects that\n     * are not included in current viewport.\n     * May greatly help in applications with crowded canvas and use of zoom/pan\n     * If One of the corner of the bounding box of the object is on the canvas\n     * the objects get rendered.\n     * @memberOf fabric.StaticCanvas.prototype\n     * @type Boolean\n     * @default\n     */\n    skipOffscreen: true,\n\n    /**\n     * @private\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     */\n    _initStatic: function(el, options) {\n      var cb = this.requestRenderAllBound;\n      this._objects = [];\n      this._createLowerCanvas(el);\n      this._initOptions(options);\n      this._setImageSmoothing();\n      // only initialize retina scaling once\n      if (!this.interactive) {\n        this._initRetinaScaling();\n      }\n\n      if (options.overlayImage) {\n        this.setOverlayImage(options.overlayImage, cb);\n      }\n      if (options.backgroundImage) {\n        this.setBackgroundImage(options.backgroundImage, cb);\n      }\n      if (options.backgroundColor) {\n        this.setBackgroundColor(options.backgroundColor, cb);\n      }\n      if (options.overlayColor) {\n        this.setOverlayColor(options.overlayColor, cb);\n      }\n      this.calcOffset();\n    },\n\n    /**\n     * @private\n     */\n    _isRetinaScaling: function() {\n      return (fabric.devicePixelRatio !== 1 && this.enableRetinaScaling);\n    },\n\n    /**\n     * @private\n     * @return {Number} retinaScaling if applied, otherwise 1;\n     */\n    getRetinaScaling: function() {\n      return this._isRetinaScaling() ? fabric.devicePixelRatio : 1;\n    },\n\n    /**\n     * @private\n     */\n    _initRetinaScaling: function() {\n      if (!this._isRetinaScaling()) {\n        return;\n      }\n      this.lowerCanvasEl.setAttribute('width', this.width * fabric.devicePixelRatio);\n      this.lowerCanvasEl.setAttribute('height', this.height * fabric.devicePixelRatio);\n\n      this.contextContainer.scale(fabric.devicePixelRatio, fabric.devicePixelRatio);\n    },\n\n    /**\n     * Calculates canvas element offset relative to the document\n     * This method is also attached as \"resize\" event handler of window\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    calcOffset: function () {\n      this._offset = getElementOffset(this.lowerCanvasEl);\n      return this;\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#overlayImage|overlay image} for this canvas\n     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set overlay to\n     * @param {Function} callback callback to invoke when image is loaded and set as an overlay\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|overlay image}.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/MnzHT/|jsFiddle demo}\n     * @example <caption>Normal overlayImage with left/top = 0</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   // Needed to position overlayImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>overlayImage with different properties</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>Stretched overlayImage #1 - width/height correspond to canvas width/height</caption>\n     * fabric.Image.fromURL('http://fabricjs.com/assets/jail_cell_bars.png', function(img) {\n     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n     *    canvas.setOverlayImage(img, canvas.renderAll.bind(canvas));\n     * });\n     * @example <caption>Stretched overlayImage #2 - width/height correspond to canvas width/height</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   width: canvas.width,\n     *   height: canvas.height,\n     *   // Needed to position overlayImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>overlayImage loaded from cross-origin</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top',\n     *   crossOrigin: 'anonymous'\n     * });\n     */\n    setOverlayImage: function (image, callback, options) {\n      return this.__setBgOverlayImage('overlayImage', image, callback, options);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#backgroundImage|background image} for this canvas\n     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set background to\n     * @param {Function} callback Callback to invoke when image is loaded and set as background\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|background image}.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/YH9yD/|jsFiddle demo}\n     * @example <caption>Normal backgroundImage with left/top = 0</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   // Needed to position backgroundImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>backgroundImage with different properties</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>Stretched backgroundImage #1 - width/height correspond to canvas width/height</caption>\n     * fabric.Image.fromURL('http://fabricjs.com/assets/honey_im_subtle.png', function(img) {\n     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n     *    canvas.setBackgroundImage(img, canvas.renderAll.bind(canvas));\n     * });\n     * @example <caption>Stretched backgroundImage #2 - width/height correspond to canvas width/height</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   width: canvas.width,\n     *   height: canvas.height,\n     *   // Needed to position backgroundImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>backgroundImage loaded from cross-origin</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top',\n     *   crossOrigin: 'anonymous'\n     * });\n     */\n    setBackgroundImage: function (image, callback, options) {\n      return this.__setBgOverlayImage('backgroundImage', image, callback, options);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#overlayColor|foreground color} for this canvas\n     * @param {(String|fabric.Pattern)} overlayColor Color or pattern to set foreground color to\n     * @param {Function} callback Callback to invoke when foreground color is set\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/pB55h/|jsFiddle demo}\n     * @example <caption>Normal overlayColor - color value</caption>\n     * canvas.setOverlayColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as overlayColor</caption>\n     * canvas.setOverlayColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n     * }, canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as overlayColor with repeat and offset</caption>\n     * canvas.setOverlayColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat',\n     *   offsetX: 200,\n     *   offsetY: 100\n     * }, canvas.renderAll.bind(canvas));\n     */\n    setOverlayColor: function(overlayColor, callback) {\n      return this.__setBgOverlayColor('overlayColor', overlayColor, callback);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#backgroundColor|background color} for this canvas\n     * @param {(String|fabric.Pattern)} backgroundColor Color or pattern to set background color to\n     * @param {Function} callback Callback to invoke when background color is set\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/hXzvk/|jsFiddle demo}\n     * @example <caption>Normal backgroundColor - color value</caption>\n     * canvas.setBackgroundColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as backgroundColor</caption>\n     * canvas.setBackgroundColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n     * }, canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as backgroundColor with repeat and offset</caption>\n     * canvas.setBackgroundColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat',\n     *   offsetX: 200,\n     *   offsetY: 100\n     * }, canvas.renderAll.bind(canvas));\n     */\n    setBackgroundColor: function(backgroundColor, callback) {\n      return this.__setBgOverlayColor('backgroundColor', backgroundColor, callback);\n    },\n\n    /**\n     * @private\n     * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-imagesmoothingenabled|WhatWG Canvas Standard}\n     */\n    _setImageSmoothing: function() {\n      var ctx = this.getContext();\n\n      ctx.imageSmoothingEnabled = ctx.imageSmoothingEnabled || ctx.webkitImageSmoothingEnabled\n        || ctx.mozImageSmoothingEnabled || ctx.msImageSmoothingEnabled || ctx.oImageSmoothingEnabled;\n      ctx.imageSmoothingEnabled = this.imageSmoothingEnabled;\n    },\n\n    /**\n     * @private\n     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundImage|backgroundImage}\n     * or {@link fabric.StaticCanvas#overlayImage|overlayImage})\n     * @param {(fabric.Image|String|null)} image fabric.Image instance, URL of an image or null to set background or overlay to\n     * @param {Function} callback Callback to invoke when image is loaded and set as background or overlay\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|image}.\n     */\n    __setBgOverlayImage: function(property, image, callback, options) {\n      if (typeof image === 'string') {\n        fabric.util.loadImage(image, function(img) {\n          img && (this[property] = new fabric.Image(img, options));\n          callback && callback(img);\n        }, this, options && options.crossOrigin);\n      }\n      else {\n        options && image.setOptions(options);\n        this[property] = image;\n        callback && callback(image);\n      }\n\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundColor|backgroundColor}\n     * or {@link fabric.StaticCanvas#overlayColor|overlayColor})\n     * @param {(Object|String|null)} color Object with pattern information, color value or null\n     * @param {Function} [callback] Callback is invoked when color is set\n     */\n    __setBgOverlayColor: function(property, color, callback) {\n      this[property] = color;\n      this._initGradient(color, property);\n      this._initPattern(color, property, callback);\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _createCanvasElement: function() {\n      var element = fabric.util.createCanvasElement();\n      if (!element) {\n        throw CANVAS_INIT_ERROR;\n      }\n      if (!element.style) {\n        element.style = { };\n      }\n      if (typeof element.getContext === 'undefined') {\n        throw CANVAS_INIT_ERROR;\n      }\n      return element;\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initOptions: function (options) {\n      this._setOptions(options);\n\n      this.width = this.width || parseInt(this.lowerCanvasEl.width, 10) || 0;\n      this.height = this.height || parseInt(this.lowerCanvasEl.height, 10) || 0;\n\n      if (!this.lowerCanvasEl.style) {\n        return;\n      }\n\n      this.lowerCanvasEl.width = this.width;\n      this.lowerCanvasEl.height = this.height;\n\n      this.lowerCanvasEl.style.width = this.width + 'px';\n      this.lowerCanvasEl.style.height = this.height + 'px';\n\n      this.viewportTransform = this.viewportTransform.slice();\n    },\n\n    /**\n     * Creates a bottom canvas\n     * @private\n     * @param {HTMLElement} [canvasEl]\n     */\n    _createLowerCanvas: function (canvasEl) {\n      // canvasEl === 'HTMLCanvasElement' does not work on jsdom/node\n      if (canvasEl && canvasEl.getContext) {\n        this.lowerCanvasEl = canvasEl;\n      }\n      else {\n        this.lowerCanvasEl = fabric.util.getById(canvasEl) || this._createCanvasElement();\n      }\n\n      fabric.util.addClass(this.lowerCanvasEl, 'lower-canvas');\n\n      if (this.interactive) {\n        this._applyCanvasStyle(this.lowerCanvasEl);\n      }\n\n      this.contextContainer = this.lowerCanvasEl.getContext('2d');\n    },\n\n    /**\n     * Returns canvas width (in px)\n     * @return {Number}\n     */\n    getWidth: function () {\n      return this.width;\n    },\n\n    /**\n     * Returns canvas height (in px)\n     * @return {Number}\n     */\n    getHeight: function () {\n      return this.height;\n    },\n\n    /**\n     * Sets width of this canvas instance\n     * @param {Number|String} value                         Value to set width to\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setWidth: function (value, options) {\n      return this.setDimensions({ width: value }, options);\n    },\n\n    /**\n     * Sets height of this canvas instance\n     * @param {Number|String} value                         Value to set height to\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setHeight: function (value, options) {\n      return this.setDimensions({ height: value }, options);\n    },\n\n    /**\n     * Sets dimensions (width, height) of this canvas instance. when options.cssOnly flag active you should also supply the unit of measure (px/%/em)\n     * @param {Object}        dimensions                    Object with width/height properties\n     * @param {Number|String} [dimensions.width]            Width of canvas element\n     * @param {Number|String} [dimensions.height]           Height of canvas element\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    setDimensions: function (dimensions, options) {\n      var cssValue;\n\n      options = options || {};\n\n      for (var prop in dimensions) {\n        cssValue = dimensions[prop];\n\n        if (!options.cssOnly) {\n          this._setBackstoreDimension(prop, dimensions[prop]);\n          cssValue += 'px';\n        }\n\n        if (!options.backstoreOnly) {\n          this._setCssDimension(prop, cssValue);\n        }\n      }\n      if (this._isCurrentlyDrawing) {\n        this.freeDrawingBrush && this.freeDrawingBrush._setBrushStyles();\n      }\n      this._initRetinaScaling();\n      this._setImageSmoothing();\n      this.calcOffset();\n\n      if (!options.cssOnly) {\n        this.requestRenderAll();\n      }\n\n      return this;\n    },\n\n    /**\n     * Helper for setting width/height\n     * @private\n     * @param {String} prop property (width|height)\n     * @param {Number} value value to set property to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    _setBackstoreDimension: function (prop, value) {\n      this.lowerCanvasEl[prop] = value;\n\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl[prop] = value;\n      }\n\n      if (this.cacheCanvasEl) {\n        this.cacheCanvasEl[prop] = value;\n      }\n\n      this[prop] = value;\n\n      return this;\n    },\n\n    /**\n     * Helper for setting css width/height\n     * @private\n     * @param {String} prop property (width|height)\n     * @param {String} value value to set property to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    _setCssDimension: function (prop, value) {\n      this.lowerCanvasEl.style[prop] = value;\n\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl.style[prop] = value;\n      }\n\n      if (this.wrapperEl) {\n        this.wrapperEl.style[prop] = value;\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns canvas zoom level\n     * @return {Number}\n     */\n    getZoom: function () {\n      return this.viewportTransform[0];\n    },\n\n    /**\n     * Sets viewport transform of this canvas instance\n     * @param {Array} vpt the transform in the form of context.transform\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setViewportTransform: function (vpt) {\n      var activeObject = this._activeObject, object, ignoreVpt = false, skipAbsolute = true, i, len;\n      this.viewportTransform = vpt;\n      for (i = 0, len = this._objects.length; i < len; i++) {\n        object = this._objects[i];\n        object.group || object.setCoords(ignoreVpt, skipAbsolute);\n      }\n      if (activeObject && activeObject.type === 'activeSelection') {\n        activeObject.setCoords(ignoreVpt, skipAbsolute);\n      }\n      this.calcViewportBoundaries();\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Sets zoom level of this canvas instance, zoom centered around point\n     * @param {fabric.Point} point to zoom with respect to\n     * @param {Number} value to set zoom to, less than 1 zooms out\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    zoomToPoint: function (point, value) {\n      // TODO: just change the scale, preserve other transformations\n      var before = point, vpt = this.viewportTransform.slice(0);\n      point = transformPoint(point, invertTransform(this.viewportTransform));\n      vpt[0] = value;\n      vpt[3] = value;\n      var after = transformPoint(point, vpt);\n      vpt[4] += before.x - after.x;\n      vpt[5] += before.y - after.y;\n      return this.setViewportTransform(vpt);\n    },\n\n    /**\n     * Sets zoom level of this canvas instance\n     * @param {Number} value to set zoom to, less than 1 zooms out\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setZoom: function (value) {\n      this.zoomToPoint(new fabric.Point(0, 0), value);\n      return this;\n    },\n\n    /**\n     * Pan viewport so as to place point at top left corner of canvas\n     * @param {fabric.Point} point to move to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    absolutePan: function (point) {\n      var vpt = this.viewportTransform.slice(0);\n      vpt[4] = -point.x;\n      vpt[5] = -point.y;\n      return this.setViewportTransform(vpt);\n    },\n\n    /**\n     * Pans viewpoint relatively\n     * @param {fabric.Point} point (position vector) to move by\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    relativePan: function (point) {\n      return this.absolutePan(new fabric.Point(\n        -point.x - this.viewportTransform[4],\n        -point.y - this.viewportTransform[5]\n      ));\n    },\n\n    /**\n     * Returns &lt;canvas> element corresponding to this instance\n     * @return {HTMLCanvasElement}\n     */\n    getElement: function () {\n      return this.lowerCanvasEl;\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was added\n     */\n    _onObjectAdded: function(obj) {\n      this.stateful && obj.setupState();\n      obj._set('canvas', this);\n      obj.setCoords();\n      this.fire('object:added', { target: obj });\n      obj.fire('added');\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was removed\n     */\n    _onObjectRemoved: function(obj) {\n      this.fire('object:removed', { target: obj });\n      obj.fire('removed');\n      delete obj.canvas;\n    },\n\n    /**\n     * Clears specified context of canvas element\n     * @param {CanvasRenderingContext2D} ctx Context to clear\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clearContext: function(ctx) {\n      ctx.clearRect(0, 0, this.width, this.height);\n      return this;\n    },\n\n    /**\n     * Returns context of canvas where objects are drawn\n     * @return {CanvasRenderingContext2D}\n     */\n    getContext: function () {\n      return this.contextContainer;\n    },\n\n    /**\n     * Clears all contexts (background, main, top) of an instance\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clear: function () {\n      this._objects.length = 0;\n      this.backgroundImage = null;\n      this.overlayImage = null;\n      this.backgroundColor = '';\n      this.overlayColor = '';\n      if (this._hasITextHandlers) {\n        this.off('mouse:up', this._mouseUpITextHandler);\n        this._iTextInstances = null;\n        this._hasITextHandlers = false;\n      }\n      this.clearContext(this.contextContainer);\n      this.fire('canvas:cleared');\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Renders the canvas\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAll: function () {\n      var canvasToDrawOn = this.contextContainer;\n      var objsToRender = this._objects.sort(function(a, b) {\n        return (a.zIndex || 0) - (b.zIndex || 0);\n      });\n\n      this.renderCanvas(canvasToDrawOn, objsToRender);\n      return this;\n    },\n\n    /**\n     * Function created to be instance bound at initialization\n     * used in requestAnimationFrame rendering\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAndReset: function() {\n      this.isRendering = 0;\n      this.renderAll();\n    },\n\n    /**\n     * Append a renderAll request to next animation frame.\n     * a boolean flag will avoid appending more.\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    requestRenderAll: function () {\n      if (!this.isRendering) {\n        this.isRendering = fabric.util.requestAnimFrame(this.renderAndResetBound);\n      }\n      return this;\n    },\n\n    /**\n     * Calculate the position of the 4 corner of canvas with current viewportTransform.\n     * helps to determinate when an object is in the current rendering viewport using\n     * object absolute coordinates ( aCoords )\n     * @return {Object} points.tl\n     * @chainable\n     */\n    calcViewportBoundaries: function() {\n      var points = { }, width = this.width, height = this.height,\n          iVpt = invertTransform(this.viewportTransform);\n      points.tl = transformPoint({ x: 0, y: 0 }, iVpt);\n      points.br = transformPoint({ x: width, y: height }, iVpt);\n      points.tr = new fabric.Point(points.br.x, points.tl.y);\n      points.bl = new fabric.Point(points.tl.x, points.br.y);\n      this.vptCoords = points;\n      return points;\n    },\n\n    /**\n     * Renders background, objects, overlay and controls.\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {Array} objects to render\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderCanvas: function(ctx, objects) {\n      var v = this.viewportTransform;\n      if (this.isRendering) {\n        fabric.util.cancelAnimFrame(this.isRendering);\n        this.isRendering = 0;\n      }\n      this.calcViewportBoundaries();\n      this.clearContext(ctx);\n      this.fire('before:render');\n      if (this.clipTo) {\n        fabric.util.clipContext(this, ctx);\n      }\n      this._renderBackground(ctx);\n\n      ctx.save();\n      //apply viewport transform once for all rendering process\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n      this._renderObjects(ctx, objects);\n      ctx.restore();\n      if (!this.controlsAboveOverlay && this.interactive) {\n        this.drawControls(ctx);\n      }\n      if (this.clipTo) {\n        ctx.restore();\n      }\n      this._renderOverlay(ctx);\n      if (this.controlsAboveOverlay && this.interactive) {\n        this.drawControls(ctx);\n      }\n      this.fire('after:render');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Array} objects to render\n     */\n    _renderObjects: function(ctx, objects) {\n      var i, len;\n      for (i = 0, len = objects.length; i < len; ++i) {\n        objects[i] && objects[i].render(ctx);\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {string} property 'background' or 'overlay'\n     */\n    _renderBackgroundOrOverlay: function(ctx, property) {\n      var object = this[property + 'Color'], v;\n      if (object) {\n        ctx.fillStyle = object.toLive\n          ? object.toLive(ctx, this)\n          : object;\n\n        ctx.fillRect(\n          object.offsetX || 0,\n          object.offsetY || 0,\n          this.width,\n          this.height);\n      }\n      object = this[property + 'Image'];\n      if (object) {\n        if (this[property + 'Vpt']) {\n          v = this.viewportTransform;\n          ctx.save();\n          ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n        }\n        object.render(ctx);\n        this[property + 'Vpt'] && ctx.restore();\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderBackground: function(ctx) {\n      this._renderBackgroundOrOverlay(ctx, 'background');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderOverlay: function(ctx) {\n      this._renderBackgroundOrOverlay(ctx, 'overlay');\n    },\n\n    /**\n     * Returns coordinates of a center of canvas.\n     * Returned value is an object with top and left properties\n     * @return {Object} object with \"top\" and \"left\" number values\n     */\n    getCenter: function () {\n      return {\n        top: this.height / 2,\n        left: this.width / 2\n      };\n    },\n\n    /**\n     * Centers object horizontally in the canvas\n     * @param {fabric.Object} object Object to center horizontally\n     * @return {fabric.Canvas} thisArg\n     */\n    centerObjectH: function (object) {\n      return this._centerObject(object, new fabric.Point(this.getCenter().left, object.getCenterPoint().y));\n    },\n\n    /**\n     * Centers object vertically in the canvas\n     * @param {fabric.Object} object Object to center vertically\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    centerObjectV: function (object) {\n      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, this.getCenter().top));\n    },\n\n    /**\n     * Centers object vertically and horizontally in the canvas\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    centerObject: function(object) {\n      var center = this.getCenter();\n\n      return this._centerObject(object, new fabric.Point(center.left, center.top));\n    },\n\n    /**\n     * Centers object vertically and horizontally in the viewport\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObject: function(object) {\n      var vpCenter = this.getVpCenter();\n\n      return this._centerObject(object, vpCenter);\n    },\n\n    /**\n     * Centers object horizontally in the viewport, object.top is unchanged\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObjectH: function(object) {\n      var vpCenter = this.getVpCenter();\n      this._centerObject(object, new fabric.Point(vpCenter.x, object.getCenterPoint().y));\n      return this;\n    },\n\n    /**\n     * Centers object Vertically in the viewport, object.top is unchanged\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObjectV: function(object) {\n      var vpCenter = this.getVpCenter();\n\n      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, vpCenter.y));\n    },\n\n    /**\n     * Calculate the point in canvas that correspond to the center of actual viewport.\n     * @return {fabric.Point} vpCenter, viewport center\n     * @chainable\n     */\n    getVpCenter: function() {\n      var center = this.getCenter(),\n          iVpt = invertTransform(this.viewportTransform);\n      return transformPoint({ x: center.left, y: center.top }, iVpt);\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} object Object to center\n     * @param {fabric.Point} center Center point\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    _centerObject: function(object, center) {\n      object.setPositionByOrigin(center, 'center', 'center');\n      object.setCoords();\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Returs dataless JSON representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {String} json string\n     */\n    toDatalessJSON: function (propertiesToInclude) {\n      return this.toDatalessObject(propertiesToInclude);\n    },\n\n    /**\n     * Returns object representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function (propertiesToInclude) {\n      return this._toObjectMethod('toObject', propertiesToInclude);\n    },\n\n    /**\n     * Returns dataless object representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function (propertiesToInclude) {\n      return this._toObjectMethod('toDatalessObject', propertiesToInclude);\n    },\n\n    /**\n     * @private\n     */\n    _toObjectMethod: function (methodName, propertiesToInclude) {\n\n      var data = {\n        version: fabric.version,\n        objects: this._toObjects(methodName, propertiesToInclude)\n      };\n\n      extend(data, this.__serializeBgOverlay(methodName, propertiesToInclude));\n\n      fabric.util.populateWithProperties(this, data, propertiesToInclude);\n\n      return data;\n    },\n\n    /**\n     * @private\n     */\n    _toObjects: function(methodName, propertiesToInclude) {\n      return this.getObjects().filter(function(object) {\n        return !object.excludeFromExport;\n      }).map(function(instance) {\n        return this._toObject(instance, methodName, propertiesToInclude);\n      }, this);\n    },\n\n    /**\n     * @private\n     */\n    _toObject: function(instance, methodName, propertiesToInclude) {\n      var originalValue;\n\n      if (!this.includeDefaultValues) {\n        originalValue = instance.includeDefaultValues;\n        instance.includeDefaultValues = false;\n      }\n\n      var object = instance[methodName](propertiesToInclude);\n      if (!this.includeDefaultValues) {\n        instance.includeDefaultValues = originalValue;\n      }\n      return object;\n    },\n\n    /**\n     * @private\n     */\n    __serializeBgOverlay: function(methodName, propertiesToInclude) {\n      var data = { }, bgImage = this.backgroundImage, overlay = this.overlayImage;\n\n      if (this.backgroundColor) {\n        data.background = this.backgroundColor.toObject\n          ? this.backgroundColor.toObject(propertiesToInclude)\n          : this.backgroundColor;\n      }\n\n      if (this.overlayColor) {\n        data.overlay = this.overlayColor.toObject\n          ? this.overlayColor.toObject(propertiesToInclude)\n          : this.overlayColor;\n      }\n      if (bgImage && !bgImage.excludeFromExport) {\n        data.backgroundImage = this._toObject(bgImage, methodName, propertiesToInclude);\n      }\n      if (overlay && !overlay.excludeFromExport) {\n        data.overlayImage = this._toObject(overlay, methodName, propertiesToInclude);\n      }\n\n      return data;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * When true, getSvgTransform() will apply the StaticCanvas.viewportTransform to the SVG transformation. When true,\n     * a zoomed canvas will then produce zoomed SVG output.\n     * @type Boolean\n     * @default\n     */\n    svgViewportTransformation: true,\n\n    /**\n     * Returns SVG representation of canvas\n     * @function\n     * @param {Object} [options] Options object for SVG output\n     * @param {Boolean} [options.suppressPreamble=false] If true xml tag is not included\n     * @param {Object} [options.viewBox] SVG viewbox object\n     * @param {Number} [options.viewBox.x] x-cooridnate of viewbox\n     * @param {Number} [options.viewBox.y] y-coordinate of viewbox\n     * @param {Number} [options.viewBox.width] Width of viewbox\n     * @param {Number} [options.viewBox.height] Height of viewbox\n     * @param {String} [options.encoding=UTF-8] Encoding of SVG output\n     * @param {String} [options.width] desired width of svg with or without units\n     * @param {String} [options.height] desired height of svg with or without units\n     * @param {Function} [reviver] Method for further parsing of svg elements, called after each fabric object converted into svg representation.\n     * @return {String} SVG string\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n     * @see {@link http://jsfiddle.net/fabricjs/jQ3ZZ/|jsFiddle demo}\n     * @example <caption>Normal SVG output</caption>\n     * var svg = canvas.toSVG();\n     * @example <caption>SVG output without preamble (without &lt;?xml ../>)</caption>\n     * var svg = canvas.toSVG({suppressPreamble: true});\n     * @example <caption>SVG output with viewBox attribute</caption>\n     * var svg = canvas.toSVG({\n     *   viewBox: {\n     *     x: 100,\n     *     y: 100,\n     *     width: 200,\n     *     height: 300\n     *   }\n     * });\n     * @example <caption>SVG output with different encoding (default: UTF-8)</caption>\n     * var svg = canvas.toSVG({encoding: 'ISO-8859-1'});\n     * @example <caption>Modify SVG output with reviver function</caption>\n     * var svg = canvas.toSVG(null, function(svg) {\n     *   return svg.replace('stroke-dasharray: ; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; ', '');\n     * });\n     */\n    toSVG: function(options, reviver) {\n      options || (options = { });\n\n      var markup = [];\n\n      this._setSVGPreamble(markup, options);\n      this._setSVGHeader(markup, options);\n\n      this._setSVGBgOverlayColor(markup, 'backgroundColor');\n      this._setSVGBgOverlayImage(markup, 'backgroundImage', reviver);\n\n      this._setSVGObjects(markup, reviver);\n\n      this._setSVGBgOverlayColor(markup, 'overlayColor');\n      this._setSVGBgOverlayImage(markup, 'overlayImage', reviver);\n\n      markup.push('</svg>');\n\n      return markup.join('');\n    },\n\n    /**\n     * @private\n     */\n    _setSVGPreamble: function(markup, options) {\n      if (options.suppressPreamble) {\n        return;\n      }\n      markup.push(\n        '<?xml version=\"1.0\" encoding=\"', (options.encoding || 'UTF-8'), '\" standalone=\"no\" ?>\\n',\n        '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" ',\n        '\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n'\n      );\n    },\n\n    /**\n     * @private\n     */\n    _setSVGHeader: function(markup, options) {\n      var width = options.width || this.width,\n          height = options.height || this.height,\n          vpt, viewBox = 'viewBox=\"0 0 ' + this.width + ' ' + this.height + '\" ',\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n      if (options.viewBox) {\n        viewBox = 'viewBox=\"' +\n                options.viewBox.x + ' ' +\n                options.viewBox.y + ' ' +\n                options.viewBox.width + ' ' +\n                options.viewBox.height + '\" ';\n      }\n      else {\n        if (this.svgViewportTransformation) {\n          vpt = this.viewportTransform;\n          viewBox = 'viewBox=\"' +\n                  toFixed(-vpt[4] / vpt[0], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(-vpt[5] / vpt[3], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(this.width / vpt[0], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(this.height / vpt[3], NUM_FRACTION_DIGITS) + '\" ';\n        }\n      }\n\n      markup.push(\n        '<svg ',\n        'xmlns=\"http://www.w3.org/2000/svg\" ',\n        'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ',\n        'version=\"1.1\" ',\n        'width=\"', width, '\" ',\n        'height=\"', height, '\" ',\n        viewBox,\n        'xml:space=\"preserve\">\\n',\n        '<desc>Created with Fabric.js ', fabric.version, '</desc>\\n',\n        '<defs>\\n',\n        this.createSVGFontFacesMarkup(),\n        this.createSVGRefElementsMarkup(),\n        '</defs>\\n'\n      );\n    },\n\n    /**\n     * Creates markup containing SVG referenced elements like patterns, gradients etc.\n     * @return {String}\n     */\n    createSVGRefElementsMarkup: function() {\n      var _this = this,\n          markup = ['backgroundColor', 'overlayColor'].map(function(prop) {\n            var fill = _this[prop];\n            if (fill && fill.toLive) {\n              return fill.toSVG(_this, false);\n            }\n          });\n      return markup.join('');\n    },\n\n    /**\n     * Creates markup containing SVG font faces,\n     * font URLs for font faces must be collected by developers\n     * and are not extracted from the DOM by fabricjs\n     * @param {Array} objects Array of fabric objects\n     * @return {String}\n     */\n    createSVGFontFacesMarkup: function() {\n      var markup = '', fontList = { }, obj, fontFamily,\n          style, row, rowIndex, _char, charIndex, i, len,\n          fontPaths = fabric.fontPaths, objects = this.getObjects();\n\n      for (i = 0, len = objects.length; i < len; i++) {\n        obj = objects[i];\n        fontFamily = obj.fontFamily;\n        if (obj.type.indexOf('text') === -1 || fontList[fontFamily] || !fontPaths[fontFamily]) {\n          continue;\n        }\n        fontList[fontFamily] = true;\n        if (!obj.styles) {\n          continue;\n        }\n        style = obj.styles;\n        for (rowIndex in style) {\n          row = style[rowIndex];\n          for (charIndex in row) {\n            _char = row[charIndex];\n            fontFamily = _char.fontFamily;\n            if (!fontList[fontFamily] && fontPaths[fontFamily]) {\n              fontList[fontFamily] = true;\n            }\n          }\n        }\n      }\n\n      for (var j in fontList) {\n        markup += [\n          '\\t\\t@font-face {\\n',\n          '\\t\\t\\tfont-family: \\'', j, '\\';\\n',\n          '\\t\\t\\tsrc: url(\\'', fontPaths[j], '\\');\\n',\n          '\\t\\t}\\n'\n        ].join('');\n      }\n\n      if (markup) {\n        markup = [\n          '\\t<style type=\"text/css\">',\n          '<![CDATA[\\n',\n          markup,\n          ']]>',\n          '</style>\\n'\n        ].join('');\n      }\n\n      return markup;\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObjects: function(markup, reviver) {\n      var instance, i, len, objects = this.getObjects();\n      for (i = 0, len = objects.length; i < len; i++) {\n        instance = objects[i];\n        if (instance.excludeFromExport) {\n          continue;\n        }\n        this._setSVGObject(markup, instance, reviver);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObject: function(markup, instance, reviver) {\n      markup.push(instance.toSVG(reviver));\n    },\n\n    /**\n     * @private\n     */\n    _setSVGBgOverlayImage: function(markup, property, reviver) {\n      if (this[property] && this[property].toSVG) {\n        markup.push(this[property].toSVG(reviver));\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGBgOverlayColor: function(markup, property) {\n      var filler = this[property];\n      if (!filler) {\n        return;\n      }\n      if (filler.toLive) {\n        var repeat = filler.repeat;\n        markup.push(\n          '<rect transform=\"translate(', this.width / 2, ',', this.height / 2, ')\"',\n          ' x=\"', filler.offsetX - this.width / 2, '\" y=\"', filler.offsetY - this.height / 2, '\" ',\n          'width=\"',\n          (repeat === 'repeat-y' || repeat === 'no-repeat'\n            ? filler.source.width\n            : this.width),\n          '\" height=\"',\n          (repeat === 'repeat-x' || repeat === 'no-repeat'\n            ? filler.source.height\n            : this.height),\n          '\" fill=\"url(#SVGID_' + filler.id + ')\"',\n          '></rect>\\n'\n        );\n      }\n      else {\n        markup.push(\n          '<rect x=\"0\" y=\"0\" ',\n          'width=\"', this.width,\n          '\" height=\"', this.height,\n          '\" fill=\"', this[property], '\"',\n          '></rect>\\n'\n        );\n      }\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Moves an object or the objects of a multiple selection\n     * to the bottom of the stack of drawn objects\n     * @param {fabric.Object} object Object to send to back\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    sendToBack: function (object) {\n      if (!object) {\n        return this;\n      }\n      var activeSelection = this._activeObject,\n          i, obj, objs;\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n        for (i = objs.length; i--;) {\n          obj = objs[i];\n          removeFromArray(this._objects, obj);\n          this._objects.unshift(obj);\n        }\n      }\n      else {\n        removeFromArray(this._objects, object);\n        this._objects.unshift(object);\n      }\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Moves an object or the objects of a multiple selection\n     * to the top of the stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    bringToFront: function (object) {\n      if (!object) {\n        return this;\n      }\n      var activeSelection = this._activeObject,\n          i, obj, objs;\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n        for (i = 0; i < objs.length; i++) {\n          obj = objs[i];\n          removeFromArray(this._objects, obj);\n          this._objects.push(obj);\n        }\n      }\n      else {\n        removeFromArray(this._objects, object);\n        this._objects.push(object);\n      }\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Moves an object or a selection down in stack of drawn objects\n     * An optional paramter, intersecting allowes to move the object in behind\n     * the first intersecting object. Where intersection is calculated with\n     * bounding box. If no intersection is found, there will not be change in the\n     * stack.\n     * @param {fabric.Object} object Object to send\n     * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    sendBackwards: function (object, intersecting) {\n      if (!object) {\n        return this;\n      }\n      var activeSelection = this._activeObject,\n          i, obj, idx, newIdx, objs, objsMoved = 0;\n\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n        for (i = 0; i < objs.length; i++) {\n          obj = objs[i];\n          idx = this._objects.indexOf(obj);\n          if (idx > 0 + objsMoved) {\n            newIdx = idx - 1;\n            removeFromArray(this._objects, obj);\n            this._objects.splice(newIdx, 0, obj);\n          }\n          objsMoved++;\n        }\n      }\n      else {\n        idx = this._objects.indexOf(object);\n        if (idx !== 0) {\n          // if object is not on the bottom of stack\n          newIdx = this._findNewLowerIndex(object, idx, intersecting);\n          removeFromArray(this._objects, object);\n          this._objects.splice(newIdx, 0, object);\n        }\n      }\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _findNewLowerIndex: function(object, idx, intersecting) {\n      var newIdx, i;\n\n      if (intersecting) {\n        newIdx = idx;\n\n        // traverse down the stack looking for the nearest intersecting object\n        for (i = idx - 1; i >= 0; --i) {\n\n          var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\n                               object.isContainedWithinObject(this._objects[i]) ||\n                               this._objects[i].isContainedWithinObject(object);\n\n          if (isIntersecting) {\n            newIdx = i;\n            break;\n          }\n        }\n      }\n      else {\n        newIdx = idx - 1;\n      }\n\n      return newIdx;\n    },\n\n    /**\n     * Moves an object or a selection up in stack of drawn objects\n     * An optional paramter, intersecting allowes to move the object in front\n     * of the first intersecting object. Where intersection is calculated with\n     * bounding box. If no intersection is found, there will not be change in the\n     * stack.\n     * @param {fabric.Object} object Object to send\n     * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    bringForward: function (object, intersecting) {\n      if (!object) {\n        return this;\n      }\n      var activeSelection = this._activeObject,\n          i, obj, idx, newIdx, objs, objsMoved = 0;\n\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n        for (i = objs.length; i--;) {\n          obj = objs[i];\n          idx = this._objects.indexOf(obj);\n          if (idx < this._objects.length - 1 - objsMoved) {\n            newIdx = idx + 1;\n            removeFromArray(this._objects, obj);\n            this._objects.splice(newIdx, 0, obj);\n          }\n          objsMoved++;\n        }\n      }\n      else {\n        idx = this._objects.indexOf(object);\n        if (idx !== this._objects.length - 1) {\n          // if object is not on top of stack (last item in an array)\n          newIdx = this._findNewUpperIndex(object, idx, intersecting);\n          removeFromArray(this._objects, object);\n          this._objects.splice(newIdx, 0, object);\n        }\n      }\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _findNewUpperIndex: function(object, idx, intersecting) {\n      var newIdx, i, len;\n\n      if (intersecting) {\n        newIdx = idx;\n\n        // traverse up the stack looking for the nearest intersecting object\n        for (i = idx + 1, len = this._objects.length; i < len; ++i) {\n\n          var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\n                               object.isContainedWithinObject(this._objects[i]) ||\n                               this._objects[i].isContainedWithinObject(object);\n\n          if (isIntersecting) {\n            newIdx = i;\n            break;\n          }\n        }\n      }\n      else {\n        newIdx = idx + 1;\n      }\n\n      return newIdx;\n    },\n\n    /**\n     * Moves an object to specified level in stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @param {Number} index Position to move to\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    moveTo: function (object, index) {\n      removeFromArray(this._objects, object);\n      this._objects.splice(index, 0, object);\n      return this.renderOnAddRemove && this.requestRenderAll();\n    },\n\n    /**\n     * Clears a canvas element and dispose objects\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    dispose: function () {\n      this.forEachObject(function(object) {\n        object.dispose && object.dispose();\n      });\n      this._objects = [];\n      this.backgroundImage = null;\n      this.overlayImage = null;\n      this._iTextInstances = null;\n      this.lowerCanvasEl = null;\n      this.cacheCanvasEl = null;\n      return this;\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @return {String} string representation of an instance\n     */\n    toString: function () {\n      return '#<fabric.Canvas (' + this.complexity() + '): ' +\n               '{ objects: ' + this.getObjects().length + ' }>';\n    }\n  });\n\n  extend(fabric.StaticCanvas.prototype, fabric.Observable);\n  extend(fabric.StaticCanvas.prototype, fabric.Collection);\n  extend(fabric.StaticCanvas.prototype, fabric.DataURLExporter);\n\n  extend(fabric.StaticCanvas, /** @lends fabric.StaticCanvas */ {\n\n    /**\n     * @static\n     * @type String\n     * @default\n     */\n    EMPTY_JSON: '{\"objects\": [], \"background\": \"white\"}',\n\n    /**\n     * Provides a way to check support of some of the canvas methods\n     * (either those of HTMLCanvasElement itself, or rendering context)\n     *\n     * @param {String} methodName Method to check support for;\n     *                            Could be one of \"getImageData\", \"toDataURL\", \"toDataURLWithQuality\" or \"setLineDash\"\n     * @return {Boolean | null} `true` if method is supported (or at least exists),\n     *                          `null` if canvas element or context can not be initialized\n     */\n    supports: function (methodName) {\n      var el = fabric.util.createCanvasElement();\n\n      if (!el || !el.getContext) {\n        return null;\n      }\n\n      var ctx = el.getContext('2d');\n      if (!ctx) {\n        return null;\n      }\n\n      switch (methodName) {\n\n        case 'getImageData':\n          return typeof ctx.getImageData !== 'undefined';\n\n        case 'setLineDash':\n          return typeof ctx.setLineDash !== 'undefined';\n\n        case 'toDataURL':\n          return typeof el.toDataURL !== 'undefined';\n\n        case 'toDataURLWithQuality':\n          try {\n            el.toDataURL('image/jpeg', 0);\n            return true;\n          }\n          catch (e) { }\n          return false;\n\n        default:\n          return null;\n      }\n    }\n  });\n\n  /**\n   * Returns JSON representation of canvas\n   * @function\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {String} JSON string\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n   * @see {@link http://jsfiddle.net/fabricjs/pec86/|jsFiddle demo}\n   * @example <caption>JSON without additional properties</caption>\n   * var json = canvas.toJSON();\n   * @example <caption>JSON with additional properties included</caption>\n   * var json = canvas.toJSON(['lockMovementX', 'lockMovementY', 'lockRotation', 'lockScalingX', 'lockScalingY', 'lockUniScaling']);\n   * @example <caption>JSON without default values</caption>\n   * canvas.includeDefaultValues = false;\n   * var json = canvas.toJSON();\n   */\n  fabric.StaticCanvas.prototype.toJSON = fabric.StaticCanvas.prototype.toObject;\n\n  if (fabric.isLikelyNode) {\n    fabric.StaticCanvas.prototype.createPNGStream = function() {\n      var impl = fabric.util.getNodeCanvas(this.lowerCanvasEl);\n      return impl && impl.createPNGStream();\n    };\n    fabric.StaticCanvas.prototype.createJPEGStream = function(opts) {\n      var impl = fabric.util.getNodeCanvas(this.lowerCanvasEl);\n      return impl && impl.createJPEGStream(opts);\n    };\n  }\n})();\n\n\n/**\n * BaseBrush class\n * @class fabric.BaseBrush\n * @see {@link http://fabricjs.com/freedrawing|Freedrawing demo}\n */\nfabric.BaseBrush = fabric.util.createClass(/** @lends fabric.BaseBrush.prototype */ {\n\n  /**\n   * Color of a brush\n   * @type String\n   * @default\n   */\n  color: 'rgb(0, 0, 0)',\n\n  /**\n   * Width of a brush, has to be a Number, no string literals\n   * @type Number\n   * @default\n   */\n  width: 1,\n\n  /**\n   * Shadow object representing shadow of this shape.\n   * <b>Backwards incompatibility note:</b> This property replaces \"shadowColor\" (String), \"shadowOffsetX\" (Number),\n   * \"shadowOffsetY\" (Number) and \"shadowBlur\" (Number) since v1.2.12\n   * @type fabric.Shadow\n   * @default\n   */\n  shadow: null,\n\n  /**\n   * Line endings style of a brush (one of \"butt\", \"round\", \"square\")\n   * @type String\n   * @default\n   */\n  strokeLineCap: 'round',\n\n  /**\n   * Corner style of a brush (one of \"bevel\", \"round\", \"miter\")\n   * @type String\n   * @default\n   */\n  strokeLineJoin: 'round',\n\n  /**\n   * Maximum miter length (used for strokeLineJoin = \"miter\") of a brush's\n   * @type Number\n   * @default\n   */\n  strokeMiterLimit:         10,\n\n  /**\n   * Stroke Dash Array.\n   * @type Array\n   * @default\n   */\n  strokeDashArray: null,\n\n  /**\n   * Sets shadow of an object\n   * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  setShadow: function(options) {\n    this.shadow = new fabric.Shadow(options);\n    return this;\n  },\n\n  /**\n   * Sets brush styles\n   * @private\n   */\n  _setBrushStyles: function() {\n    var ctx = this.canvas.contextTop;\n    ctx.strokeStyle = this.color;\n    ctx.lineWidth = this.width;\n    ctx.lineCap = this.strokeLineCap;\n    ctx.miterLimit = this.strokeMiterLimit;\n    ctx.lineJoin = this.strokeLineJoin;\n    if (this.strokeDashArray && fabric.StaticCanvas.supports('setLineDash')) {\n      ctx.setLineDash(this.strokeDashArray);\n    }\n  },\n\n  /**\n   * Sets the transformation on given context\n   * @param {RenderingContext2d} ctx context to render on\n   * @private\n   */\n  _saveAndTransform: function(ctx) {\n    var v = this.canvas.viewportTransform;\n    ctx.save();\n    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n  },\n\n  /**\n   * Sets brush shadow styles\n   * @private\n   */\n  _setShadow: function() {\n    if (!this.shadow) {\n      return;\n    }\n\n    var ctx = this.canvas.contextTop,\n        zoom = this.canvas.getZoom();\n\n    ctx.shadowColor = this.shadow.color;\n    ctx.shadowBlur = this.shadow.blur * zoom;\n    ctx.shadowOffsetX = this.shadow.offsetX * zoom;\n    ctx.shadowOffsetY = this.shadow.offsetY * zoom;\n  },\n\n  /**\n   * Removes brush shadow styles\n   * @private\n   */\n  _resetShadow: function() {\n    var ctx = this.canvas.contextTop;\n\n    ctx.shadowColor = '';\n    ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n  }\n});\n\n\n(function() {\n\n  /**\n   * PencilBrush class\n   * @class fabric.PencilBrush\n   * @extends fabric.BaseBrush\n   */\n  fabric.PencilBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.PencilBrush.prototype */ {\n\n    /**\n     * Constructor\n     * @param {fabric.Canvas} canvas\n     * @return {fabric.PencilBrush} Instance of a pencil brush\n     */\n    initialize: function(canvas) {\n      this.canvas = canvas;\n      this._points = [];\n    },\n\n    /**\n     * Inovoked on mouse down\n     * @param {Object} pointer\n     */\n    onMouseDown: function(pointer) {\n      this._prepareForDrawing(pointer);\n      // capture coordinates immediately\n      // this allows to draw dots (when movement never occurs)\n      this._captureDrawingPath(pointer);\n      this._render();\n    },\n\n    /**\n     * Inovoked on mouse move\n     * @param {Object} pointer\n     */\n    onMouseMove: function(pointer) {\n      this._captureDrawingPath(pointer);\n      // redraw curve\n      // clear top canvas\n      this.canvas.clearContext(this.canvas.contextTop);\n      this._render();\n    },\n\n    /**\n     * Invoked on mouse up\n     */\n    onMouseUp: function() {\n      this._finalizeAndAddPath();\n    },\n\n    /**\n     * @private\n     * @param {Object} pointer Actual mouse position related to the canvas.\n     */\n    _prepareForDrawing: function(pointer) {\n\n      var p = new fabric.Point(pointer.x, pointer.y);\n\n      this._reset();\n      this._addPoint(p);\n\n      this.canvas.contextTop.moveTo(p.x, p.y);\n    },\n\n    /**\n     * @private\n     * @param {fabric.Point} point Point to be added to points array\n     */\n    _addPoint: function(point) {\n      if (this._points.length > 1 && point.eq(this._points[this._points.length - 1])) {\n        return;\n      }\n      this._points.push(point);\n    },\n\n    /**\n     * Clear points array and set contextTop canvas style.\n     * @private\n     */\n    _reset: function() {\n      this._points.length = 0;\n\n      this._setBrushStyles();\n      this._setShadow();\n    },\n\n    /**\n     * @private\n     * @param {Object} pointer Actual mouse position related to the canvas.\n     */\n    _captureDrawingPath: function(pointer) {\n      var pointerPoint = new fabric.Point(pointer.x, pointer.y);\n      this._addPoint(pointerPoint);\n    },\n\n    /**\n     * Draw a smooth path on the topCanvas using quadraticCurveTo\n     * @private\n     */\n    _render: function() {\n      var ctx  = this.canvas.contextTop, i, len,\n          p1 = this._points[0],\n          p2 = this._points[1];\n\n      this._saveAndTransform(ctx);\n      ctx.beginPath();\n      //if we only have 2 points in the path and they are the same\n      //it means that the user only clicked the canvas without moving the mouse\n      //then we should be drawing a dot. A path isn't drawn between two identical dots\n      //that's why we set them apart a bit\n      if (this._points.length === 2 && p1.x === p2.x && p1.y === p2.y) {\n        var width = this.width / 1000;\n        p1 = new fabric.Point(p1.x, p1.y);\n        p2 = new fabric.Point(p2.x, p2.y);\n        p1.x -= width;\n        p2.x += width;\n      }\n      ctx.moveTo(p1.x, p1.y);\n\n      for (i = 1, len = this._points.length; i < len; i++) {\n        // we pick the point between pi + 1 & pi + 2 as the\n        // end point and p1 as our control point.\n        var midPoint = p1.midPointFrom(p2);\n        ctx.quadraticCurveTo(p1.x, p1.y, midPoint.x, midPoint.y);\n\n        p1 = this._points[i];\n        p2 = this._points[i + 1];\n      }\n      // Draw last line as a straight line while\n      // we wait for the next point to be able to calculate\n      // the bezier control point\n      ctx.lineTo(p1.x, p1.y);\n      ctx.stroke();\n      ctx.restore();\n    },\n\n    /**\n     * Converts points to SVG path\n     * @param {Array} points Array of points\n     * @return {String} SVG path\n     */\n    convertPointsToSVGPath: function(points) {\n      var path = [], i, width = this.width / 1000,\n          p1 = new fabric.Point(points[0].x, points[0].y),\n          p2 = new fabric.Point(points[1].x, points[1].y),\n          len = points.length, multSignX = 1, multSignY = 1, manyPoints = len > 2;\n\n      if (manyPoints) {\n        multSignX = points[2].x < p2.x ? -1 : points[2].x === p2.x ? 0 : 1;\n        multSignY = points[2].y < p2.y ? -1 : points[2].y === p2.y ? 0 : 1;\n      }\n      path.push('M ', p1.x - multSignX * width, ' ', p1.y - multSignY * width, ' ');\n      for (i = 1; i < len; i++) {\n        if (!p1.eq(p2)) {\n          var midPoint = p1.midPointFrom(p2);\n          // p1 is our bezier control point\n          // midpoint is our endpoint\n          // start point is p(i-1) value.\n          path.push('Q ', p1.x, ' ', p1.y, ' ', midPoint.x, ' ', midPoint.y, ' ');\n        }\n        p1 = points[i];\n        if ((i + 1) < points.length) {\n          p2 = points[i + 1];\n        }\n      }\n      if (manyPoints) {\n        multSignX = p1.x > points[i - 2].x ? 1 : p1.x === points[i - 2].x ? 0 : -1;\n        multSignY = p1.y > points[i - 2].y ? 1 : p1.y === points[i - 2].y ? 0 : -1;\n      }\n      path.push('L ', p1.x + multSignX * width, ' ', p1.y + multSignY * width);\n      return path;\n    },\n\n    /**\n     * Creates fabric.Path object to add on canvas\n     * @param {String} pathData Path data\n     * @return {fabric.Path} Path to add on canvas\n     */\n    createPath: function(pathData) {\n      var path = new fabric.Path(pathData, {\n        fill: null,\n        stroke: this.color,\n        strokeWidth: this.width,\n        strokeLineCap: this.strokeLineCap,\n        strokeMiterLimit: this.strokeMiterLimit,\n        strokeLineJoin: this.strokeLineJoin,\n        strokeDashArray: this.strokeDashArray,\n      });\n      var position = new fabric.Point(path.left + path.width / 2, path.top + path.height / 2);\n      position = path.translateToGivenOrigin(position, 'center', 'center', path.originX, path.originY);\n      path.top = position.y;\n      path.left = position.x;\n      if (this.shadow) {\n        this.shadow.affectStroke = true;\n        path.setShadow(this.shadow);\n      }\n\n      return path;\n    },\n\n    /**\n     * On mouseup after drawing the path on contextTop canvas\n     * we use the points captured to create an new fabric path object\n     * and add it to the fabric canvas.\n     */\n    _finalizeAndAddPath: function() {\n      var ctx = this.canvas.contextTop;\n      ctx.closePath();\n\n      var pathData = this.convertPointsToSVGPath(this._points).join('');\n      if (pathData === 'M 0 0 Q 0 0 0 0 L 0 0') {\n        // do not create 0 width/height paths, as they are\n        // rendered inconsistently across browsers\n        // Firefox 4, for example, renders a dot,\n        // whereas Chrome 10 renders nothing\n        this.canvas.requestRenderAll();\n        return;\n      }\n\n      var path = this.createPath(pathData);\n      this.canvas.clearContext(this.canvas.contextTop);\n      this.canvas.add(path);\n      this.canvas.renderAll();\n      path.setCoords();\n      this._resetShadow();\n\n\n      // fire event 'path' created\n      this.canvas.fire('path:created', { path: path });\n    }\n  });\n})();\n\n\n/**\n * CircleBrush class\n * @class fabric.CircleBrush\n */\nfabric.CircleBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.CircleBrush.prototype */ {\n\n  /**\n   * Width of a brush\n   * @type Number\n   * @default\n   */\n  width: 10,\n\n  /**\n   * Constructor\n   * @param {fabric.Canvas} canvas\n   * @return {fabric.CircleBrush} Instance of a circle brush\n   */\n  initialize: function(canvas) {\n    this.canvas = canvas;\n    this.points = [];\n  },\n\n  /**\n   * Invoked inside on mouse down and mouse move\n   * @param {Object} pointer\n   */\n  drawDot: function(pointer) {\n    var point = this.addPoint(pointer),\n        ctx = this.canvas.contextTop;\n    this._saveAndTransform(ctx);\n    ctx.fillStyle = point.fill;\n    ctx.beginPath();\n    ctx.arc(point.x, point.y, point.radius, 0, Math.PI * 2, false);\n    ctx.closePath();\n    ctx.fill();\n\n    ctx.restore();\n  },\n\n  /**\n   * Invoked on mouse down\n   */\n  onMouseDown: function(pointer) {\n    this.points.length = 0;\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._setShadow();\n    this.drawDot(pointer);\n  },\n\n  /**\n   * Render the full state of the brush\n   * @private\n   */\n  _render: function() {\n    var ctx  = this.canvas.contextTop, i, len,\n        points = this.points, point;\n    this._saveAndTransform(ctx);\n    for (i = 0, len = points.length; i < len; i++) {\n      point = points[i];\n      ctx.fillStyle = point.fill;\n      ctx.beginPath();\n      ctx.arc(point.x, point.y, point.radius, 0, Math.PI * 2, false);\n      ctx.closePath();\n      ctx.fill();\n    }\n    ctx.restore();\n  },\n\n  /**\n   * Invoked on mouse move\n   * @param {Object} pointer\n   */\n  onMouseMove: function(pointer) {\n    this.drawDot(pointer);\n  },\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp: function() {\n    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove, i, len;\n    this.canvas.renderOnAddRemove = false;\n\n    var circles = [];\n\n    for (i = 0, len = this.points.length; i < len; i++) {\n      var point = this.points[i],\n          circle = new fabric.Circle({\n            radius: point.radius,\n            left: point.x,\n            top: point.y,\n            originX: 'center',\n            originY: 'center',\n            fill: point.fill\n          });\n\n      this.shadow && circle.setShadow(this.shadow);\n\n      circles.push(circle);\n    }\n    var group = new fabric.Group(circles, { originX: 'center', originY: 'center' });\n    group.canvas = this.canvas;\n\n    this.canvas.add(group);\n    this.canvas.fire('path:created', { path: group });\n\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._resetShadow();\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n    this.canvas.requestRenderAll();\n  },\n\n  /**\n   * @param {Object} pointer\n   * @return {fabric.Point} Just added pointer point\n   */\n  addPoint: function(pointer) {\n    var pointerPoint = new fabric.Point(pointer.x, pointer.y),\n\n        circleRadius = fabric.util.getRandomInt(\n          Math.max(0, this.width - 20), this.width + 20) / 2,\n\n        circleColor = new fabric.Color(this.color)\n          .setAlpha(fabric.util.getRandomInt(0, 100) / 100)\n          .toRgba();\n\n    pointerPoint.radius = circleRadius;\n    pointerPoint.fill = circleColor;\n\n    this.points.push(pointerPoint);\n\n    return pointerPoint;\n  }\n});\n\n\n/**\n * SprayBrush class\n * @class fabric.SprayBrush\n */\nfabric.SprayBrush = fabric.util.createClass( fabric.BaseBrush, /** @lends fabric.SprayBrush.prototype */ {\n\n  /**\n   * Width of a spray\n   * @type Number\n   * @default\n   */\n  width:              10,\n\n  /**\n   * Density of a spray (number of dots per chunk)\n   * @type Number\n   * @default\n   */\n  density:            20,\n\n  /**\n   * Width of spray dots\n   * @type Number\n   * @default\n   */\n  dotWidth:           1,\n\n  /**\n   * Width variance of spray dots\n   * @type Number\n   * @default\n   */\n  dotWidthVariance:   1,\n\n  /**\n   * Whether opacity of a dot should be random\n   * @type Boolean\n   * @default\n   */\n  randomOpacity:        false,\n\n  /**\n   * Whether overlapping dots (rectangles) should be removed (for performance reasons)\n   * @type Boolean\n   * @default\n   */\n  optimizeOverlapping:  true,\n\n  /**\n   * Constructor\n   * @param {fabric.Canvas} canvas\n   * @return {fabric.SprayBrush} Instance of a spray brush\n   */\n  initialize: function(canvas) {\n    this.canvas = canvas;\n    this.sprayChunks = [];\n  },\n\n  /**\n   * Invoked on mouse down\n   * @param {Object} pointer\n   */\n  onMouseDown: function(pointer) {\n    this.sprayChunks.length = 0;\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._setShadow();\n\n    this.addSprayChunk(pointer);\n    this.render(this.sprayChunkPoints);\n  },\n\n  /**\n   * Invoked on mouse move\n   * @param {Object} pointer\n   */\n  onMouseMove: function(pointer) {\n    this.addSprayChunk(pointer);\n    this.render(this.sprayChunkPoints);\n  },\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp: function() {\n    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\n    this.canvas.renderOnAddRemove = false;\n\n    var rects = [];\n\n    for (var i = 0, ilen = this.sprayChunks.length; i < ilen; i++) {\n      var sprayChunk = this.sprayChunks[i];\n\n      for (var j = 0, jlen = sprayChunk.length; j < jlen; j++) {\n\n        var rect = new fabric.Rect({\n          width: sprayChunk[j].width,\n          height: sprayChunk[j].width,\n          left: sprayChunk[j].x + 1,\n          top: sprayChunk[j].y + 1,\n          originX: 'center',\n          originY: 'center',\n          fill: this.color\n        });\n        rects.push(rect);\n      }\n    }\n\n    if (this.optimizeOverlapping) {\n      rects = this._getOptimizedRects(rects);\n    }\n\n    var group = new fabric.Group(rects, { originX: 'center', originY: 'center' });\n    this.shadow && group.setShadow(this.shadow);\n    this.canvas.add(group);\n    this.canvas.fire('path:created', { path: group });\n\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._resetShadow();\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n    this.canvas.requestRenderAll();\n  },\n\n  /**\n   * @private\n   * @param {Array} rects\n   */\n  _getOptimizedRects: function(rects) {\n\n    // avoid creating duplicate rects at the same coordinates\n    var uniqueRects = { }, key, i, len;\n\n    for (i = 0, len = rects.length; i < len; i++) {\n      key = rects[i].left + '' + rects[i].top;\n      if (!uniqueRects[key]) {\n        uniqueRects[key] = rects[i];\n      }\n    }\n    var uniqueRectsArray = [];\n    for (key in uniqueRects) {\n      uniqueRectsArray.push(uniqueRects[key]);\n    }\n\n    return uniqueRectsArray;\n  },\n\n  /**\n   * Render new chunk of spray brush\n   */\n  render: function(sprayChunk) {\n    var ctx = this.canvas.contextTop, i, len;\n    ctx.fillStyle = this.color;\n\n    this._saveAndTransform(ctx);\n\n    for (i = 0, len = sprayChunk.length; i < len; i++) {\n      var point = sprayChunk[i];\n      if (typeof point.opacity !== 'undefined') {\n        ctx.globalAlpha = point.opacity;\n      }\n      ctx.fillRect(point.x, point.y, point.width, point.width);\n    }\n    ctx.restore();\n  },\n\n  /**\n   * Render all spray chunks\n   */\n  _render: function() {\n    var ctx = this.canvas.contextTop, i, ilen;\n    ctx.fillStyle = this.color;\n\n    this._saveAndTransform(ctx);\n\n    for (i = 0, ilen = this.sprayChunks.length; i < ilen; i++) {\n      this.render(this.sprayChunks[i]);\n    }\n    ctx.restore();\n  },\n\n  /**\n   * @param {Object} pointer\n   */\n  addSprayChunk: function(pointer) {\n    this.sprayChunkPoints = [];\n\n    var x, y, width, radius = this.width / 2, i;\n\n    for (i = 0; i < this.density; i++) {\n\n      x = fabric.util.getRandomInt(pointer.x - radius, pointer.x + radius);\n      y = fabric.util.getRandomInt(pointer.y - radius, pointer.y + radius);\n\n      if (this.dotWidthVariance) {\n        width = fabric.util.getRandomInt(\n          // bottom clamp width to 1\n          Math.max(1, this.dotWidth - this.dotWidthVariance),\n          this.dotWidth + this.dotWidthVariance);\n      }\n      else {\n        width = this.dotWidth;\n      }\n\n      var point = new fabric.Point(x, y);\n      point.width = width;\n\n      if (this.randomOpacity) {\n        point.opacity = fabric.util.getRandomInt(0, 100) / 100;\n      }\n\n      this.sprayChunkPoints.push(point);\n    }\n\n    this.sprayChunks.push(this.sprayChunkPoints);\n  }\n});\n\n\n/**\n * PatternBrush class\n * @class fabric.PatternBrush\n * @extends fabric.BaseBrush\n */\nfabric.PatternBrush = fabric.util.createClass(fabric.PencilBrush, /** @lends fabric.PatternBrush.prototype */ {\n\n  getPatternSrc: function() {\n\n    var dotWidth = 20,\n        dotDistance = 5,\n        patternCanvas = fabric.document.createElement('canvas'),\n        patternCtx = patternCanvas.getContext('2d');\n\n    patternCanvas.width = patternCanvas.height = dotWidth + dotDistance;\n\n    patternCtx.fillStyle = this.color;\n    patternCtx.beginPath();\n    patternCtx.arc(dotWidth / 2, dotWidth / 2, dotWidth / 2, 0, Math.PI * 2, false);\n    patternCtx.closePath();\n    patternCtx.fill();\n\n    return patternCanvas;\n  },\n\n  getPatternSrcFunction: function() {\n    return String(this.getPatternSrc).replace('this.color', '\"' + this.color + '\"');\n  },\n\n  /**\n   * Creates \"pattern\" instance property\n   */\n  getPattern: function() {\n    return this.canvas.contextTop.createPattern(this.source || this.getPatternSrc(), 'repeat');\n  },\n\n  /**\n   * Sets brush styles\n   */\n  _setBrushStyles: function() {\n    this.callSuper('_setBrushStyles');\n    this.canvas.contextTop.strokeStyle = this.getPattern();\n  },\n\n  /**\n   * Creates path\n   */\n  createPath: function(pathData) {\n    var path = this.callSuper('createPath', pathData),\n        topLeft = path._getLeftTopCoords().scalarAdd(path.strokeWidth / 2);\n\n    path.stroke = new fabric.Pattern({\n      source: this.source || this.getPatternSrcFunction(),\n      offsetX: -topLeft.x,\n      offsetY: -topLeft.y\n    });\n    return path;\n  }\n});\n\n\n(function() {\n\n  var getPointer = fabric.util.getPointer,\n      degreesToRadians = fabric.util.degreesToRadians,\n      radiansToDegrees = fabric.util.radiansToDegrees,\n      atan2 = Math.atan2,\n      abs = Math.abs,\n      supportLineDash = fabric.StaticCanvas.supports('setLineDash'),\n\n      STROKE_OFFSET = 0.5;\n\n  /**\n   * Canvas class\n   * @class fabric.Canvas\n   * @extends fabric.StaticCanvas\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#canvas}\n   * @see {@link fabric.Canvas#initialize} for constructor definition\n   *\n   * @fires object:added\n   * @fires object:removed\n   * @fires object:modified\n   * @fires object:rotating\n   * @fires object:scaling\n   * @fires object:moving\n   * @fires object:selected this event is deprecated. use selection:created\n   *\n   * @fires before:selection:cleared\n   * @fires selection:cleared\n   * @fires selection:updated\n   * @fires selection:created\n   *\n   * @fires path:created\n   * @fires mouse:down\n   * @fires mouse:move\n   * @fires mouse:up\n   * @fires mouse:over\n   * @fires mouse:out\n   * @fires mouse:dblclick\n   *\n   */\n  fabric.Canvas = fabric.util.createClass(fabric.StaticCanvas, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * Constructor\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(el, options) {\n      options || (options = { });\n      this.renderAndResetBound = this.renderAndReset.bind(this);\n      this._initStatic(el, options);\n      this._initInteractive();\n      this._createCacheCanvas();\n    },\n\n    /**\n     * When true, objects can be transformed by one side (unproportionally)\n     * @type Boolean\n     * @default\n     */\n    uniScaleTransform:      false,\n\n    /**\n     * Indicates which key enable unproportional scaling\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    uniScaleKey:           'shiftKey',\n\n    /**\n     * When true, objects use center point as the origin of scale transformation.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredScaling:        false,\n\n    /**\n     * When true, objects use center point as the origin of rotate transformation.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredRotation:       false,\n\n    /**\n     * Indicates which key enable centered Transform\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    centeredKey:           'altKey',\n\n    /**\n     * Indicates which key enable alternate action on corner\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    altActionKey:           'shiftKey',\n\n    /**\n     * Indicates that canvas is interactive. This property should not be changed.\n     * @type Boolean\n     * @default\n     */\n    interactive:            true,\n\n    /**\n     * Indicates whether group selection should be enabled\n     * @type Boolean\n     * @default\n     */\n    selection:              true,\n\n    /**\n     * Indicates which key or keys enable multiple click selection\n     * Pass value as a string or array of strings\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or empty or containing any other string that is not a modifier key\n     * feature is disabled.\n     * @since 1.6.2\n     * @type String|Array\n     * @default\n     */\n    selectionKey:           'shiftKey',\n\n    /**\n     * Indicates which key enable alternative selection\n     * in case of target overlapping with active object\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.5\n     * @type null|String\n     * @default\n     */\n    altSelectionKey:           null,\n\n    /**\n     * Color of selection\n     * @type String\n     * @default\n     */\n    selectionColor:         'rgba(100, 100, 255, 0.3)', // blue\n\n    /**\n     * Default dash array pattern\n     * If not empty the selection border is dashed\n     * @type Array\n     */\n    selectionDashArray:     [],\n\n    /**\n     * Color of the border of selection (usually slightly darker than color of selection itself)\n     * @type String\n     * @default\n     */\n    selectionBorderColor:   'rgba(255, 255, 255, 0.3)',\n\n    /**\n     * Width of a line used in object/group selection\n     * @type Number\n     * @default\n     */\n    selectionLineWidth:     1,\n\n    /**\n     * Select only shapes that are fully contained in the dragged selection rectangle.\n     * @type Boolean\n     * @default\n     */\n    selectionFullyContained: false,\n\n    /**\n     * Default cursor value used when hovering over an object on canvas\n     * @type String\n     * @default\n     */\n    hoverCursor:            'move',\n\n    /**\n     * Default cursor value used when moving an object on canvas\n     * @type String\n     * @default\n     */\n    moveCursor:             'move',\n\n    /**\n     * Default cursor value used for the entire canvas\n     * @type String\n     * @default\n     */\n    defaultCursor:          'default',\n\n    /**\n     * Cursor value used during free drawing\n     * @type String\n     * @default\n     */\n    freeDrawingCursor:      'crosshair',\n\n    /**\n     * Cursor value used for rotation point\n     * @type String\n     * @default\n     */\n    rotationCursor:         'crosshair',\n\n    /**\n     * Cursor value used for disabled elements ( corners with disabled action )\n     * @type String\n     * @since 2.0.0\n     * @default\n     */\n    notAllowedCursor:         'not-allowed',\n\n    /**\n     * Default element class that's given to wrapper (div) element of canvas\n     * @type String\n     * @default\n     */\n    containerClass:         'canvas-container',\n\n    /**\n     * When true, object detection happens on per-pixel basis rather than on per-bounding-box\n     * @type Boolean\n     * @default\n     */\n    perPixelTargetFind:     false,\n\n    /**\n     * Number of pixels around target pixel to tolerate (consider active) during object detection\n     * @type Number\n     * @default\n     */\n    targetFindTolerance:    0,\n\n    /**\n     * When true, target detection is skipped when hovering over canvas. This can be used to improve performance.\n     * @type Boolean\n     * @default\n     */\n    skipTargetFind:         false,\n\n    /**\n     * When true, mouse events on canvas (mousedown/mousemove/mouseup) result in free drawing.\n     * After mousedown, mousemove creates a shape,\n     * and then mouseup finalizes it and adds an instance of `fabric.Path` onto canvas.\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-4#free_drawing}\n     * @type Boolean\n     * @default\n     */\n    isDrawingMode:          false,\n\n    /**\n     * Indicates whether objects should remain in current stack position when selected.\n     * When false objects are brought to top and rendered as part of the selection group\n     * @type Boolean\n     * @default\n     */\n    preserveObjectStacking: false,\n\n    /**\n     * Indicates the angle that an object will lock to while rotating.\n     * @type Number\n     * @since 1.6.7\n     * @default\n     */\n    snapAngle: 0,\n\n    /**\n     * Indicates the distance from the snapAngle the rotation will lock to the snapAngle.\n     * When `null`, the snapThreshold will default to the snapAngle.\n     * @type null|Number\n     * @since 1.6.7\n     * @default\n     */\n    snapThreshold: null,\n\n    /**\n     * Indicates if the right click on canvas can output the context menu or not\n     * @type Boolean\n     * @since 1.6.5\n     * @default\n     */\n    stopContextMenu: false,\n\n    /**\n     * Indicates if the canvas can fire right click events\n     * @type Boolean\n     * @since 1.6.5\n     * @default\n     */\n    fireRightClick: false,\n\n    /**\n     * Indicates if the canvas can fire middle click events\n     * @type Boolean\n     * @since 1.7.8\n     * @default\n     */\n    fireMiddleClick: false,\n\n    /**\n     * @private\n     */\n    _initInteractive: function() {\n      this._currentTransform = null;\n      this._groupSelector = null;\n      this._initWrapperElement();\n      this._createUpperCanvas();\n      this._initEventListeners();\n\n      this._initRetinaScaling();\n\n      this.freeDrawingBrush = fabric.PencilBrush && new fabric.PencilBrush(this);\n\n      this.calcOffset();\n    },\n\n    /**\n     * Divides objects in two groups, one to render immediately\n     * and one to render as activeGroup.\n     * @return {Array} objects to render immediately and pushes the other in the activeGroup.\n     */\n    _chooseObjectsToRender: function() {\n      var activeObjects = this.getActiveObjects(),\n          object, objsToRender, activeGroupObjects;\n\n      if (activeObjects.length > 0 && !this.preserveObjectStacking) {\n        objsToRender = [];\n        activeGroupObjects = [];\n        for (var i = 0, length = this._objects.length; i < length; i++) {\n          object = this._objects[i];\n          if (activeObjects.indexOf(object) === -1 ) {\n            objsToRender.push(object);\n          }\n          else {\n            activeGroupObjects.push(object);\n          }\n        }\n        if (activeObjects.length > 1) {\n          this._activeObject._objects = activeGroupObjects;\n        }\n        objsToRender.push.apply(objsToRender, activeGroupObjects);\n      }\n      else {\n        objsToRender = this._objects;\n      }\n\n      objsToRender = objsToRender.sort(function(a, b) {\n        return (a.zIndex || 0) - (b.zIndex || 0);\n      }).reverse();\n\n      return objsToRender;\n    },\n\n    /**\n     * Renders both the top canvas and the secondary container canvas.\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAll: function () {\n      if (this.contextTopDirty && !this._groupSelector && !this.isDrawingMode) {\n        this.clearContext(this.contextTop);\n        this.contextTopDirty = false;\n      }\n      if (this.isDrawingMode && this._isCurrentlyDrawing) {\n        this.freeDrawingBrush && this.freeDrawingBrush._render();\n      }\n      var canvasToDrawOn = this.contextContainer;\n      this.renderCanvas(canvasToDrawOn, this._chooseObjectsToRender());\n      return this;\n    },\n\n    /**\n     * Method to render only the top canvas.\n     * Also used to render the group selection box.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    renderTop: function () {\n      var ctx = this.contextTop;\n      this.clearContext(ctx);\n\n      // we render the top context - last object\n      if (this.selection && this._groupSelector) {\n        this._drawSelection(ctx);\n      }\n\n      this.fire('after:render');\n      this.contextTopDirty = true;\n      return this;\n    },\n\n    /**\n     * Resets the current transform to its original values and chooses the type of resizing based on the event\n     * @private\n     */\n    _resetCurrentTransform: function() {\n      var t = this._currentTransform;\n\n      t.target.set({\n        scaleX: t.original.scaleX,\n        scaleY: t.original.scaleY,\n        skewX: t.original.skewX,\n        skewY: t.original.skewY,\n        left: t.original.left,\n        top: t.original.top\n      });\n\n      if (this._shouldCenterTransform(t.target)) {\n        if (t.action === 'rotate') {\n          this._setOriginToCenter(t.target);\n        }\n        else {\n          if (t.originX !== 'center') {\n            if (t.originX === 'right') {\n              t.mouseXSign = -1;\n            }\n            else {\n              t.mouseXSign = 1;\n            }\n          }\n          if (t.originY !== 'center') {\n            if (t.originY === 'bottom') {\n              t.mouseYSign = -1;\n            }\n            else {\n              t.mouseYSign = 1;\n            }\n          }\n\n          t.originX = 'center';\n          t.originY = 'center';\n        }\n      }\n      else {\n        t.originX = t.original.originX;\n        t.originY = t.original.originY;\n      }\n    },\n\n    /**\n     * Checks if point is contained within an area of given object\n     * @param {Event} e Event object\n     * @param {fabric.Object} target Object to test against\n     * @param {Object} [point] x,y object of point coordinates we want to check.\n     * @return {Boolean} true if point is contained within an area of given object\n     */\n    containsPoint: function (e, target, point) {\n      var ignoreZoom = true,\n          pointer = point || this.getPointer(e, ignoreZoom),\n          xy;\n\n      if (target.group && target.group === this._activeObject && target.group.type === 'activeSelection') {\n        xy = this._normalizePointer(target.group, pointer);\n      }\n      else {\n        xy = { x: pointer.x, y: pointer.y };\n      }\n      // http://www.geog.ubc.ca/courses/klink/gis.notes/ncgia/u32.html\n      // http://idav.ucdavis.edu/~okreylos/TAship/Spring2000/PointInPolygon.html\n      return (target.containsPoint(xy) || target._findTargetCorner(pointer));\n    },\n\n    /**\n     * @private\n     */\n    _normalizePointer: function (object, pointer) {\n      var m = object.calcTransformMatrix(),\n          invertedM = fabric.util.invertTransform(m),\n          vptPointer = this.restorePointerVpt(pointer);\n      return fabric.util.transformPoint(vptPointer, invertedM);\n    },\n\n    /**\n     * Returns true if object is transparent at a certain location\n     * @param {fabric.Object} target Object to check\n     * @param {Number} x Left coordinate\n     * @param {Number} y Top coordinate\n     * @return {Boolean}\n     */\n    isTargetTransparent: function (target, x, y) {\n      var ctx = this.contextCache,\n          originalColor = target.selectionBackgroundColor, v = this.viewportTransform;\n\n      target.selectionBackgroundColor = '';\n\n      this.clearContext(ctx);\n\n      ctx.save();\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n      target.render(ctx);\n      ctx.restore();\n\n      target === this._activeObject && target._renderControls(ctx, {\n        hasBorders: false,\n        transparentCorners: false\n      }, {\n        hasBorders: false,\n      });\n\n      target.selectionBackgroundColor = originalColor;\n\n      var isTransparent = fabric.util.isTransparent(\n        ctx, x, y, this.targetFindTolerance);\n\n      return isTransparent;\n    },\n\n    /**\n     * takes an event and determins if selection key has been pressed\n     * @private\n     * @param {Event} e Event object\n     */\n    _isSelectionKeyPressed: function(e) {\n      var selectionKeyPressed = false;\n\n      if (Object.prototype.toString.call(this.selectionKey) === '[object Array]') {\n        selectionKeyPressed = !!this.selectionKey.find(function(key) { return e[key] === true; });\n      }\n      else {\n        selectionKeyPressed = e[this.selectionKey];\n      }\n\n      return selectionKeyPressed;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _shouldClearSelection: function (e, target) {\n      var activeObjects = this.getActiveObjects(),\n          activeObject = this._activeObject;\n\n      return (\n        !target\n        ||\n        (target &&\n          activeObject &&\n          activeObjects.length > 1 &&\n          activeObjects.indexOf(target) === -1 &&\n          activeObject !== target &&\n          !this._isSelectionKeyPressed(e))\n        ||\n        (target && !target.evented)\n        ||\n        (target &&\n          !target.selectable &&\n          activeObject &&\n          activeObject !== target)\n      );\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} target\n     */\n    _shouldCenterTransform: function (target) {\n      if (!target) {\n        return;\n      }\n\n      var t = this._currentTransform,\n          centerTransform;\n\n      if (t.action === 'scale' || t.action === 'scaleX' || t.action === 'scaleY') {\n        centerTransform = this.centeredScaling || target.centeredScaling;\n      }\n      else if (t.action === 'rotate') {\n        centerTransform = this.centeredRotation || target.centeredRotation;\n      }\n\n      return centerTransform ? !t.altKey : t.altKey;\n    },\n\n    /**\n     * @private\n     */\n    _getOriginFromCorner: function(target, corner) {\n      var origin = {\n        x: target.originX,\n        y: target.originY\n      };\n\n      if (corner === 'ml' || corner === 'tl' || corner === 'bl') {\n        origin.x = 'right';\n      }\n      else if (corner === 'mr' || corner === 'tr' || corner === 'br') {\n        origin.x = 'left';\n      }\n\n      if (corner === 'tl' || corner === 'mt' || corner === 'tr') {\n        origin.y = 'bottom';\n      }\n      else if (corner === 'bl' || corner === 'mb' || corner === 'br') {\n        origin.y = 'top';\n      }\n\n      return origin;\n    },\n\n    /**\n     * @private\n     */\n    _getActionFromCorner: function(target, corner, e) {\n      if (!corner) {\n        return 'drag';\n      }\n\n      switch (corner) {\n        case 'mtr':\n          return 'rotate';\n        case 'ml':\n        case 'mr':\n          return e[this.altActionKey] ? 'skewY' : 'scaleX';\n        case 'mt':\n        case 'mb':\n          return e[this.altActionKey] ? 'skewX' : 'scaleY';\n        default:\n          return 'scale';\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _setupCurrentTransform: function (e, target) {\n      if (!target) {\n        return;\n      }\n\n      var pointer = this.getPointer(e),\n          corner = target._findTargetCorner(this.getPointer(e, true)),\n          action = this._getActionFromCorner(target, corner, e),\n          origin = this._getOriginFromCorner(target, corner);\n\n      this._currentTransform = {\n        target: target,\n        action: action,\n        corner: corner,\n        scaleX: target.scaleX,\n        scaleY: target.scaleY,\n        skewX: target.skewX,\n        skewY: target.skewY,\n        offsetX: pointer.x - target.left,\n        offsetY: pointer.y - target.top,\n        originX: origin.x,\n        originY: origin.y,\n        ex: pointer.x,\n        ey: pointer.y,\n        lastX: pointer.x,\n        lastY: pointer.y,\n        left: target.left,\n        top: target.top,\n        theta: degreesToRadians(target.angle),\n        width: target.width * target.scaleX,\n        mouseXSign: 1,\n        mouseYSign: 1,\n        shiftKey: e.shiftKey,\n        altKey: e[this.centeredKey]\n      };\n\n      this._currentTransform.original = {\n        left: target.left,\n        top: target.top,\n        scaleX: target.scaleX,\n        scaleY: target.scaleY,\n        skewX: target.skewX,\n        skewY: target.skewY,\n        originX: origin.x,\n        originY: origin.y\n      };\n\n      this._resetCurrentTransform();\n    },\n\n    /**\n     * Translates object by \"setting\" its left/top\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @return {Boolean} true if the translation occurred\n     */\n    _translateObject: function (x, y) {\n      var transform = this._currentTransform,\n          target = transform.target,\n          newLeft = x - transform.offsetX,\n          newTop = y - transform.offsetY,\n          moveX = !target.get('lockMovementX') && target.left !== newLeft,\n          moveY = !target.get('lockMovementY') && target.top !== newTop;\n\n      moveX && target.set('left', newLeft);\n      moveY && target.set('top', newTop);\n      return moveX || moveY;\n    },\n\n    /**\n     * Check if we are increasing a positive skew or lower it,\n     * checking mouse direction and pressed corner.\n     * @private\n     */\n    _changeSkewTransformOrigin: function(mouseMove, t, by) {\n      var property = 'originX', origins = { 0: 'center' },\n          skew = t.target.skewX, originA = 'left', originB = 'right',\n          corner = t.corner === 'mt' || t.corner === 'ml' ? 1 : -1,\n          flipSign = 1;\n\n      mouseMove = mouseMove > 0 ? 1 : -1;\n      if (by === 'y') {\n        skew = t.target.skewY;\n        originA = 'top';\n        originB = 'bottom';\n        property = 'originY';\n      }\n      origins[-1] = originA;\n      origins[1] = originB;\n\n      t.target.flipX && (flipSign *= -1);\n      t.target.flipY && (flipSign *= -1);\n\n      if (skew === 0) {\n        t.skewSign = -corner * mouseMove * flipSign;\n        t[property] = origins[-mouseMove];\n      }\n      else {\n        skew = skew > 0 ? 1 : -1;\n        t.skewSign = skew;\n        t[property] = origins[skew * corner * flipSign];\n      }\n    },\n\n    /**\n     * Skew object by mouse events\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @param {String} by Either 'x' or 'y'\n     * @return {Boolean} true if the skewing occurred\n     */\n    _skewObject: function (x, y, by) {\n      var t = this._currentTransform,\n          target = t.target, skewed = false,\n          lockSkewingX = target.get('lockSkewingX'),\n          lockSkewingY = target.get('lockSkewingY');\n\n      if ((lockSkewingX && by === 'x') || (lockSkewingY && by === 'y')) {\n        return false;\n      }\n\n      // Get the constraint point\n      var center = target.getCenterPoint(),\n          actualMouseByCenter = target.toLocalPoint(new fabric.Point(x, y), 'center', 'center')[by],\n          lastMouseByCenter = target.toLocalPoint(new fabric.Point(t.lastX, t.lastY), 'center', 'center')[by],\n          actualMouseByOrigin, constraintPosition, dim = target._getTransformedDimensions();\n\n      this._changeSkewTransformOrigin(actualMouseByCenter - lastMouseByCenter, t, by);\n      actualMouseByOrigin = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY)[by];\n      constraintPosition = target.translateToOriginPoint(center, t.originX, t.originY);\n      // Actually skew the object\n      skewed = this._setObjectSkew(actualMouseByOrigin, t, by, dim);\n      t.lastX = x;\n      t.lastY = y;\n      // Make sure the constraints apply\n      target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n      return skewed;\n    },\n\n    /**\n     * Set object skew\n     * @private\n     * @return {Boolean} true if the skewing occurred\n     */\n    _setObjectSkew: function(localMouse, transform, by, _dim) {\n      var target = transform.target, newValue, skewed = false,\n          skewSign = transform.skewSign, newDim, dimNoSkew,\n          otherBy, _otherBy, _by, newDimMouse, skewX, skewY;\n\n      if (by === 'x') {\n        otherBy = 'y';\n        _otherBy = 'Y';\n        _by = 'X';\n        skewX = 0;\n        skewY = target.skewY;\n      }\n      else {\n        otherBy = 'x';\n        _otherBy = 'X';\n        _by = 'Y';\n        skewX = target.skewX;\n        skewY = 0;\n      }\n\n      dimNoSkew = target._getTransformedDimensions(skewX, skewY);\n      newDimMouse = 2 * Math.abs(localMouse) - dimNoSkew[by];\n      if (newDimMouse <= 2) {\n        newValue = 0;\n      }\n      else {\n        newValue = skewSign * Math.atan((newDimMouse / target['scale' + _by]) /\n                                        (dimNoSkew[otherBy] / target['scale' + _otherBy]));\n        newValue = fabric.util.radiansToDegrees(newValue);\n      }\n      skewed = target['skew' + _by] !== newValue;\n      target.set('skew' + _by, newValue);\n      if (target['skew' + _otherBy] !== 0) {\n        newDim = target._getTransformedDimensions();\n        newValue = (_dim[otherBy] / newDim[otherBy]) * target['scale' + _otherBy];\n        target.set('scale' + _otherBy, newValue);\n      }\n      return skewed;\n    },\n\n    /**\n     * Scales object by invoking its scaleX/scaleY methods\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @param {String} by Either 'x' or 'y' - specifies dimension constraint by which to scale an object.\n     *                    When not provided, an object is scaled by both dimensions equally\n     * @return {Boolean} true if the scaling occurred\n     */\n    _scaleObject: function (x, y, by) {\n      var t = this._currentTransform,\n          target = t.target,\n          lockScalingX = target.get('lockScalingX'),\n          lockScalingY = target.get('lockScalingY'),\n          lockScalingFlip = target.get('lockScalingFlip');\n\n      if (lockScalingX && lockScalingY) {\n        return false;\n      }\n\n      // Get the constraint point\n      var constraintPosition = target.translateToOriginPoint(target.getCenterPoint(), t.originX, t.originY),\n          localMouse = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY),\n          dim = target._getTransformedDimensions(), scaled = false;\n\n      this._setLocalMouse(localMouse, t);\n\n      // Actually scale the object\n      scaled = this._setObjectScale(localMouse, t, lockScalingX, lockScalingY, by, lockScalingFlip, dim);\n\n      // Make sure the constraints apply\n      target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n      return scaled;\n    },\n\n    /**\n     * @private\n     * @return {Boolean} true if the scaling occurred\n     */\n    _setObjectScale: function(localMouse, transform, lockScalingX, lockScalingY, by, lockScalingFlip, _dim) {\n      var target = transform.target, forbidScalingX = false, forbidScalingY = false, scaled = false,\n          changeX, changeY, scaleX, scaleY;\n\n      scaleX = localMouse.x * target.scaleX / _dim.x;\n      scaleY = localMouse.y * target.scaleY / _dim.y;\n      changeX = target.scaleX !== scaleX;\n      changeY = target.scaleY !== scaleY;\n\n      if (lockScalingFlip && scaleX <= 0 && scaleX < target.scaleX) {\n        forbidScalingX = true;\n        localMouse.x = 0;\n      }\n\n      if (lockScalingFlip && scaleY <= 0 && scaleY < target.scaleY) {\n        forbidScalingY = true;\n        localMouse.y = 0;\n      }\n\n      if (by === 'equally' && !lockScalingX && !lockScalingY) {\n        scaled = this._scaleObjectEqually(localMouse, target, transform, _dim);\n      }\n      else if (!by) {\n        forbidScalingX || lockScalingX || (target.set('scaleX', scaleX) && (scaled = scaled || changeX));\n        forbidScalingY || lockScalingY || (target.set('scaleY', scaleY) && (scaled = scaled || changeY));\n      }\n      else if (by === 'x' && !target.get('lockUniScaling')) {\n        forbidScalingX || lockScalingX || (target.set('scaleX', scaleX) && (scaled = scaled || changeX));\n      }\n      else if (by === 'y' && !target.get('lockUniScaling')) {\n        forbidScalingY || lockScalingY || (target.set('scaleY', scaleY) && (scaled = scaled || changeY));\n      }\n      transform.newScaleX = scaleX;\n      transform.newScaleY = scaleY;\n      forbidScalingX || forbidScalingY || this._flipObject(transform, by);\n      return scaled;\n    },\n\n    /**\n     * @private\n     * @return {Boolean} true if the scaling occurred\n     */\n    _scaleObjectEqually: function(localMouse, target, transform, _dim) {\n\n      var dist = localMouse.y + localMouse.x,\n          lastDist = _dim.y * transform.original.scaleY / target.scaleY +\n                     _dim.x * transform.original.scaleX / target.scaleX,\n          scaled, signX = localMouse.x < 0 ? -1 : 1,\n          signY = localMouse.y < 0 ? -1 : 1;\n\n      // We use transform.scaleX/Y instead of target.scaleX/Y\n      // because the object may have a min scale and we'll loose the proportions\n      transform.newScaleX = signX * Math.abs(transform.original.scaleX * dist / lastDist);\n      transform.newScaleY = signY * Math.abs(transform.original.scaleY * dist / lastDist);\n      scaled = transform.newScaleX !== target.scaleX || transform.newScaleY !== target.scaleY;\n      target.set('scaleX', transform.newScaleX);\n      target.set('scaleY', transform.newScaleY);\n      return scaled;\n    },\n\n    /**\n     * @private\n     */\n    _flipObject: function(transform, by) {\n      if (transform.newScaleX < 0 && by !== 'y') {\n        if (transform.originX === 'left') {\n          transform.originX = 'right';\n        }\n        else if (transform.originX === 'right') {\n          transform.originX = 'left';\n        }\n      }\n\n      if (transform.newScaleY < 0 && by !== 'x') {\n        if (transform.originY === 'top') {\n          transform.originY = 'bottom';\n        }\n        else if (transform.originY === 'bottom') {\n          transform.originY = 'top';\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setLocalMouse: function(localMouse, t) {\n      var target = t.target, zoom = this.getZoom(),\n          padding = target.padding / zoom;\n\n      if (t.originX === 'right') {\n        localMouse.x *= -1;\n      }\n      else if (t.originX === 'center') {\n        localMouse.x *= t.mouseXSign * 2;\n        if (localMouse.x < 0) {\n          t.mouseXSign = -t.mouseXSign;\n        }\n      }\n\n      if (t.originY === 'bottom') {\n        localMouse.y *= -1;\n      }\n      else if (t.originY === 'center') {\n        localMouse.y *= t.mouseYSign * 2;\n        if (localMouse.y < 0) {\n          t.mouseYSign = -t.mouseYSign;\n        }\n      }\n\n      // adjust the mouse coordinates when dealing with padding\n      if (abs(localMouse.x) > padding) {\n        if (localMouse.x < 0) {\n          localMouse.x += padding;\n        }\n        else {\n          localMouse.x -= padding;\n        }\n      }\n      else { // mouse is within the padding, set to 0\n        localMouse.x = 0;\n      }\n\n      if (abs(localMouse.y) > padding) {\n        if (localMouse.y < 0) {\n          localMouse.y += padding;\n        }\n        else {\n          localMouse.y -= padding;\n        }\n      }\n      else {\n        localMouse.y = 0;\n      }\n    },\n\n    /**\n     * Rotates object by invoking its rotate method\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @return {Boolean} true if the rotation occurred\n     */\n    _rotateObject: function (x, y) {\n\n      var t = this._currentTransform;\n\n      if (t.target.get('lockRotation')) {\n        return false;\n      }\n\n      var lastAngle = atan2(t.ey - t.top, t.ex - t.left),\n          curAngle = atan2(y - t.top, x - t.left),\n          angle = radiansToDegrees(curAngle - lastAngle + t.theta),\n          hasRotated = true;\n\n      if (t.target.snapAngle > 0) {\n        var snapAngle  = t.target.snapAngle,\n            snapThreshold  = t.target.snapThreshold || snapAngle,\n            rightAngleLocked = Math.ceil(angle / snapAngle) * snapAngle,\n            leftAngleLocked = Math.floor(angle / snapAngle) * snapAngle;\n\n        if (Math.abs(angle - leftAngleLocked) < snapThreshold) {\n          angle = leftAngleLocked;\n        }\n        else if (Math.abs(angle - rightAngleLocked) < snapThreshold) {\n          angle = rightAngleLocked;\n        }\n      }\n\n      // normalize angle to positive value\n      if (angle < 0) {\n        angle = 360 + angle;\n      }\n      angle %= 360;\n\n      if (t.target.angle === angle) {\n        hasRotated = false;\n      }\n      else {\n        t.target.angle = angle;\n      }\n\n      return hasRotated;\n    },\n\n    /**\n     * Set the cursor type of the canvas element\n     * @param {String} value Cursor type of the canvas element.\n     * @see http://www.w3.org/TR/css3-ui/#cursor\n     */\n    setCursor: function (value) {\n      this.upperCanvasEl.style.cursor = value;\n    },\n\n    /**\n     * @param {fabric.Object} target to reset transform\n     * @private\n     */\n    _resetObjectTransform: function (target) {\n      target.scaleX = 1;\n      target.scaleY = 1;\n      target.skewX = 0;\n      target.skewY = 0;\n      target.rotate(0);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx to draw the selection on\n     */\n    _drawSelection: function (ctx) {\n      var groupSelector = this._groupSelector,\n          left = groupSelector.left,\n          top = groupSelector.top,\n          aleft = abs(left),\n          atop = abs(top);\n\n      if (this.selectionColor) {\n        ctx.fillStyle = this.selectionColor;\n\n        ctx.fillRect(\n          groupSelector.ex - ((left > 0) ? 0 : -left),\n          groupSelector.ey - ((top > 0) ? 0 : -top),\n          aleft,\n          atop\n        );\n      }\n\n      if (!this.selectionLineWidth || !this.selectionBorderColor) {\n        return;\n      }\n      ctx.lineWidth = this.selectionLineWidth;\n      ctx.strokeStyle = this.selectionBorderColor;\n\n      // selection border\n      if (this.selectionDashArray.length > 1 && !supportLineDash) {\n\n        var px = groupSelector.ex + STROKE_OFFSET - ((left > 0) ? 0 : aleft),\n            py = groupSelector.ey + STROKE_OFFSET - ((top > 0) ? 0 : atop);\n\n        ctx.beginPath();\n\n        fabric.util.drawDashedLine(ctx, px, py, px + aleft, py, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px, py + atop - 1, px + aleft, py + atop - 1, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px, py, px, py + atop, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px + aleft - 1, py, px + aleft - 1, py + atop, this.selectionDashArray);\n\n        ctx.closePath();\n        ctx.stroke();\n      }\n      else {\n        fabric.Object.prototype._setLineDash.call(this, ctx, this.selectionDashArray);\n        ctx.strokeRect(\n          groupSelector.ex + STROKE_OFFSET - ((left > 0) ? 0 : aleft),\n          groupSelector.ey + STROKE_OFFSET - ((top > 0) ? 0 : atop),\n          aleft,\n          atop\n        );\n      }\n    },\n\n    /**\n     * Method that determines what object we are clicking on\n     * the skipGroup parameter is for internal use, is needed for shift+click action\n     * @param {Event} e mouse event\n     * @param {Boolean} skipGroup when true, activeGroup is skipped and only objects are traversed through\n     */\n    findTarget: function (e, skipGroup) {\n      if (this.skipTargetFind) {\n        return;\n      }\n\n      var ignoreZoom = true,\n          pointer = this.getPointer(e, ignoreZoom),\n          activeObject = this._activeObject,\n          aObjects = this.getActiveObjects(),\n          activeTarget, activeTargetSubs;\n\n      // first check current group (if one exists)\n      // active group does not check sub targets like normal groups.\n      // if active group just exits.\n      this.targets = [];\n\n      if (aObjects.length > 1 && !skipGroup && activeObject === this._searchPossibleTargets([activeObject], pointer)) {\n        return activeObject;\n      }\n      // if we hit the corner of an activeObject, let's return that.\n      if (aObjects.length === 1 && activeObject._findTargetCorner(pointer)) {\n        return activeObject;\n      }\n      if (aObjects.length === 1 &&\n        activeObject === this._searchPossibleTargets([activeObject], pointer)) {\n        if (!this.preserveObjectStacking) {\n          return activeObject;\n        }\n        else {\n          activeTarget = activeObject;\n          activeTargetSubs = this.targets;\n          this.targets = [];\n        }\n      }\n      var target = this._searchPossibleTargets(this._objects, pointer);\n      if (e[this.altSelectionKey] && target && activeTarget && target !== activeTarget) {\n        target = activeTarget;\n        this.targets = activeTargetSubs;\n      }\n      return target;\n    },\n\n    /**\n     * @private\n     */\n    _checkTarget: function(pointer, obj) {\n      if (obj &&\n          obj.visible &&\n          obj.evented &&\n          this.containsPoint(null, obj, pointer)){\n        if ((this.perPixelTargetFind || obj.perPixelTargetFind) && !obj.isEditing) {\n          var isTransparent = this.isTargetTransparent(obj, pointer.x, pointer.y);\n          if (!isTransparent) {\n            return true;\n          }\n        }\n        else {\n          return true;\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _searchPossibleTargets: function(objects, pointer) {\n      var objects = objects.sort(function(a, b) {\n        return (a.zIndex || 0) - (b.zIndex || 0);\n      });\n\n      // Cache all targets where their bounding box contains point.\n      var target, i = objects.length, normalizedPointer, subTarget;\n      // Do not check for currently grouped objects, since we check the parent group itself.\n      // until we call this function specifically to search inside the activeGroup\n      while (i--) {\n        if (this._checkTarget(pointer, objects[i])) {\n          target = objects[i];\n          if (target.type === 'group' && target.subTargetCheck) {\n            normalizedPointer = this._normalizePointer(target, pointer);\n            subTarget = this._searchPossibleTargets(target._objects, normalizedPointer);\n            subTarget && this.targets.push(subTarget);\n          }\n          break;\n        }\n      }\n      return target;\n    },\n\n    /**\n     * Returns pointer coordinates without the effect of the viewport\n     * @param {Object} pointer with \"x\" and \"y\" number values\n     * @return {Object} object with \"x\" and \"y\" number values\n     */\n    restorePointerVpt: function(pointer) {\n      return fabric.util.transformPoint(\n        pointer,\n        fabric.util.invertTransform(this.viewportTransform)\n      );\n    },\n\n    /**\n     * Returns pointer coordinates relative to canvas.\n     * Can return coordinates with or without viewportTransform.\n     * ignoreZoom false gives back coordinates that represent\n     * the point clicked on canvas element.\n     * ignoreZoom true gives back coordinates after being processed\n     * by the viewportTransform ( sort of coordinates of what is displayed\n     * on the canvas where you are clicking.\n     * To interact with your shapes top and left you want to use ignoreZoom true\n     * most of the time, while ignoreZoom false will give you coordinates\n     * compatible with the object.oCoords system.\n     * of the time.\n     * @param {Event} e\n     * @param {Boolean} ignoreZoom\n     * @return {Object} object with \"x\" and \"y\" number values\n     */\n    getPointer: function (e, ignoreZoom, upperCanvasEl) {\n      if (!upperCanvasEl) {\n        upperCanvasEl = this.upperCanvasEl;\n      }\n      var pointer = getPointer(e),\n          bounds = upperCanvasEl.getBoundingClientRect(),\n          boundsWidth = bounds.width || 0,\n          boundsHeight = bounds.height || 0,\n          cssScale;\n\n      if (!boundsWidth || !boundsHeight ) {\n        if ('top' in bounds && 'bottom' in bounds) {\n          boundsHeight = Math.abs( bounds.top - bounds.bottom );\n        }\n        if ('right' in bounds && 'left' in bounds) {\n          boundsWidth = Math.abs( bounds.right - bounds.left );\n        }\n      }\n\n      this.calcOffset();\n\n      pointer.x = pointer.x - this._offset.left;\n      pointer.y = pointer.y - this._offset.top;\n      if (!ignoreZoom) {\n        pointer = this.restorePointerVpt(pointer);\n      }\n\n      if (boundsWidth === 0 || boundsHeight === 0) {\n        // If bounds are not available (i.e. not visible), do not apply scale.\n        cssScale = { width: 1, height: 1 };\n      }\n      else {\n        cssScale = {\n          width: upperCanvasEl.width / boundsWidth,\n          height: upperCanvasEl.height / boundsHeight\n        };\n      }\n\n      return {\n        x: pointer.x * cssScale.width,\n        y: pointer.y * cssScale.height\n      };\n    },\n\n    /**\n     * @private\n     * @throws {CANVAS_INIT_ERROR} If canvas can not be initialized\n     */\n    _createUpperCanvas: function () {\n      var lowerCanvasClass = this.lowerCanvasEl.className.replace(/\\s*lower-canvas\\s*/, '');\n\n      // there is no need to create a new upperCanvas element if we have already one.\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl.className = '';\n      }\n      else {\n        this.upperCanvasEl = this._createCanvasElement();\n      }\n      fabric.util.addClass(this.upperCanvasEl, 'upper-canvas ' + lowerCanvasClass);\n\n      this.wrapperEl.appendChild(this.upperCanvasEl);\n\n      this._copyCanvasStyle(this.lowerCanvasEl, this.upperCanvasEl);\n      this._applyCanvasStyle(this.upperCanvasEl);\n      this.contextTop = this.upperCanvasEl.getContext('2d');\n    },\n\n    /**\n     * @private\n     */\n    _createCacheCanvas: function () {\n      this.cacheCanvasEl = this._createCanvasElement();\n      this.cacheCanvasEl.setAttribute('width', this.width);\n      this.cacheCanvasEl.setAttribute('height', this.height);\n      this.contextCache = this.cacheCanvasEl.getContext('2d');\n    },\n\n    /**\n     * @private\n     */\n    _initWrapperElement: function () {\n      this.wrapperEl = fabric.util.wrapElement(this.lowerCanvasEl, 'div', {\n        'class': this.containerClass\n      });\n      fabric.util.setStyle(this.wrapperEl, {\n        width: this.width + 'px',\n        height: this.height + 'px',\n        position: 'relative'\n      });\n      fabric.util.makeElementUnselectable(this.wrapperEl);\n    },\n\n    /**\n     * @private\n     * @param {HTMLElement} element canvas element to apply styles on\n     */\n    _applyCanvasStyle: function (element) {\n      var width = this.width || element.width,\n          height = this.height || element.height;\n\n      fabric.util.setStyle(element, {\n        position: 'absolute',\n        width: width + 'px',\n        height: height + 'px',\n        left: 0,\n        top: 0,\n        'touch-action': 'none'\n      });\n      element.width = width;\n      element.height = height;\n      fabric.util.makeElementUnselectable(element);\n    },\n\n    /**\n     * Copy the entire inline style from one element (fromEl) to another (toEl)\n     * @private\n     * @param {Element} fromEl Element style is copied from\n     * @param {Element} toEl Element copied style is applied to\n     */\n    _copyCanvasStyle: function (fromEl, toEl) {\n      toEl.style.cssText = fromEl.style.cssText;\n    },\n\n    /**\n     * Returns context of canvas where object selection is drawn\n     * @return {CanvasRenderingContext2D}\n     */\n    getSelectionContext: function() {\n      return this.contextTop;\n    },\n\n    /**\n     * Returns &lt;canvas> element on which object selection is drawn\n     * @return {HTMLCanvasElement}\n     */\n    getSelectionElement: function () {\n      return this.upperCanvasEl;\n    },\n\n    /**\n     * Returns currently active object\n     * @return {fabric.Object} active object\n     */\n    getActiveObject: function () {\n      return this._activeObject;\n    },\n\n    /**\n     * Returns an array with the current selected objects\n     * @return {fabric.Object} active object\n     */\n    getActiveObjects: function () {\n      var active = this._activeObject;\n      if (active) {\n        if (active.type === 'activeSelection' && active._objects) {\n          return active._objects.slice(0);\n        }\n        else {\n          return [active];\n        }\n      }\n      return [];\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was removed\n     */\n    _onObjectRemoved: function(obj) {\n      // removing active object should fire \"selection:cleared\" events\n      if (obj === this._activeObject) {\n        this.fire('before:selection:cleared', { target: obj });\n        this._discardActiveObject();\n        this.fire('selection:cleared', { target: obj });\n        obj.fire('deselected');\n      }\n      if (this._hoveredTarget === obj) {\n        this._hoveredTarget = null;\n      }\n      this.callSuper('_onObjectRemoved', obj);\n    },\n\n    /**\n     * @private\n     * Compares the old activeObject with the current one and fires correct events\n     * @param {fabric.Object} obj old activeObject\n     */\n    _fireSelectionEvents: function(oldObjects, e) {\n      var somethingChanged = false, objects = this.getActiveObjects(),\n          added = [], removed = [], opt = { e: e };\n      oldObjects.forEach(function(oldObject) {\n        if (objects.indexOf(oldObject) === -1) {\n          somethingChanged = true;\n          oldObject.fire('deselected', opt);\n          removed.push(oldObject);\n        }\n      });\n      objects.forEach(function(object) {\n        if (oldObjects.indexOf(object) === -1) {\n          somethingChanged = true;\n          object.fire('selected', opt);\n          added.push(object);\n        }\n      });\n      if (oldObjects.length > 0 && objects.length > 0) {\n        opt.selected = added;\n        opt.deselected = removed;\n        // added for backward compatibility\n        opt.updated = added[0] || removed[0];\n        opt.target = this._activeObject;\n        somethingChanged && this.fire('selection:updated', opt);\n      }\n      else if (objects.length > 0) {\n        // deprecated event\n        if (objects.length === 1) {\n          opt.target = added[0];\n          this.fire('object:selected', opt);\n        }\n        opt.selected = added;\n        // added for backward compatibility\n        opt.target = this._activeObject;\n        this.fire('selection:created', opt);\n      }\n      else if (oldObjects.length > 0) {\n        opt.deselected = removed;\n        this.fire('selection:cleared', opt);\n      }\n    },\n\n    /**\n     * Sets given object as the only active object on canvas\n     * @param {fabric.Object} object Object to set as an active one\n     * @param {Event} [e] Event (passed along when firing \"object:selected\")\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    setActiveObject: function (object, e) {\n      var currentActives = this.getActiveObjects();\n      this._setActiveObject(object, e);\n      this._fireSelectionEvents(currentActives, e);\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {Object} object to set as active\n     * @param {Event} [e] Event (passed along when firing \"object:selected\")\n     * @return {Boolean} true if the selection happened\n     */\n    _setActiveObject: function(object, e) {\n      if (this._activeObject === object) {\n        return false;\n      }\n      if (!this._discardActiveObject(e, object)) {\n        return false;\n      }\n      if (object.onSelect({ e: e })) {\n        return false;\n      }\n      this._activeObject = object;\n      return true;\n    },\n\n    /**\n     * @private\n     */\n    _discardActiveObject: function(e, object) {\n      var obj = this._activeObject;\n      if (obj) {\n        // onDeselect return TRUE to cancel selection;\n        if (obj.onDeselect({ e: e, object: object })) {\n          return false;\n        }\n        this._activeObject = null;\n      }\n      return true;\n    },\n\n    /**\n     * Discards currently active object and fire events. If the function is called by fabric\n     * as a consequence of a mouse event, the event is passed as a parameter and\n     * sent to the fire function for the custom events. When used as a method the\n     * e param does not have any application.\n     * @param {event} e\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    discardActiveObject: function (e) {\n      var currentActives = this.getActiveObjects();\n      if (currentActives.length) {\n        this.fire('before:selection:cleared', { target: currentActives[0], e: e });\n      }\n      this._discardActiveObject(e);\n      this._fireSelectionEvents(currentActives, e);\n      return this;\n    },\n\n    /**\n     * Clears a canvas element and removes all event listeners\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    dispose: function () {\n      var wrapper = this.wrapperEl;\n      this.removeListeners();\n      wrapper.removeChild(this.upperCanvasEl);\n      wrapper.removeChild(this.lowerCanvasEl);\n      delete this.upperCanvasEl;\n      if (wrapper.parentNode) {\n        wrapper.parentNode.replaceChild(this.lowerCanvasEl, this.wrapperEl);\n      }\n      delete this.wrapperEl;\n      fabric.StaticCanvas.prototype.dispose.call(this);\n      return this;\n    },\n\n    /**\n     * Clears all contexts (background, main, top) of an instance\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clear: function () {\n      // this.discardActiveGroup();\n      this.discardActiveObject();\n      this.clearContext(this.contextTop);\n      return this.callSuper('clear');\n    },\n\n    /**\n     * Draws objects' controls (borders/controls)\n     * @param {CanvasRenderingContext2D} ctx Context to render controls on\n     */\n    drawControls: function(ctx) {\n      var activeObject = this._activeObject;\n\n      if (activeObject) {\n        activeObject._renderControls(ctx);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _toObject: function(instance, methodName, propertiesToInclude) {\n      //If the object is part of the current selection group, it should\n      //be transformed appropriately\n      //i.e. it should be serialised as it would appear if the selection group\n      //were to be destroyed.\n      var originalProperties = this._realizeGroupTransformOnObject(instance),\n          object = this.callSuper('_toObject', instance, methodName, propertiesToInclude);\n      //Undo the damage we did by changing all of its properties\n      this._unwindGroupTransformOnObject(instance, originalProperties);\n      return object;\n    },\n\n    /**\n     * Realises an object's group transformation on it\n     * @private\n     * @param {fabric.Object} [instance] the object to transform (gets mutated)\n     * @returns the original values of instance which were changed\n     */\n    _realizeGroupTransformOnObject: function(instance) {\n      if (instance.group && instance.group.type === 'activeSelection' && this._activeObject === instance.group) {\n        var layoutProps = ['angle', 'flipX', 'flipY', 'left', 'scaleX', 'scaleY', 'skewX', 'skewY', 'top'];\n        //Copy all the positionally relevant properties across now\n        var originalValues = {};\n        layoutProps.forEach(function(prop) {\n          originalValues[prop] = instance[prop];\n        });\n        this._activeObject.realizeTransform(instance);\n        return originalValues;\n      }\n      else {\n        return null;\n      }\n    },\n\n    /**\n     * Restores the changed properties of instance\n     * @private\n     * @param {fabric.Object} [instance] the object to un-transform (gets mutated)\n     * @param {Object} [originalValues] the original values of instance, as returned by _realizeGroupTransformOnObject\n     */\n    _unwindGroupTransformOnObject: function(instance, originalValues) {\n      if (originalValues) {\n        instance.set(originalValues);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObject: function(markup, instance, reviver) {\n      //If the object is in a selection group, simulate what would happen to that\n      //object when the group is deselected\n      var originalProperties = this._realizeGroupTransformOnObject(instance);\n      this.callSuper('_setSVGObject', markup, instance, reviver);\n      this._unwindGroupTransformOnObject(instance, originalProperties);\n    },\n  });\n\n  // copying static properties manually to work around Opera's bug,\n  // where \"prototype\" property is enumerable and overrides existing prototype\n  for (var prop in fabric.StaticCanvas) {\n    if (prop !== 'prototype') {\n      fabric.Canvas[prop] = fabric.StaticCanvas[prop];\n    }\n  }\n\n  if (fabric.isTouchSupported) {\n    /** @ignore */\n    fabric.Canvas.prototype._setCursorFromEvent = function() { };\n  }\n})();\n\n\n(function() {\n\n  var cursorOffset = {\n        mt: 0, // n\n        tr: 1, // ne\n        mr: 2, // e\n        br: 3, // se\n        mb: 4, // s\n        bl: 5, // sw\n        ml: 6, // w\n        tl: 7 // nw\n      },\n      addListener = fabric.util.addListener,\n      removeListener = fabric.util.removeListener,\n      RIGHT_CLICK = 3, MIDDLE_CLICK = 2, LEFT_CLICK = 1;\n\n  function checkClick(e, value) {\n    return 'which' in e ? e.which === value : e.button === value - 1;\n  }\n\n  fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * Map of cursor style values for each of the object controls\n     * @private\n     */\n    cursorMap: [\n      'n-resize',\n      'ne-resize',\n      'e-resize',\n      'se-resize',\n      's-resize',\n      'sw-resize',\n      'w-resize',\n      'nw-resize'\n    ],\n\n    /**\n     * Adds mouse listeners to canvas\n     * @private\n     */\n    _initEventListeners: function () {\n      // in case we initialized the class twice. This should not happen normally\n      // but in some kind of applications where the canvas element may be changed\n      // this is a workaround to having double listeners.\n      this.removeListeners();\n      this._bindEvents();\n\n      addListener(fabric.window, 'resize', this._onResize);\n\n      // mouse events\n      addListener(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n      addListener(this.upperCanvasEl, 'dblclick', this._onDoubleClick);\n      addListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n      addListener(this.upperCanvasEl, 'mouseout', this._onMouseOut);\n      addListener(this.upperCanvasEl, 'mouseenter', this._onMouseEnter);\n      addListener(this.upperCanvasEl, 'wheel', this._onMouseWheel);\n      addListener(this.upperCanvasEl, 'contextmenu', this._onContextMenu);\n\n      // touch events\n      addListener(this.upperCanvasEl, 'touchstart', this._onMouseDown, { passive: false });\n      addListener(this.upperCanvasEl, 'touchmove', this._onMouseMove, { passive: false });\n\n      if (typeof eventjs !== 'undefined' && 'add' in eventjs) {\n        eventjs.add(this.upperCanvasEl, 'gesture', this._onGesture);\n        eventjs.add(this.upperCanvasEl, 'drag', this._onDrag);\n        eventjs.add(this.upperCanvasEl, 'orientation', this._onOrientationChange);\n        eventjs.add(this.upperCanvasEl, 'shake', this._onShake);\n        eventjs.add(this.upperCanvasEl, 'longpress', this._onLongPress);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _bindEvents: function() {\n      if (this.eventsBinded) {\n        // for any reason we pass here twice we do not want to bind events twice.\n        return;\n      }\n      this._onMouseDown = this._onMouseDown.bind(this);\n      this._onMouseMove = this._onMouseMove.bind(this);\n      this._onMouseUp = this._onMouseUp.bind(this);\n      this._onResize = this._onResize.bind(this);\n      this._onGesture = this._onGesture.bind(this);\n      this._onDrag = this._onDrag.bind(this);\n      this._onShake = this._onShake.bind(this);\n      this._onLongPress = this._onLongPress.bind(this);\n      this._onOrientationChange = this._onOrientationChange.bind(this);\n      this._onMouseWheel = this._onMouseWheel.bind(this);\n      this._onMouseOut = this._onMouseOut.bind(this);\n      this._onMouseEnter = this._onMouseEnter.bind(this);\n      this._onContextMenu = this._onContextMenu.bind(this);\n      this._onDoubleClick = this._onDoubleClick.bind(this);\n      this.eventsBinded = true;\n    },\n\n    /**\n     * Removes all event listeners\n     */\n    removeListeners: function() {\n      removeListener(fabric.window, 'resize', this._onResize);\n\n      removeListener(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n      removeListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n      removeListener(this.upperCanvasEl, 'mouseout', this._onMouseOut);\n      removeListener(this.upperCanvasEl, 'mouseenter', this._onMouseEnter);\n      removeListener(this.upperCanvasEl, 'wheel', this._onMouseWheel);\n      removeListener(this.upperCanvasEl, 'contextmenu', this._onContextMenu);\n      removeListener(this.upperCanvasEl, 'doubleclick', this._onDoubleClick);\n      removeListener(this.upperCanvasEl, 'touchstart', this._onMouseDown);\n      removeListener(this.upperCanvasEl, 'touchmove', this._onMouseMove);\n\n      if (typeof eventjs !== 'undefined' && 'remove' in eventjs) {\n        eventjs.remove(this.upperCanvasEl, 'gesture', this._onGesture);\n        eventjs.remove(this.upperCanvasEl, 'drag', this._onDrag);\n        eventjs.remove(this.upperCanvasEl, 'orientation', this._onOrientationChange);\n        eventjs.remove(this.upperCanvasEl, 'shake', this._onShake);\n        eventjs.remove(this.upperCanvasEl, 'longpress', this._onLongPress);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js gesture\n     * @param {Event} [self] Inner Event object\n     */\n    _onGesture: function(e, self) {\n      this.__onTransformGesture && this.__onTransformGesture(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js drag\n     * @param {Event} [self] Inner Event object\n     */\n    _onDrag: function(e, self) {\n      this.__onDrag && this.__onDrag(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on wheel event\n     */\n    _onMouseWheel: function(e) {\n      this.__onMouseWheel(e);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseOut: function(e) {\n      var target = this._hoveredTarget;\n      this.fire('mouse:out', { target: target, e: e });\n      this._hoveredTarget = null;\n      target && target.fire('mouseout', { e: e });\n      if (this._iTextInstances) {\n        this._iTextInstances.forEach(function(obj) {\n          if (obj.isEditing) {\n            obj.hiddenTextarea.focus();\n          }\n        });\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseenter\n     */\n    _onMouseEnter: function(e) {\n      if (!this.findTarget(e)) {\n        this.fire('mouse:over', { target: null, e: e });\n        this._hoveredTarget = null;\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js orientation change\n     * @param {Event} [self] Inner Event object\n     */\n    _onOrientationChange: function(e, self) {\n      this.__onOrientationChange && this.__onOrientationChange(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     * @param {Event} [self] Inner Event object\n     */\n    _onShake: function(e, self) {\n      this.__onShake && this.__onShake(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     * @param {Event} [self] Inner Event object\n     */\n    _onLongPress: function(e, self) {\n      this.__onLongPress && this.__onLongPress(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onContextMenu: function (e) {\n      if (this.stopContextMenu) {\n        e.stopPropagation();\n        e.preventDefault();\n      }\n      return false;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onDoubleClick: function (e) {\n      this._handleEvent(e, 'dblclick');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseDown: function (e) {\n      this.__onMouseDown(e);\n      addListener(fabric.document, 'touchend', this._onMouseUp, { passive: false });\n      addListener(fabric.document, 'touchmove', this._onMouseMove, { passive: false });\n\n      removeListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n      removeListener(this.upperCanvasEl, 'touchmove', this._onMouseMove);\n\n      if (e.type === 'touchstart') {\n        // Unbind mousedown to prevent double triggers from touch devices\n        removeListener(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n      }\n      else {\n        addListener(fabric.document, 'mouseup', this._onMouseUp);\n        addListener(fabric.document, 'mousemove', this._onMouseMove);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    _onMouseUp: function (e) {\n      this.__onMouseUp(e);\n\n      removeListener(fabric.document, 'mouseup', this._onMouseUp);\n      removeListener(fabric.document, 'touchend', this._onMouseUp);\n\n      removeListener(fabric.document, 'mousemove', this._onMouseMove);\n      removeListener(fabric.document, 'touchmove', this._onMouseMove);\n\n      addListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n      addListener(this.upperCanvasEl, 'touchmove', this._onMouseMove, { passive: false });\n\n      if (e.type === 'touchend') {\n        // Wait 400ms before rebinding mousedown to prevent double triggers\n        // from touch devices\n        var _this = this;\n        setTimeout(function() {\n          addListener(_this.upperCanvasEl, 'mousedown', _this._onMouseDown);\n        }, 400);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    _onMouseMove: function (e) {\n      !this.allowTouchScrolling && e.preventDefault && e.preventDefault();\n      this.__onMouseMove(e);\n    },\n\n    /**\n     * @private\n     */\n    _onResize: function () {\n      this.calcOffset();\n    },\n\n    /**\n     * Decides whether the canvas should be redrawn in mouseup and mousedown events.\n     * @private\n     * @param {Object} target\n     * @param {Object} pointer\n     */\n    _shouldRender: function(target, pointer) {\n      var activeObject = this._activeObject;\n\n      if (activeObject && activeObject.isEditing && target === activeObject) {\n        // if we mouse up/down over a editing textbox a cursor change,\n        // there is no need to re render\n        return false;\n      }\n      return !!(\n        (target && (\n          target.isMoving ||\n          target !== activeObject))\n        ||\n        (!target && !!activeObject)\n        ||\n        (!target && !activeObject && !this._groupSelector)\n        ||\n        (pointer &&\n          this._previousPointer &&\n          this.selection && (\n            pointer.x !== this._previousPointer.x ||\n          pointer.y !== this._previousPointer.y))\n      );\n    },\n\n    /**\n     * Method that defines the actions when mouse is released on canvas.\n     * The method resets the currentTransform parameters, store the image corner\n     * position in the image object and render the canvas on top.\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    __onMouseUp: function (e) {\n\n      var target, searchTarget = true, transform = this._currentTransform,\n          groupSelector = this._groupSelector,\n          isClick = (!groupSelector || (groupSelector.left === 0 && groupSelector.top === 0));\n      // if right/middle click just fire events and return\n      // target undefined will make the _handleEvent search the target\n      if (checkClick(e, RIGHT_CLICK)) {\n        if (this.fireRightClick) {\n          this._handleEvent(e, 'up', target, RIGHT_CLICK, isClick);\n        }\n        return;\n      }\n\n      if (checkClick(e, MIDDLE_CLICK)) {\n        if (this.fireMiddleClick) {\n          this._handleEvent(e, 'up', target, MIDDLE_CLICK, isClick);\n        }\n        return;\n      }\n\n      if (this.isDrawingMode && this._isCurrentlyDrawing) {\n        this._onMouseUpInDrawingMode(e);\n        return;\n      }\n\n      if (transform) {\n        this._finalizeCurrentTransform(e);\n        searchTarget = !transform.actionPerformed;\n      }\n\n      target = searchTarget ? this.findTarget(e, true) : transform.target;\n\n      var shouldRender = this._shouldRender(target, this.getPointer(e));\n\n      if (target || !isClick) {\n        this._maybeGroupObjects(e);\n      }\n      else {\n        // those are done by default on mouse up\n        // by _maybeGroupObjects, we are skipping it in case of no target find\n        this._groupSelector = null;\n        this._currentTransform = null;\n      }\n\n      if (target) {\n        target.isMoving = false;\n      }\n      this._setCursorFromEvent(e, target);\n      this._handleEvent(e, 'up', target ? target : null, LEFT_CLICK, isClick);\n      target && (target.__corner = 0);\n      shouldRender && this.requestRenderAll();\n    },\n\n    /**\n     * @private\n     * Handle event firing for target and subtargets\n     * @param {Event} e event from mouse\n     * @param {String} eventType event to fire (up, down or move)\n     * @param {fabric.Object} targetObj receiving event\n     * @param {Number} [button] button used in the event 1 = left, 2 = middle, 3 = right\n     * @param {Boolean} isClick for left button only, indicates that the mouse up happened without move.\n     */\n    _handleEvent: function(e, eventType, targetObj, button, isClick) {\n      var target = typeof targetObj === 'undefined' ? this.findTarget(e) : targetObj,\n          targets = this.targets || [],\n          options = {\n            e: e,\n            target: target,\n            subTargets: targets,\n            button: button || LEFT_CLICK,\n            isClick: isClick || false\n          };\n      this.fire('mouse:' + eventType, options);\n      target && target.fire('mouse' + eventType, options);\n      for (var i = 0; i < targets.length; i++) {\n        targets[i].fire('mouse' + eventType, options);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e send the mouse event that generate the finalize down, so it can be used in the event\n     */\n    _finalizeCurrentTransform: function(e) {\n\n      var transform = this._currentTransform,\n          target = transform.target;\n\n      if (target._scaling) {\n        target._scaling = false;\n      }\n\n      target.setCoords();\n      this._restoreOriginXY(target);\n\n      if (transform.actionPerformed || (this.stateful && target.hasStateChanged())) {\n        this.fire('object:modified', { target: target, e: e });\n        target.fire('modified', { e: e });\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} target Object to restore\n     */\n    _restoreOriginXY: function(target) {\n      if (this._previousOriginX && this._previousOriginY) {\n\n        var originPoint = target.translateToOriginPoint(\n          target.getCenterPoint(),\n          this._previousOriginX,\n          this._previousOriginY);\n\n        target.originX = this._previousOriginX;\n        target.originY = this._previousOriginY;\n\n        target.left = originPoint.x;\n        target.top = originPoint.y;\n\n        this._previousOriginX = null;\n        this._previousOriginY = null;\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseDownInDrawingMode: function(e) {\n      this._isCurrentlyDrawing = true;\n      if (this.getActiveObject()) {\n        this.discardActiveObject(e).requestRenderAll();\n      }\n      if (this.clipTo) {\n        fabric.util.clipContext(this, this.contextTop);\n      }\n      var pointer = this.getPointer(e);\n      this.freeDrawingBrush.onMouseDown(pointer);\n      this._handleEvent(e, 'down');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    _onMouseMoveInDrawingMode: function(e) {\n      if (this._isCurrentlyDrawing) {\n        var pointer = this.getPointer(e);\n        this.freeDrawingBrush.onMouseMove(pointer);\n      }\n      this.setCursor(this.freeDrawingCursor);\n      this._handleEvent(e, 'move');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    _onMouseUpInDrawingMode: function(e) {\n      this._isCurrentlyDrawing = false;\n      if (this.clipTo) {\n        this.contextTop.restore();\n      }\n      this.freeDrawingBrush.onMouseUp();\n      this._handleEvent(e, 'up');\n    },\n\n    /**\n     * Method that defines the actions when mouse is clicked on canvas.\n     * The method inits the currentTransform parameters and renders all the\n     * canvas so the current image can be placed on the top canvas and the rest\n     * in on the container one.\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    __onMouseDown: function (e) {\n\n      var target = this.findTarget(e) || null;\n\n      // if right click just fire events\n      if (checkClick(e, RIGHT_CLICK)) {\n        if (this.fireRightClick) {\n          this._handleEvent(e, 'down', target, RIGHT_CLICK);\n        }\n        return;\n      }\n\n      if (checkClick(e, MIDDLE_CLICK)) {\n        if (this.fireMiddleClick) {\n          this._handleEvent(e, 'down', target, MIDDLE_CLICK);\n        }\n        return;\n      }\n\n      if (this.isDrawingMode) {\n        this._onMouseDownInDrawingMode(e);\n        return;\n      }\n\n      // ignore if some object is being transformed at this moment\n      if (this._currentTransform) {\n        return;\n      }\n\n      // save pointer for check in __onMouseUp event\n      var pointer = this.getPointer(e, true);\n      this._previousPointer = pointer;\n      var shouldRender = this._shouldRender(target, pointer),\n          shouldGroup = this._shouldGroup(e, target);\n      if (this._shouldClearSelection(e, target)) {\n        this.discardActiveObject(e);\n      }\n      else if (shouldGroup) {\n        this._handleGrouping(e, target);\n        target = this._activeObject;\n      }\n\n      if (this.selection && (!target ||\n        (!target.selectable && !target.isEditing && target !== this._activeObject))) {\n        this._groupSelector = {\n          ex: pointer.x,\n          ey: pointer.y,\n          top: 0,\n          left: 0\n        };\n      }\n\n      if (target) {\n        if (target.selectable) {\n          this.setActiveObject(target, e);\n        }\n        if (target === this._activeObject && (target.__corner || !shouldGroup)) {\n          this._beforeTransform(e, target);\n          this._setupCurrentTransform(e, target);\n        }\n      }\n      this._handleEvent(e, 'down', target);\n      // we must renderAll so that we update the visuals\n      shouldRender && this.requestRenderAll();\n    },\n\n    /**\n     * @private\n     */\n    _beforeTransform: function(e, target) {\n      this.stateful && target.saveState();\n\n      // determine if it's a drag or rotate case\n      if (target._findTargetCorner(this.getPointer(e))) {\n        this.onBeforeScaleRotate(target);\n      }\n\n    },\n\n    /**\n     * @private\n     * @param {Object} target Object for that origin is set to center\n     */\n    _setOriginToCenter: function(target) {\n      this._previousOriginX = this._currentTransform.target.originX;\n      this._previousOriginY = this._currentTransform.target.originY;\n\n      var center = target.getCenterPoint();\n\n      target.originX = 'center';\n      target.originY = 'center';\n\n      target.left = center.x;\n      target.top = center.y;\n\n      this._currentTransform.left = target.left;\n      this._currentTransform.top = target.top;\n    },\n\n    /**\n     * @private\n     * @param {Object} target Object for that center is set to origin\n     */\n    _setCenterToOrigin: function(target) {\n      var originPoint = target.translateToOriginPoint(\n        target.getCenterPoint(),\n        this._previousOriginX,\n        this._previousOriginY);\n\n      target.originX = this._previousOriginX;\n      target.originY = this._previousOriginY;\n\n      target.left = originPoint.x;\n      target.top = originPoint.y;\n\n      this._previousOriginX = null;\n      this._previousOriginY = null;\n    },\n\n    /**\n     * Method that defines the actions when mouse is hovering the canvas.\n     * The currentTransform parameter will definde whether the user is rotating/scaling/translating\n     * an image or neither of them (only hovering). A group selection is also possible and would cancel\n     * all any other type of action.\n     * In case of an image transformation only the top canvas will be rendered.\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    __onMouseMove: function (e) {\n\n      var target, pointer;\n\n      if (this.isDrawingMode) {\n        this._onMouseMoveInDrawingMode(e);\n        return;\n      }\n      if (typeof e.touches !== 'undefined' && e.touches.length > 1) {\n        return;\n      }\n\n      var groupSelector = this._groupSelector;\n\n      // We initially clicked in an empty area, so we draw a box for multiple selection\n      if (groupSelector) {\n        pointer = this.getPointer(e, true);\n\n        groupSelector.left = pointer.x - groupSelector.ex;\n        groupSelector.top = pointer.y - groupSelector.ey;\n\n        this.renderTop();\n      }\n      else if (!this._currentTransform) {\n        target = this.findTarget(e) || null;\n        this._setCursorFromEvent(e, target);\n        this._fireOverOutEvents(target, e);\n      }\n      else {\n        this._transformObject(e);\n      }\n      this._handleEvent(e, 'move', this._currentTransform ? null : target);\n    },\n\n    /**\n     * @private\n     */\n    _fireOverOutEvents: function(target, e) {\n      var overOpt, outOpt, hoveredTarget = this._hoveredTarget;\n      if (hoveredTarget !== target) {\n        overOpt = { e: e, target: target, previousTarget: this._hoveredTarget };\n        outOpt = { e: e, target: this._hoveredTarget, nextTarget: target };\n        this._hoveredTarget = target;\n      }\n      if (target) {\n        if (hoveredTarget !== target) {\n          if (hoveredTarget) {\n            this.fire('mouse:out', outOpt);\n            hoveredTarget.fire('mouseout', outOpt);\n          }\n          this.fire('mouse:over', overOpt);\n          target.fire('mouseover', overOpt);\n        }\n      }\n      else if (hoveredTarget) {\n        this.fire('mouse:out', outOpt);\n        hoveredTarget.fire('mouseout', outOpt);\n      }\n    },\n\n    /**\n     * Method that defines actions when an Event Mouse Wheel\n     * @param {Event} e Event object fired on mouseup\n     */\n    __onMouseWheel: function(e) {\n      this._handleEvent(e, 'wheel');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event fired on mousemove\n     */\n    _transformObject: function(e) {\n      var pointer = this.getPointer(e),\n          transform = this._currentTransform;\n\n      transform.reset = false;\n      transform.target.isMoving = true;\n      transform.shiftKey = e.shiftKey;\n      transform.altKey = e[this.centeredKey];\n\n      this._beforeScaleTransform(e, transform);\n      this._performTransformAction(e, transform, pointer);\n\n      transform.actionPerformed && this.requestRenderAll();\n    },\n\n    /**\n     * @private\n     */\n    _performTransformAction: function(e, transform, pointer) {\n      var x = pointer.x,\n          y = pointer.y,\n          target = transform.target,\n          action = transform.action,\n          actionPerformed = false;\n\n      if (action === 'rotate') {\n        (actionPerformed = this._rotateObject(x, y)) && this._fire('rotating', target, e);\n      }\n      else if (action === 'scale') {\n        (actionPerformed = this._onScale(e, transform, x, y)) && this._fire('scaling', target, e);\n      }\n      else if (action === 'scaleX') {\n        (actionPerformed = this._scaleObject(x, y, 'x')) && this._fire('scaling', target, e);\n      }\n      else if (action === 'scaleY') {\n        (actionPerformed = this._scaleObject(x, y, 'y')) && this._fire('scaling', target, e);\n      }\n      else if (action === 'skewX') {\n        (actionPerformed = this._skewObject(x, y, 'x')) && this._fire('skewing', target, e);\n      }\n      else if (action === 'skewY') {\n        (actionPerformed = this._skewObject(x, y, 'y')) && this._fire('skewing', target, e);\n      }\n      else {\n        actionPerformed = this._translateObject(x, y);\n        if (actionPerformed) {\n          this._fire('moving', target, e);\n          this.setCursor(target.moveCursor || this.moveCursor);\n        }\n      }\n      transform.actionPerformed = transform.actionPerformed || actionPerformed;\n    },\n\n    /**\n     * @private\n     */\n    _fire: function(eventName, target, e) {\n      this.fire('object:' + eventName, { target: target, e: e });\n      target.fire(eventName, { e: e });\n    },\n\n    /**\n     * @private\n     */\n    _beforeScaleTransform: function(e, transform) {\n      if (transform.action === 'scale' || transform.action === 'scaleX' || transform.action === 'scaleY') {\n        var centerTransform = this._shouldCenterTransform(transform.target);\n\n        // Switch from a normal resize to center-based\n        if ((centerTransform && (transform.originX !== 'center' || transform.originY !== 'center')) ||\n           // Switch from center-based resize to normal one\n           (!centerTransform && transform.originX === 'center' && transform.originY === 'center')\n        ) {\n          this._resetCurrentTransform();\n          transform.reset = true;\n        }\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {Object} transform current tranform\n     * @param {Number} x mouse position x from origin\n     * @param {Number} y mouse poistion y from origin\n     * @return {Boolean} true if the scaling occurred\n     */\n    _onScale: function(e, transform, x, y) {\n      if (this._isUniscalePossible(e, transform.target)) {\n        transform.currentAction = 'scale';\n        return this._scaleObject(x, y);\n      }\n      else {\n        // Switch from a normal resize to proportional\n        if (!transform.reset && transform.currentAction === 'scale') {\n          this._resetCurrentTransform();\n        }\n\n        transform.currentAction = 'scaleEqually';\n        return this._scaleObject(x, y, 'equally');\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target current target\n     * @return {Boolean} true if unproportional scaling is possible\n     */\n    _isUniscalePossible: function(e, target) {\n      return (e[this.uniScaleKey] || this.uniScaleTransform) && !target.get('lockUniScaling');\n    },\n\n    /**\n     * Sets the cursor depending on where the canvas is being hovered.\n     * Note: very buggy in Opera\n     * @param {Event} e Event object\n     * @param {Object} target Object that the mouse is hovering, if so.\n     */\n    _setCursorFromEvent: function (e, target) {\n      if (!target) {\n        this.setCursor(this.defaultCursor);\n        return false;\n      }\n\n      var hoverCursor = target.hoverCursor || this.hoverCursor,\n          activeSelection = this._activeObject && this._activeObject.type === 'activeSelection' ?\n            this._activeObject : null,\n          // only show proper corner when group selection is not active\n          corner = (!activeSelection || !activeSelection.contains(target))\n                    && target._findTargetCorner(this.getPointer(e, true));\n\n      if (!corner) {\n        this.setCursor(hoverCursor);\n      }\n      else {\n        this.setCursor(this.getCornerCursor(corner, target, e));\n      }\n    },\n\n    /**\n     * @private\n     */\n    getCornerCursor: function(corner, target, e) {\n      if (this.actionIsDisabled(corner, target, e)) {\n        return this.notAllowedCursor;\n      }\n      else if (corner in cursorOffset) {\n        return this._getRotatedCornerCursor(corner, target, e);\n      }\n      else if (corner === 'mtr' && target.hasRotatingPoint) {\n        return this.rotationCursor;\n      }\n      else {\n        return this.defaultCursor;\n      }\n    },\n\n    actionIsDisabled: function(corner, target, e) {\n      if (corner === 'mt' || corner === 'mb') {\n        return e[this.altActionKey] ? target.lockSkewingX : target.lockScalingY;\n      }\n      else if (corner === 'ml' || corner === 'mr') {\n        return e[this.altActionKey] ? target.lockSkewingY : target.lockScalingX;\n      }\n      else if (corner === 'mtr') {\n        return target.lockRotation;\n      }\n      else {\n        return this._isUniscalePossible(e, target) ?\n          target.lockScalingX && target.lockScalingY : target.lockScalingX || target.lockScalingY;\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getRotatedCornerCursor: function(corner, target, e) {\n      var n = Math.round((target.angle % 360) / 45);\n\n      if (n < 0) {\n        n += 8; // full circle ahead\n      }\n      n += cursorOffset[corner];\n      if (e[this.altActionKey] && cursorOffset[corner] % 2 === 0) {\n        //if we are holding shift and we are on a mx corner...\n        n += 2;\n      }\n      // normalize n to be from 0 to 7\n      n %= 8;\n\n      return this.cursorMap[n];\n    }\n  });\n})();\n\n\n(function() {\n\n  var min = Math.min,\n      max = Math.max;\n\n  fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     * @return {Boolean}\n     */\n    _shouldGroup: function(e, target) {\n      var activeObject = this._activeObject;\n\n      return activeObject && this._isSelectionKeyPressed(e) && target && target.selectable && this.selection &&\n            (activeObject !== target || activeObject.type === 'activeSelection');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _handleGrouping: function (e, target) {\n      var activeObject = this._activeObject;\n      if (activeObject.__corner) {\n        return;\n      }\n      if (target === activeObject) {\n        // if it's a group, find target again, using activeGroup objects\n        target = this.findTarget(e, true);\n        // if even object is not found or we are on activeObjectCorner, bail out\n        if (!target) {\n          return;\n        }\n      }\n      if (activeObject && activeObject.type === 'activeSelection') {\n        this._updateActiveSelection(target, e);\n      }\n      else {\n        this._createActiveSelection(target, e);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateActiveSelection: function(target, e) {\n      var activeSelection = this._activeObject,\n          currentActiveObjects = activeSelection._objects.slice(0);\n      if (activeSelection.contains(target)) {\n        activeSelection.removeWithUpdate(target);\n        this._hoveredTarget = target;\n        if (activeSelection.size() === 1) {\n          // activate last remaining object\n          this._setActiveObject(activeSelection.item(0), e);\n        }\n      }\n      else {\n        activeSelection.addWithUpdate(target);\n        this._hoveredTarget = activeSelection;\n      }\n      this._fireSelectionEvents(currentActiveObjects, e);\n    },\n\n    /**\n     * @private\n     */\n    _createActiveSelection: function(target, e) {\n      var currentActives = this.getActiveObjects(), group = this._createGroup(target);\n      this._hoveredTarget = group;\n      this._setActiveObject(group, e);\n      this._fireSelectionEvents(currentActives, e);\n    },\n\n    /**\n     * @private\n     * @param {Object} target\n     */\n    _createGroup: function(target) {\n      var objects = this.getObjects(),\n          isActiveLower = objects.indexOf(this._activeObject) < objects.indexOf(target),\n          groupObjects = isActiveLower\n            ? [this._activeObject, target]\n            : [target, this._activeObject];\n      this._activeObject.isEditing && this._activeObject.exitEditing();\n      return new fabric.ActiveSelection(groupObjects, {\n        canvas: this\n      });\n    },\n\n    /**\n     * @private\n     * @param {Event} e mouse event\n     */\n    _groupSelectedObjects: function (e) {\n\n      var group = this._collectObjects(),\n          aGroup;\n\n      // do not create group for 1 element only\n      if (group.length === 1) {\n        this.setActiveObject(group[0], e);\n      }\n      else if (group.length > 1) {\n        aGroup = new fabric.ActiveSelection(group.reverse(), {\n          canvas: this\n        });\n        this.setActiveObject(aGroup, e);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _collectObjects: function() {\n      var group = [],\n          currentObject,\n          x1 = this._groupSelector.ex,\n          y1 = this._groupSelector.ey,\n          x2 = x1 + this._groupSelector.left,\n          y2 = y1 + this._groupSelector.top,\n          selectionX1Y1 = new fabric.Point(min(x1, x2), min(y1, y2)),\n          selectionX2Y2 = new fabric.Point(max(x1, x2), max(y1, y2)),\n          allowIntersect = !this.selectionFullyContained,\n          isClick = x1 === x2 && y1 === y2;\n      // we iterate reverse order to collect top first in case of click.\n      for (var i = this._objects.length; i--; ) {\n        currentObject = this._objects[i];\n\n        if (!currentObject || !currentObject.selectable || !currentObject.visible) {\n          continue;\n        }\n\n        if ((allowIntersect && currentObject.intersectsWithRect(selectionX1Y1, selectionX2Y2)) ||\n            currentObject.isContainedWithinRect(selectionX1Y1, selectionX2Y2) ||\n            (allowIntersect && currentObject.containsPoint(selectionX1Y1)) ||\n            (allowIntersect && currentObject.containsPoint(selectionX2Y2))\n        ) {\n          group.push(currentObject);\n\n          // only add one object if it's a click\n          if (isClick) {\n            break;\n          }\n        }\n      }\n\n      return group;\n    },\n\n    /**\n     * @private\n     */\n    _maybeGroupObjects: function(e) {\n      if (this.selection && this._groupSelector) {\n        this._groupSelectedObjects(e);\n      }\n      this.setCursor(this.defaultCursor);\n      // clear selection and current transformation\n      this._groupSelector = null;\n      this._currentTransform = null;\n    }\n  });\n\n})();\n\n\n(function () {\n\n  var supportQuality = fabric.StaticCanvas.supports('toDataURLWithQuality');\n\n  fabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n    /**\n     * Exports canvas element to a dataurl image. Note that when multiplier is used, cropping is scaled appropriately\n     * @param {Object} [options] Options object\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n     * @param {Number} [options.multiplier=1] Multiplier to scale by, to have consistent\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 2.0.0\n     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n     * @see {@link http://jsfiddle.net/fabricjs/NfZVb/|jsFiddle demo}\n     * @example <caption>Generate jpeg dataURL with lower quality</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'jpeg',\n     *   quality: 0.8\n     * });\n     * @example <caption>Generate cropped png dataURL (clipping of canvas)</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'png',\n     *   left: 100,\n     *   top: 100,\n     *   width: 200,\n     *   height: 200\n     * });\n     * @example <caption>Generate double scaled png dataURL</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'png',\n     *   multiplier: 2\n     * });\n     */\n    toDataURL: function (options) {\n      options || (options = { });\n\n      var format = options.format || 'png',\n          quality = options.quality || 1,\n          multiplier = (options.multiplier || 1) * (options.enableRetinaScaling ? 1 : 1 / this.getRetinaScaling()),\n          cropping = {\n            left: options.left || 0,\n            top: options.top || 0,\n            width: options.width || 0,\n            height: options.height || 0,\n          };\n      return this.__toDataURLWithMultiplier(format, quality, cropping, multiplier);\n    },\n\n    /**\n     * @private\n     */\n    __toDataURLWithMultiplier: function(format, quality, cropping, multiplier) {\n\n      var origWidth = this.width,\n          origHeight = this.height,\n          scaledWidth = (cropping.width || this.width) * multiplier,\n          scaledHeight = (cropping.height || this.height) * multiplier,\n          zoom = this.getZoom(),\n          newZoom = zoom * multiplier,\n          vp = this.viewportTransform,\n          translateX = (vp[4] - cropping.left) * multiplier,\n          translateY = (vp[5] - cropping.top) * multiplier,\n          newVp = [newZoom, 0, 0, newZoom, translateX, translateY],\n          originalInteractive = this.interactive,\n          originalSkipOffScreen = this.skipOffscreen,\n          needsResize = origWidth !== scaledWidth || origHeight !== scaledHeight;\n\n      this.viewportTransform = newVp;\n      this.skipOffscreen = false;\n      // setting interactive to false avoid exporting controls\n      this.interactive = false;\n      if (needsResize) {\n        this.setDimensions({ width: scaledWidth, height: scaledHeight }, { backstoreOnly: true });\n      }\n      // call a renderAll to force sync update. This will cancel the scheduled requestRenderAll\n      // from setDimensions\n      this.renderAll();\n      var data = this.__toDataURL(format, quality, cropping);\n      this.interactive = originalInteractive;\n      this.skipOffscreen = originalSkipOffScreen;\n      this.viewportTransform = vp;\n      //setDimensions with no option object is taking care of:\n      //this.width, this.height, this.requestRenderAll()\n      if (needsResize) {\n        this.setDimensions({ width: origWidth, height: origHeight }, { backstoreOnly: true });\n      }\n      this.renderAll();\n      return data;\n    },\n\n    /**\n     * @private\n     */\n    __toDataURL: function(format, quality) {\n\n      var canvasEl = this.contextContainer.canvas;\n      // to avoid common confusion https://github.com/kangax/fabric.js/issues/806\n      if (format === 'jpg') {\n        format = 'jpeg';\n      }\n\n      var data = supportQuality\n        ? canvasEl.toDataURL('image/' + format, quality)\n        : canvasEl.toDataURL('image/' + format);\n\n      return data;\n    },\n  });\n\n})();\n\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Populates canvas with data from the specified dataless JSON.\n   * JSON format must conform to the one of {@link fabric.Canvas#toDatalessJSON}\n   * @deprecated since 1.2.2\n   * @param {String|Object} json JSON string or object\n   * @param {Function} callback Callback, invoked when json is parsed\n   *                            and corresponding objects (e.g: {@link fabric.Image})\n   *                            are initialized\n   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n   * @return {fabric.Canvas} instance\n   * @chainable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n   */\n  loadFromDatalessJSON: function (json, callback, reviver) {\n    return this.loadFromJSON(json, callback, reviver);\n  },\n\n  /**\n   * Populates canvas with data from the specified JSON.\n   * JSON format must conform to the one of {@link fabric.Canvas#toJSON}\n   * @param {String|Object} json JSON string or object\n   * @param {Function} callback Callback, invoked when json is parsed\n   *                            and corresponding objects (e.g: {@link fabric.Image})\n   *                            are initialized\n   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n   * @return {fabric.Canvas} instance\n   * @chainable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n   * @see {@link http://jsfiddle.net/fabricjs/fmgXt/|jsFiddle demo}\n   * @example <caption>loadFromJSON</caption>\n   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas));\n   * @example <caption>loadFromJSON with reviver</caption>\n   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas), function(o, object) {\n   *   // `o` = json object\n   *   // `object` = fabric.Object instance\n   *   // ... do some stuff ...\n   * });\n   */\n  loadFromJSON: function (json, callback, reviver) {\n    if (!json) {\n      return;\n    }\n\n    // serialize if it wasn't already\n    var serialized = (typeof json === 'string')\n      ? JSON.parse(json)\n      : fabric.util.object.clone(json);\n\n    var _this = this,\n        renderOnAddRemove = this.renderOnAddRemove;\n    this.renderOnAddRemove = false;\n\n    this._enlivenObjects(serialized.objects, function (enlivenedObjects) {\n      _this.clear();\n      _this._setBgOverlay(serialized, function () {\n        enlivenedObjects.forEach(function(obj, index) {\n          // we splice the array just in case some custom classes restored from JSON\n          // will add more object to canvas at canvas init.\n          _this.insertAt(obj, index);\n        });\n        _this.renderOnAddRemove = renderOnAddRemove;\n        // remove parts i cannot set as options\n        delete serialized.objects;\n        delete serialized.backgroundImage;\n        delete serialized.overlayImage;\n        delete serialized.background;\n        delete serialized.overlay;\n        // this._initOptions does too many things to just\n        // call it. Normally loading an Object from JSON\n        // create the Object instance. Here the Canvas is\n        // already an instance and we are just loading things over it\n        _this._setOptions(serialized);\n        _this.renderAll();\n        callback && callback();\n      });\n    }, reviver);\n    return this;\n  },\n\n  /**\n   * @private\n   * @param {Object} serialized Object with background and overlay information\n   * @param {Function} callback Invoked after all background and overlay images/patterns loaded\n   */\n  _setBgOverlay: function(serialized, callback) {\n    var loaded = {\n      backgroundColor: false,\n      overlayColor: false,\n      backgroundImage: false,\n      overlayImage: false\n    };\n\n    if (!serialized.backgroundImage && !serialized.overlayImage && !serialized.background && !serialized.overlay) {\n      callback && callback();\n      return;\n    }\n\n    var cbIfLoaded = function () {\n      if (loaded.backgroundImage && loaded.overlayImage && loaded.backgroundColor && loaded.overlayColor) {\n        callback && callback();\n      }\n    };\n\n    this.__setBgOverlay('backgroundImage', serialized.backgroundImage, loaded, cbIfLoaded);\n    this.__setBgOverlay('overlayImage', serialized.overlayImage, loaded, cbIfLoaded);\n    this.__setBgOverlay('backgroundColor', serialized.background, loaded, cbIfLoaded);\n    this.__setBgOverlay('overlayColor', serialized.overlay, loaded, cbIfLoaded);\n  },\n\n  /**\n   * @private\n   * @param {String} property Property to set (backgroundImage, overlayImage, backgroundColor, overlayColor)\n   * @param {(Object|String)} value Value to set\n   * @param {Object} loaded Set loaded property to true if property is set\n   * @param {Object} callback Callback function to invoke after property is set\n   */\n  __setBgOverlay: function(property, value, loaded, callback) {\n    var _this = this;\n\n    if (!value) {\n      loaded[property] = true;\n      callback && callback();\n      return;\n    }\n\n    if (property === 'backgroundImage' || property === 'overlayImage') {\n      fabric.util.enlivenObjects([value], function(enlivedObject){\n        _this[property] = enlivedObject[0];\n        loaded[property] = true;\n        callback && callback();\n      });\n    }\n    else {\n      this['set' + fabric.util.string.capitalize(property, true)](value, function() {\n        loaded[property] = true;\n        callback && callback();\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {Array} objects\n   * @param {Function} callback\n   * @param {Function} [reviver]\n   */\n  _enlivenObjects: function (objects, callback, reviver) {\n    if (!objects || objects.length === 0) {\n      callback && callback([]);\n      return;\n    }\n\n    fabric.util.enlivenObjects(objects, function(enlivenedObjects) {\n      callback && callback(enlivenedObjects);\n    }, null, reviver);\n  },\n\n  /**\n   * @private\n   * @param {String} format\n   * @param {Function} callback\n   */\n  _toDataURL: function (format, callback) {\n    this.clone(function (clone) {\n      callback(clone.toDataURL(format));\n    });\n  },\n\n  /**\n   * @private\n   * @param {String} format\n   * @param {Number} multiplier\n   * @param {Function} callback\n   */\n  _toDataURLWithMultiplier: function (format, multiplier, callback) {\n    this.clone(function (clone) {\n      callback(clone.toDataURLWithMultiplier(format, multiplier));\n    });\n  },\n\n  /**\n   * Clones canvas instance\n   * @param {Object} [callback] Receives cloned instance as a first argument\n   * @param {Array} [properties] Array of properties to include in the cloned canvas and children\n   */\n  clone: function (callback, properties) {\n    var data = JSON.stringify(this.toJSON(properties));\n    this.cloneWithoutData(function(clone) {\n      clone.loadFromJSON(data, function() {\n        callback && callback(clone);\n      });\n    });\n  },\n\n  /**\n   * Clones canvas instance without cloning existing data.\n   * This essentially copies canvas dimensions, clipping properties, etc.\n   * but leaves data empty (so that you can populate it with your own)\n   * @param {Object} [callback] Receives cloned instance as a first argument\n   */\n  cloneWithoutData: function(callback) {\n    var el = fabric.document.createElement('canvas');\n\n    el.width = this.width;\n    el.height = this.height;\n\n    var clone = new fabric.Canvas(el);\n    clone.clipTo = this.clipTo;\n    if (this.backgroundImage) {\n      clone.setBackgroundImage(this.backgroundImage.src, function() {\n        clone.renderAll();\n        callback && callback(clone);\n      });\n      clone.backgroundImageOpacity = this.backgroundImageOpacity;\n      clone.backgroundImageStretch = this.backgroundImageStretch;\n    }\n    else {\n      callback && callback(clone);\n    }\n  }\n});\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      toFixed = fabric.util.toFixed,\n      capitalize = fabric.util.string.capitalize,\n      degreesToRadians = fabric.util.degreesToRadians,\n      supportsLineDash = fabric.StaticCanvas.supports('setLineDash'),\n      objectCaching = !fabric.isLikelyNode,\n      ALIASING_LIMIT = 2;\n\n  if (fabric.Object) {\n    return;\n  }\n\n  /**\n   * Root object class from which all 2d shape classes inherit from\n   * @class fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#objects}\n   * @see {@link fabric.Object#initialize} for constructor definition\n   *\n   * @fires added\n   * @fires removed\n   *\n   * @fires selected\n   * @fires deselected\n   * @fires modified\n   * @fires rotating\n   * @fires scaling\n   * @fires moving\n   * @fires skewing\n   *\n   * @fires mousedown\n   * @fires mouseup\n   * @fires mouseover\n   * @fires mouseout\n   * @fires mousewheel\n   * @fires mousedblclick\n   */\n  fabric.Object = fabric.util.createClass(fabric.CommonMethods, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Type of an object (rect, circle, path, etc.).\n     * Note that this property is meant to be read-only and not meant to be modified.\n     * If you modify, certain parts of Fabric (such as JSON loading) won't work correctly.\n     * @type String\n     * @default\n     */\n    type:                     'object',\n\n    /**\n     * Horizontal origin of transformation of an object (one of \"left\", \"right\", \"center\")\n     * See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups\n     * @type String\n     * @default\n     */\n    originX:                  'left',\n\n    /**\n     * Vertical origin of transformation of an object (one of \"top\", \"bottom\", \"center\")\n     * See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups\n     * @type String\n     * @default\n     */\n    originY:                  'top',\n\n    /**\n     * Top position of an object. Note that by default it's relative to object top. You can change this by setting originY={top/center/bottom}\n     * @type Number\n     * @default\n     */\n    top:                      0,\n\n    /**\n     * Left position of an object. Note that by default it's relative to object left. You can change this by setting originX={left/center/right}\n     * @type Number\n     * @default\n     */\n    left:                     0,\n\n    /**\n     * Object width\n     * @type Number\n     * @default\n     */\n    width:                    0,\n\n    /**\n     * Object height\n     * @type Number\n     * @default\n     */\n    height:                   0,\n\n    /**\n     * Object scale factor (horizontal)\n     * @type Number\n     * @default\n     */\n    scaleX:                   1,\n\n    /**\n     * Object scale factor (vertical)\n     * @type Number\n     * @default\n     */\n    scaleY:                   1,\n\n    /**\n     * When true, an object is rendered as flipped horizontally\n     * @type Boolean\n     * @default\n     */\n    flipX:                    false,\n\n    /**\n     * When true, an object is rendered as flipped vertically\n     * @type Boolean\n     * @default\n     */\n    flipY:                    false,\n\n    /**\n     * Opacity of an object\n     * @type Number\n     * @default\n     */\n    opacity:                  1,\n\n    /**\n     * Angle of rotation of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    angle:                    0,\n\n    /**\n     * Angle of skew on x axes of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    skewX:                    0,\n\n    /**\n     * Angle of skew on y axes of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    skewY:                    0,\n\n    /**\n     * Size of object's controlling corners (in pixels)\n     * @type Number\n     * @default\n     */\n    cornerSize:               13,\n\n    /**\n     * When true, object's controlling corners are rendered as transparent inside (i.e. stroke instead of fill)\n     * @type Boolean\n     * @default\n     */\n    transparentCorners:       true,\n\n    /**\n     * Default cursor value used when hovering over this object on canvas\n     * @type String\n     * @default\n     */\n    hoverCursor:              null,\n\n    /**\n     * Default cursor value used when moving this object on canvas\n     * @type String\n     * @default\n     */\n    moveCursor:               null,\n\n    /**\n     * Padding between object and its controlling borders (in pixels)\n     * @type Number\n     * @default\n     */\n    padding:                  0,\n\n    /**\n     * Color of controlling borders of an object (when it's active)\n     * @type String\n     * @default\n     */\n    borderColor:              'rgba(102,153,255,0.75)',\n\n    /**\n     * Array specifying dash pattern of an object's borders (hasBorder must be true)\n     * @since 1.6.2\n     * @type Array\n     */\n    borderDashArray:          null,\n\n    /**\n     * Color of controlling corners of an object (when it's active)\n     * @type String\n     * @default\n     */\n    cornerColor:              'rgba(102,153,255,0.5)',\n\n    /**\n     * Color of controlling corners of an object (when it's active and transparentCorners false)\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    cornerStrokeColor:        null,\n\n    /**\n     * Specify style of control, 'rect' or 'circle'\n     * @since 1.6.2\n     * @type String\n     */\n    cornerStyle:          'rect',\n\n    /**\n     * Array specifying dash pattern of an object's control (hasBorder must be true)\n     * @since 1.6.2\n     * @type Array\n     */\n    cornerDashArray:          null,\n\n    /**\n     * When true, this object will use center point as the origin of transformation\n     * when being scaled via the controls.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredScaling:          false,\n\n    /**\n     * When true, this object will use center point as the origin of transformation\n     * when being rotated via the controls.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredRotation:         true,\n\n    /**\n     * Color of object's fill\n     * @type String\n     * @default\n     */\n    fill:                     'rgb(0,0,0)',\n\n    /**\n     * Fill rule used to fill an object\n     * accepted values are nonzero, evenodd\n     * <b>Backwards incompatibility note:</b> This property was used for setting globalCompositeOperation until v1.4.12 (use `fabric.Object#globalCompositeOperation` instead)\n     * @type String\n     * @default\n     */\n    fillRule:                 'nonzero',\n\n    /**\n     * Composite rule used for canvas globalCompositeOperation\n     * @type String\n     * @default\n     */\n    globalCompositeOperation: 'source-over',\n\n    /**\n     * Background color of an object.\n     * @type String\n     * @default\n     */\n    backgroundColor:          '',\n\n    /**\n     * Selection Background color of an object. colored layer behind the object when it is active.\n     * does not mix good with globalCompositeOperation methods.\n     * @type String\n     * @default\n     */\n    selectionBackgroundColor:          '',\n\n    /**\n     * When defined, an object is rendered via stroke and this property specifies its color\n     * @type String\n     * @default\n     */\n    stroke:                   null,\n\n    /**\n     * Width of a stroke used to render this object\n     * @type Number\n     * @default\n     */\n    strokeWidth:              1,\n\n    /**\n     * Array specifying dash pattern of an object's stroke (stroke must be defined)\n     * @type Array\n     */\n    strokeDashArray:          null,\n\n    /**\n     * Line endings style of an object's stroke (one of \"butt\", \"round\", \"square\")\n     * @type String\n     * @default\n     */\n    strokeLineCap:            'butt',\n\n    /**\n     * Corner style of an object's stroke (one of \"bevil\", \"round\", \"miter\")\n     * @type String\n     * @default\n     */\n    strokeLineJoin:           'miter',\n\n    /**\n     * Maximum miter length (used for strokeLineJoin = \"miter\") of an object's stroke\n     * @type Number\n     * @default\n     */\n    strokeMiterLimit:         10,\n\n    /**\n     * Shadow object representing shadow of this shape\n     * @type fabric.Shadow\n     * @default\n     */\n    shadow:                   null,\n\n    /**\n     * Opacity of object's controlling borders when object is active and moving\n     * @type Number\n     * @default\n     */\n    borderOpacityWhenMoving:  0.4,\n\n    /**\n     * Scale factor of object's controlling borders\n     * @type Number\n     * @default\n     */\n    borderScaleFactor:        1,\n\n    /**\n     * Transform matrix (similar to SVG's transform matrix)\n     * @type Array\n     */\n    transformMatrix:          null,\n\n    /**\n     * Minimum allowed scale value of an object\n     * @type Number\n     * @default\n     */\n    minScaleLimit:            0,\n\n    /**\n     * When set to `false`, an object can not be selected for modification (using either point-click-based or group-based selection).\n     * But events still fire on it.\n     * @type Boolean\n     * @default\n     */\n    selectable:               true,\n\n    /**\n     * When set to `false`, an object can not be a target of events. All events propagate through it. Introduced in v1.3.4\n     * @type Boolean\n     * @default\n     */\n    evented:                  true,\n\n    /**\n     * When set to `false`, an object is not rendered on canvas\n     * @type Boolean\n     * @default\n     */\n    visible:                  true,\n\n    /**\n     * When set to `false`, object's controls are not displayed and can not be used to manipulate object\n     * @type Boolean\n     * @default\n     */\n    hasControls:              true,\n\n    /**\n     * When set to `false`, object's controlling borders are not rendered\n     * @type Boolean\n     * @default\n     */\n    hasBorders:               true,\n\n    /**\n     * When set to `false`, object's controlling rotating point will not be visible or selectable\n     * @type Boolean\n     * @default\n     */\n    hasRotatingPoint:         true,\n\n    /**\n     * Offset for object's controlling rotating point (when enabled via `hasRotatingPoint`)\n     * @type Number\n     * @default\n     */\n    rotatingPointOffset:      40,\n\n    /**\n     * When set to `true`, objects are \"found\" on canvas on per-pixel basis rather than according to bounding box\n     * @type Boolean\n     * @default\n     */\n    perPixelTargetFind:       false,\n\n    /**\n     * When `false`, default object's values are not included in its serialization\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues:     true,\n\n    /**\n     * Function that determines clipping of an object (context is passed as a first argument)\n     * Note that context origin is at the object's center point (not left/top corner)\n     * @deprecated since 2.0.0\n     * @type Function\n     */\n    clipTo:                   null,\n\n    /**\n     * When `true`, object horizontal movement is locked\n     * @type Boolean\n     * @default\n     */\n    lockMovementX:            false,\n\n    /**\n     * When `true`, object vertical movement is locked\n     * @type Boolean\n     * @default\n     */\n    lockMovementY:            false,\n\n    /**\n     * When `true`, object rotation is locked\n     * @type Boolean\n     * @default\n     */\n    lockRotation:             false,\n\n    /**\n     * When `true`, object horizontal scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockScalingX:             false,\n\n    /**\n     * When `true`, object vertical scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockScalingY:             false,\n\n    /**\n     * When `true`, object non-uniform scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockUniScaling:           false,\n\n    /**\n     * When `true`, object horizontal skewing is locked\n     * @type Boolean\n     * @default\n     */\n    lockSkewingX:             false,\n\n    /**\n     * When `true`, object vertical skewing is locked\n     * @type Boolean\n     * @default\n     */\n    lockSkewingY:             false,\n\n    /**\n     * When `true`, object cannot be flipped by scaling into negative values\n     * @type Boolean\n     * @default\n     */\n    lockScalingFlip:          false,\n\n    /**\n     * When `true`, object is not exported in SVG or OBJECT/JSON\n     * since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    excludeFromExport:        false,\n\n    /**\n     * When `true`, object is cached on an additional canvas.\n     * default to true\n     * since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    objectCaching:            objectCaching,\n\n    /**\n     * When `true`, object properties are checked for cache invalidation. In some particular\n     * situation you may want this to be disabled ( spray brush, very big, groups)\n     * or if your application does not allow you to modify properties for groups child you want\n     * to disable it for groups.\n     * default to false\n     * since 1.7.0\n     * @type Boolean\n     * @default false\n     */\n    statefullCache:            false,\n\n    /**\n     * When `true`, cache does not get updated during scaling. The picture will get blocky if scaled\n     * too much and will be redrawn with correct details at the end of scaling.\n     * this setting is performance and application dependant.\n     * default to true\n     * since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    noScaleCache:              true,\n\n    /**\n     * When set to `true`, object's cache will be rerendered next render call.\n     * since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    dirty:                true,\n\n    /**\n     * keeps the value of the last hovered coner during mouse move.\n     * 0 is no corner, or 'mt', 'ml', 'mtr' etc..\n     * It should be private, but there is no harm in using it as\n     * a read-only property.\n     * @type number|string|any\n     * @default 0\n     */\n    __corner: 0,\n\n    /**\n     * Determins if the fill or the stroke is drawn first (one of \"fill\" or \"stroke\")\n     * @type String\n     * @default\n     */\n    paintFirst:           'fill',\n\n    /**\n     * List of properties to consider when checking if state\n     * of an object is changed (fabric.Object#hasStateChanged)\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: (\n      'top left width height scaleX scaleY flipX flipY originX originY transformMatrix ' +\n      'stroke strokeWidth strokeDashArray strokeLineCap strokeLineJoin strokeMiterLimit ' +\n      'angle opacity fill globalCompositeOperation shadow clipTo visible backgroundColor ' +\n      'skewX skewY fillRule paintFirst'\n    ).split(' '),\n\n    /**\n     * List of properties to consider when checking if cache needs refresh\n     * @type Array\n     */\n    cacheProperties: (\n      'fill stroke strokeWidth strokeDashArray width height paintFirst' +\n      ' strokeLineCap strokeLineJoin strokeMiterLimit backgroundColor'\n    ).split(' '),\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function(options) {\n      if (options) {\n        this.setOptions(options);\n      }\n    },\n\n    /**\n     * Create a the canvas used to keep the cached copy of the object\n     * @private\n     */\n    _createCacheCanvas: function() {\n      this._cacheProperties = {};\n      this._cacheCanvas = fabric.document.createElement('canvas');\n      this._cacheContext = this._cacheCanvas.getContext('2d');\n      this._updateCacheCanvas();\n    },\n\n    /**\n     * Limit the cache dimensions so that X * Y do not cross fabric.perfLimitSizeTotal\n     * and each side do not cross fabric.cacheSideLimit\n     * those numbers are configurable so that you can get as much detail as you want\n     * making bargain with performances.\n     * @param {Object} dims\n     * @param {Object} dims.width width of canvas\n     * @param {Object} dims.height height of canvas\n     * @param {Object} dims.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @param {Object} dims.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _limitCacheSize: function(dims) {\n      var perfLimitSizeTotal = fabric.perfLimitSizeTotal,\n          width = dims.width, height = dims.height,\n          max = fabric.maxCacheSideLimit, min = fabric.minCacheSideLimit;\n      if (width <= max && height <= max && width * height <= perfLimitSizeTotal) {\n        if (width < min) {\n          dims.width = min;\n        }\n        if (height < min) {\n          dims.height = min;\n        }\n        return dims;\n      }\n      var ar = width / height, limitedDims = fabric.util.limitDimsByArea(ar, perfLimitSizeTotal),\n          capValue = fabric.util.capValue,\n          x = capValue(min, limitedDims.x, max),\n          y = capValue(min, limitedDims.y, max);\n      if (width > x) {\n        dims.zoomX /= width / x;\n        dims.width = x;\n        dims.capped = true;\n      }\n      if (height > y) {\n        dims.zoomY /= height / y;\n        dims.height = y;\n        dims.capped = true;\n      }\n      return dims;\n    },\n\n    /**\n     * Return the dimension and the zoom level needed to create a cache canvas\n     * big enough to host the object to be cached.\n     * @private\n     * @param {Object} dim.x width of object to be cached\n     * @param {Object} dim.y height of object to be cached\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _getCacheCanvasDimensions: function() {\n      var zoom = this.canvas && this.canvas.getZoom() || 1,\n          objectScale = this.getObjectScaling(),\n          retina = this.canvas && this.canvas._isRetinaScaling() ? fabric.devicePixelRatio : 1,\n          dim = this._getNonTransformedDimensions(),\n          zoomX = objectScale.scaleX * zoom * retina,\n          zoomY = objectScale.scaleY * zoom * retina,\n          width = dim.x * zoomX,\n          height = dim.y * zoomY;\n      return {\n        // for sure this ALIASING_LIMIT is slightly crating problem\n        // in situation in wich the cache canvas gets an upper limit\n        width: width + ALIASING_LIMIT,\n        height: height + ALIASING_LIMIT,\n        zoomX: zoomX,\n        zoomY: zoomY,\n        x: dim.x,\n        y: dim.y\n      };\n    },\n\n    /**\n     * Update width and height of the canvas for cache\n     * returns true or false if canvas needed resize.\n     * @private\n     * @return {Boolean} true if the canvas has been resized\n     */\n    _updateCacheCanvas: function() {\n      if (this.noScaleCache && this.canvas && this.canvas._currentTransform) {\n        var target = this.canvas._currentTransform.target,\n            action = this.canvas._currentTransform.action;\n        if (this === target && action.slice && action.slice(0, 5) === 'scale') {\n          return false;\n        }\n      }\n      var canvas = this._cacheCanvas,\n          dims = this._limitCacheSize(this._getCacheCanvasDimensions()),\n          minCacheSize = fabric.minCacheSideLimit,\n          width = dims.width, height = dims.height, drawingWidth, drawingHeight,\n          zoomX = dims.zoomX, zoomY = dims.zoomY,\n          dimensionsChanged = width !== this.cacheWidth || height !== this.cacheHeight,\n          zoomChanged = this.zoomX !== zoomX || this.zoomY !== zoomY,\n          shouldRedraw = dimensionsChanged || zoomChanged,\n          additionalWidth = 0, additionalHeight = 0, shouldResizeCanvas = false;\n      if (dimensionsChanged) {\n        var canvasWidth = this._cacheCanvas.width,\n            canvasHeight = this._cacheCanvas.height,\n            sizeGrowing = width > canvasWidth || height > canvasHeight,\n            sizeShrinking = (width < canvasWidth * 0.9 || height < canvasHeight * 0.9) &&\n              canvasWidth > minCacheSize && canvasHeight > minCacheSize;\n        shouldResizeCanvas = sizeGrowing || sizeShrinking;\n        if (sizeGrowing && !dims.capped && (width > minCacheSize || height > minCacheSize)) {\n          additionalWidth = width * 0.1;\n          additionalHeight = height * 0.1;\n        }\n      }\n      if (shouldRedraw) {\n        if (shouldResizeCanvas) {\n          canvas.width = Math.ceil(width + additionalWidth);\n          canvas.height = Math.ceil(height + additionalHeight);\n        }\n        else {\n          this._cacheContext.setTransform(1, 0, 0, 1, 0, 0);\n          this._cacheContext.clearRect(0, 0, canvas.width, canvas.height);\n        }\n        drawingWidth = dims.x * zoomX / 2;\n        drawingHeight = dims.y * zoomY / 2;\n        this.cacheTranslationX = Math.round(canvas.width / 2 - drawingWidth) + drawingWidth;\n        this.cacheTranslationY = Math.round(canvas.height / 2 - drawingHeight) + drawingHeight;\n        this.cacheWidth = width;\n        this.cacheHeight = height;\n        this._cacheContext.translate(this.cacheTranslationX, this.cacheTranslationY);\n        this._cacheContext.scale(zoomX, zoomY);\n        this.zoomX = zoomX;\n        this.zoomY = zoomY;\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * Sets object's properties from options\n     * @param {Object} [options] Options object\n     */\n    setOptions: function(options) {\n      this._setOptions(options);\n      this._initGradient(options.fill, 'fill');\n      this._initGradient(options.stroke, 'stroke');\n      this._initClipping(options);\n      this._initPattern(options.fill, 'fill');\n      this._initPattern(options.stroke, 'stroke');\n    },\n\n    /**\n     * Transforms context when rendering an object\n     * @param {CanvasRenderingContext2D} ctx Context\n     */\n    transform: function(ctx) {\n      var m;\n      if (this.group && !this.group._transformDone) {\n        m = this.calcTransformMatrix();\n      }\n      else {\n        m = this.calcOwnMatrix();\n      }\n      ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n    },\n\n    /**\n     * Returns an object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n\n          object = {\n            type:                     this.type,\n            version:                  fabric.version,\n            originX:                  this.originX,\n            originY:                  this.originY,\n            left:                     toFixed(this.left, NUM_FRACTION_DIGITS),\n            top:                      toFixed(this.top, NUM_FRACTION_DIGITS),\n            width:                    toFixed(this.width, NUM_FRACTION_DIGITS),\n            height:                   toFixed(this.height, NUM_FRACTION_DIGITS),\n            fill:                     (this.fill && this.fill.toObject) ? this.fill.toObject() : this.fill,\n            stroke:                   (this.stroke && this.stroke.toObject) ? this.stroke.toObject() : this.stroke,\n            strokeWidth:              toFixed(this.strokeWidth, NUM_FRACTION_DIGITS),\n            strokeDashArray:          this.strokeDashArray ? this.strokeDashArray.concat() : this.strokeDashArray,\n            strokeLineCap:            this.strokeLineCap,\n            strokeLineJoin:           this.strokeLineJoin,\n            strokeMiterLimit:         toFixed(this.strokeMiterLimit, NUM_FRACTION_DIGITS),\n            scaleX:                   toFixed(this.scaleX, NUM_FRACTION_DIGITS),\n            scaleY:                   toFixed(this.scaleY, NUM_FRACTION_DIGITS),\n            angle:                    toFixed(this.angle, NUM_FRACTION_DIGITS),\n            flipX:                    this.flipX,\n            flipY:                    this.flipY,\n            opacity:                  toFixed(this.opacity, NUM_FRACTION_DIGITS),\n            shadow:                   (this.shadow && this.shadow.toObject) ? this.shadow.toObject() : this.shadow,\n            visible:                  this.visible,\n            clipTo:                   this.clipTo && String(this.clipTo),\n            backgroundColor:          this.backgroundColor,\n            fillRule:                 this.fillRule,\n            paintFirst:               this.paintFirst,\n            globalCompositeOperation: this.globalCompositeOperation,\n            transformMatrix:          this.transformMatrix ? this.transformMatrix.concat() : null,\n            skewX:                    toFixed(this.skewX, NUM_FRACTION_DIGITS),\n            skewY:                    toFixed(this.skewY, NUM_FRACTION_DIGITS)\n          };\n\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n      if (!this.includeDefaultValues) {\n        object = this._removeDefaultValues(object);\n      }\n\n      return object;\n    },\n\n    /**\n     * Returns (dataless) object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      // will be overwritten by subclasses\n      return this.toObject(propertiesToInclude);\n    },\n\n    /**\n     * @private\n     * @param {Object} object\n     */\n    _removeDefaultValues: function(object) {\n      var prototype = fabric.util.getKlass(object.type).prototype,\n          stateProperties = prototype.stateProperties;\n      stateProperties.forEach(function(prop) {\n        if (object[prop] === prototype[prop]) {\n          delete object[prop];\n        }\n        var isArray = Object.prototype.toString.call(object[prop]) === '[object Array]' &&\n                      Object.prototype.toString.call(prototype[prop]) === '[object Array]';\n\n        // basically a check for [] === []\n        if (isArray && object[prop].length === 0 && prototype[prop].length === 0) {\n          delete object[prop];\n        }\n      });\n\n      return object;\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @return {String}\n     */\n    toString: function() {\n      return '#<fabric.' + capitalize(this.type) + '>';\n    },\n\n    /**\n     * Return the object scale factor counting also the group scaling\n     * @return {Object} object with scaleX and scaleY properties\n     */\n    getObjectScaling: function() {\n      var scaleX = this.scaleX, scaleY = this.scaleY;\n      if (this.group) {\n        var scaling = this.group.getObjectScaling();\n        scaleX *= scaling.scaleX;\n        scaleY *= scaling.scaleY;\n      }\n      return { scaleX: scaleX, scaleY: scaleY };\n    },\n\n    /**\n     * Return the object opacity counting also the group property\n     * @return {Number}\n     */\n    getObjectOpacity: function() {\n      var opacity = this.opacity;\n      if (this.group) {\n        opacity *= this.group.getObjectOpacity();\n      }\n      return opacity;\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Object} thisArg\n     */\n    _set: function(key, value) {\n      var shouldConstrainValue = (key === 'scaleX' || key === 'scaleY'),\n          isChanged = this[key] !== value, groupNeedsUpdate = false;\n\n      if (shouldConstrainValue) {\n        value = this._constrainScale(value);\n      }\n      if (key === 'scaleX' && value < 0) {\n        this.flipX = !this.flipX;\n        value *= -1;\n      }\n      else if (key === 'scaleY' && value < 0) {\n        this.flipY = !this.flipY;\n        value *= -1;\n      }\n      else if (key === 'shadow' && value && !(value instanceof fabric.Shadow)) {\n        value = new fabric.Shadow(value);\n      }\n      else if (key === 'dirty' && this.group) {\n        this.group.set('dirty', value);\n      }\n\n      this[key] = value;\n\n      if (isChanged) {\n        groupNeedsUpdate = this.group && this.group.isOnACache();\n        if (this.cacheProperties.indexOf(key) > -1) {\n          this.dirty = true;\n          groupNeedsUpdate && this.group.set('dirty', true);\n        }\n        else if (groupNeedsUpdate && this.stateProperties.indexOf(key) > -1) {\n          this.group.set('dirty', true);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * This callback function is called by the parent group of an object every\n     * time a non-delegated property changes on the group. It is passed the key\n     * and value as parameters. Not adding in this function's signature to avoid\n     * Travis build error about unused variables.\n     */\n    setOnGroup: function() {\n      // implemented by sub-classes, as needed.\n    },\n\n    /**\n     * Retrieves viewportTransform from Object's canvas if possible\n     * @method getViewportTransform\n     * @memberOf fabric.Object.prototype\n     * @return {Boolean}\n     */\n    getViewportTransform: function() {\n      if (this.canvas && this.canvas.viewportTransform) {\n        return this.canvas.viewportTransform;\n      }\n      return fabric.iMatrix.concat();\n    },\n\n    /*\n     * @private\n     * return if the object would be visible in rendering\n     * @memberOf fabric.Object.prototype\n     * @return {Boolean}\n     */\n    isNotVisible: function() {\n      return this.opacity === 0 || (this.width === 0 && this.height === 0) || !this.visible;\n    },\n\n    /**\n     * Renders an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    render: function(ctx) {\n      // do not render if width/height are zeros or object is not visible\n      if (this.isNotVisible()) {\n        return;\n      }\n      if (this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen()) {\n        return;\n      }\n      ctx.save();\n      this._setupCompositeOperation(ctx);\n      this.drawSelectionBackground(ctx);\n      this.transform(ctx);\n      this._setOpacity(ctx);\n      this._setShadow(ctx, this);\n      if (this.transformMatrix) {\n        ctx.transform.apply(ctx, this.transformMatrix);\n      }\n      this.clipTo && fabric.util.clipContext(this, ctx);\n      if (this.shouldCache()) {\n        if (!this._cacheCanvas) {\n          this._createCacheCanvas();\n        }\n        if (this.isCacheDirty()) {\n          this.statefullCache && this.saveState({ propertySet: 'cacheProperties' });\n          this.drawObject(this._cacheContext);\n          this.dirty = false;\n        }\n        this.drawCacheOnCanvas(ctx);\n      }\n      else {\n        this._removeCacheCanvas();\n        this.dirty = false;\n        this.drawObject(ctx);\n        if (this.objectCaching && this.statefullCache) {\n          this.saveState({ propertySet: 'cacheProperties' });\n        }\n      }\n      this.clipTo && ctx.restore();\n      ctx.restore();\n    },\n\n    /**\n     * Remove cacheCanvas and its dimensions from the objects\n     */\n    _removeCacheCanvas: function() {\n      this._cacheCanvas = null;\n      this.cacheWidth = 0;\n      this.cacheHeight = 0;\n    },\n\n    /**\n     * When set to `true`, force the object to have its own cache, even if it is inside a group\n     * it may be needed when your object behave in a particular way on the cache and always needs\n     * its own isolated canvas to render correctly.\n     * Created to be overridden\n     * since 1.7.12\n     * @returns false\n     */\n    needsItsOwnCache: function() {\n      if (this.paintFirst === 'stroke' && typeof this.shadow === 'object') {\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * objectCaching is a global flag, wins over everything\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * @return {Boolean}\n     */\n    shouldCache: function() {\n      this.ownCaching = this.objectCaching &&\n      (!this.group || this.needsItsOwnCache() || !this.group.isOnACache());\n      return this.ownCaching;\n    },\n\n    /**\n     * Check if this object or a child object will cast a shadow\n     * used by Group.shouldCache to know if child has a shadow recursively\n     * @return {Boolean}\n     */\n    willDrawShadow: function() {\n      return !!this.shadow && (this.shadow.offsetX !== 0 || this.shadow.offsetY !== 0);\n    },\n\n    /**\n     * Execute the drawing operation for an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawObject: function(ctx) {\n      this._renderBackground(ctx);\n      this._setStrokeStyles(ctx, this);\n      this._setFillStyles(ctx, this);\n      this._render(ctx);\n    },\n\n    /**\n     * Paint the cached copy of the object on the target context.\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawCacheOnCanvas: function(ctx) {\n      ctx.scale(1 / this.zoomX, 1 / this.zoomY);\n      ctx.drawImage(this._cacheCanvas, -this.cacheTranslationX, -this.cacheTranslationY);\n    },\n\n    /**\n     * Check if cache is dirty\n     * @param {Boolean} skipCanvas skip canvas checks because this object is painted\n     * on parent canvas.\n     */\n    isCacheDirty: function(skipCanvas) {\n      if (this.isNotVisible()) {\n        return false;\n      }\n      if (this._cacheCanvas && !skipCanvas && this._updateCacheCanvas()) {\n        // in this case the context is already cleared.\n        return true;\n      }\n      else {\n        if (this.dirty || (this.statefullCache && this.hasStateChanged('cacheProperties'))) {\n          if (this._cacheCanvas && !skipCanvas) {\n            var width = this.cacheWidth / this.zoomX;\n            var height = this.cacheHeight / this.zoomY;\n            this._cacheContext.clearRect(-width / 2, -height / 2, width, height);\n          }\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Draws a background for the object big as its untrasformed dimensions\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderBackground: function(ctx) {\n      if (!this.backgroundColor) {\n        return;\n      }\n      var dim = this._getNonTransformedDimensions();\n      ctx.fillStyle = this.backgroundColor;\n\n      ctx.fillRect(\n        -dim.x / 2,\n        -dim.y / 2,\n        dim.x,\n        dim.y\n      );\n      // if there is background color no other shadows\n      // should be casted\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _setOpacity: function(ctx) {\n      if (this.group && !this.group._transformDone) {\n        ctx.globalAlpha = this.getObjectOpacity();\n      }\n      else {\n        ctx.globalAlpha *= this.opacity;\n      }\n    },\n\n    _setStrokeStyles: function(ctx, decl) {\n      if (decl.stroke) {\n        ctx.lineWidth = decl.strokeWidth;\n        ctx.lineCap = decl.strokeLineCap;\n        ctx.lineJoin = decl.strokeLineJoin;\n        ctx.miterLimit = decl.strokeMiterLimit;\n        ctx.strokeStyle = decl.stroke.toLive\n          ? decl.stroke.toLive(ctx, this)\n          : decl.stroke;\n      }\n    },\n\n    _setFillStyles: function(ctx, decl) {\n      if (decl.fill) {\n        ctx.fillStyle = decl.fill.toLive\n          ? decl.fill.toLive(ctx, this)\n          : decl.fill;\n      }\n    },\n\n    /**\n     * @private\n     * Sets line dash\n     * @param {CanvasRenderingContext2D} ctx Context to set the dash line on\n     * @param {Array} dashArray array representing dashes\n     * @param {Function} alternative function to call if browaser does not support lineDash\n     */\n    _setLineDash: function(ctx, dashArray, alternative) {\n      if (!dashArray) {\n        return;\n      }\n      // Spec requires the concatenation of two copies the dash list when the number of elements is odd\n      if (1 & dashArray.length) {\n        dashArray.push.apply(dashArray, dashArray);\n      }\n      if (supportsLineDash) {\n        ctx.setLineDash(dashArray);\n      }\n      else {\n        alternative && alternative(ctx);\n      }\n    },\n\n    /**\n     * Renders controls and borders for the object\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} [styleOverride] properties to override the object style\n     */\n    _renderControls: function(ctx, styleOverride) {\n      var vpt = this.getViewportTransform(),\n          matrix = this.calcTransformMatrix(),\n          options, drawBorders, drawControls;\n      styleOverride = styleOverride || { };\n      drawBorders = typeof styleOverride.hasBorders !== 'undefined' ? styleOverride.hasBorders : this.hasBorders;\n      drawControls = typeof styleOverride.hasControls !== 'undefined' ? styleOverride.hasControls : this.hasControls;\n      matrix = fabric.util.multiplyTransformMatrices(vpt, matrix);\n      options = fabric.util.qrDecompose(matrix);\n      ctx.save();\n      ctx.translate(options.translateX, options.translateY);\n      ctx.lineWidth = 1 * this.borderScaleFactor;\n      if (!this.group) {\n        ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n      }\n      if (styleOverride.forActiveSelection) {\n        ctx.rotate(degreesToRadians(options.angle));\n        drawBorders && this.drawBordersInGroup(ctx, options, styleOverride);\n      }\n      else {\n        ctx.rotate(degreesToRadians(this.angle));\n        drawBorders && this.drawBorders(ctx, styleOverride);\n      }\n      drawControls && this.drawControls(ctx, styleOverride);\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _setShadow: function(ctx) {\n      if (!this.shadow) {\n        return;\n      }\n\n      var multX = (this.canvas && this.canvas.viewportTransform[0]) || 1,\n          multY = (this.canvas && this.canvas.viewportTransform[3]) || 1,\n          scaling = this.getObjectScaling();\n      if (this.canvas && this.canvas._isRetinaScaling()) {\n        multX *= fabric.devicePixelRatio;\n        multY *= fabric.devicePixelRatio;\n      }\n      ctx.shadowColor = this.shadow.color;\n      ctx.shadowBlur = this.shadow.blur * fabric.browserShadowBlurConstant *\n        (multX + multY) * (scaling.scaleX + scaling.scaleY) / 4;\n      ctx.shadowOffsetX = this.shadow.offsetX * multX * scaling.scaleX;\n      ctx.shadowOffsetY = this.shadow.offsetY * multY * scaling.scaleY;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _removeShadow: function(ctx) {\n      if (!this.shadow) {\n        return;\n      }\n\n      ctx.shadowColor = '';\n      ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} filler fabric.Pattern or fabric.Gradient\n     */\n    _applyPatternGradientTransform: function(ctx, filler) {\n      if (!filler || !filler.toLive) {\n        return { offsetX: 0, offsetY: 0 };\n      }\n      var t = filler.gradientTransform || filler.patternTransform;\n      var offsetX = -this.width / 2 + filler.offsetX || 0,\n          offsetY = -this.height / 2 + filler.offsetY || 0;\n      ctx.translate(offsetX, offsetY);\n      if (t) {\n        ctx.transform(t[0], t[1], t[2], t[3], t[4], t[5]);\n      }\n      return { offsetX: offsetX, offsetY: offsetY };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderPaintInOrder: function(ctx) {\n      if (this.paintFirst === 'stroke') {\n        this._renderStroke(ctx);\n        this._renderFill(ctx);\n      }\n      else {\n        this._renderFill(ctx);\n        this._renderStroke(ctx);\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderFill: function(ctx) {\n      if (!this.fill) {\n        return;\n      }\n\n      ctx.save();\n      this._applyPatternGradientTransform(ctx, this.fill);\n      if (this.fillRule === 'evenodd') {\n        ctx.fill('evenodd');\n      }\n      else {\n        ctx.fill();\n      }\n      ctx.restore();\n    },\n\n    _renderStroke: function(ctx) {\n      if (!this.stroke || this.strokeWidth === 0) {\n        return;\n      }\n\n      if (this.shadow && !this.shadow.affectStroke) {\n        this._removeShadow(ctx);\n      }\n\n      ctx.save();\n      this._setLineDash(ctx, this.strokeDashArray, this._renderDashedStroke);\n      this._applyPatternGradientTransform(ctx, this.stroke);\n      ctx.stroke();\n      ctx.restore();\n    },\n\n    /**\n     * This function is an helper for svg import. it returns the center of the object in the svg\n     * untransformed coordinates\n     * @private\n     * @return {Object} center point from element coordinates\n     */\n    _findCenterFromElement: function() {\n      return { x: this.left + this.width / 2, y: this.top + this.height / 2 };\n    },\n\n    /**\n     * This function is an helper for svg import. it decoompose the transformMatrix\n     * and assign properties to object.\n     * untransformed coordinates\n     * @private\n     * @chainable\n     */\n    _assignTransformMatrixProps: function() {\n      if (this.transformMatrix) {\n        var options = fabric.util.qrDecompose(this.transformMatrix);\n        this.flipX = false;\n        this.flipY = false;\n        this.set('scaleX', options.scaleX);\n        this.set('scaleY', options.scaleY);\n        this.angle = options.angle;\n        this.skewX = options.skewX;\n        this.skewY = 0;\n      }\n    },\n\n    /**\n     * This function is an helper for svg import. it removes the transform matrix\n     * and set to object properties that fabricjs can handle\n     * @private\n     * @param {Object} preserveAspectRatioOptions\n     * @return {thisArg}\n     */\n    _removeTransformMatrix: function(preserveAspectRatioOptions) {\n      var center = this._findCenterFromElement();\n      if (this.transformMatrix) {\n        this._assignTransformMatrixProps();\n        center = fabric.util.transformPoint(center, this.transformMatrix);\n      }\n      this.transformMatrix = null;\n      if (preserveAspectRatioOptions) {\n        this.scaleX *= preserveAspectRatioOptions.scaleX;\n        this.scaleY *= preserveAspectRatioOptions.scaleY;\n        this.cropX = preserveAspectRatioOptions.cropX;\n        this.cropY = preserveAspectRatioOptions.cropY;\n        center.x += preserveAspectRatioOptions.offsetLeft;\n        center.y += preserveAspectRatioOptions.offsetTop;\n        this.width = preserveAspectRatioOptions.width;\n        this.height = preserveAspectRatioOptions.height;\n      }\n      this.setPositionByOrigin(center, 'center', 'center');\n    },\n\n    /**\n     * Clones an instance, using a callback method will work for every object.\n     * @param {Function} callback Callback is invoked with a clone as a first argument\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     */\n    clone: function(callback, propertiesToInclude) {\n      var objectForm = this.toObject(propertiesToInclude);\n      if (this.constructor.fromObject) {\n        this.constructor.fromObject(objectForm, callback);\n      }\n      else {\n        fabric.Object._fromObject('Object', objectForm, callback);\n      }\n    },\n\n    /**\n     * Creates an instance of fabric.Image out of an object\n     * @param {Function} callback callback, invoked with an instance as a first argument\n     * @param {Object} [options] for clone as image, passed to toDataURL\n     * @param {Boolean} [options.enableRetinaScaling] enable retina scaling for the cloned image\n     * @return {fabric.Object} thisArg\n     */\n    cloneAsImage: function(callback, options) {\n      var dataUrl = this.toDataURL(options);\n      fabric.util.loadImage(dataUrl, function(img) {\n        if (callback) {\n          callback(new fabric.Image(img));\n        }\n      });\n      return this;\n    },\n\n    /**\n     * Converts an object into a data-url-like string\n     * @param {Object} options Options object\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\n     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n     */\n    toDataURL: function(options) {\n      options || (options = { });\n\n      var el = fabric.util.createCanvasElement(),\n          boundingRect = this.getBoundingRect();\n\n      el.width = boundingRect.width;\n      el.height = boundingRect.height;\n      fabric.util.wrapElement(el, 'div');\n      var canvas = new fabric.StaticCanvas(el, {\n        enableRetinaScaling: options.enableRetinaScaling,\n        renderOnAddRemove: false,\n        skipOffscreen: false,\n      });\n      // to avoid common confusion https://github.com/kangax/fabric.js/issues/806\n      if (options.format === 'jpg') {\n        options.format = 'jpeg';\n      }\n\n      if (options.format === 'jpeg') {\n        canvas.backgroundColor = '#fff';\n      }\n\n      var origParams = {\n        left: this.left,\n        top: this.top\n      };\n\n      this.setPositionByOrigin(new fabric.Point(canvas.width / 2, canvas.height / 2), 'center', 'center');\n\n      var originalCanvas = this.canvas;\n      canvas.add(this);\n      var data = canvas.toDataURL(options);\n      this.set(origParams).setCoords();\n      this.canvas = originalCanvas;\n      // canvas.dispose will call image.dispose that will nullify the elements\n      // since this canvas is a simple element for the process, we remove references\n      // to objects in this way in order to avoid object trashing.\n      canvas._objects = [];\n      canvas.dispose();\n      canvas = null;\n\n      return data;\n    },\n\n    /**\n     * Returns true if specified type is identical to the type of an instance\n     * @param {String} type Type to check against\n     * @return {Boolean}\n     */\n    isType: function(type) {\n      return this.type === type;\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance (is 1 unless subclassed)\n     */\n    complexity: function() {\n      return 1;\n    },\n\n    /**\n     * Returns a JSON representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} JSON\n     */\n    toJSON: function(propertiesToInclude) {\n      // delegate, not alias\n      return this.toObject(propertiesToInclude);\n    },\n\n    /**\n     * Sets gradient (fill or stroke) of an object\n     * <b>Backwards incompatibility note:</b> This method was named \"setGradientFill\" until v1.1.0\n     * @param {String} property Property name 'stroke' or 'fill'\n     * @param {Object} [options] Options object\n     * @param {String} [options.type] Type of gradient 'radial' or 'linear'\n     * @param {Number} [options.x1=0] x-coordinate of start point\n     * @param {Number} [options.y1=0] y-coordinate of start point\n     * @param {Number} [options.x2=0] x-coordinate of end point\n     * @param {Number} [options.y2=0] y-coordinate of end point\n     * @param {Number} [options.r1=0] Radius of start point (only for radial gradients)\n     * @param {Number} [options.r2=0] Radius of end point (only for radial gradients)\n     * @param {Object} [options.colorStops] Color stops object eg. {0: 'ff0000', 1: '000000'}\n     * @param {Object} [options.gradientTransform] transforMatrix for gradient\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/58y8b/|jsFiddle demo}\n     * @example <caption>Set linear gradient</caption>\n     * object.setGradient('fill', {\n     *   type: 'linear',\n     *   x1: -object.width / 2,\n     *   y1: 0,\n     *   x2: object.width / 2,\n     *   y2: 0,\n     *   colorStops: {\n     *     0: 'red',\n     *     0.5: '#005555',\n     *     1: 'rgba(0,0,255,0.5)'\n     *   }\n     * });\n     * canvas.renderAll();\n     * @example <caption>Set radial gradient</caption>\n     * object.setGradient('fill', {\n     *   type: 'radial',\n     *   x1: 0,\n     *   y1: 0,\n     *   x2: 0,\n     *   y2: 0,\n     *   r1: object.width / 2,\n     *   r2: 10,\n     *   colorStops: {\n     *     0: 'red',\n     *     0.5: '#005555',\n     *     1: 'rgba(0,0,255,0.5)'\n     *   }\n     * });\n     * canvas.renderAll();\n     */\n    setGradient: function(property, options) {\n      options || (options = { });\n\n      var gradient = { colorStops: [] };\n\n      gradient.type = options.type || (options.r1 || options.r2 ? 'radial' : 'linear');\n      gradient.coords = {\n        x1: options.x1,\n        y1: options.y1,\n        x2: options.x2,\n        y2: options.y2\n      };\n\n      if (options.r1 || options.r2) {\n        gradient.coords.r1 = options.r1;\n        gradient.coords.r2 = options.r2;\n      }\n\n      gradient.gradientTransform = options.gradientTransform;\n      fabric.Gradient.prototype.addColorStop.call(gradient, options.colorStops);\n\n      return this.set(property, fabric.Gradient.forObject(this, gradient));\n    },\n\n    /**\n     * Sets pattern fill of an object\n     * @param {Object} options Options object\n     * @param {(String|HTMLImageElement)} options.source Pattern source\n     * @param {String} [options.repeat=repeat] Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n     * @param {Number} [options.offsetX=0] Pattern horizontal offset from object's left/top corner\n     * @param {Number} [options.offsetY=0] Pattern vertical offset from object's left/top corner\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/QT3pa/|jsFiddle demo}\n     * @example <caption>Set pattern</caption>\n     * fabric.util.loadImage('http://fabricjs.com/assets/escheresque_ste.png', function(img) {\n     *   object.setPatternFill({\n     *     source: img,\n     *     repeat: 'repeat'\n     *   });\n     *   canvas.renderAll();\n     * });\n     */\n    setPatternFill: function(options) {\n      return this.set('fill', new fabric.Pattern(options));\n    },\n\n    /**\n     * Sets {@link fabric.Object#shadow|shadow} of an object\n     * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\n     * @param {String} [options.color=rgb(0,0,0)] Shadow color\n     * @param {Number} [options.blur=0] Shadow blur\n     * @param {Number} [options.offsetX=0] Shadow horizontal offset\n     * @param {Number} [options.offsetY=0] Shadow vertical offset\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/7gvJG/|jsFiddle demo}\n     * @example <caption>Set shadow with string notation</caption>\n     * object.setShadow('2px 2px 10px rgba(0,0,0,0.2)');\n     * canvas.renderAll();\n     * @example <caption>Set shadow with object notation</caption>\n     * object.setShadow({\n     *   color: 'red',\n     *   blur: 10,\n     *   offsetX: 20,\n     *   offsetY: 20\n     * });\n     * canvas.renderAll();\n     */\n    setShadow: function(options) {\n      return this.set('shadow', options ? new fabric.Shadow(options) : null);\n    },\n\n    /**\n     * Sets \"color\" of an instance (alias of `set('fill', &hellip;)`)\n     * @param {String} color Color value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setColor: function(color) {\n      this.set('fill', color);\n      return this;\n    },\n\n    /**\n     * Sets \"angle\" of an instance with centered rotation\n     * @param {Number} angle Angle value (in degrees)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    rotate: function(angle) {\n      var shouldCenterOrigin = (this.originX !== 'center' || this.originY !== 'center') && this.centeredRotation;\n\n      if (shouldCenterOrigin) {\n        this._setOriginToCenter();\n      }\n\n      this.set('angle', angle);\n\n      if (shouldCenterOrigin) {\n        this._resetOrigin();\n      }\n\n      return this;\n    },\n\n    /**\n     * Centers object horizontally on canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    centerH: function () {\n      this.canvas && this.canvas.centerObjectH(this);\n      return this;\n    },\n\n    /**\n     * Centers object horizontally on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenterH: function () {\n      this.canvas && this.canvas.viewportCenterObjectH(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically on canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    centerV: function () {\n      this.canvas && this.canvas.centerObjectV(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenterV: function () {\n      this.canvas && this.canvas.viewportCenterObjectV(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically and horizontally on canvas to which is was added last\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    center: function () {\n      this.canvas && this.canvas.centerObject(this);\n      return this;\n    },\n\n    /**\n     * Centers object on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenter: function () {\n      this.canvas && this.canvas.viewportCenterObject(this);\n      return this;\n    },\n\n    /**\n     * Returns coordinates of a pointer relative to an object\n     * @param {Event} e Event to operate upon\n     * @param {Object} [pointer] Pointer to operate upon (instead of event)\n     * @return {Object} Coordinates of a pointer (x, y)\n     */\n    getLocalPointer: function(e, pointer) {\n      pointer = pointer || this.canvas.getPointer(e);\n      var pClicked = new fabric.Point(pointer.x, pointer.y),\n          objectLeftTop = this._getLeftTopCoords();\n      if (this.angle) {\n        pClicked = fabric.util.rotatePoint(\n          pClicked, objectLeftTop, degreesToRadians(-this.angle));\n      }\n      return {\n        x: pClicked.x - objectLeftTop.x,\n        y: pClicked.y - objectLeftTop.y\n      };\n    },\n\n    /**\n     * Sets canvas globalCompositeOperation for specific object\n     * custom composition operation for the particular object can be specifed using globalCompositeOperation property\n     * @param {CanvasRenderingContext2D} ctx Rendering canvas context\n     */\n    _setupCompositeOperation: function (ctx) {\n      if (this.globalCompositeOperation) {\n        ctx.globalCompositeOperation = this.globalCompositeOperation;\n      }\n    }\n  });\n\n  fabric.util.createAccessors && fabric.util.createAccessors(fabric.Object);\n\n  extend(fabric.Object.prototype, fabric.Observable);\n\n  /**\n   * Defines the number of fraction digits to use when serializing object values.\n   * You can use it to increase/decrease precision of such values like left, top, scaleX, scaleY, etc.\n   * @static\n   * @memberOf fabric.Object\n   * @constant\n   * @type Number\n   */\n  fabric.Object.NUM_FRACTION_DIGITS = 2;\n\n  fabric.Object._fromObject = function(className, object, callback, extraParam) {\n    var klass = fabric[className];\n    object = clone(object, true);\n    fabric.util.enlivenPatterns([object.fill, object.stroke], function(patterns) {\n      if (typeof patterns[0] !== 'undefined') {\n        object.fill = patterns[0];\n      }\n      if (typeof patterns[1] !== 'undefined') {\n        object.stroke = patterns[1];\n      }\n      var instance = extraParam ? new klass(object[extraParam], object) : new klass(object);\n      callback && callback(instance);\n    });\n  };\n\n  /**\n   * Unique id used internally when creating SVG elements\n   * @static\n   * @memberOf fabric.Object\n   * @type Number\n   */\n  fabric.Object.__uid = 0;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  var degreesToRadians = fabric.util.degreesToRadians,\n      originXOffset = {\n        left: -0.5,\n        center: 0,\n        right: 0.5\n      },\n      originYOffset = {\n        top: -0.5,\n        center: 0,\n        bottom: 0.5\n      };\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Translates the coordinates from a set of origin to another (based on the object's dimensions)\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @param {String} fromOriginX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} fromOriginY Vertical origin: 'top', 'center' or 'bottom'\n     * @param {String} toOriginX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} toOriginY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToGivenOrigin: function(point, fromOriginX, fromOriginY, toOriginX, toOriginY) {\n      var x = point.x,\n          y = point.y,\n          offsetX, offsetY, dim;\n\n      if (typeof fromOriginX === 'string') {\n        fromOriginX = originXOffset[fromOriginX];\n      }\n      else {\n        fromOriginX -= 0.5;\n      }\n\n      if (typeof toOriginX === 'string') {\n        toOriginX = originXOffset[toOriginX];\n      }\n      else {\n        toOriginX -= 0.5;\n      }\n\n      offsetX = toOriginX - fromOriginX;\n\n      if (typeof fromOriginY === 'string') {\n        fromOriginY = originYOffset[fromOriginY];\n      }\n      else {\n        fromOriginY -= 0.5;\n      }\n\n      if (typeof toOriginY === 'string') {\n        toOriginY = originYOffset[toOriginY];\n      }\n      else {\n        toOriginY -= 0.5;\n      }\n\n      offsetY = toOriginY - fromOriginY;\n\n      if (offsetX || offsetY) {\n        dim = this._getTransformedDimensions();\n        x = point.x + offsetX * dim.x;\n        y = point.y + offsetY * dim.y;\n      }\n\n      return new fabric.Point(x, y);\n    },\n\n    /**\n     * Translates the coordinates from origin to center coordinates (based on the object's dimensions)\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToCenterPoint: function(point, originX, originY) {\n      var p = this.translateToGivenOrigin(point, originX, originY, 'center', 'center');\n      if (this.angle) {\n        return fabric.util.rotatePoint(p, point, degreesToRadians(this.angle));\n      }\n      return p;\n    },\n\n    /**\n     * Translates the coordinates from center to origin coordinates (based on the object's dimensions)\n     * @param {fabric.Point} center The point which corresponds to center of the object\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToOriginPoint: function(center, originX, originY) {\n      var p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n      if (this.angle) {\n        return fabric.util.rotatePoint(p, center, degreesToRadians(this.angle));\n      }\n      return p;\n    },\n\n    /**\n     * Returns the real center coordinates of the object\n     * @return {fabric.Point}\n     */\n    getCenterPoint: function() {\n      var leftTop = new fabric.Point(this.left, this.top);\n      return this.translateToCenterPoint(leftTop, this.originX, this.originY);\n    },\n\n    /**\n     * Returns the coordinates of the object based on center coordinates\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @return {fabric.Point}\n     */\n    // getOriginPoint: function(center) {\n    //   return this.translateToOriginPoint(center, this.originX, this.originY);\n    // },\n\n    /**\n     * Returns the coordinates of the object as if it has a different origin\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    getPointByOrigin: function(originX, originY) {\n      var center = this.getCenterPoint();\n      return this.translateToOriginPoint(center, originX, originY);\n    },\n\n    /**\n     * Returns the point in local coordinates\n     * @param {fabric.Point} point The point relative to the global coordinate system\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    toLocalPoint: function(point, originX, originY) {\n      var center = this.getCenterPoint(),\n          p, p2;\n\n      if (typeof originX !== 'undefined' && typeof originY !== 'undefined' ) {\n        p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n      }\n      else {\n        p = new fabric.Point(this.left, this.top);\n      }\n\n      p2 = new fabric.Point(point.x, point.y);\n      if (this.angle) {\n        p2 = fabric.util.rotatePoint(p2, center, -degreesToRadians(this.angle));\n      }\n      return p2.subtractEquals(p);\n    },\n\n    /**\n     * Returns the point in global coordinates\n     * @param {fabric.Point} The point relative to the local coordinate system\n     * @return {fabric.Point}\n     */\n    // toGlobalPoint: function(point) {\n    //   return fabric.util.rotatePoint(point, this.getCenterPoint(), degreesToRadians(this.angle)).addEquals(new fabric.Point(this.left, this.top));\n    // },\n\n    /**\n     * Sets the position of the object taking into consideration the object's origin\n     * @param {fabric.Point} pos The new position of the object\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {void}\n     */\n    setPositionByOrigin: function(pos, originX, originY) {\n      var center = this.translateToCenterPoint(pos, originX, originY),\n          position = this.translateToOriginPoint(center, this.originX, this.originY);\n      this.set('left', position.x);\n      this.set('top', position.y);\n    },\n\n    /**\n     * @param {String} to One of 'left', 'center', 'right'\n     */\n    adjustPosition: function(to) {\n      var angle = degreesToRadians(this.angle),\n          hypotFull = this.getScaledWidth(),\n          xFull = Math.cos(angle) * hypotFull,\n          yFull = Math.sin(angle) * hypotFull,\n          offsetFrom, offsetTo;\n\n      //TODO: this function does not consider mixed situation like top, center.\n      if (typeof this.originX === 'string') {\n        offsetFrom = originXOffset[this.originX];\n      }\n      else {\n        offsetFrom = this.originX - 0.5;\n      }\n      if (typeof to === 'string') {\n        offsetTo = originXOffset[to];\n      }\n      else {\n        offsetTo = to - 0.5;\n      }\n      this.left += xFull * (offsetTo - offsetFrom);\n      this.top += yFull * (offsetTo - offsetFrom);\n      this.setCoords();\n      this.originX = to;\n    },\n\n    /**\n     * Sets the origin/position of the object to it's center point\n     * @private\n     * @return {void}\n     */\n    _setOriginToCenter: function() {\n      this._originalOriginX = this.originX;\n      this._originalOriginY = this.originY;\n\n      var center = this.getCenterPoint();\n\n      this.originX = 'center';\n      this.originY = 'center';\n\n      this.left = center.x;\n      this.top = center.y;\n    },\n\n    /**\n     * Resets the origin/position of the object to it's original origin\n     * @private\n     * @return {void}\n     */\n    _resetOrigin: function() {\n      var originPoint = this.translateToOriginPoint(\n        this.getCenterPoint(),\n        this._originalOriginX,\n        this._originalOriginY);\n\n      this.originX = this._originalOriginX;\n      this.originY = this._originalOriginY;\n\n      this.left = originPoint.x;\n      this.top = originPoint.y;\n\n      this._originalOriginX = null;\n      this._originalOriginY = null;\n    },\n\n    /**\n     * @private\n     */\n    _getLeftTopCoords: function() {\n      return this.translateToOriginPoint(this.getCenterPoint(), 'left', 'top');\n    },\n\n    /**\n    * Callback; invoked right before object is about to go from active to inactive\n    */\n    onDeselect: function() {\n      /* NOOP */\n    }\n  });\n\n})();\n\n\n(function() {\n\n  function getCoords(coords) {\n    return [\n      new fabric.Point(coords.tl.x, coords.tl.y),\n      new fabric.Point(coords.tr.x, coords.tr.y),\n      new fabric.Point(coords.br.x, coords.br.y),\n      new fabric.Point(coords.bl.x, coords.bl.y)\n    ];\n  }\n\n  var degreesToRadians = fabric.util.degreesToRadians,\n      multiplyMatrices = fabric.util.multiplyTransformMatrices;\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Describe object's corner position in canvas element coordinates.\n     * properties are tl,mt,tr,ml,mr,bl,mb,br,mtr for the main controls.\n     * each property is an object with x, y and corner.\n     * The `corner` property contains in a similar manner the 4 points of the\n     * interactive area of the corner.\n     * The coordinates depends from this properties: width, height, scaleX, scaleY\n     * skewX, skewY, angle, strokeWidth, viewportTransform, top, left, padding.\n     * The coordinates get updated with @method setCoords.\n     * You can calculate them without updating with @method calcCoords;\n     * @memberOf fabric.Object.prototype\n     */\n    oCoords: null,\n\n    /**\n     * Describe object's corner position in canvas object absolute coordinates\n     * properties are tl,tr,bl,br and describe the four main corner.\n     * each property is an object with x, y, instance of Fabric.Point.\n     * The coordinates depends from this properties: width, height, scaleX, scaleY\n     * skewX, skewY, angle, strokeWidth, top, left.\n     * Those coordinates are usefull to understand where an object is. They get updated\n     * with oCoords but they do not need to be updated when zoom or panning change.\n     * The coordinates get updated with @method setCoords.\n     * You can calculate them without updating with @method calcCoords(true);\n     * @memberOf fabric.Object.prototype\n     */\n    aCoords: null,\n\n    /**\n     * storage for object transform matrix\n     */\n    ownMatrixCache: null,\n\n    /**\n     * storage for object full transform matrix\n     */\n    matrixCache: null,\n\n    /**\n     * return correct set of coordinates for intersection\n     */\n    getCoords: function(absolute, calculate) {\n      if (!this.oCoords) {\n        this.setCoords();\n      }\n      var coords = absolute ? this.aCoords : this.oCoords;\n      return getCoords(calculate ? this.calcCoords(absolute) : coords);\n    },\n\n    /**\n     * Checks if object intersects with an area formed by 2 points\n     * @param {Object} pointTL top-left point of area\n     * @param {Object} pointBR bottom-right point of area\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object intersects with an area formed by 2 points\n     */\n    intersectsWithRect: function(pointTL, pointBR, absolute, calculate) {\n      var coords = this.getCoords(absolute, calculate),\n          intersection = fabric.Intersection.intersectPolygonRectangle(\n            coords,\n            pointTL,\n            pointBR\n          );\n      return intersection.status === 'Intersection';\n    },\n\n    /**\n     * Checks if object intersects with another object\n     * @param {Object} other Object to test\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object intersects with another object\n     */\n    intersectsWithObject: function(other, absolute, calculate) {\n      var intersection = fabric.Intersection.intersectPolygonPolygon(\n        this.getCoords(absolute, calculate),\n        other.getCoords(absolute, calculate)\n      );\n\n      return intersection.status === 'Intersection'\n        || other.isContainedWithinObject(this, absolute, calculate)\n        || this.isContainedWithinObject(other, absolute, calculate);\n    },\n\n    /**\n     * Checks if object is fully contained within area of another object\n     * @param {Object} other Object to test\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is fully contained within area of another object\n     */\n    isContainedWithinObject: function(other, absolute, calculate) {\n      var points = this.getCoords(absolute, calculate),\n          i = 0, lines = other._getImageLines(\n            calculate ? other.calcCoords(absolute) : absolute ? other.aCoords : other.oCoords\n          );\n      for (; i < 4; i++) {\n        if (!other.containsPoint(points[i], lines)) {\n          return false;\n        }\n      }\n      return true;\n    },\n\n    /**\n     * Checks if object is fully contained within area formed by 2 points\n     * @param {Object} pointTL top-left point of area\n     * @param {Object} pointBR bottom-right point of area\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is fully contained within area formed by 2 points\n     */\n    isContainedWithinRect: function(pointTL, pointBR, absolute, calculate) {\n      var boundingRect = this.getBoundingRect(absolute, calculate);\n\n      return (\n        boundingRect.left >= pointTL.x &&\n        boundingRect.left + boundingRect.width <= pointBR.x &&\n        boundingRect.top >= pointTL.y &&\n        boundingRect.top + boundingRect.height <= pointBR.y\n      );\n    },\n\n    /**\n     * Checks if point is inside the object\n     * @param {fabric.Point} point Point to check against\n     * @param {Object} [lines] object returned from @method _getImageLines\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if point is inside the object\n     */\n    containsPoint: function(point, lines, absolute, calculate) {\n      var lines = lines || this._getImageLines(\n            calculate ? this.calcCoords(absolute) : absolute ? this.aCoords : this.oCoords\n          ),\n          xPoints = this._findCrossPoints(point, lines);\n\n      // if xPoints is odd then point is inside the object\n      return (xPoints !== 0 && xPoints % 2 === 1);\n    },\n\n    /**\n     * Checks if object is contained within the canvas with current viewportTransform\n     * the check is done stopping at first point that appear on screen\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is fully contained within canvas\n     */\n    isOnScreen: function(calculate) {\n      if (!this.canvas) {\n        return false;\n      }\n      var pointTL = this.canvas.vptCoords.tl, pointBR = this.canvas.vptCoords.br;\n      var points = this.getCoords(true, calculate), point;\n      for (var i = 0; i < 4; i++) {\n        point = points[i];\n        if (point.x <= pointBR.x && point.x >= pointTL.x && point.y <= pointBR.y && point.y >= pointTL.y) {\n          return true;\n        }\n      }\n      // no points on screen, check intersection with absolute coordinates\n      if (this.intersectsWithRect(pointTL, pointBR, true)) {\n        return true;\n      }\n      // worst case scenario the object is so big that contains the screen\n      var centerPoint = { x: (pointTL.x + pointBR.x) / 2, y: (pointTL.y + pointBR.y) / 2 };\n      if (this.containsPoint(centerPoint, null, true)) {\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * Method that returns an object with the object edges in it, given the coordinates of the corners\n     * @private\n     * @param {Object} oCoords Coordinates of the object corners\n     */\n    _getImageLines: function(oCoords) {\n      return {\n        topline: {\n          o: oCoords.tl,\n          d: oCoords.tr\n        },\n        rightline: {\n          o: oCoords.tr,\n          d: oCoords.br\n        },\n        bottomline: {\n          o: oCoords.br,\n          d: oCoords.bl\n        },\n        leftline: {\n          o: oCoords.bl,\n          d: oCoords.tl\n        }\n      };\n    },\n\n    /**\n     * Helper method to determine how many cross points are between the 4 object edges\n     * and the horizontal line determined by a point on canvas\n     * @private\n     * @param {fabric.Point} point Point to check\n     * @param {Object} lines Coordinates of the object being evaluated\n     */\n    // remove yi, not used but left code here just in case.\n    _findCrossPoints: function(point, lines) {\n      var b1, b2, a1, a2, xi, // yi,\n          xcount = 0,\n          iLine;\n\n      for (var lineKey in lines) {\n        iLine = lines[lineKey];\n        // optimisation 1: line below point. no cross\n        if ((iLine.o.y < point.y) && (iLine.d.y < point.y)) {\n          continue;\n        }\n        // optimisation 2: line above point. no cross\n        if ((iLine.o.y >= point.y) && (iLine.d.y >= point.y)) {\n          continue;\n        }\n        // optimisation 3: vertical line case\n        if ((iLine.o.x === iLine.d.x) && (iLine.o.x >= point.x)) {\n          xi = iLine.o.x;\n          // yi = point.y;\n        }\n        // calculate the intersection point\n        else {\n          b1 = 0;\n          b2 = (iLine.d.y - iLine.o.y) / (iLine.d.x - iLine.o.x);\n          a1 = point.y - b1 * point.x;\n          a2 = iLine.o.y - b2 * iLine.o.x;\n\n          xi = -(a1 - a2) / (b1 - b2);\n          // yi = a1 + b1 * xi;\n        }\n        // dont count xi < point.x cases\n        if (xi >= point.x) {\n          xcount += 1;\n        }\n        // optimisation 4: specific for square images\n        if (xcount === 2) {\n          break;\n        }\n      }\n      return xcount;\n    },\n\n    /**\n     * Returns coordinates of object's bounding rectangle (left, top, width, height)\n     * the box is intented as aligned to axis of canvas.\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords / .aCoords\n     * @return {Object} Object with left, top, width, height properties\n     */\n    getBoundingRect: function(absolute, calculate) {\n      var coords = this.getCoords(absolute, calculate);\n      return fabric.util.makeBoundingBoxFromPoints(coords);\n    },\n\n    /**\n     * Returns width of an object bounding box counting transformations\n     * @return {Number} width value\n     */\n    getScaledWidth: function() {\n      return this._getTransformedDimensions().x;\n    },\n\n    /**\n     * Returns height of an object bounding box counting transformations\n     * @return {Number} height value\n     */\n    getScaledHeight: function() {\n      return this._getTransformedDimensions().y;\n    },\n\n    /**\n     * Makes sure the scale is valid and modifies it if necessary\n     * @private\n     * @param {Number} value\n     * @return {Number}\n     */\n    _constrainScale: function(value) {\n      if (Math.abs(value) < this.minScaleLimit) {\n        if (value < 0) {\n          return -this.minScaleLimit;\n        }\n        else {\n          return this.minScaleLimit;\n        }\n      }\n      else if (value === 0) {\n        return 0.0001;\n      }\n      return value;\n    },\n\n    /**\n     * Scales an object (equally by x and y)\n     * @param {Number} value Scale factor\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scale: function(value) {\n      this._set('scaleX', value);\n      this._set('scaleY', value);\n      return this.setCoords();\n    },\n\n    /**\n     * Scales an object to a given width, with respect to bounding box (scaling by x/y equally)\n     * @param {Number} value New width value\n     * @param {Boolean} absolute ignore viewport\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scaleToWidth: function(value, absolute) {\n      // adjust to bounding rect factor so that rotated shapes would fit as well\n      var boundingRectFactor = this.getBoundingRect(absolute).width / this.getScaledWidth();\n      return this.scale(value / this.width / boundingRectFactor);\n    },\n\n    /**\n     * Scales an object to a given height, with respect to bounding box (scaling by x/y equally)\n     * @param {Number} value New height value\n     * @param {Boolean} absolute ignore viewport\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scaleToHeight: function(value, absolute) {\n      // adjust to bounding rect factor so that rotated shapes would fit as well\n      var boundingRectFactor = this.getBoundingRect(absolute).height / this.getScaledHeight();\n      return this.scale(value / this.height / boundingRectFactor);\n    },\n\n    /**\n     * Calculate and returns the .coords of an object.\n     * @return {Object} Object with tl, tr, br, bl ....\n     * @chainable\n     */\n    calcCoords: function(absolute) {\n      var theta = degreesToRadians(this.angle),\n          vpt = this.getViewportTransform(),\n          dim = absolute ? this._getTransformedDimensions() : this._calculateCurrentDimensions(),\n          currentWidth = dim.x, currentHeight = dim.y,\n          sinTh = theta ? Math.sin(theta) : 0,\n          cosTh = theta ? Math.cos(theta) : 1,\n          _angle = currentWidth > 0 ? Math.atan(currentHeight / currentWidth) : 0,\n          _hypotenuse = (currentWidth / Math.cos(_angle)) / 2,\n          offsetX = Math.cos(_angle + theta) * _hypotenuse,\n          offsetY = Math.sin(_angle + theta) * _hypotenuse,\n          center = this.getCenterPoint(),\n          // offset added for rotate and scale actions\n          coords = absolute ? center : fabric.util.transformPoint(center, vpt),\n          tl  = new fabric.Point(coords.x - offsetX, coords.y - offsetY),\n          tr  = new fabric.Point(tl.x + (currentWidth * cosTh), tl.y + (currentWidth * sinTh)),\n          bl  = new fabric.Point(tl.x - (currentHeight * sinTh), tl.y + (currentHeight * cosTh)),\n          br  = new fabric.Point(coords.x + offsetX, coords.y + offsetY);\n      if (!absolute) {\n        var ml  = new fabric.Point((tl.x + bl.x) / 2, (tl.y + bl.y) / 2),\n            mt  = new fabric.Point((tr.x + tl.x) / 2, (tr.y + tl.y) / 2),\n            mr  = new fabric.Point((br.x + tr.x) / 2, (br.y + tr.y) / 2),\n            mb  = new fabric.Point((br.x + bl.x) / 2, (br.y + bl.y) / 2),\n            mtr = new fabric.Point(mt.x + sinTh * this.rotatingPointOffset, mt.y - cosTh * this.rotatingPointOffset);\n      }\n\n      // debugging\n\n      /* setTimeout(function() {\n         canvas.contextTop.fillStyle = 'green';\n         canvas.contextTop.fillRect(mb.x, mb.y, 3, 3);\n         canvas.contextTop.fillRect(bl.x, bl.y, 3, 3);\n         canvas.contextTop.fillRect(br.x, br.y, 3, 3);\n         canvas.contextTop.fillRect(tl.x, tl.y, 3, 3);\n         canvas.contextTop.fillRect(tr.x, tr.y, 3, 3);\n         canvas.contextTop.fillRect(ml.x, ml.y, 3, 3);\n         canvas.contextTop.fillRect(mr.x, mr.y, 3, 3);\n         canvas.contextTop.fillRect(mt.x, mt.y, 3, 3);\n         canvas.contextTop.fillRect(mtr.x, mtr.y, 3, 3);\n       }, 50); */\n\n      var coords = {\n        // corners\n        tl: tl, tr: tr, br: br, bl: bl,\n      };\n      if (!absolute) {\n        // middle\n        coords.ml = ml;\n        coords.mt = mt;\n        coords.mr = mr;\n        coords.mb = mb;\n        // rotating point\n        coords.mtr = mtr;\n      }\n      return coords;\n    },\n\n    /**\n     * Sets corner position coordinates based on current angle, width and height\n     * See https://github.com/kangax/fabric.js/wiki/When-to-call-setCoords\n     * @param {Boolean} [ignoreZoom] set oCoords with or without the viewport transform.\n     * @param {Boolean} [skipAbsolute] skip calculation of aCoords, usefull in setViewportTransform\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setCoords: function(ignoreZoom, skipAbsolute) {\n      this.oCoords = this.calcCoords(ignoreZoom);\n      if (!skipAbsolute) {\n        this.aCoords = this.calcCoords(true);\n      }\n\n      // set coordinates of the draggable boxes in the corners used to scale/rotate the image\n      ignoreZoom || (this._setCornerCoords && this._setCornerCoords());\n\n      return this;\n    },\n\n    /**\n     * calculate rotation matrix of an object\n     * @return {Array} rotation matrix for the object\n     */\n    _calcRotateMatrix: function() {\n      if (this.angle) {\n        var theta = degreesToRadians(this.angle), cos = Math.cos(theta), sin = Math.sin(theta);\n        // trying to keep rounding error small, ugly but it works.\n        if (cos === 6.123233995736766e-17 || cos === -1.8369701987210297e-16) {\n          cos = 0;\n        }\n        return [cos, sin, -sin, cos, 0, 0];\n      }\n      return fabric.iMatrix.concat();\n    },\n\n    transformMatrixKey: function(skipGroup) {\n      var sep = '_', prefix = '';\n      if (!skipGroup && this.group) {\n        prefix = this.group.transformMatrixKey(skipGroup) + sep;\n      };\n      return prefix + this.top + sep + this.left + sep + this.scaleX + sep + this.scaleY +\n        sep + this.skewX + sep + this.skewY + sep + this.angle + sep + this.originX + sep + this.originY +\n        sep + this.width + sep + this.height + sep + this.strokeWidth + this.flipX + this.flipY;\n    },\n\n    /**\n     * calculate trasform Matrix that represent current transformation from\n     * object properties.\n     * @param {Boolean} [skipGroup] return transformMatrix for object and not go upward with parents\n     * @return {Array} matrix Transform Matrix for the object\n     */\n    calcTransformMatrix: function(skipGroup) {\n      if (skipGroup) {\n        return this.calcOwnMatrix();\n      }\n      var key = this.transformMatrixKey(), cache = this.matrixCache || (this.matrixCache = {});\n      if (cache.key === key) {\n        return cache.value;\n      }\n      var matrix = this.calcOwnMatrix();\n      if (this.group) {\n        matrix = multiplyMatrices(this.group.calcTransformMatrix(), matrix);\n      }\n      cache.key = key;\n      cache.value = matrix;\n      return matrix;\n    },\n\n    calcOwnMatrix: function() {\n      var key = this.transformMatrixKey(true), cache = this.ownMatrixCache || (this.ownMatrixCache = {});\n      if (cache.key === key) {\n        return cache.value;\n      }\n      var center = this.getCenterPoint(),\n          matrix = [1, 0, 0, 1, center.x, center.y],\n          rotateMatrix,\n          dimensionMatrix = this._calcDimensionsTransformMatrix(this.skewX, this.skewY, true);\n      if (this.angle) {\n        rotateMatrix = this._calcRotateMatrix();\n        matrix = multiplyMatrices(matrix, rotateMatrix);\n      }\n      matrix = multiplyMatrices(matrix, dimensionMatrix);\n      cache.key = key;\n      cache.value = matrix;\n      return matrix;\n    },\n\n    _calcDimensionsTransformMatrix: function(skewX, skewY, flipping) {\n      var skewMatrix,\n          scaleX = this.scaleX * (flipping && this.flipX ? -1 : 1),\n          scaleY = this.scaleY * (flipping && this.flipY ? -1 : 1),\n          scaleMatrix = [scaleX, 0, 0, scaleY, 0, 0];\n      if (skewX) {\n        skewMatrix = [1, 0, Math.tan(degreesToRadians(skewX)), 1];\n        scaleMatrix = multiplyMatrices(scaleMatrix, skewMatrix, true);\n      }\n      if (skewY) {\n        skewMatrix = [1, Math.tan(degreesToRadians(skewY)), 0, 1];\n        scaleMatrix = multiplyMatrices(scaleMatrix, skewMatrix, true);\n      }\n      return scaleMatrix;\n    },\n\n\n    /*\n     * Calculate object dimensions from its properties\n     * @private\n     * @return {Object} .x width dimension\n     * @return {Object} .y height dimension\n     */\n    _getNonTransformedDimensions: function() {\n      var strokeWidth = this.strokeWidth,\n          w = this.width + strokeWidth,\n          h = this.height + strokeWidth;\n      return { x: w, y: h };\n    },\n\n    /*\n     * Calculate object bounding boxdimensions from its properties scale, skew.\n     * @private\n     * @return {Object} .x width dimension\n     * @return {Object} .y height dimension\n     */\n    _getTransformedDimensions: function(skewX, skewY) {\n      if (typeof skewX === 'undefined') {\n        skewX = this.skewX;\n      }\n      if (typeof skewY === 'undefined') {\n        skewY = this.skewY;\n      }\n      var dimensions = this._getNonTransformedDimensions(),\n          dimX = dimensions.x / 2, dimY = dimensions.y / 2,\n          points = [\n            {\n              x: -dimX,\n              y: -dimY\n            },\n            {\n              x: dimX,\n              y: -dimY\n            },\n            {\n              x: -dimX,\n              y: dimY\n            },\n            {\n              x: dimX,\n              y: dimY\n            }],\n          i, transformMatrix = this._calcDimensionsTransformMatrix(skewX, skewY, false),\n          bbox;\n      for (i = 0; i < points.length; i++) {\n        points[i] = fabric.util.transformPoint(points[i], transformMatrix);\n      }\n      bbox = fabric.util.makeBoundingBoxFromPoints(points);\n      return { x: bbox.width, y: bbox.height };\n    },\n\n    /*\n     * Calculate object dimensions for controls. include padding and canvas zoom\n     * private\n     */\n    _calculateCurrentDimensions: function()  {\n      var vpt = this.getViewportTransform(),\n          dim = this._getTransformedDimensions(),\n          p = fabric.util.transformPoint(dim, vpt, true);\n\n      return p.scalarAdd(2 * this.padding);\n    },\n  });\n})();\n\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n  /**\n   * Moves an object to the bottom of the stack of drawn objects\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  sendToBack: function() {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.sendToBack.call(this.group, this);\n    }\n    else {\n      this.canvas.sendToBack(this);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object to the top of the stack of drawn objects\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  bringToFront: function() {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.bringToFront.call(this.group, this);\n    }\n    else {\n      this.canvas.bringToFront(this);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object down in stack of drawn objects\n   * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  sendBackwards: function(intersecting) {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.sendBackwards.call(this.group, this, intersecting);\n    }\n    else {\n      this.canvas.sendBackwards(this, intersecting);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object up in stack of drawn objects\n   * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  bringForward: function(intersecting) {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.bringForward.call(this.group, this, intersecting);\n    }\n    else {\n      this.canvas.bringForward(this, intersecting);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object to specified level in stack of drawn objects\n   * @param {Number} index New position of object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  moveTo: function(index) {\n    if (this.group && this.group.type !== 'activeSelection') {\n      fabric.StaticCanvas.prototype.moveTo.call(this.group, this, index);\n    }\n    else {\n      this.canvas.moveTo(this, index);\n    }\n    return this;\n  }\n});\n\n\n/* _TO_SVG_START_ */\n(function() {\n  function getSvgColorString(prop, value) {\n    if (!value) {\n      return prop + ': none; ';\n    }\n    else if (value.toLive) {\n      return prop + ': url(#SVGID_' + value.id + '); ';\n    }\n    else {\n      var color = new fabric.Color(value),\n          str = prop + ': ' + color.toRgb() + '; ',\n          opacity = color.getAlpha();\n      if (opacity !== 1) {\n        //change the color in rgb + opacity\n        str += prop + '-opacity: ' + opacity.toString() + '; ';\n      }\n      return str;\n    }\n  }\n\n  var toFixed = fabric.util.toFixed;\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n    /**\n     * Returns styles-string for svg-export\n     * @param {Boolean} skipShadow a boolean to skip shadow filter output\n     * @return {String}\n     */\n    getSvgStyles: function(skipShadow) {\n\n      var fillRule = this.fillRule,\n          strokeWidth = this.strokeWidth ? this.strokeWidth : '0',\n          strokeDashArray = this.strokeDashArray ? this.strokeDashArray.join(' ') : 'none',\n          strokeLineCap = this.strokeLineCap ? this.strokeLineCap : 'butt',\n          strokeLineJoin = this.strokeLineJoin ? this.strokeLineJoin : 'miter',\n          strokeMiterLimit = this.strokeMiterLimit ? this.strokeMiterLimit : '4',\n          opacity = typeof this.opacity !== 'undefined' ? this.opacity : '1',\n          visibility = this.visible ? '' : ' visibility: hidden;',\n          filter = skipShadow ? '' : this.getSvgFilter(),\n          fill = getSvgColorString('fill', this.fill),\n          stroke = getSvgColorString('stroke', this.stroke);\n\n      return [\n        stroke,\n        'stroke-width: ', strokeWidth, '; ',\n        'stroke-dasharray: ', strokeDashArray, '; ',\n        'stroke-linecap: ', strokeLineCap, '; ',\n        'stroke-linejoin: ', strokeLineJoin, '; ',\n        'stroke-miterlimit: ', strokeMiterLimit, '; ',\n        fill,\n        'fill-rule: ', fillRule, '; ',\n        'opacity: ', opacity, ';',\n        filter,\n        visibility\n      ].join('');\n    },\n\n    /**\n     * Returns styles-string for svg-export\n     * @param {Object} style style properties for the span a boolean to skip shadow filter output\n     * @param {Boolean} useWhiteSpace a boolean to include an additional attribute in the style.\n     * @return {String}\n     */\n    getSvgSpanStyles: function(style, useWhiteSpace) {\n      var term = '; ',\n          strokeWidth = style.strokeWidth ? 'stroke-width: ' + style.strokeWidth + term : '',\n          fontFamily = style.fontFamily ? 'font-family: ' + style.fontFamily.replace(/\"/g, '\\'') + term : '',\n          fontSize = style.fontSize ? 'font-size: ' + style.fontSize + 'px' + term : '',\n          fontStyle = style.fontStyle ? 'font-style: ' + style.fontStyle + term : '',\n          fontWeight = style.fontWeight ? 'font-weight: ' + style.fontWeight + term : '',\n          fill = style.fill ? getSvgColorString('fill', style.fill) : '',\n          stroke = style.stroke ? getSvgColorString('stroke', style.stroke) : '',\n          textDecoration = this.getSvgTextDecoration(style);\n      if (textDecoration) {\n        textDecoration = 'text-decoration: ' + textDecoration + term;\n      }\n      return [\n        stroke,\n        strokeWidth,\n        fontFamily,\n        fontSize,\n        fontStyle,\n        fontWeight,\n        textDecoration,\n        fill,\n        useWhiteSpace ? 'white-space: pre; ' : ''\n      ].join('');\n    },\n\n    getSvgTextDecoration: function(style) {\n      if ('overline' in style || 'underline' in style || 'linethrough' in style) {\n        return (style.overline ? 'overline ' : '') +\n          (style.underline ? 'underline ' : '') + (style.linethrough ? 'line-through ' : '');\n      }\n      return '';\n    },\n\n    /**\n     * Returns filter for svg shadow\n     * @return {String}\n     */\n    getSvgFilter: function() {\n      return this.shadow ? 'filter: url(#SVGID_' + this.shadow.id + ');' : '';\n    },\n\n    /**\n     * Returns id attribute for svg output\n     * @return {String}\n     */\n    getSvgId: function() {\n      return this.id ? 'id=\"' + this.id + '\" ' : '';\n    },\n\n    /**\n     * Returns transform-string for svg-export\n     * @return {String}\n     */\n    getSvgTransform: function() {\n      var angle = this.angle,\n          skewX = (this.skewX % 360),\n          skewY = (this.skewY % 360),\n          center = this.getCenterPoint(),\n\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n\n          translatePart = 'translate(' +\n                            toFixed(center.x, NUM_FRACTION_DIGITS) +\n                            ' ' +\n                            toFixed(center.y, NUM_FRACTION_DIGITS) +\n                          ')',\n\n          anglePart = angle !== 0\n            ? (' rotate(' + toFixed(angle, NUM_FRACTION_DIGITS) + ')')\n            : '',\n\n          scalePart = (this.scaleX === 1 && this.scaleY === 1)\n            ? '' :\n            (' scale(' +\n              toFixed(this.scaleX, NUM_FRACTION_DIGITS) +\n              ' ' +\n              toFixed(this.scaleY, NUM_FRACTION_DIGITS) +\n            ')'),\n\n          skewXPart = skewX !== 0 ? ' skewX(' + toFixed(skewX, NUM_FRACTION_DIGITS) + ')' : '',\n\n          skewYPart = skewY !== 0 ? ' skewY(' + toFixed(skewY, NUM_FRACTION_DIGITS) + ')' : '',\n\n          flipXPart = this.flipX ? ' matrix(-1 0 0 1 0 0) ' : '',\n\n          flipYPart = this.flipY ? ' matrix(1 0 0 -1 0 0)' : '';\n\n      return [\n        translatePart, anglePart, scalePart, flipXPart, flipYPart, skewXPart, skewYPart\n      ].join('');\n    },\n\n    /**\n     * Returns transform-string for svg-export from the transform matrix of single elements\n     * @return {String}\n     */\n    getSvgTransformMatrix: function() {\n      return this.transformMatrix ? ' matrix(' + this.transformMatrix.join(' ') + ') ' : '';\n    },\n\n    _setSVGBg: function(textBgRects) {\n      if (this.backgroundColor) {\n        var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n        textBgRects.push(\n          '\\t\\t<rect ',\n          this._getFillAttributes(this.backgroundColor),\n          ' x=\"',\n          toFixed(-this.width / 2, NUM_FRACTION_DIGITS),\n          '\" y=\"',\n          toFixed(-this.height / 2, NUM_FRACTION_DIGITS),\n          '\" width=\"',\n          toFixed(this.width, NUM_FRACTION_DIGITS),\n          '\" height=\"',\n          toFixed(this.height, NUM_FRACTION_DIGITS),\n          '\"></rect>\\n');\n      }\n    },\n\n    /**\n     * @private\n     */\n    _createBaseSVGMarkup: function() {\n      var markup = [];\n\n      if (this.fill && this.fill.toLive) {\n        markup.push(this.fill.toSVG(this, false));\n      }\n      if (this.stroke && this.stroke.toLive) {\n        markup.push(this.stroke.toSVG(this, false));\n      }\n      if (this.shadow) {\n        markup.push(this.shadow.toSVG(this));\n      }\n      return markup;\n    },\n\n    addPaintOrder: function() {\n      return this.paintFirst !== 'fill' ? ' paint-order=\"' + this.paintFirst + '\" ' : '';\n    }\n  });\n})();\n/* _TO_SVG_END_ */\n\n\n(function() {\n\n  var extend = fabric.util.object.extend,\n      originalSet = 'stateProperties';\n\n  /*\n    Depends on `stateProperties`\n  */\n  function saveProps(origin, destination, props) {\n    var tmpObj = { }, deep = true;\n    props.forEach(function(prop) {\n      tmpObj[prop] = origin[prop];\n    });\n    extend(origin[destination], tmpObj, deep);\n  }\n\n  function _isEqual(origValue, currentValue, firstPass) {\n    if (origValue === currentValue) {\n      // if the objects are identical, return\n      return true;\n    }\n    else if (Array.isArray(origValue)) {\n      if (origValue.length !== currentValue.length) {\n        return false;\n      }\n      for (var i = 0, len = origValue.length; i < len; i++) {\n        if (!_isEqual(origValue[i], currentValue[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    else if (origValue && typeof origValue === 'object') {\n      var keys = Object.keys(origValue), key;\n      if (!firstPass && keys.length !== Object.keys(currentValue).length) {\n        return false;\n      }\n      for (var i = 0, len = keys.length; i < len; i++) {\n        key = keys[i];\n        if (!_isEqual(origValue[key], currentValue[key])) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Returns true if object state (one of its state properties) was changed\n     * @param {String} [propertySet] optional name for the set of property we want to save\n     * @return {Boolean} true if instance' state has changed since `{@link fabric.Object#saveState}` was called\n     */\n    hasStateChanged: function(propertySet) {\n      propertySet = propertySet || originalSet;\n      var dashedPropertySet = '_' + propertySet;\n      if (Object.keys(this[dashedPropertySet]).length < this[propertySet].length) {\n        return true;\n      }\n      return !_isEqual(this[dashedPropertySet], this, true);\n    },\n\n    /**\n     * Saves state of an object\n     * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\n     * @return {fabric.Object} thisArg\n     */\n    saveState: function(options) {\n      var propertySet = options && options.propertySet || originalSet,\n          destination = '_' + propertySet;\n      if (!this[destination]) {\n        return this.setupState(options);\n      }\n      saveProps(this, destination, this[propertySet]);\n      if (options && options.stateProperties) {\n        saveProps(this, destination, options.stateProperties);\n      }\n      return this;\n    },\n\n    /**\n     * Setups state of an object\n     * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\n     * @return {fabric.Object} thisArg\n     */\n    setupState: function(options) {\n      options = options || { };\n      var propertySet = options.propertySet || originalSet;\n      options.propertySet = propertySet;\n      this['_' + propertySet] = { };\n      this.saveState(options);\n      return this;\n    }\n  });\n})();\n\n\n(function() {\n\n  var degreesToRadians = fabric.util.degreesToRadians;\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * The object interactivity controls.\n     * @private\n     */\n    _controlsVisibility: null,\n\n    /**\n     * Determines which corner has been clicked\n     * @private\n     * @param {Object} pointer The pointer indicating the mouse position\n     * @return {String|Boolean} corner code (tl, tr, bl, br, etc.), or false if nothing is found\n     */\n    _findTargetCorner: function(pointer) {\n      // objects in group, anykind, are not self modificable,\n      // must not return an hovered corner.\n      if (!this.hasControls || this.group || (!this.canvas || this.canvas._activeObject !== this)) {\n        return false;\n      }\n\n      var ex = pointer.x,\n          ey = pointer.y,\n          xPoints,\n          lines;\n      this.__corner = 0;\n      for (var i in this.oCoords) {\n\n        if (!this.isControlVisible(i)) {\n          continue;\n        }\n\n        if (i === 'mtr' && !this.hasRotatingPoint) {\n          continue;\n        }\n\n        if (this.get('lockUniScaling') &&\n           (i === 'mt' || i === 'mr' || i === 'mb' || i === 'ml')) {\n          continue;\n        }\n\n        lines = this._getImageLines(this.oCoords[i].corner);\n\n        // debugging\n\n        // canvas.contextTop.fillRect(lines.bottomline.d.x, lines.bottomline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.bottomline.o.x, lines.bottomline.o.y, 2, 2);\n\n        // canvas.contextTop.fillRect(lines.leftline.d.x, lines.leftline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.leftline.o.x, lines.leftline.o.y, 2, 2);\n\n        // canvas.contextTop.fillRect(lines.topline.d.x, lines.topline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.topline.o.x, lines.topline.o.y, 2, 2);\n\n        // canvas.contextTop.fillRect(lines.rightline.d.x, lines.rightline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.rightline.o.x, lines.rightline.o.y, 2, 2);\n\n        xPoints = this._findCrossPoints({ x: ex, y: ey }, lines);\n        if (xPoints !== 0 && xPoints % 2 === 1) {\n          this.__corner = i;\n          return i;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Sets the coordinates of the draggable boxes in the corners of\n     * the image used to scale/rotate it.\n     * @private\n     */\n    _setCornerCoords: function() {\n      var coords = this.oCoords,\n          newTheta = degreesToRadians(45 - this.angle),\n          /* Math.sqrt(2 * Math.pow(this.cornerSize, 2)) / 2, */\n          /* 0.707106 stands for sqrt(2)/2 */\n          cornerHypotenuse = this.cornerSize * 0.707106,\n          cosHalfOffset = cornerHypotenuse * Math.cos(newTheta),\n          sinHalfOffset = cornerHypotenuse * Math.sin(newTheta),\n          x, y;\n\n      for (var point in coords) {\n        x = coords[point].x;\n        y = coords[point].y;\n        coords[point].corner = {\n          tl: {\n            x: x - sinHalfOffset,\n            y: y - cosHalfOffset\n          },\n          tr: {\n            x: x + cosHalfOffset,\n            y: y - sinHalfOffset\n          },\n          bl: {\n            x: x - cosHalfOffset,\n            y: y + sinHalfOffset\n          },\n          br: {\n            x: x + sinHalfOffset,\n            y: y + cosHalfOffset\n          }\n        };\n      }\n    },\n\n    /**\n     * Draws a colored layer behind the object, inside its selection borders.\n     * Requires public options: padding, selectionBackgroundColor\n     * this function is called when the context is transformed\n     * has checks to be skipped when the object is on a staticCanvas\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawSelectionBackground: function(ctx) {\n      if (!this.selectionBackgroundColor ||\n        (this.canvas && !this.canvas.interactive) ||\n        (this.canvas && this.canvas._activeObject !== this)\n      ) {\n        return this;\n      }\n      ctx.save();\n      var center = this.getCenterPoint(), wh = this._calculateCurrentDimensions(),\n          vpt = this.canvas.viewportTransform;\n      ctx.translate(center.x, center.y);\n      ctx.scale(1 / vpt[0], 1 / vpt[3]);\n      ctx.rotate(degreesToRadians(this.angle));\n      ctx.fillStyle = this.selectionBackgroundColor;\n      ctx.fillRect(-wh.x / 2, -wh.y / 2, wh.x, wh.y);\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws borders of an object's bounding box.\n     * Requires public properties: width, height\n     * Requires public options: padding, borderColor\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @param {Object} styleOverride object to override the object style\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawBorders: function(ctx, styleOverride) {\n      styleOverride = styleOverride || {};\n      var wh = this._calculateCurrentDimensions(),\n          strokeWidth = 1 / this.borderScaleFactor,\n          width = wh.x + strokeWidth,\n          height = wh.y + strokeWidth,\n          drawRotatingPoint = typeof styleOverride.hasRotatingPoint !== 'undefined' ?\n            styleOverride.hasRotatingPoint : this.hasRotatingPoint,\n          hasControls = typeof styleOverride.hasControls !== 'undefined' ?\n            styleOverride.hasControls : this.hasControls,\n          rotatingPointOffset = typeof styleOverride.rotatingPointOffset !== 'undefined' ?\n            styleOverride.rotatingPointOffset : this.rotatingPointOffset;\n\n      ctx.save();\n      ctx.strokeStyle = styleOverride.borderColor || this.borderColor;\n      this._setLineDash(ctx, styleOverride.borderDashArray || this.borderDashArray, null);\n\n      ctx.strokeRect(\n        -width / 2,\n        -height / 2,\n        width,\n        height\n      );\n\n      if (drawRotatingPoint && this.isControlVisible('mtr') && hasControls) {\n\n        var rotateHeight = -height / 2;\n\n        ctx.beginPath();\n        ctx.moveTo(0, rotateHeight);\n        ctx.lineTo(0, rotateHeight - rotatingPointOffset);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws borders of an object's bounding box when it is inside a group.\n     * Requires public properties: width, height\n     * Requires public options: padding, borderColor\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @param {object} options object representing current object parameters\n     * @param {Object} styleOverride object to override the object style\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawBordersInGroup: function(ctx, options, styleOverride) {\n      styleOverride = styleOverride || {};\n      var p = this._getNonTransformedDimensions(),\n          matrix = fabric.util.customTransformMatrix(options.scaleX, options.scaleY, options.skewX),\n          wh = fabric.util.transformPoint(p, matrix),\n          strokeWidth = 1 / this.borderScaleFactor,\n          width = wh.x + strokeWidth,\n          height = wh.y + strokeWidth;\n\n      ctx.save();\n      this._setLineDash(ctx, styleOverride.borderDashArray || this.borderDashArray, null);\n      ctx.strokeStyle = styleOverride.borderColor || this.borderColor;\n\n      ctx.strokeRect(\n        -width / 2,\n        -height / 2,\n        width,\n        height\n      );\n\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws corners of an object's bounding box.\n     * Requires public properties: width, height\n     * Requires public options: cornerSize, padding\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @param {Object} styleOverride object to override the object style\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawControls: function(ctx, styleOverride) {\n      styleOverride = styleOverride || {};\n      var wh = this._calculateCurrentDimensions(),\n          width = wh.x,\n          height = wh.y,\n          scaleOffset = styleOverride.cornerSize || this.cornerSize,\n          left = -(width + scaleOffset) / 2,\n          top = -(height + scaleOffset) / 2,\n          transparentCorners = typeof styleOverride.transparentCorners !== 'undefined' ?\n            styleOverride.transparentCorners : this.transparentCorners,\n          hasRotatingPoint = typeof styleOverride.hasRotatingPoint !== 'undefined' ?\n            styleOverride.hasRotatingPoint : this.hasRotatingPoint,\n          methodName = transparentCorners ? 'stroke' : 'fill';\n\n      ctx.save();\n      ctx.strokeStyle = ctx.fillStyle = styleOverride.cornerColor || this.cornerColor;\n      if (!this.transparentCorners) {\n        ctx.strokeStyle = styleOverride.cornerStrokeColor || this.cornerStrokeColor;\n      }\n      this._setLineDash(ctx, styleOverride.cornerDashArray || this.cornerDashArray, null);\n\n      // top-left\n      this._drawControl('tl', ctx, methodName,\n        left,\n        top, styleOverride);\n\n      // top-right\n      this._drawControl('tr', ctx, methodName,\n        left + width,\n        top, styleOverride);\n\n      // bottom-left\n      this._drawControl('bl', ctx, methodName,\n        left,\n        top + height, styleOverride);\n\n      // bottom-right\n      this._drawControl('br', ctx, methodName,\n        left + width,\n        top + height, styleOverride);\n\n      if (!this.get('lockUniScaling')) {\n\n        // middle-top\n        this._drawControl('mt', ctx, methodName,\n          left + width / 2,\n          top, styleOverride);\n\n        // middle-bottom\n        this._drawControl('mb', ctx, methodName,\n          left + width / 2,\n          top + height, styleOverride);\n\n        // middle-right\n        this._drawControl('mr', ctx, methodName,\n          left + width,\n          top + height / 2, styleOverride);\n\n        // middle-left\n        this._drawControl('ml', ctx, methodName,\n          left,\n          top + height / 2, styleOverride);\n      }\n\n      // middle-top-rotate\n      if (hasRotatingPoint) {\n        this._drawControl('mtr', ctx, methodName,\n          left + width / 2,\n          top - this.rotatingPointOffset, styleOverride);\n      }\n\n      ctx.restore();\n\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _drawControl: function(control, ctx, methodName, left, top, styleOverride) {\n      styleOverride = styleOverride || {};\n      if (!this.isControlVisible(control)) {\n        return;\n      }\n      var size = this.cornerSize, stroke = !this.transparentCorners && this.cornerStrokeColor;\n      switch (styleOverride.cornerStyle || this.cornerStyle) {\n        case 'circle':\n          ctx.beginPath();\n          ctx.arc(left + size / 2, top + size / 2, size / 2, 0, 2 * Math.PI, false);\n          ctx[methodName]();\n          if (stroke) {\n            ctx.stroke();\n          }\n          break;\n        default:\n          this.transparentCorners || ctx.clearRect(left, top, size, size);\n          ctx[methodName + 'Rect'](left, top, size, size);\n          if (stroke) {\n            ctx.strokeRect(left, top, size, size);\n          }\n      }\n    },\n\n    /**\n     * Returns true if the specified control is visible, false otherwise.\n     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n     * @returns {Boolean} true if the specified control is visible, false otherwise\n     */\n    isControlVisible: function(controlName) {\n      return this._getControlsVisibility()[controlName];\n    },\n\n    /**\n     * Sets the visibility of the specified control.\n     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n     * @param {Boolean} visible true to set the specified control visible, false otherwise\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setControlVisible: function(controlName, visible) {\n      this._getControlsVisibility()[controlName] = visible;\n      return this;\n    },\n\n    /**\n     * Sets the visibility state of object controls.\n     * @param {Object} [options] Options object\n     * @param {Boolean} [options.bl] true to enable the bottom-left control, false to disable it\n     * @param {Boolean} [options.br] true to enable the bottom-right control, false to disable it\n     * @param {Boolean} [options.mb] true to enable the middle-bottom control, false to disable it\n     * @param {Boolean} [options.ml] true to enable the middle-left control, false to disable it\n     * @param {Boolean} [options.mr] true to enable the middle-right control, false to disable it\n     * @param {Boolean} [options.mt] true to enable the middle-top control, false to disable it\n     * @param {Boolean} [options.tl] true to enable the top-left control, false to disable it\n     * @param {Boolean} [options.tr] true to enable the top-right control, false to disable it\n     * @param {Boolean} [options.mtr] true to enable the middle-top-rotate control, false to disable it\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setControlsVisibility: function(options) {\n      options || (options = { });\n\n      for (var p in options) {\n        this.setControlVisible(p, options[p]);\n      }\n      return this;\n    },\n\n    /**\n     * Returns the instance of the control visibility set for this object.\n     * @private\n     * @returns {Object}\n     */\n    _getControlsVisibility: function() {\n      if (!this._controlsVisibility) {\n        this._controlsVisibility = {\n          tl: true,\n          tr: true,\n          br: true,\n          bl: true,\n          ml: true,\n          mt: true,\n          mr: true,\n          mb: true,\n          mtr: true\n        };\n      }\n      return this._controlsVisibility;\n    },\n\n    /**\n     * This callback function is called every time _discardActiveObject or _setActiveObject\n     * try to to deselect this object. If the function returns true, the process is cancelled\n     * @param {Object} [options] options sent from the upper functions\n     * @param {Event} [options.e] event if the process is generated by an event\n     */\n    onDeselect: function() {\n      // implemented by sub-classes, as needed.\n    },\n\n\n    /**\n     * This callback function is called every time _discardActiveObject or _setActiveObject\n     * try to to select this object. If the function returns true, the process is cancelled\n     * @param {Object} [options] options sent from the upper functions\n     * @param {Event} [options.e] event if the process is generated by an event\n     */\n    onSelect: function() {\n      // implemented by sub-classes, as needed.\n    }\n  });\n})();\n\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Animation duration (in ms) for fx* methods\n   * @type Number\n   * @default\n   */\n  FX_DURATION: 500,\n\n  /**\n   * Centers object horizontally with animation.\n   * @param {fabric.Object} object Object to center\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxCenterObjectH: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.left,\n      endValue: this.getCenter().left,\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        object.set('left', value);\n        _this.requestRenderAll();\n        onChange();\n      },\n      onComplete: function() {\n        object.setCoords();\n        onComplete();\n      }\n    });\n\n    return this;\n  },\n\n  /**\n   * Centers object vertically with animation.\n   * @param {fabric.Object} object Object to center\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxCenterObjectV: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.top,\n      endValue: this.getCenter().top,\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        object.set('top', value);\n        _this.requestRenderAll();\n        onChange();\n      },\n      onComplete: function() {\n        object.setCoords();\n        onComplete();\n      }\n    });\n\n    return this;\n  },\n\n  /**\n   * Same as `fabric.Canvas#remove` but animated\n   * @param {fabric.Object} object Object to remove\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxRemove: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.opacity,\n      endValue: 0,\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        object.set('opacity', value);\n        _this.requestRenderAll();\n        onChange();\n      },\n      onComplete: function () {\n        _this.remove(object);\n        onComplete();\n      }\n    });\n\n    return this;\n  }\n});\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n  /**\n   * Animates object's properties\n   * @param {String|Object} property Property to animate (if string) or properties to animate (if object)\n   * @param {Number|Object} value Value to animate property to (if string was given first) or options object\n   * @return {fabric.Object} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#animation}\n   * @chainable\n   *\n   * As object — multiple properties\n   *\n   * object.animate({ left: ..., top: ... });\n   * object.animate({ left: ..., top: ... }, { duration: ... });\n   *\n   * As string — one property\n   *\n   * object.animate('left', ...);\n   * object.animate('left', { duration: ... });\n   *\n   */\n  animate: function() {\n    if (arguments[0] && typeof arguments[0] === 'object') {\n      var propsToAnimate = [], prop, skipCallbacks;\n      for (prop in arguments[0]) {\n        propsToAnimate.push(prop);\n      }\n      for (var i = 0, len = propsToAnimate.length; i < len; i++) {\n        prop = propsToAnimate[i];\n        skipCallbacks = i !== len - 1;\n        this._animate(prop, arguments[0][prop], arguments[1], skipCallbacks);\n      }\n    }\n    else {\n      this._animate.apply(this, arguments);\n    }\n    return this;\n  },\n\n  /**\n   * @private\n   * @param {String} property Property to animate\n   * @param {String} to Value to animate to\n   * @param {Object} [options] Options object\n   * @param {Boolean} [skipCallbacks] When true, callbacks like onchange and oncomplete are not invoked\n   */\n  _animate: function(property, to, options, skipCallbacks) {\n    var _this = this, propPair;\n\n    to = to.toString();\n\n    if (!options) {\n      options = { };\n    }\n    else {\n      options = fabric.util.object.clone(options);\n    }\n\n    if (~property.indexOf('.')) {\n      propPair = property.split('.');\n    }\n\n    var currentValue = propPair\n      ? this.get(propPair[0])[propPair[1]]\n      : this.get(property);\n\n    if (!('from' in options)) {\n      options.from = currentValue;\n    }\n\n    if (~to.indexOf('=')) {\n      to = currentValue + parseFloat(to.replace('=', ''));\n    }\n    else {\n      to = parseFloat(to);\n    }\n\n    fabric.util.animate({\n      startValue: options.from,\n      endValue: to,\n      byValue: options.by,\n      easing: options.easing,\n      duration: options.duration,\n      abort: options.abort && function() {\n        return options.abort.call(_this);\n      },\n      onChange: function(value, valueProgress, timeProgress) {\n        if (propPair) {\n          _this[propPair[0]][propPair[1]] = value;\n        }\n        else {\n          _this.set(property, value);\n        }\n        if (skipCallbacks) {\n          return;\n        }\n        options.onChange && options.onChange(value, valueProgress, timeProgress);\n      },\n      onComplete: function(value, valueProgress, timeProgress) {\n        if (skipCallbacks) {\n          return;\n        }\n\n        _this.setCoords();\n        options.onComplete && options.onComplete(value, valueProgress, timeProgress);\n      }\n    });\n  }\n});\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      coordProps = { x1: 1, x2: 1, y1: 1, y2: 1 },\n      supportsLineDash = fabric.StaticCanvas.supports('setLineDash');\n\n  if (fabric.Line) {\n    fabric.warn('fabric.Line is already defined');\n    return;\n  }\n\n  /**\n   * Line class\n   * @class fabric.Line\n   * @extends fabric.Object\n   * @see {@link fabric.Line#initialize} for constructor definition\n   */\n  fabric.Line = fabric.util.createClass(fabric.Object, /** @lends fabric.Line.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'line',\n\n    /**\n     * x value or first line edge\n     * @type Number\n     * @default\n     */\n    x1: 0,\n\n    /**\n     * y value or first line edge\n     * @type Number\n     * @default\n     */\n    y1: 0,\n\n    /**\n     * x value or second line edge\n     * @type Number\n     * @default\n     */\n    x2: 0,\n\n    /**\n     * y value or second line edge\n     * @type Number\n     * @default\n     */\n    y2: 0,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('x1', 'x2', 'y1', 'y2'),\n\n    /**\n     * Constructor\n     * @param {Array} [points] Array of points\n     * @param {Object} [options] Options object\n     * @return {fabric.Line} thisArg\n     */\n    initialize: function(points, options) {\n      if (!points) {\n        points = [0, 0, 0, 0];\n      }\n\n      this.callSuper('initialize', options);\n\n      this.set('x1', points[0]);\n      this.set('y1', points[1]);\n      this.set('x2', points[2]);\n      this.set('y2', points[3]);\n\n      this._setWidthHeight(options);\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options\n     */\n    _setWidthHeight: function(options) {\n      options || (options = { });\n\n      this.width = Math.abs(this.x2 - this.x1);\n      this.height = Math.abs(this.y2 - this.y1);\n\n      this.left = 'left' in options\n        ? options.left\n        : this._getLeftToOriginX();\n\n      this.top = 'top' in options\n        ? options.top\n        : this._getTopToOriginY();\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n      if (typeof coordProps[key] !== 'undefined') {\n        this._setWidthHeight();\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     * @return {Number} leftToOriginX Distance from left edge of canvas to originX of Line.\n     */\n    _getLeftToOriginX: makeEdgeToOriginGetter(\n      { // property names\n        origin: 'originX',\n        axis1: 'x1',\n        axis2: 'x2',\n        dimension: 'width'\n      },\n      { // possible values of origin\n        nearest: 'left',\n        center: 'center',\n        farthest: 'right'\n      }\n    ),\n\n    /**\n     * @private\n     * @return {Number} topToOriginY Distance from top edge of canvas to originY of Line.\n     */\n    _getTopToOriginY: makeEdgeToOriginGetter(\n      { // property names\n        origin: 'originY',\n        axis1: 'y1',\n        axis2: 'y2',\n        dimension: 'height'\n      },\n      { // possible values of origin\n        nearest: 'top',\n        center: 'center',\n        farthest: 'bottom'\n      }\n    ),\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      ctx.beginPath();\n\n      if (!this.strokeDashArray || this.strokeDashArray && supportsLineDash) {\n        // move from center (of virtual box) to its left/top corner\n        // we can't assume x1, y1 is top left and x2, y2 is bottom right\n        var p = this.calcLinePoints();\n        ctx.moveTo(p.x1, p.y1);\n        ctx.lineTo(p.x2, p.y2);\n      }\n\n      ctx.lineWidth = this.strokeWidth;\n\n      // TODO: test this\n      // make sure setting \"fill\" changes color of a line\n      // (by copying fillStyle to strokeStyle, since line is stroked, not filled)\n      var origStrokeStyle = ctx.strokeStyle;\n      ctx.strokeStyle = this.stroke || ctx.fillStyle;\n      this.stroke && this._renderStroke(ctx);\n      ctx.strokeStyle = origStrokeStyle;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var p = this.calcLinePoints();\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, p.x1, p.y1, p.x2, p.y2, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /**\n     * This function is an helper for svg import. it returns the center of the object in the svg\n     * untransformed coordinates\n     * @private\n     * @return {Object} center point from element coordinates\n     */\n    _findCenterFromElement: function() {\n      return {\n        x: (this.x1 + this.x2) / 2,\n        y: (this.y1 + this.y2) / 2,\n      };\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @methd toObject\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), this.calcLinePoints());\n    },\n\n    /*\n     * Calculate object dimensions from its properties\n     * @private\n     */\n    _getNonTransformedDimensions: function() {\n      var dim = this.callSuper('_getNonTransformedDimensions');\n      if (this.strokeLineCap === 'butt') {\n        if (this.width === 0) {\n          dim.y -= this.strokeWidth;\n        }\n        if (this.height === 0) {\n          dim.x -= this.strokeWidth;\n        }\n      }\n      return dim;\n    },\n\n    /**\n     * Recalculates line points given width and height\n     * @private\n     */\n    calcLinePoints: function() {\n      var xMult = this.x1 <= this.x2 ? -1 : 1,\n          yMult = this.y1 <= this.y2 ? -1 : 1,\n          x1 = (xMult * this.width * 0.5),\n          y1 = (yMult * this.height * 0.5),\n          x2 = (xMult * this.width * -0.5),\n          y2 = (yMult * this.height * -0.5);\n\n      return {\n        x1: x1,\n        x2: x2,\n        y1: y1,\n        y2: y2\n      };\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(),\n          p = this.calcLinePoints();\n      markup.push(\n        '<line ', this.getSvgId(),\n        'x1=\"', p.x1,\n        '\" y1=\"', p.y1,\n        '\" x2=\"', p.x2,\n        '\" y2=\"', p.y2,\n        '\" style=\"', this.getSvgStyles(),\n        '\" transform=\"', this.getSvgTransform(),\n        this.getSvgTransformMatrix(),\n        '\"/>\\n'\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Line.fromElement})\n   * @static\n   * @memberOf fabric.Line\n   * @see http://www.w3.org/TR/SVG/shapes.html#LineElement\n   */\n  fabric.Line.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x1 y1 x2 y2'.split(' '));\n\n  /**\n   * Returns fabric.Line instance from an SVG element\n   * @static\n   * @memberOf fabric.Line\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @param {Function} [callback] callback function invoked after parsing\n   */\n  fabric.Line.fromElement = function(element, callback, options) {\n    options = options || { };\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Line.ATTRIBUTE_NAMES),\n        points = [\n          parsedAttributes.x1 || 0,\n          parsedAttributes.y1 || 0,\n          parsedAttributes.x2 || 0,\n          parsedAttributes.y2 || 0\n        ];\n    callback(new fabric.Line(points, extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Line instance from an object representation\n   * @static\n   * @memberOf fabric.Line\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   */\n  fabric.Line.fromObject = function(object, callback) {\n    function _callback(instance) {\n      delete instance.points;\n      callback && callback(instance);\n    };\n    var options = clone(object, true);\n    options.points = [object.x1, object.y1, object.x2, object.y2];\n    fabric.Object._fromObject('Line', options, _callback, 'points');\n  };\n\n  /**\n   * Produces a function that calculates distance from canvas edge to Line origin.\n   */\n  function makeEdgeToOriginGetter(propertyNames, originValues) {\n    var origin = propertyNames.origin,\n        axis1 = propertyNames.axis1,\n        axis2 = propertyNames.axis2,\n        dimension = propertyNames.dimension,\n        nearest = originValues.nearest,\n        center = originValues.center,\n        farthest = originValues.farthest;\n\n    return function() {\n      switch (this.get(origin)) {\n        case nearest:\n          return Math.min(this.get(axis1), this.get(axis2));\n        case center:\n          return Math.min(this.get(axis1), this.get(axis2)) + (0.5 * this.get(dimension));\n        case farthest:\n          return Math.max(this.get(axis1), this.get(axis2));\n      }\n    };\n\n  }\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      pi = Math.PI;\n\n  if (fabric.Circle) {\n    fabric.warn('fabric.Circle is already defined.');\n    return;\n  }\n\n  /**\n   * Circle class\n   * @class fabric.Circle\n   * @extends fabric.Object\n   * @see {@link fabric.Circle#initialize} for constructor definition\n   */\n  fabric.Circle = fabric.util.createClass(fabric.Object, /** @lends fabric.Circle.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'circle',\n\n    /**\n     * Radius of this circle\n     * @type Number\n     * @default\n     */\n    radius: 0,\n\n    /**\n     * Start angle of the circle, moving clockwise\n     * @type Number\n     * @default 0\n     */\n    startAngle: 0,\n\n    /**\n     * End angle of the circle\n     * @type Number\n     * @default 2Pi\n     */\n    endAngle: pi * 2,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('radius'),\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Circle} thisArg\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n\n      if (key === 'radius') {\n        this.setRadius(value);\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['radius', 'startAngle', 'endAngle'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(), x = 0, y = 0,\n          angle = (this.endAngle - this.startAngle) % ( 2 * pi);\n\n      if (angle === 0) {\n        markup.push(\n          '<circle ', this.getSvgId(),\n          'cx=\"' + x + '\" cy=\"' + y + '\" ',\n          'r=\"', this.radius,\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(),\n          ' ', this.getSvgTransformMatrix(), '\"',\n          this.addPaintOrder(),\n          '/>\\n'\n        );\n      }\n      else {\n        var startX = Math.cos(this.startAngle) * this.radius,\n            startY = Math.sin(this.startAngle) * this.radius,\n            endX = Math.cos(this.endAngle) * this.radius,\n            endY = Math.sin(this.endAngle) * this.radius,\n            largeFlag = angle > pi ? '1' : '0';\n\n        markup.push(\n          '<path d=\"M ' + startX + ' ' + startY,\n          ' A ' + this.radius + ' ' + this.radius,\n          ' 0 ', +largeFlag + ' 1', ' ' + endX + ' ' + endY,\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(),\n          ' ', this.getSvgTransformMatrix(), '\"',\n          this.addPaintOrder(),\n          '\"/>\\n'\n        );\n      }\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render on\n     */\n    _render: function(ctx) {\n      ctx.beginPath();\n      ctx.arc(\n        0,\n        0,\n        this.radius,\n        this.startAngle,\n        this.endAngle, false);\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * Returns horizontal radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRadiusX: function() {\n      return this.get('radius') * this.get('scaleX');\n    },\n\n    /**\n     * Returns vertical radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRadiusY: function() {\n      return this.get('radius') * this.get('scaleY');\n    },\n\n    /**\n     * Sets radius of an object (and updates width accordingly)\n     * @return {fabric.Circle} thisArg\n     */\n    setRadius: function(value) {\n      this.radius = value;\n      return this.set('width', value * 2).set('height', value * 2);\n    },\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Circle.fromElement})\n   * @static\n   * @memberOf fabric.Circle\n   * @see: http://www.w3.org/TR/SVG/shapes.html#CircleElement\n   */\n  fabric.Circle.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy r'.split(' '));\n\n  /**\n   * Returns {@link fabric.Circle} instance from an SVG element\n   * @static\n   * @memberOf fabric.Circle\n   * @param {SVGElement} element Element to parse\n   * @param {Function} [callback] Options callback invoked after parsing is finished\n   * @param {Object} [options] Options object\n   * @throws {Error} If value of `r` attribute is missing or invalid\n   */\n  fabric.Circle.fromElement = function(element, callback) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Circle.ATTRIBUTE_NAMES);\n\n    if (!isValidRadius(parsedAttributes)) {\n      throw new Error('value of `r` attribute is required and can not be negative');\n    }\n\n    parsedAttributes.left = (parsedAttributes.left || 0) - parsedAttributes.radius;\n    parsedAttributes.top = (parsedAttributes.top || 0) - parsedAttributes.radius;\n    callback(new fabric.Circle(parsedAttributes));\n  };\n\n  /**\n   * @private\n   */\n  function isValidRadius(attributes) {\n    return (('radius' in attributes) && (attributes.radius >= 0));\n  }\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Circle} instance from an object representation\n   * @static\n   * @memberOf fabric.Circle\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   * @return {Object} Instance of fabric.Circle\n   */\n  fabric.Circle.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Circle', object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Triangle) {\n    fabric.warn('fabric.Triangle is already defined');\n    return;\n  }\n\n  /**\n   * Triangle class\n   * @class fabric.Triangle\n   * @extends fabric.Object\n   * @return {fabric.Triangle} thisArg\n   * @see {@link fabric.Triangle#initialize} for constructor definition\n   */\n  fabric.Triangle = fabric.util.createClass(fabric.Object, /** @lends fabric.Triangle.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'triangle',\n\n    /**\n     * Width is set to 100 to compensate the old initialize code that was setting it to 100\n     * @type Number\n     * @default\n     */\n    width: 100,\n\n    /**\n     * Height is set to 100 to compensate the old initialize code that was setting it to 100\n     * @type Number\n     * @default\n     */\n    height: 100,\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2;\n\n      ctx.beginPath();\n      ctx.moveTo(-widthBy2, heightBy2);\n      ctx.lineTo(0, -heightBy2);\n      ctx.lineTo(widthBy2, heightBy2);\n      ctx.closePath();\n\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2;\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, -widthBy2, heightBy2, 0, -heightBy2, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, 0, -heightBy2, widthBy2, heightBy2, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, widthBy2, heightBy2, -widthBy2, heightBy2, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(),\n          widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2,\n          points = [\n            -widthBy2 + ' ' + heightBy2,\n            '0 ' + -heightBy2,\n            widthBy2 + ' ' + heightBy2\n          ]\n            .join(',');\n\n      markup.push(\n        '<polygon ', this.getSvgId(),\n        'points=\"', points,\n        '\" style=\"', this.getSvgStyles(),\n        '\" transform=\"', this.getSvgTransform(), '\"',\n        this.addPaintOrder(),\n        '/>'\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /**\n   * Returns {@link fabric.Triangle} instance from an object representation\n   * @static\n   * @memberOf fabric.Triangle\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   */\n  fabric.Triangle.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Triangle', object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      piBy2   = Math.PI * 2;\n\n  if (fabric.Ellipse) {\n    fabric.warn('fabric.Ellipse is already defined.');\n    return;\n  }\n\n  /**\n   * Ellipse class\n   * @class fabric.Ellipse\n   * @extends fabric.Object\n   * @return {fabric.Ellipse} thisArg\n   * @see {@link fabric.Ellipse#initialize} for constructor definition\n   */\n  fabric.Ellipse = fabric.util.createClass(fabric.Object, /** @lends fabric.Ellipse.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'ellipse',\n\n    /**\n     * Horizontal radius\n     * @type Number\n     * @default\n     */\n    rx:   0,\n\n    /**\n     * Vertical radius\n     * @type Number\n     * @default\n     */\n    ry:   0,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('rx', 'ry'),\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {fabric.Ellipse} thisArg\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      this.set('rx', options && options.rx || 0);\n      this.set('ry', options && options.ry || 0);\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Ellipse} thisArg\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n      switch (key) {\n\n        case 'rx':\n          this.rx = value;\n          this.set('width', value * 2);\n          break;\n\n        case 'ry':\n          this.ry = value;\n          this.set('height', value * 2);\n          break;\n\n      }\n      return this;\n    },\n\n    /**\n     * Returns horizontal radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRx: function() {\n      return this.get('rx') * this.get('scaleX');\n    },\n\n    /**\n     * Returns Vertical radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRy: function() {\n      return this.get('ry') * this.get('scaleY');\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup();\n      markup.push(\n        '<ellipse ', this.getSvgId(),\n        'cx=\"0\" cy=\"0\" ',\n        'rx=\"', this.rx,\n        '\" ry=\"', this.ry,\n        '\" style=\"', this.getSvgStyles(),\n        '\" transform=\"', this.getSvgTransform(),\n        this.getSvgTransformMatrix(), '\"',\n        this.addPaintOrder(),\n        '/>\\n'\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render on\n     */\n    _render: function(ctx) {\n      ctx.beginPath();\n      ctx.save();\n      ctx.transform(1, 0, 0, this.ry / this.rx, 0, 0);\n      ctx.arc(\n        0,\n        0,\n        this.rx,\n        0,\n        piBy2,\n        false);\n      ctx.restore();\n      this._renderPaintInOrder(ctx);\n    },\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Ellipse.fromElement})\n   * @static\n   * @memberOf fabric.Ellipse\n   * @see http://www.w3.org/TR/SVG/shapes.html#EllipseElement\n   */\n  fabric.Ellipse.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy rx ry'.split(' '));\n\n  /**\n   * Returns {@link fabric.Ellipse} instance from an SVG element\n   * @static\n   * @memberOf fabric.Ellipse\n   * @param {SVGElement} element Element to parse\n   * @param {Function} [callback] Options callback invoked after parsing is finished\n   * @return {fabric.Ellipse}\n   */\n  fabric.Ellipse.fromElement = function(element, callback) {\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Ellipse.ATTRIBUTE_NAMES);\n\n    parsedAttributes.left = (parsedAttributes.left || 0) - parsedAttributes.rx;\n    parsedAttributes.top = (parsedAttributes.top || 0) - parsedAttributes.ry;\n    callback(new fabric.Ellipse(parsedAttributes));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Ellipse} instance from an object representation\n   * @static\n   * @memberOf fabric.Ellipse\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   * @return {fabric.Ellipse}\n   */\n  fabric.Ellipse.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Ellipse', object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend;\n\n  if (fabric.Rect) {\n    fabric.warn('fabric.Rect is already defined');\n    return;\n  }\n\n  /**\n   * Rectangle class\n   * @class fabric.Rect\n   * @extends fabric.Object\n   * @return {fabric.Rect} thisArg\n   * @see {@link fabric.Rect#initialize} for constructor definition\n   */\n  fabric.Rect = fabric.util.createClass(fabric.Object, /** @lends fabric.Rect.prototype */ {\n\n    /**\n     * List of properties to consider when checking if state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: fabric.Object.prototype.stateProperties.concat('rx', 'ry'),\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'rect',\n\n    /**\n     * Horizontal border radius\n     * @type Number\n     * @default\n     */\n    rx:   0,\n\n    /**\n     * Vertical border radius\n     * @type Number\n     * @default\n     */\n    ry:   0,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('rx', 'ry'),\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      this._initRxRy();\n    },\n\n    /**\n     * Initializes rx/ry attributes\n     * @private\n     */\n    _initRxRy: function() {\n      if (this.rx && !this.ry) {\n        this.ry = this.rx;\n      }\n      else if (this.ry && !this.rx) {\n        this.rx = this.ry;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n\n      // optimize 1x1 case (used in spray brush)\n      if (this.width === 1 && this.height === 1) {\n        ctx.fillRect(-0.5, -0.5, 1, 1);\n        return;\n      }\n\n      var rx = this.rx ? Math.min(this.rx, this.width / 2) : 0,\n          ry = this.ry ? Math.min(this.ry, this.height / 2) : 0,\n          w = this.width,\n          h = this.height,\n          x = -this.width / 2,\n          y = -this.height / 2,\n          isRounded = rx !== 0 || ry !== 0,\n          /* \"magic number\" for bezier approximations of arcs (http://itc.ktu.lt/itc354/Riskus354.pdf) */\n          k = 1 - 0.5522847498;\n      ctx.beginPath();\n\n      ctx.moveTo(x + rx, y);\n\n      ctx.lineTo(x + w - rx, y);\n      isRounded && ctx.bezierCurveTo(x + w - k * rx, y, x + w, y + k * ry, x + w, y + ry);\n\n      ctx.lineTo(x + w, y + h - ry);\n      isRounded && ctx.bezierCurveTo(x + w, y + h - k * ry, x + w - k * rx, y + h, x + w - rx, y + h);\n\n      ctx.lineTo(x + rx, y + h);\n      isRounded && ctx.bezierCurveTo(x + k * rx, y + h, x, y + h - k * ry, x, y + h - ry);\n\n      ctx.lineTo(x, y + ry);\n      isRounded && ctx.bezierCurveTo(x, y + k * ry, x + k * rx, y, x + rx, y);\n\n      ctx.closePath();\n\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var x = -this.width / 2,\n          y = -this.height / 2,\n          w = this.width,\n          h = this.height;\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(), x = -this.width / 2, y = -this.height / 2;\n      markup.push(\n        '<rect ', this.getSvgId(),\n        'x=\"', x, '\" y=\"', y,\n        '\" rx=\"', this.get('rx'), '\" ry=\"', this.get('ry'),\n        '\" width=\"', this.width, '\" height=\"', this.height,\n        '\" style=\"', this.getSvgStyles(),\n        '\" transform=\"', this.getSvgTransform(),\n        this.getSvgTransformMatrix(), '\"',\n        this.addPaintOrder(),\n        '/>\\n');\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Rect.fromElement`)\n   * @static\n   * @memberOf fabric.Rect\n   * @see: http://www.w3.org/TR/SVG/shapes.html#RectElement\n   */\n  fabric.Rect.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x y rx ry width height'.split(' '));\n\n  /**\n   * Returns {@link fabric.Rect} instance from an SVG element\n   * @static\n   * @memberOf fabric.Rect\n   * @param {SVGElement} element Element to parse\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n  fabric.Rect.fromElement = function(element, callback, options) {\n    if (!element) {\n      return callback(null);\n    }\n    options = options || { };\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Rect.ATTRIBUTE_NAMES);\n\n    parsedAttributes.left = parsedAttributes.left || 0;\n    parsedAttributes.top  = parsedAttributes.top  || 0;\n    var rect = new fabric.Rect(extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\n    rect.visible = rect.visible && rect.width > 0 && rect.height > 0;\n    callback(rect);\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Rect} instance from an object representation\n   * @static\n   * @memberOf fabric.Rect\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Rect instance is created\n   */\n  fabric.Rect.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Rect', object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      min = fabric.util.array.min,\n      max = fabric.util.array.max,\n      toFixed = fabric.util.toFixed;\n\n  if (fabric.Polyline) {\n    fabric.warn('fabric.Polyline is already defined');\n    return;\n  }\n\n  /**\n   * Polyline class\n   * @class fabric.Polyline\n   * @extends fabric.Object\n   * @see {@link fabric.Polyline#initialize} for constructor definition\n   */\n  fabric.Polyline = fabric.util.createClass(fabric.Object, /** @lends fabric.Polyline.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'polyline',\n\n    /**\n     * Points array\n     * @type Array\n     * @default\n     */\n    points: null,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('points'),\n\n    /**\n     * Constructor\n     * @param {Array} points Array of points (where each point is an object with x and y)\n     * @param {Object} [options] Options object\n     * @return {fabric.Polyline} thisArg\n     * @example\n     * var poly = new fabric.Polyline([\n     *     { x: 10, y: 10 },\n     *     { x: 50, y: 30 },\n     *     { x: 40, y: 70 },\n     *     { x: 60, y: 50 },\n     *     { x: 100, y: 150 },\n     *     { x: 40, y: 100 }\n     *   ], {\n     *   stroke: 'red',\n     *   left: 100,\n     *   top: 100\n     * });\n     */\n    initialize: function(points, options) {\n      options = options || {};\n      this.points = points || [];\n      this.callSuper('initialize', options);\n      var calcDim = this._calcDimensions();\n      if (typeof options.left === 'undefined') {\n        this.left = calcDim.left;\n      }\n      if (typeof options.top === 'undefined') {\n        this.top = calcDim.top;\n      }\n      this.width = calcDim.width;\n      this.height = calcDim.height;\n      this.pathOffset = {\n        x: calcDim.left + this.width / 2,\n        y: calcDim.top + this.height / 2\n      };\n    },\n\n    /**\n     * Calculate the polygon min and max point from points array,\n     * returning an object with left, top, widht, height to measure the\n     * polygon size\n     * @return {Object} object.left X coordinate of the polygon leftmost point\n     * @return {Object} object.top Y coordinate of the polygon topmost point\n     * @return {Object} object.width distance between X coordinates of the polygon leftmost and rightmost point\n     * @return {Object} object.height distance between Y coordinates of the polygon topmost and bottommost point\n     * @private\n     */\n    _calcDimensions: function() {\n\n      var points = this.points,\n          minX = min(points, 'x') || 0,\n          minY = min(points, 'y') || 0,\n          maxX = max(points, 'x') || 0,\n          maxY = max(points, 'y') || 0,\n          width = (maxX - minX),\n          height = (maxY - minY);\n\n      return {\n        left: minX,\n        top: minY,\n        width: width,\n        height: height\n      };\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), {\n        points: this.points.concat()\n      });\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var points = [], diffX = this.pathOffset.x, diffY = this.pathOffset.y,\n          markup = this._createBaseSVGMarkup(),\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n      for (var i = 0, len = this.points.length; i < len; i++) {\n        points.push(\n          toFixed(this.points[i].x - diffX, NUM_FRACTION_DIGITS), ',',\n          toFixed(this.points[i].y - diffY, NUM_FRACTION_DIGITS), ' '\n        );\n      }\n      markup.push(\n        '<', this.type, ' ', this.getSvgId(),\n        'points=\"', points.join(''),\n        '\" style=\"', this.getSvgStyles(),\n        '\" transform=\"', this.getSvgTransform(),\n        ' ', this.getSvgTransformMatrix(), '\"',\n        this.addPaintOrder(),\n        '/>\\n'\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    commonRender: function(ctx) {\n      var point, len = this.points.length,\n          x = this.pathOffset.x,\n          y = this.pathOffset.y;\n\n      if (!len || isNaN(this.points[len - 1].y)) {\n        // do not draw if no points or odd points\n        // NaN comes from parseFloat of a empty string in parser\n        return false;\n      }\n      ctx.beginPath();\n      ctx.moveTo(this.points[0].x - x, this.points[0].y - y);\n      for (var i = 0; i < len; i++) {\n        point = this.points[i];\n        ctx.lineTo(point.x - x, point.y - y);\n      }\n      return true;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      if (!this.commonRender(ctx)) {\n        return;\n      }\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var p1, p2;\n\n      ctx.beginPath();\n      for (var i = 0, len = this.points.length; i < len; i++) {\n        p1 = this.points[i];\n        p2 = this.points[i + 1] || p1;\n        fabric.util.drawDashedLine(ctx, p1.x, p1.y, p2.x, p2.y, this.strokeDashArray);\n      }\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return this.get('points').length;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Polyline.fromElement})\n   * @static\n   * @memberOf fabric.Polyline\n   * @see: http://www.w3.org/TR/SVG/shapes.html#PolylineElement\n   */\n  fabric.Polyline.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n\n  /**\n   * Returns fabric.Polyline instance from an SVG element\n   * @static\n   * @memberOf fabric.Polyline\n   * @param {SVGElement} element Element to parser\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n  fabric.Polyline.fromElement = function(element, callback, options) {\n    if (!element) {\n      return callback(null);\n    }\n    options || (options = { });\n\n    var points = fabric.parsePointsAttribute(element.getAttribute('points')),\n        parsedAttributes = fabric.parseAttributes(element, fabric.Polyline.ATTRIBUTE_NAMES);\n\n    callback(new fabric.Polyline(points, fabric.util.object.extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Polyline instance from an object representation\n   * @static\n   * @memberOf fabric.Polyline\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   */\n  fabric.Polyline.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Polyline', object, callback, 'points');\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend;\n\n  if (fabric.Polygon) {\n    fabric.warn('fabric.Polygon is already defined');\n    return;\n  }\n\n  /**\n   * Polygon class\n   * @class fabric.Polygon\n   * @extends fabric.Polyline\n   * @see {@link fabric.Polygon#initialize} for constructor definition\n   */\n  fabric.Polygon = fabric.util.createClass(fabric.Polyline, /** @lends fabric.Polygon.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'polygon',\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      if (!this.commonRender(ctx)) {\n        return;\n      }\n      ctx.closePath();\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      this.callSuper('_renderDashedStroke', ctx);\n      ctx.closePath();\n    },\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Polygon.fromElement`)\n   * @static\n   * @memberOf fabric.Polygon\n   * @see: http://www.w3.org/TR/SVG/shapes.html#PolygonElement\n   */\n  fabric.Polygon.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n\n  /**\n   * Returns {@link fabric.Polygon} instance from an SVG element\n   * @static\n   * @memberOf fabric.Polygon\n   * @param {SVGElement} element Element to parse\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n  fabric.Polygon.fromElement = function(element, callback, options) {\n    if (!element) {\n      return callback(null);\n    }\n\n    options || (options = { });\n\n    var points = fabric.parsePointsAttribute(element.getAttribute('points')),\n        parsedAttributes = fabric.parseAttributes(element, fabric.Polygon.ATTRIBUTE_NAMES);\n\n    callback(new fabric.Polygon(points, extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Polygon instance from an object representation\n   * @static\n   * @memberOf fabric.Polygon\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   */\n  fabric.Polygon.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Polygon', object, callback, 'points');\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      min = fabric.util.array.min,\n      max = fabric.util.array.max,\n      extend = fabric.util.object.extend,\n      _toString = Object.prototype.toString,\n      drawArc = fabric.util.drawArc,\n      commandLengths = {\n        m: 2,\n        l: 2,\n        h: 1,\n        v: 1,\n        c: 6,\n        s: 4,\n        q: 4,\n        t: 2,\n        a: 7\n      },\n      repeatedCommands = {\n        m: 'l',\n        M: 'L'\n      };\n\n  if (fabric.Path) {\n    fabric.warn('fabric.Path is already defined');\n    return;\n  }\n\n  /**\n   * Path class\n   * @class fabric.Path\n   * @extends fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#path_and_pathgroup}\n   * @see {@link fabric.Path#initialize} for constructor definition\n   */\n  fabric.Path = fabric.util.createClass(fabric.Object, /** @lends fabric.Path.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'path',\n\n    /**\n     * Array of path points\n     * @type Array\n     * @default\n     */\n    path: null,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('path', 'fillRule'),\n\n    stateProperties: fabric.Object.prototype.stateProperties.concat('path'),\n\n    /**\n     * Constructor\n     * @param {Array|String} path Path data (sequence of coordinates and corresponding \"command\" tokens)\n     * @param {Object} [options] Options object\n     * @return {fabric.Path} thisArg\n     */\n    initialize: function(path, options) {\n      options = options || { };\n      this.callSuper('initialize', options);\n\n      if (!path) {\n        path = [];\n      }\n\n      var fromArray = _toString.call(path) === '[object Array]';\n\n      this.path = fromArray\n        ? path\n        // one of commands (m,M,l,L,q,Q,c,C,etc.) followed by non-command characters (i.e. command values)\n        : path.match && path.match(/[mzlhvcsqta][^mzlhvcsqta]*/gi);\n\n      if (!this.path) {\n        return;\n      }\n\n      if (!fromArray) {\n        this.path = this._parsePath();\n      }\n\n      this._setPositionDimensions(options);\n    },\n\n    /**\n     * @private\n     * @param {Object} options Options object\n     */\n    _setPositionDimensions: function(options) {\n      var calcDim = this._parseDimensions();\n\n      this.width = calcDim.width;\n      this.height = calcDim.height;\n\n      if (typeof options.left === 'undefined') {\n        this.left = calcDim.left;\n      }\n\n      if (typeof options.top === 'undefined') {\n        this.top = calcDim.top;\n      }\n\n      this.pathOffset = this.pathOffset || {\n        x: calcDim.left + this.width / 2,\n        y: calcDim.top + this.height / 2\n      };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render path on\n     */\n    _renderPathCommands: function(ctx) {\n      var current, // current instruction\n          previous = null,\n          subpathStartX = 0,\n          subpathStartY = 0,\n          x = 0, // current x\n          y = 0, // current y\n          controlX = 0, // current control point x\n          controlY = 0, // current control point y\n          tempX,\n          tempY,\n          l = -this.pathOffset.x,\n          t = -this.pathOffset.y;\n\n      ctx.beginPath();\n\n      for (var i = 0, len = this.path.length; i < len; ++i) {\n\n        current = this.path[i];\n\n        switch (current[0]) { // first letter\n\n          case 'l': // lineto, relative\n            x += current[1];\n            y += current[2];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'L': // lineto, absolute\n            x = current[1];\n            y = current[2];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'h': // horizontal lineto, relative\n            x += current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'H': // horizontal lineto, absolute\n            x = current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'v': // vertical lineto, relative\n            y += current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'V': // verical lineto, absolute\n            y = current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'm': // moveTo, relative\n            x += current[1];\n            y += current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            ctx.moveTo(x + l, y + t);\n            break;\n\n          case 'M': // moveTo, absolute\n            x = current[1];\n            y = current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            ctx.moveTo(x + l, y + t);\n            break;\n\n          case 'c': // bezierCurveTo, relative\n            tempX = x + current[5];\n            tempY = y + current[6];\n            controlX = x + current[3];\n            controlY = y + current[4];\n            ctx.bezierCurveTo(\n              x + current[1] + l, // x1\n              y + current[2] + t, // y1\n              controlX + l, // x2\n              controlY + t, // y2\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'C': // bezierCurveTo, absolute\n            x = current[5];\n            y = current[6];\n            controlX = current[3];\n            controlY = current[4];\n            ctx.bezierCurveTo(\n              current[1] + l,\n              current[2] + t,\n              controlX + l,\n              controlY + t,\n              x + l,\n              y + t\n            );\n            break;\n\n          case 's': // shorthand cubic bezierCurveTo, relative\n\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            ctx.bezierCurveTo(\n              controlX + l,\n              controlY + t,\n              x + current[1] + l,\n              y + current[2] + t,\n              tempX + l,\n              tempY + t\n            );\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = x + current[1];\n            controlY = y + current[2];\n\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'S': // shorthand cubic bezierCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            ctx.bezierCurveTo(\n              controlX + l,\n              controlY + t,\n              current[1] + l,\n              current[2] + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = current[1];\n            controlY = current[2];\n\n            break;\n\n          case 'q': // quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            controlX = x + current[1];\n            controlY = y + current[2];\n\n            ctx.quadraticCurveTo(\n              controlX + l,\n              controlY + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'Q': // quadraticCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n\n            ctx.quadraticCurveTo(\n              current[1] + l,\n              current[2] + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            controlX = current[1];\n            controlY = current[2];\n            break;\n\n          case 't': // shorthand quadraticCurveTo, relative\n\n            // transform to absolute x,y\n            tempX = x + current[1];\n            tempY = y + current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            ctx.quadraticCurveTo(\n              controlX + l,\n              controlY + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n\n            break;\n\n          case 'T':\n            tempX = current[1];\n            tempY = current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            ctx.quadraticCurveTo(\n              controlX + l,\n              controlY + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'a':\n            // TODO: optimize this\n            drawArc(ctx, x + l, y + t, [\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6] + x + l,\n              current[7] + y + t\n            ]);\n            x += current[6];\n            y += current[7];\n            break;\n\n          case 'A':\n            // TODO: optimize this\n            drawArc(ctx, x + l, y + t, [\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6] + l,\n              current[7] + t\n            ]);\n            x = current[6];\n            y = current[7];\n            break;\n\n          case 'z':\n          case 'Z':\n            x = subpathStartX;\n            y = subpathStartY;\n            ctx.closePath();\n            break;\n        }\n        previous = current;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render path on\n     */\n    _render: function(ctx) {\n      this._renderPathCommands(ctx);\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} string representation of an instance\n     */\n    toString: function() {\n      return '#<fabric.Path (' + this.complexity() +\n        '): { \"top\": ' + this.top + ', \"left\": ' + this.left + ' }>';\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var o = extend(this.callSuper('toObject', propertiesToInclude), {\n        path: this.path.map(function(item) { return item.slice(); }),\n        top: this.top,\n        left: this.left,\n      });\n      return o;\n    },\n\n    /**\n     * Returns dataless object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      var o = this.toObject(['sourcePath'].concat(propertiesToInclude));\n      if (o.sourcePath) {\n        delete o.path;\n      }\n      return o;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var chunks = [],\n          markup = this._createBaseSVGMarkup(), addTransform = '';\n\n      for (var i = 0, len = this.path.length; i < len; i++) {\n        chunks.push(this.path[i].join(' '));\n      }\n      var path = chunks.join(' ');\n      addTransform = ' translate(' + (-this.pathOffset.x) + ', ' + (-this.pathOffset.y) + ') ';\n      markup.push(\n        '<path ', this.getSvgId(),\n        'd=\"', path,\n        '\" style=\"', this.getSvgStyles(),\n        '\" transform=\"', this.getSvgTransform(), addTransform,\n        this.getSvgTransformMatrix(), '\" stroke-linecap=\"round\" ',\n        this.addPaintOrder(),\n        '/>\\n'\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns number representation of an instance complexity\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return this.path.length;\n    },\n\n    /**\n     * @private\n     */\n    _parsePath: function() {\n      var result = [],\n          coords = [],\n          currentPath,\n          parsed,\n          re = /([-+]?((\\d+\\.\\d+)|((\\d+)|(\\.\\d+)))(?:e[-+]?\\d+)?)/ig,\n          match,\n          coordsStr;\n\n      for (var i = 0, coordsParsed, len = this.path.length; i < len; i++) {\n        currentPath = this.path[i];\n\n        coordsStr = currentPath.slice(1).trim();\n        coords.length = 0;\n\n        while ((match = re.exec(coordsStr))) {\n          coords.push(match[0]);\n        }\n\n        coordsParsed = [currentPath.charAt(0)];\n\n        for (var j = 0, jlen = coords.length; j < jlen; j++) {\n          parsed = parseFloat(coords[j]);\n          if (!isNaN(parsed)) {\n            coordsParsed.push(parsed);\n          }\n        }\n\n        var command = coordsParsed[0],\n            commandLength = commandLengths[command.toLowerCase()],\n            repeatedCommand = repeatedCommands[command] || command;\n\n        if (coordsParsed.length - 1 > commandLength) {\n          for (var k = 1, klen = coordsParsed.length; k < klen; k += commandLength) {\n            result.push([command].concat(coordsParsed.slice(k, k + commandLength)));\n            command = repeatedCommand;\n          }\n        }\n        else {\n          result.push(coordsParsed);\n        }\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _parseDimensions: function() {\n\n      var aX = [],\n          aY = [],\n          current, // current instruction\n          previous = null,\n          subpathStartX = 0,\n          subpathStartY = 0,\n          x = 0, // current x\n          y = 0, // current y\n          controlX = 0, // current control point x\n          controlY = 0, // current control point y\n          tempX,\n          tempY,\n          bounds;\n\n      for (var i = 0, len = this.path.length; i < len; ++i) {\n\n        current = this.path[i];\n\n        switch (current[0]) { // first letter\n\n          case 'l': // lineto, relative\n            x += current[1];\n            y += current[2];\n            bounds = [];\n            break;\n\n          case 'L': // lineto, absolute\n            x = current[1];\n            y = current[2];\n            bounds = [];\n            break;\n\n          case 'h': // horizontal lineto, relative\n            x += current[1];\n            bounds = [];\n            break;\n\n          case 'H': // horizontal lineto, absolute\n            x = current[1];\n            bounds = [];\n            break;\n\n          case 'v': // vertical lineto, relative\n            y += current[1];\n            bounds = [];\n            break;\n\n          case 'V': // verical lineto, absolute\n            y = current[1];\n            bounds = [];\n            break;\n\n          case 'm': // moveTo, relative\n            x += current[1];\n            y += current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            bounds = [];\n            break;\n\n          case 'M': // moveTo, absolute\n            x = current[1];\n            y = current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            bounds = [];\n            break;\n\n          case 'c': // bezierCurveTo, relative\n            tempX = x + current[5];\n            tempY = y + current[6];\n            controlX = x + current[3];\n            controlY = y + current[4];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              x + current[1], // x1\n              y + current[2], // y1\n              controlX, // x2\n              controlY, // y2\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'C': // bezierCurveTo, absolute\n            controlX = current[3];\n            controlY = current[4];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              current[1],\n              current[2],\n              controlX,\n              controlY,\n              current[5],\n              current[6]\n            );\n            x = current[5];\n            y = current[6];\n            break;\n\n          case 's': // shorthand cubic bezierCurveTo, relative\n\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              x + current[1],\n              y + current[2],\n              tempX,\n              tempY\n            );\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = x + current[1];\n            controlY = y + current[2];\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'S': // shorthand cubic bezierCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              current[1],\n              current[2],\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = current[1];\n            controlY = current[2];\n            break;\n\n          case 'q': // quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n            controlX = x + current[1];\n            controlY = y + current[2];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'Q': // quadraticCurveTo, absolute\n            controlX = current[1];\n            controlY = current[2];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              current[3],\n              current[4]\n            );\n            x = current[3];\n            y = current[4];\n            break;\n\n          case 't': // shorthand quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[1];\n            tempY = y + current[2];\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n\n            break;\n\n          case 'T':\n            tempX = current[1];\n            tempY = current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'a':\n            // TODO: optimize this\n            bounds = fabric.util.getBoundsOfArc(x, y,\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6] + x,\n              current[7] + y\n            );\n            x += current[6];\n            y += current[7];\n            break;\n\n          case 'A':\n            // TODO: optimize this\n            bounds = fabric.util.getBoundsOfArc(x, y,\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6],\n              current[7]\n            );\n            x = current[6];\n            y = current[7];\n            break;\n\n          case 'z':\n          case 'Z':\n            x = subpathStartX;\n            y = subpathStartY;\n            break;\n        }\n        previous = current;\n        bounds.forEach(function (point) {\n          aX.push(point.x);\n          aY.push(point.y);\n        });\n        aX.push(x);\n        aY.push(y);\n      }\n\n      var minX = min(aX) || 0,\n          minY = min(aY) || 0,\n          maxX = max(aX) || 0,\n          maxY = max(aY) || 0,\n          deltaX = maxX - minX,\n          deltaY = maxY - minY,\n\n          o = {\n            left: minX,\n            top: minY,\n            width: deltaX,\n            height: deltaY\n          };\n\n      return o;\n    }\n  });\n\n  /**\n   * Creates an instance of fabric.Path from an object\n   * @static\n   * @memberOf fabric.Path\n   * @param {Object} object\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   */\n  fabric.Path.fromObject = function(object, callback) {\n    if (typeof object.sourcePath === 'string') {\n      var pathUrl = object.sourcePath;\n      fabric.loadSVGFromURL(pathUrl, function (elements) {\n        var path = elements[0];\n        path.setOptions(object);\n        callback && callback(path);\n      });\n    }\n    else {\n      fabric.Object._fromObject('Path', object, callback, 'path');\n    }\n  };\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Path.fromElement`)\n   * @static\n   * @memberOf fabric.Path\n   * @see http://www.w3.org/TR/SVG/paths.html#PathElement\n   */\n  fabric.Path.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(['d']);\n\n  /**\n   * Creates an instance of fabric.Path from an SVG <path> element\n   * @static\n   * @memberOf fabric.Path\n   * @param {SVGElement} element to parse\n   * @param {Function} callback Callback to invoke when an fabric.Path instance is created\n   * @param {Object} [options] Options object\n   * @param {Function} [callback] Options callback invoked after parsing is finished\n   */\n  fabric.Path.fromElement = function(element, callback, options) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Path.ATTRIBUTE_NAMES);\n    callback(new fabric.Path(parsedAttributes.d, extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      min = fabric.util.array.min,\n      max = fabric.util.array.max;\n\n  if (fabric.Group) {\n    return;\n  }\n\n  /**\n   * Group class\n   * @class fabric.Group\n   * @extends fabric.Object\n   * @mixes fabric.Collection\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#groups}\n   * @see {@link fabric.Group#initialize} for constructor definition\n   */\n  fabric.Group = fabric.util.createClass(fabric.Object, fabric.Collection, /** @lends fabric.Group.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'group',\n\n    /**\n     * Width of stroke\n     * @type Number\n     * @default\n     */\n    strokeWidth: 0,\n\n    /**\n     * Indicates if click events should also check for subtargets\n     * @type Boolean\n     * @default\n     */\n    subTargetCheck: false,\n\n    /**\n     * Groups are container, do not render anything on theyr own, ence no cache properties\n     * @type Array\n     * @default\n     */\n    cacheProperties: [],\n\n    /**\n     * setOnGroup is a method used for TextBox that is no more used since 2.0.0 The behavior is still\n     * available setting this boolean to true.\n     * @type Boolean\n     * @since 2.0.0\n     * @default\n     */\n    useSetOnGroup: false,\n\n    /**\n     * Constructor\n     * @param {Object} objects Group objects\n     * @param {Object} [options] Options object\n     * @param {Boolean} [isAlreadyGrouped] if true, objects have been grouped already.\n     * @return {Object} thisArg\n     */\n    initialize: function(objects, options, isAlreadyGrouped) {\n      options = options || {};\n      this._objects = [];\n      // if objects enclosed in a group have been grouped already,\n      // we cannot change properties of objects.\n      // Thus we need to set options to group without objects,\n      isAlreadyGrouped && this.callSuper('initialize', options);\n      this._objects = objects || [];\n      for (var i = this._objects.length; i--; ) {\n        this._objects[i].group = this;\n      }\n\n      if (options.originX) {\n        this.originX = options.originX;\n      }\n      if (options.originY) {\n        this.originY = options.originY;\n      }\n\n      if (!isAlreadyGrouped) {\n        var center = options && options.centerPoint;\n        // if coming from svg i do not want to calc bounds.\n        // i assume width and height are passed along options\n        center || this._calcBounds();\n        this._updateObjectsCoords(center);\n        delete options.centerPoint;\n        this.callSuper('initialize', options);\n      }\n      else {\n        this._updateObjectsACoords();\n      }\n\n      this.setCoords();\n    },\n\n    /**\n     * @private\n     * @param {Boolean} [skipCoordsChange] if true, coordinates of objects enclosed in a group do not change\n     */\n    _updateObjectsACoords: function() {\n      var ignoreZoom = true, skipAbsolute = true;\n      for (var i = this._objects.length; i--; ){\n        this._objects[i].setCoords(ignoreZoom, skipAbsolute);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Boolean} [skipCoordsChange] if true, coordinates of objects enclosed in a group do not change\n     */\n    _updateObjectsCoords: function(center) {\n      var center = center || this.getCenterPoint();\n      for (var i = this._objects.length; i--; ){\n        this._updateObjectCoords(this._objects[i], center);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} object\n     * @param {fabric.Point} center, current center of group.\n     */\n    _updateObjectCoords: function(object, center) {\n      var objectLeft = object.left,\n          objectTop = object.top,\n          ignoreZoom = true, skipAbsolute = true;\n\n      object.set({\n        left: objectLeft - center.x,\n        top: objectTop - center.y\n      });\n      object.group = this;\n      object.setCoords(ignoreZoom, skipAbsolute);\n    },\n\n    /**\n     * Returns string represenation of a group\n     * @return {String}\n     */\n    toString: function() {\n      return '#<fabric.Group: (' + this.complexity() + ')>';\n    },\n\n    /**\n     * Adds an object to a group; Then recalculates group's dimension, position.\n     * @param {Object} object\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    addWithUpdate: function(object) {\n      this._restoreObjectsState();\n      fabric.util.resetObjectTransform(this);\n      if (object) {\n        this._objects.push(object);\n        object.group = this;\n        object._set('canvas', this.canvas);\n      }\n      this._calcBounds();\n      this._updateObjectsCoords();\n      this.setCoords();\n      this.dirty = true;\n      return this;\n    },\n\n    /**\n     * Removes an object from a group; Then recalculates group's dimension, position.\n     * @param {Object} object\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    removeWithUpdate: function(object) {\n      this._restoreObjectsState();\n      fabric.util.resetObjectTransform(this);\n\n      this.remove(object);\n      this._calcBounds();\n      this._updateObjectsCoords();\n      this.setCoords();\n      this.dirty = true;\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _onObjectAdded: function(object) {\n      this.dirty = true;\n      object.group = this;\n      object._set('canvas', this.canvas);\n    },\n\n    /**\n     * @private\n     */\n    _onObjectRemoved: function(object) {\n      this.dirty = true;\n      delete object.group;\n    },\n\n    /**\n     * @private\n     */\n    _set: function(key, value) {\n      var i = this._objects.length;\n      if (this.useSetOnGroup) {\n        while (i--) {\n          this._objects[i].setOnGroup(key, value);\n        }\n      }\n      if (key === 'canvas') {\n        i = this._objects.length;\n        while (i--) {\n          this._objects[i]._set(key, value);\n        }\n      }\n      this.callSuper('_set', key, value);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var objsToObject = this.getObjects().map(function(obj) {\n        var originalDefaults = obj.includeDefaultValues;\n        obj.includeDefaultValues = obj.group.includeDefaultValues;\n        var _obj = obj.toObject(propertiesToInclude);\n        obj.includeDefaultValues = originalDefaults;\n        return _obj;\n      });\n      return extend(this.callSuper('toObject', propertiesToInclude), {\n        objects: objsToObject\n      });\n    },\n\n    /**\n     * Returns object representation of an instance, in dataless mode.\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      var objsToObject, sourcePath = this.sourcePath;\n      if (sourcePath) {\n        objsToObject = sourcePath;\n      }\n      else {\n        objsToObject = this.getObjects().map(function(obj) {\n          var originalDefaults = obj.includeDefaultValues;\n          obj.includeDefaultValues = obj.group.includeDefaultValues;\n          var _obj = obj.toDatalessObject(propertiesToInclude);\n          obj.includeDefaultValues = originalDefaults;\n          return _obj;\n        });\n      }\n      return extend(this.callSuper('toDatalessObject', propertiesToInclude), {\n        objects: objsToObject\n      });\n    },\n\n    /**\n     * Renders instance on a given context\n     * @param {CanvasRenderingContext2D} ctx context to render instance on\n     */\n    render: function(ctx) {\n      this._transformDone = true;\n      this.callSuper('render', ctx);\n      this._transformDone = false;\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * objectCaching is a global flag, wins over everything\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * @return {Boolean}\n     */\n    shouldCache: function() {\n      var ownCache = this.objectCaching && (!this.group || this.needsItsOwnCache() || !this.group.isOnACache());\n      this.ownCaching = ownCache;\n      if (ownCache) {\n        for (var i = 0, len = this._objects.length; i < len; i++) {\n          if (this._objects[i].willDrawShadow()) {\n            this.ownCaching = false;\n            return false;\n          }\n        }\n      }\n      return ownCache;\n    },\n\n    /**\n     * Check if this object or a child object will cast a shadow\n     * @return {Boolean}\n     */\n    willDrawShadow: function() {\n      if (this.shadow) {\n        return this.callSuper('willDrawShadow');\n      }\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        if (this._objects[i].willDrawShadow()) {\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Check if this group or its parent group are caching, recursively up\n     * @return {Boolean}\n     */\n    isOnACache: function() {\n      return this.ownCaching || (this.group && this.group.isOnACache());\n    },\n\n    /**\n     * Execute the drawing operation for an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawObject: function(ctx) {\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        this._objects[i].render(ctx);\n      }\n    },\n\n    /**\n     * Check if cache is dirty\n     */\n    isCacheDirty: function() {\n      if (this.callSuper('isCacheDirty')) {\n        return true;\n      }\n      if (!this.statefullCache) {\n        return false;\n      }\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        if (this._objects[i].isCacheDirty(true)) {\n          if (this._cacheCanvas) {\n            // if this group has not a cache canvas there is nothing to clean\n            var x = this.cacheWidth / this.zoomX, y = this.cacheHeight / this.zoomY;\n            this._cacheContext.clearRect(-x / 2, -y / 2, x, y);\n          }\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Retores original state of each of group objects (original state is that which was before group was created).\n     * @private\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    _restoreObjectsState: function() {\n      this._objects.forEach(this._restoreObjectState, this);\n      return this;\n    },\n\n    /**\n     * Realises the transform from this group onto the supplied object\n     * i.e. it tells you what would happen if the supplied object was in\n     * the group, and then the group was destroyed. It mutates the supplied\n     * object.\n     * @param {fabric.Object} object\n     * @return {fabric.Object} transformedObject\n     */\n    realizeTransform: function(object) {\n      var matrix = object.calcTransformMatrix(),\n          options = fabric.util.qrDecompose(matrix),\n          center = new fabric.Point(options.translateX, options.translateY);\n      object.flipX = false;\n      object.flipY = false;\n      object.set('scaleX', options.scaleX);\n      object.set('scaleY', options.scaleY);\n      object.skewX = options.skewX;\n      object.skewY = options.skewY;\n      object.angle = options.angle;\n      object.setPositionByOrigin(center, 'center', 'center');\n      return object;\n    },\n\n    /**\n     * Restores original state of a specified object in group\n     * @private\n     * @param {fabric.Object} object\n     * @return {fabric.Group} thisArg\n     */\n    _restoreObjectState: function(object) {\n      this.realizeTransform(object);\n      object.setCoords();\n      delete object.group;\n      return this;\n    },\n\n    /**\n     * Destroys a group (restoring state of its objects)\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    destroy: function() {\n      // when group is destroyed objects needs to get a repaint to be eventually\n      // displayed on canvas.\n      this._objects.forEach(function(object) {\n        object.set('dirty', true);\n      });\n      return this._restoreObjectsState();\n    },\n\n    /**\n     * make a group an active selection, remove the group from canvas\n     * the group has to be on canvas for this to work.\n     * @return {fabric.ActiveSelection} thisArg\n     * @chainable\n     */\n    toActiveSelection: function() {\n      if (!this.canvas) {\n        return;\n      }\n      var objects = this._objects, canvas = this.canvas;\n      this._objects = [];\n      var options = this.toObject();\n      delete options.objects;\n      var activeSelection = new fabric.ActiveSelection([]);\n      activeSelection.set(options);\n      activeSelection.type = 'activeSelection';\n      canvas.remove(this);\n      objects.forEach(function(object) {\n        object.group = activeSelection;\n        object.dirty = true;\n        canvas.add(object);\n      });\n      activeSelection.canvas = canvas;\n      activeSelection._objects = objects;\n      canvas._activeObject = activeSelection;\n      activeSelection.setCoords();\n      return activeSelection;\n    },\n\n    /**\n     * Destroys a group (restoring state of its objects)\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    ungroupOnCanvas: function() {\n      return this._restoreObjectsState();\n    },\n\n    /**\n     * Sets coordinates of all objects inside group\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    setObjectsCoords: function() {\n      var ignoreZoom = true, skipAbsolute = true;\n      this.forEachObject(function(object) {\n        object.setCoords(ignoreZoom, skipAbsolute);\n      });\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _calcBounds: function(onlyWidthHeight) {\n      var aX = [],\n          aY = [],\n          o, prop,\n          props = ['tr', 'br', 'bl', 'tl'],\n          i = 0, iLen = this._objects.length,\n          j, jLen = props.length,\n          ignoreZoom = true;\n\n      for ( ; i < iLen; ++i) {\n        o = this._objects[i];\n        o.setCoords(ignoreZoom);\n        for (j = 0; j < jLen; j++) {\n          prop = props[j];\n          aX.push(o.oCoords[prop].x);\n          aY.push(o.oCoords[prop].y);\n        }\n      }\n\n      this.set(this._getBounds(aX, aY, onlyWidthHeight));\n    },\n\n    /**\n     * @private\n     */\n    _getBounds: function(aX, aY, onlyWidthHeight) {\n      var minXY = new fabric.Point(min(aX), min(aY)),\n          maxXY = new fabric.Point(max(aX), max(aY)),\n          obj = {\n            width: (maxXY.x - minXY.x) || 0,\n            height: (maxXY.y - minXY.y) || 0\n          };\n\n      if (!onlyWidthHeight) {\n        obj.left = minXY.x || 0;\n        obj.top = minXY.y || 0;\n        if (this.originX === 'center') {\n          obj.left += obj.width / 2;\n        }\n        if (this.originX === 'right') {\n          obj.left += obj.width;\n        }\n        if (this.originY === 'center') {\n          obj.top += obj.height / 2;\n        }\n        if (this.originY === 'bottom') {\n          obj.top += obj.height;\n        }\n      }\n      return obj;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup();\n      markup.push(\n        '<g ', this.getSvgId(), 'transform=\"',\n        /* avoiding styles intentionally */\n        this.getSvgTransform(),\n        this.getSvgTransformMatrix(),\n        '\" style=\"',\n        this.getSvgFilter(),\n        '\">\\n'\n      );\n\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        markup.push('\\t', this._objects[i].toSVG(reviver));\n      }\n\n      markup.push('</g>\\n');\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /**\n   * Returns {@link fabric.Group} instance from an object representation\n   * @static\n   * @memberOf fabric.Group\n   * @param {Object} object Object to create a group from\n   * @param {Function} [callback] Callback to invoke when an group instance is created\n   */\n  fabric.Group.fromObject = function(object, callback) {\n    fabric.util.enlivenObjects(object.objects, function(enlivenedObjects) {\n      var options = fabric.util.object.clone(object, true);\n      delete options.objects;\n      callback && callback(new fabric.Group(enlivenedObjects, options, true));\n    });\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.ActiveSelection) {\n    return;\n  }\n\n  /**\n   * Group class\n   * @class fabric.ActiveSelection\n   * @extends fabric.Group\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#groups}\n   * @see {@link fabric.ActiveSelection#initialize} for constructor definition\n   */\n  fabric.ActiveSelection = fabric.util.createClass(fabric.Group, /** @lends fabric.ActiveSelection.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'activeSelection',\n\n    /**\n     * Constructor\n     * @param {Object} objects ActiveSelection objects\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(objects, options) {\n      options = options || {};\n      this._objects = objects || [];\n      for (var i = this._objects.length; i--; ) {\n        this._objects[i].group = this;\n      }\n\n      if (options.originX) {\n        this.originX = options.originX;\n      }\n      if (options.originY) {\n        this.originY = options.originY;\n      }\n      this._calcBounds();\n      this._updateObjectsCoords();\n      fabric.Object.prototype.initialize.call(this, options);\n      this.setCoords();\n    },\n\n    /**\n     * Change te activeSelection to a normal group,\n     * High level function that automatically adds it to canvas as\n     * active object. no events fired.\n     * @since 2.0.0\n     * @return {fabric.Group}\n     */\n    toGroup: function() {\n      var objects = this._objects;\n      this._objects = [];\n      var options = this.toObject();\n      var newGroup = new fabric.Group([]);\n      delete options.objects;\n      newGroup.set(options);\n      newGroup.type = 'group';\n      objects.forEach(function(object) {\n        object.group = newGroup;\n        object.canvas.remove(object);\n      });\n      newGroup._objects = objects;\n      if (!this.canvas) {\n        return newGroup;\n      }\n      var canvas = this.canvas;\n      canvas.add(newGroup);\n      canvas._activeObject = newGroup;\n      newGroup.setCoords();\n      return newGroup;\n    },\n\n    /**\n     * If returns true, deselection is cancelled.\n     * @since 2.0.0\n     * @return {Boolean} [cancel]\n     */\n    onDeselect: function() {\n      this.destroy();\n      return false;\n    },\n\n    /**\n     * Returns string representation of a group\n     * @return {String}\n     */\n    toString: function() {\n      return '#<fabric.ActiveSelection: (' + this.complexity() + ')>';\n    },\n\n    /**\n     * @private\n     */\n    _set: function(key, value) {\n      var i = this._objects.length;\n      if (key === 'canvas') {\n        while (i--) {\n          this._objects[i].set(key, value);\n        }\n      }\n      if (this.useSetOnGroup) {\n        while (i--) {\n          this._objects[i].setOnGroup(key, value);\n        }\n      }\n      fabric.Object.prototype._set.call(this, key, value);\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * objectCaching is a global flag, wins over everything\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * @return {Boolean}\n     */\n    shouldCache: function() {\n      return false;\n    },\n\n    /**\n     * Check if this object or a child object will cast a shadow\n     * @return {Boolean}\n     */\n    willDrawShadow: function() {\n      if (this.shadow) {\n        return this.callSuper('willDrawShadow');\n      }\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        if (this._objects[i].willDrawShadow()) {\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Check if this group or its parent group are caching, recursively up\n     * @return {Boolean}\n     */\n    isOnACache: function() {\n      return false;\n    },\n\n    /**\n     * Renders controls and borders for the object\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} [styleOverride] properties to override the object style\n     * @param {Object} [childrenOverride] properties to override the children overrides\n     */\n    _renderControls: function(ctx, styleOverride, childrenOverride) {\n      ctx.save();\n      ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n      this.callSuper('_renderControls', ctx, styleOverride);\n      childrenOverride = childrenOverride || { };\n      if (typeof childrenOverride.hasControls === 'undefined') {\n        childrenOverride.hasControls = false;\n      }\n      if (typeof childrenOverride.hasRotatingPoint === 'undefined') {\n        childrenOverride.hasRotatingPoint = false;\n      }\n      childrenOverride.forActiveSelection = true;\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        this._objects[i]._renderControls(ctx, childrenOverride);\n      }\n      ctx.restore();\n    },\n  });\n\n  /**\n   * Returns {@link fabric.ActiveSelection} instance from an object representation\n   * @static\n   * @memberOf fabric.ActiveSelection\n   * @param {Object} object Object to create a group from\n   * @param {Function} [callback] Callback to invoke when an ActiveSelection instance is created\n   */\n  fabric.ActiveSelection.fromObject = function(object, callback) {\n    fabric.util.enlivenObjects(object.objects, function(enlivenedObjects) {\n      delete object.objects;\n      callback && callback(new fabric.ActiveSelection(enlivenedObjects, object, true));\n    });\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var extend = fabric.util.object.extend;\n\n  if (!global.fabric) {\n    global.fabric = { };\n  }\n\n  if (global.fabric.Image) {\n    fabric.warn('fabric.Image is already defined.');\n    return;\n  }\n\n  /**\n   * Image class\n   * @class fabric.Image\n   * @extends fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#images}\n   * @see {@link fabric.Image#initialize} for constructor definition\n   */\n  fabric.Image = fabric.util.createClass(fabric.Object, /** @lends fabric.Image.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'image',\n\n    /**\n     * crossOrigin value (one of \"\", \"anonymous\", \"use-credentials\")\n     * @see https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes\n     * @type String\n     * @default\n     */\n    crossOrigin: '',\n\n    /**\n     * Width of a stroke.\n     * For image quality a stroke multiple of 2 gives better results.\n     * @type Number\n     * @default\n     */\n    strokeWidth: 0,\n\n    /**\n     * private\n     * contains last value of scaleX to detect\n     * if the Image got resized after the last Render\n     * @type Number\n     */\n    _lastScaleX: 1,\n\n    /**\n     * private\n     * contains last value of scaleY to detect\n     * if the Image got resized after the last Render\n     * @type Number\n     */\n    _lastScaleY: 1,\n\n    /**\n     * private\n     * contains last value of scaling applied by the apply filter chain\n     * @type Number\n     */\n    _filterScalingX: 1,\n\n    /**\n     * private\n     * contains last value of scaling applied by the apply filter chain\n     * @type Number\n     */\n    _filterScalingY: 1,\n\n    /**\n     * minimum scale factor under which any resizeFilter is triggered to resize the image\n     * 0 will disable the automatic resize. 1 will trigger automatically always.\n     * number bigger than 1 are not implemented yet.\n     * @type Number\n     */\n    minimumScaleTrigger: 0.5,\n\n    /**\n     * List of properties to consider when checking if\n     * state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: fabric.Object.prototype.stateProperties.concat('cropX', 'cropY'),\n\n    /**\n     * When `true`, object is cached on an additional canvas.\n     * default to false for images\n     * since 1.7.0\n     * @type Boolean\n     * @default\n     */\n    objectCaching: false,\n\n    /**\n     * key used to retrieve the texture representing this image\n     * since 2.0.0\n     * @type String\n     * @default\n     */\n    cacheKey: '',\n\n    /**\n     * Image crop in pixels from original image size.\n     * since 2.0.0\n     * @type Number\n     * @default\n     */\n    cropX: 0,\n\n    /**\n     * Image crop in pixels from original image size.\n     * since 2.0.0\n     * @type Number\n     * @default\n     */\n    cropY: 0,\n\n    /**\n     * Constructor\n     * @param {HTMLImageElement | String} element Image element\n     * @param {Object} [options] Options object\n     * @param {function} [callback] callback function to call after eventual filters applied.\n     * @return {fabric.Image} thisArg\n     */\n    initialize: function(element, options) {\n      options || (options = { });\n      this.filters = [];\n      this.cacheKey = 'texture' + fabric.Object.__uid++;\n      this.callSuper('initialize', options);\n      this._initElement(element, options);\n    },\n\n    /**\n     * Returns image element which this instance if based on\n     * @return {HTMLImageElement} Image element\n     */\n    getElement: function() {\n      return this._element;\n    },\n\n    /**\n     * Sets image element for this instance to a specified one.\n     * If filters defined they are applied to new image.\n     * You might need to call `canvas.renderAll` and `object.setCoords` after replacing, to render new image and update controls area.\n     * @param {HTMLImageElement} element\n     * @param {Object} [options] Options object\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setElement: function(element, options) {\n      var backend = fabric.filterBackend;\n      if (backend && backend.evictCachesForKey) {\n        backend.evictCachesForKey(this.cacheKey);\n        backend.evictCachesForKey(this.cacheKey + '_filtered');\n      }\n      this._element = element;\n      this._originalElement = element;\n      this._initConfig(options);\n      if (this.resizeFilter) {\n        this.applyResizeFilters();\n      }\n      if (this.filters.length !== 0) {\n        this.applyFilters();\n      }\n      return this;\n    },\n\n    /**\n     * Delete cacheKey if we have a webGlBackend\n     * delete reference to image elements\n     */\n    dispose: function() {\n      var backend = fabric.filterBackend;\n      if (backend && backend.evictCachesForKey) {\n        backend.evictCachesForKey(this.cacheKey);\n        backend.evictCachesForKey(this.cacheKey + '_filtered');\n      }\n      this._originalElement = undefined;\n      this._element = undefined;\n      this._filteredEl = undefined;\n    },\n\n    /**\n     * Sets crossOrigin value (on an instance and corresponding image element)\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setCrossOrigin: function(value) {\n      this.crossOrigin = value;\n      this._element.crossOrigin = value;\n\n      return this;\n    },\n\n    /**\n     * Returns original size of an image\n     * @return {Object} Object with \"width\" and \"height\" properties\n     */\n    getOriginalSize: function() {\n      var element = this.getElement();\n      return {\n        width: element.width,\n        height: element.height\n      };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _stroke: function(ctx) {\n      if (!this.stroke || this.strokeWidth === 0) {\n        return;\n      }\n      var w = this.width / 2, h = this.height / 2;\n      ctx.beginPath();\n      ctx.moveTo(-w, -h);\n      ctx.lineTo(w, -h);\n      ctx.lineTo(w, h);\n      ctx.lineTo(-w, h);\n      ctx.lineTo(-w, -h);\n      ctx.closePath();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var x = -this.width / 2,\n          y = -this.height / 2,\n          w = this.width,\n          h = this.height;\n\n      ctx.save();\n      this._setStrokeStyles(ctx, this);\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n      ctx.closePath();\n      ctx.restore();\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var filters = [];\n\n      this.filters.forEach(function(filterObj) {\n        if (filterObj) {\n          filters.push(filterObj.toObject());\n        }\n      });\n      var object = extend(\n        this.callSuper(\n          'toObject',\n          ['crossOrigin', 'cropX', 'cropY'].concat(propertiesToInclude)\n        ), {\n          src: this.getSrc(),\n          filters: filters,\n        });\n      if (this.resizeFilter) {\n        object.resizeFilter = this.resizeFilter.toObject();\n      }\n      return object;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(), x = -this.width / 2, y = -this.height / 2;\n      markup.push('<g transform=\"', this.getSvgTransform(), this.getSvgTransformMatrix(), '\">\\n');\n      var imageMarkup = ['\\t<image ', this.getSvgId(), 'xlink:href=\"', this.getSvgSrc(true),\n        '\" x=\"', x, '\" y=\"', y,\n        '\" style=\"', this.getSvgStyles(),\n        // we're essentially moving origin of transformation from top/left corner to the center of the shape\n        // by wrapping it in container <g> element with actual transformation, then offsetting object to the top/left\n        // so that object's center aligns with container's left/top\n        '\" width=\"', this.width,\n        '\" height=\"', this.height,\n        '\"></image>\\n'];\n      if (this.paintFirst === 'fill') {\n        Array.prototype.push.apply(markup, imageMarkup);\n      }\n      if (this.stroke || this.strokeDashArray) {\n        var origFill = this.fill;\n        this.fill = null;\n        markup.push(\n          '\\t<rect ',\n          'x=\"', x, '\" y=\"', y,\n          '\" width=\"', this.width, '\" height=\"', this.height,\n          '\" style=\"', this.getSvgStyles(),\n          '\"/>\\n'\n        );\n        this.fill = origFill;\n      }\n      if (this.paintFirst !== 'fill') {\n        Array.prototype.push.apply(markup, imageMarkup);\n      }\n      markup.push('</g>\\n');\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns source of an image\n     * @param {Boolean} filtered indicates if the src is needed for svg\n     * @return {String} Source of an image\n     */\n    getSrc: function(filtered) {\n      var element = filtered ? this._element : this._originalElement;\n      if (element) {\n        if (element.toDataURL) {\n          return element.toDataURL();\n        }\n        return element.src;\n      }\n      else {\n        return this.src || '';\n      }\n    },\n\n    /**\n     * Sets source of an image\n     * @param {String} src Source string (URL)\n     * @param {Function} [callback] Callback is invoked when image has been loaded (and all filters have been applied)\n     * @param {Object} [options] Options object\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setSrc: function(src, callback, options) {\n      fabric.util.loadImage(src, function(img) {\n        this.setElement(img, options);\n        callback(this);\n      }, this, options && options.crossOrigin);\n      return this;\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} String representation of an instance\n     */\n    toString: function() {\n      return '#<fabric.Image: { src: \"' + this.getSrc() + '\" }>';\n    },\n\n    applyResizeFilters: function() {\n      var filter = this.resizeFilter,\n          retinaScaling = this.canvas ? this.canvas.getRetinaScaling() : 1,\n          minimumScale = this.minimumScaleTrigger,\n          scaleX = this.scaleX * retinaScaling,\n          scaleY = this.scaleY * retinaScaling,\n          elementToFilter = this._filteredEl || this._originalElement;\n      if (!filter || (scaleX > minimumScale && scaleY > minimumScale)) {\n        this._element = elementToFilter;\n        this._filterScalingX = 1;\n        this._filterScalingY = 1;\n        return;\n      }\n      if (!fabric.filterBackend) {\n        fabric.filterBackend = fabric.initFilterBackend();\n      }\n      var canvasEl = fabric.util.createCanvasElement(),\n          cacheKey = this._filteredEl ? this.cacheKey : (this.cacheKey + '_filtered'),\n          sourceWidth = elementToFilter.width, sourceHeight = elementToFilter.height;\n      canvasEl.width = sourceWidth;\n      canvasEl.height = sourceHeight;\n      this._element = canvasEl;\n      filter.scaleX = scaleX;\n      filter.scaleY = scaleY;\n      fabric.filterBackend.applyFilters(\n        [filter], elementToFilter, sourceWidth, sourceHeight, this._element, cacheKey);\n      this._filterScalingX = canvasEl.width / this._originalElement.width;\n      this._filterScalingY = canvasEl.height / this._originalElement.height;\n    },\n\n    /**\n     * Applies filters assigned to this image (from \"filters\" array) or from filter param\n     * @method applyFilters\n     * @param {Array} filters to be applied\n     * @param {Boolean} forResizing specify if the filter operation is a resize operation\n     * @return {thisArg} return the fabric.Image object\n     * @chainable\n     */\n    applyFilters: function(filters) {\n\n      filters = filters || this.filters || [];\n      filters = filters.filter(function(filter) { return filter; });\n      if (filters.length === 0) {\n        this._element = this._originalElement;\n        this._filteredEl = null;\n        this._filterScalingX = 1;\n        this._filterScalingY = 1;\n        return this;\n      }\n\n      var imgElement = this._originalElement,\n          sourceWidth = imgElement.naturalWidth || imgElement.width,\n          sourceHeight = imgElement.naturalHeight || imgElement.height;\n\n      if (this._element === this._originalElement) {\n        // if the element is the same we need to create a new element\n        var canvasEl = fabric.util.createCanvasElement();\n        canvasEl.width = sourceWidth;\n        canvasEl.height = sourceHeight;\n        this._element = canvasEl;\n        this._filteredEl = canvasEl;\n      }\n      else {\n        // clear the existing element to get new filter data\n        this._element.getContext('2d').clearRect(0, 0, sourceWidth, sourceHeight);\n      }\n      if (!fabric.filterBackend) {\n        fabric.filterBackend = fabric.initFilterBackend();\n      }\n      fabric.filterBackend.applyFilters(\n        filters, this._originalElement, sourceWidth, sourceHeight, this._element, this.cacheKey);\n      if (this._originalElement.width !== this._element.width ||\n        this._originalElement.height !== this._element.height) {\n        this._filterScalingX = this._element.width / this._originalElement.width;\n        this._filterScalingY = this._element.height / this._originalElement.height;\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      if (this.isMoving === false && this.resizeFilter && this._needsResize()) {\n        this._lastScaleX = this.scaleX;\n        this._lastScaleY = this.scaleY;\n        this.applyResizeFilters();\n      }\n      this._stroke(ctx);\n      this._renderPaintInOrder(ctx);\n    },\n\n    _renderFill: function(ctx) {\n      var w = this.width, h = this.height, sW = w * this._filterScalingX, sH = h * this._filterScalingY,\n          x = -w / 2, y = -h / 2, elementToDraw = this._element;\n      elementToDraw && ctx.drawImage(elementToDraw,\n        this.cropX * this._filterScalingX,\n        this.cropY * this._filterScalingY,\n        sW,\n        sH,\n        x, y, w, h);\n    },\n\n    /**\n     * @private, needed to check if image needs resize\n     */\n    _needsResize: function() {\n      return (this.scaleX !== this._lastScaleX || this.scaleY !== this._lastScaleY);\n    },\n\n    /**\n     * @private\n     */\n    _resetWidthHeight: function() {\n      var element = this.getElement();\n\n      this.set('width', element.width);\n      this.set('height', element.height);\n    },\n\n    /**\n     * The Image class's initialization method. This method is automatically\n     * called by the constructor.\n     * @private\n     * @param {HTMLImageElement|String} element The element representing the image\n     * @param {Object} [options] Options object\n     */\n    _initElement: function(element, options) {\n      this.setElement(fabric.util.getById(element), options);\n      fabric.util.addClass(this.getElement(), fabric.Image.CSS_CANVAS);\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initConfig: function(options) {\n      options || (options = { });\n      this.setOptions(options);\n      this._setWidthHeight(options);\n      if (this._element && this.crossOrigin) {\n        this._element.crossOrigin = this.crossOrigin;\n      }\n    },\n\n    /**\n     * @private\n     * @param {Array} filters to be initialized\n     * @param {Function} callback Callback to invoke when all fabric.Image.filters instances are created\n     */\n    _initFilters: function(filters, callback) {\n      if (filters && filters.length) {\n        fabric.util.enlivenObjects(filters, function(enlivenedObjects) {\n          callback && callback(enlivenedObjects);\n        }, 'fabric.Image.filters');\n      }\n      else {\n        callback && callback();\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Object with width/height properties\n     */\n    _setWidthHeight: function(options) {\n      this.width = 'width' in options\n        ? options.width\n        : (this.getElement()\n          ? this.getElement().width || 0\n          : 0);\n\n      this.height = 'height' in options\n        ? options.height\n        : (this.getElement()\n          ? this.getElement().height || 0\n          : 0);\n    },\n\n    /**\n     * Calculate offset for center and scale factor for the image in order to respect\n     * the preserveAspectRatio attribute\n     * @private\n     * @return {Object}\n     */\n    parsePreserveAspectRatioAttribute: function() {\n      var pAR = fabric.util.parsePreserveAspectRatioAttribute(this.preserveAspectRatio || ''),\n          rWidth = this._element.width, rHeight = this._element.height,\n          scaleX = 1, scaleY = 1, offsetLeft = 0, offsetTop = 0, cropX = 0, cropY = 0,\n          offset, pWidth = this.width, pHeight = this.height, parsedAttributes = { width: pWidth, height: pHeight };\n      if (pAR && (pAR.alignX !== 'none' || pAR.alignY !== 'none')) {\n        if (pAR.meetOrSlice === 'meet') {\n          scaleX = scaleY = fabric.util.findScaleToFit(this._element, parsedAttributes);\n          offset = (pWidth - rWidth * scaleX) / 2;\n          if (pAR.alignX === 'Min') {\n            offsetLeft = -offset;\n          }\n          if (pAR.alignX === 'Max') {\n            offsetLeft = offset;\n          }\n          offset = (pHeight - rHeight * scaleY) / 2;\n          if (pAR.alignY === 'Min') {\n            offsetTop = -offset;\n          }\n          if (pAR.alignY === 'Max') {\n            offsetTop = offset;\n          }\n        }\n        if (pAR.meetOrSlice === 'slice') {\n          scaleX = scaleY = fabric.util.findScaleToCover(this._element, parsedAttributes);\n          offset = rWidth - pWidth / scaleX;\n          if (pAR.alignX === 'Mid') {\n            cropX = offset / 2;\n          }\n          if (pAR.alignX === 'Max') {\n            cropX = offset;\n          }\n          offset = rHeight - pHeight / scaleY;\n          if (pAR.alignY === 'Mid') {\n            cropY = offset / 2;\n          }\n          if (pAR.alignY === 'Max') {\n            cropY = offset;\n          }\n          rWidth = pWidth / scaleX;\n          rHeight = pHeight / scaleY;\n        }\n      }\n      else {\n        scaleX = pWidth / rWidth;\n        scaleY = pHeight / rHeight;\n      }\n      return {\n        width: rWidth,\n        height: rHeight,\n        scaleX: scaleX,\n        scaleY: scaleY,\n        offsetLeft: offsetLeft,\n        offsetTop: offsetTop,\n        cropX: cropX,\n        cropY: cropY\n      };\n    }\n  });\n\n  /**\n   * Default CSS class name for canvas\n   * @static\n   * @type String\n   * @default\n   */\n  fabric.Image.CSS_CANVAS = 'canvas-img';\n\n  /**\n   * Alias for getSrc\n   * @static\n   */\n  fabric.Image.prototype.getSvgSrc = fabric.Image.prototype.getSrc;\n\n  /**\n   * Creates an instance of fabric.Image from its object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} callback Callback to invoke when an image instance is created\n   */\n  fabric.Image.fromObject = function(_object, callback) {\n    var object = fabric.util.object.clone(_object);\n    fabric.util.loadImage(object.src, function(img, error) {\n      if (error) {\n        callback && callback(null, error);\n        return;\n      }\n      fabric.Image.prototype._initFilters.call(object, object.filters, function(filters) {\n        object.filters = filters || [];\n        fabric.Image.prototype._initFilters.call(object, [object.resizeFilter], function(resizeFilters) {\n          object.resizeFilter = resizeFilters[0];\n          var image = new fabric.Image(img, object);\n          callback(image);\n        });\n      });\n    }, null, object.crossOrigin);\n  };\n\n  /**\n   * Creates an instance of fabric.Image from an URL string\n   * @static\n   * @param {String} url URL to create an image from\n   * @param {Function} [callback] Callback to invoke when image is created (newly created image is passed as a first argument)\n   * @param {Object} [imgOptions] Options object\n   */\n  fabric.Image.fromURL = function(url, callback, imgOptions) {\n    fabric.util.loadImage(url, function(img) {\n      callback && callback(new fabric.Image(img, imgOptions));\n    }, null, imgOptions && imgOptions.crossOrigin);\n  };\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Image.fromElement})\n   * @static\n   * @see {@link http://www.w3.org/TR/SVG/struct.html#ImageElement}\n   */\n  fabric.Image.ATTRIBUTE_NAMES =\n    fabric.SHARED_ATTRIBUTES.concat('x y width height preserveAspectRatio xlink:href crossOrigin'.split(' '));\n\n  /**\n   * Returns {@link fabric.Image} instance from an SVG element\n   * @static\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @param {Function} callback Callback to execute when fabric.Image object is created\n   * @return {fabric.Image} Instance of fabric.Image\n   */\n  fabric.Image.fromElement = function(element, callback, options) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Image.ATTRIBUTE_NAMES);\n    fabric.Image.fromURL(parsedAttributes['xlink:href'], callback,\n      extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\n  };\n  /* _FROM_SVG_END_ */\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n  /**\n   * @private\n   * @return {Number} angle value\n   */\n  _getAngleValueForStraighten: function() {\n    var angle = this.angle % 360;\n    if (angle > 0) {\n      return Math.round((angle - 1) / 90) * 90;\n    }\n    return Math.round(angle / 90) * 90;\n  },\n\n  /**\n   * Straightens an object (rotating it from current angle to one of 0, 90, 180, 270, etc. depending on which is closer)\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  straighten: function() {\n    this.rotate(this._getAngleValueForStraighten());\n    return this;\n  },\n\n  /**\n   * Same as {@link fabric.Object.prototype.straighten} but with animation\n   * @param {Object} callbacks Object with callback functions\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  fxStraighten: function(callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: this.get('angle'),\n      endValue: this._getAngleValueForStraighten(),\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        _this.rotate(value);\n        onChange();\n      },\n      onComplete: function() {\n        _this.setCoords();\n        onComplete();\n      },\n    });\n\n    return this;\n  }\n});\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Straightens object, then rerenders canvas\n   * @param {fabric.Object} object Object to straighten\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  straightenObject: function (object) {\n    object.straighten();\n    this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Same as {@link fabric.Canvas.prototype.straightenObject}, but animated\n   * @param {fabric.Object} object Object to straighten\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxStraightenObject: function (object) {\n    object.fxStraighten({\n      onChange: this.requestRenderAllBound\n    });\n    return this;\n  }\n});\n\n\n(function() {\n\n  'use strict';\n\n  /**\n   * Tests if webgl supports certain precision\n   * @param {WebGL} Canvas WebGL context to test on\n   * @param {String} Precision to test can be any of following: 'lowp', 'mediump', 'highp'\n   * @returns {Boolean} Whether the user's browser WebGL supports given precision.\n   */\n  function testPrecision(gl, precision){\n    var fragmentSource = 'precision ' + precision + ' float;\\nvoid main(){}';\n    var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fragmentShader, fragmentSource);\n    gl.compileShader(fragmentShader);\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Indicate whether this filtering backend is supported by the user's browser.\n   * @param {Number} tileSize check if the tileSize is supported\n   * @returns {Boolean} Whether the user's browser supports WebGL.\n   */\n  fabric.isWebglSupported = function(tileSize) {\n    if (fabric.isLikelyNode) {\n      return false;\n    }\n    tileSize = tileSize || fabric.WebglFilterBackend.prototype.tileSize;\n    var canvas = document.createElement('canvas');\n    var gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');\n    var isSupported = false;\n    // eslint-disable-next-line\n    if (gl) {\n      fabric.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n      isSupported = fabric.maxTextureSize >= tileSize;\n      var precisions = ['highp', 'mediump', 'lowp'];\n      for (var i = 0; i < 3; i++){\n        if (testPrecision(gl, precisions[i])){\n          fabric.webGlPrecision = precisions[i];\n          break;\n        };\n      }\n    }\n    this.isSupported = isSupported;\n    return isSupported;\n  };\n\n  fabric.WebglFilterBackend = WebglFilterBackend;\n\n  /**\n   * WebGL filter backend.\n   */\n  function WebglFilterBackend(options) {\n    if (options && options.tileSize) {\n      this.tileSize = options.tileSize;\n    }\n    this.setupGLContext(this.tileSize, this.tileSize);\n    this.captureGPUInfo();\n  };\n\n  WebglFilterBackend.prototype = /** @lends fabric.WebglFilterBackend.prototype */ {\n\n    tileSize: 2048,\n\n    /**\n     * Experimental. This object is a sort of repository of help layers used to avoid\n     * of recreating them during frequent filtering. If you are previewing a filter with\n     * a slider you problably do not want to create help layers every filter step.\n     * in this object there will be appended some canvases, created once, resized sometimes\n     * cleared never. Clearing is left to the developer.\n     **/\n    resources: {\n\n    },\n\n    /**\n     * Setup a WebGL context suitable for filtering, and bind any needed event handlers.\n     */\n    setupGLContext: function(width, height) {\n      this.dispose();\n      this.createWebGLCanvas(width, height);\n      // eslint-disable-next-line\n      this.aPosition = new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]);\n      this.chooseFastestCopyGLTo2DMethod(width, height);\n    },\n\n    /**\n     * Pick a method to copy data from GL context to 2d canvas.  In some browsers using\n     * putImageData is faster than drawImage for that specific operation.\n     */\n    chooseFastestCopyGLTo2DMethod: function(width, height) {\n      var canMeasurePerf = typeof window.performance !== 'undefined';\n      var canUseImageData;\n      try {\n        new ImageData(1, 1);\n        canUseImageData = true;\n      }\n      catch (e) {\n        canUseImageData = false;\n      }\n      // eslint-disable-next-line no-undef\n      var canUseArrayBuffer = typeof ArrayBuffer !== 'undefined';\n      // eslint-disable-next-line no-undef\n      var canUseUint8Clamped = typeof Uint8ClampedArray !== 'undefined';\n\n      if (!(canMeasurePerf && canUseImageData && canUseArrayBuffer && canUseUint8Clamped)) {\n        return;\n      }\n\n      var targetCanvas = fabric.util.createCanvasElement();\n      // eslint-disable-next-line no-undef\n      var imageBuffer = new ArrayBuffer(width * height * 4);\n      var testContext = {\n        imageBuffer: imageBuffer,\n        destinationWidth: width,\n        destinationHeight: height,\n        targetCanvas: targetCanvas\n      };\n      var startTime, drawImageTime, putImageDataTime;\n      targetCanvas.width = width;\n      targetCanvas.height = height;\n\n      startTime = window.performance.now();\n      copyGLTo2DDrawImage.call(testContext, this.gl, testContext);\n      drawImageTime = window.performance.now() - startTime;\n\n      startTime = window.performance.now();\n      copyGLTo2DPutImageData.call(testContext, this.gl, testContext);\n      putImageDataTime = window.performance.now() - startTime;\n\n      if (drawImageTime > putImageDataTime) {\n        this.imageBuffer = imageBuffer;\n        this.copyGLTo2D = copyGLTo2DPutImageData;\n      }\n      else {\n        this.copyGLTo2D = copyGLTo2DDrawImage;\n      }\n    },\n\n    /**\n     * Create a canvas element and associated WebGL context and attaches them as\n     * class properties to the GLFilterBackend class.\n     */\n    createWebGLCanvas: function(width, height) {\n      var canvas = fabric.util.createCanvasElement();\n      canvas.width = width;\n      canvas.height = height;\n      var glOptions = { premultipliedAlpha: false },\n          gl = canvas.getContext('webgl', glOptions);\n      if (!gl) {\n        gl = canvas.getContext('experimental-webgl', glOptions);\n      }\n      if (!gl) {\n        return;\n      }\n      gl.clearColor(0, 0, 0, 0);\n      // this canvas can fire webglcontextlost and webglcontextrestored\n      this.canvas = canvas;\n      this.gl = gl;\n    },\n\n    /**\n     * Attempts to apply the requested filters to the source provided, drawing the filtered output\n     * to the provided target canvas.\n     *\n     * @param {Array} filters The filters to apply.\n     * @param {HTMLImageElement|HTMLCanvasElement} source The source to be filtered.\n     * @param {Number} width The width of the source input.\n     * @param {Number} height The height of the source input.\n     * @param {HTMLCanvasElement} targetCanvas The destination for filtered output to be drawn.\n     * @param {String|undefined} cacheKey A key used to cache resources related to the source. If\n     * omitted, caching will be skipped.\n     */\n    applyFilters: function(filters, source, width, height, targetCanvas, cacheKey) {\n      var gl = this.gl;\n      var cachedTexture;\n      if (cacheKey) {\n        cachedTexture = this.getCachedTexture(cacheKey, source);\n      }\n      var pipelineState = {\n        originalWidth: source.width || source.originalWidth,\n        originalHeight: source.height || source.originalHeight,\n        sourceWidth: width,\n        sourceHeight: height,\n        destinationWidth: width,\n        destinationHeight: height,\n        context: gl,\n        sourceTexture: this.createTexture(gl, width, height, !cachedTexture && source),\n        targetTexture: this.createTexture(gl, width, height),\n        originalTexture: cachedTexture ||\n          this.createTexture(gl, width, height, !cachedTexture && source),\n        passes: filters.length,\n        webgl: true,\n        aPosition: this.aPosition,\n        programCache: this.programCache,\n        pass: 0,\n        filterBackend: this,\n        targetCanvas: targetCanvas\n      };\n      var tempFbo = gl.createFramebuffer();\n      gl.bindFramebuffer(gl.FRAMEBUFFER, tempFbo);\n      filters.forEach(function(filter) { filter && filter.applyTo(pipelineState); });\n      resizeCanvasIfNeeded(pipelineState);\n      this.copyGLTo2D(gl, pipelineState);\n      gl.bindTexture(gl.TEXTURE_2D, null);\n      gl.deleteTexture(pipelineState.sourceTexture);\n      gl.deleteTexture(pipelineState.targetTexture);\n      gl.deleteFramebuffer(tempFbo);\n      targetCanvas.getContext('2d').setTransform(1, 0, 0, 1, 0, 0);\n      return pipelineState;\n    },\n\n    /**\n     * The same as the applyFilter method but with additional logging of WebGL\n     * errors.\n     */\n    applyFiltersDebug: function(filters, source, width, height, targetCanvas, cacheKey) {\n      // The following code is useful when debugging a specific issue but adds ~10x slowdown.\n      var gl = this.gl;\n      var ret = this.applyFilters(filters, source, width, height, targetCanvas, cacheKey);\n      var glError = gl.getError();\n      if (glError !== gl.NO_ERROR) {\n        var errorString = this.glErrorToString(gl, glError);\n        var error = new Error('WebGL Error ' + errorString);\n        error.glErrorCode = glError;\n        throw error;\n      }\n      return ret;\n    },\n\n    glErrorToString: function(context, errorCode) {\n      if (!context) {\n        return 'Context undefined for error code: ' + errorCode;\n      }\n      else if (typeof errorCode !== 'number') {\n        return 'Error code is not a number';\n      }\n      switch (errorCode) {\n        case context.NO_ERROR:\n          return 'NO_ERROR';\n        case context.INVALID_ENUM:\n          return 'INVALID_ENUM';\n        case context.INVALID_VALUE:\n          return 'INVALID_VALUE';\n        case context.INVALID_OPERATION:\n          return 'INVALID_OPERATION';\n        case context.INVALID_FRAMEBUFFER_OPERATION:\n          return 'INVALID_FRAMEBUFFER_OPERATION';\n        case context.OUT_OF_MEMORY:\n          return 'OUT_OF_MEMORY';\n        case context.CONTEXT_LOST_WEBGL:\n          return 'CONTEXT_LOST_WEBGL';\n        default:\n          return 'UNKNOWN_ERROR';\n      }\n    },\n\n    /**\n     * Detach event listeners, remove references, and clean up caches.\n     */\n    dispose: function() {\n      if (this.canvas) {\n        this.canvas = null;\n        this.gl = null;\n      }\n      this.clearWebGLCaches();\n    },\n\n    /**\n     * Wipe out WebGL-related caches.\n     */\n    clearWebGLCaches: function() {\n      this.programCache = {};\n      this.textureCache = {};\n    },\n\n    /**\n     * Create a WebGL texture object.\n     *\n     * Accepts specific dimensions to initialize the textuer to or a source image.\n     *\n     * @param {WebGLRenderingContext} gl The GL context to use for creating the texture.\n     * @param {Number} width The width to initialize the texture at.\n     * @param {Number} height The height to initialize the texture.\n     * @param {HTMLImageElement|HTMLCanvasElement} textureImageSource A source for the texture data.\n     * @returns {WebGLTexture}\n     */\n    createTexture: function(gl, width, height, textureImageSource) {\n      var texture = gl.createTexture();\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      if (textureImageSource) {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, textureImageSource);\n      }\n      else {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n      }\n      return texture;\n    },\n\n    /**\n     * Can be optionally used to get a texture from the cache array\n     *\n     * If an existing texture is not found, a new texture is created and cached.\n     *\n     * @param {String} uniqueId A cache key to use to find an existing texture.\n     * @param {HTMLImageElement|HTMLCanvasElement} textureImageSource A source to use to create the\n     * texture cache entry if one does not already exist.\n     */\n    getCachedTexture: function(uniqueId, textureImageSource) {\n      if (this.textureCache[uniqueId]) {\n        return this.textureCache[uniqueId];\n      }\n      else {\n        var texture = this.createTexture(\n          this.gl, textureImageSource.width, textureImageSource.height, textureImageSource);\n        this.textureCache[uniqueId] = texture;\n        return texture;\n      }\n    },\n\n    /**\n     * Clear out cached resources related to a source image that has been\n     * filtered previously.\n     *\n     * @param {String} cacheKey The cache key provided when the source image was filtered.\n     */\n    evictCachesForKey: function(cacheKey) {\n      if (this.textureCache[cacheKey]) {\n        this.gl.deleteTexture(this.textureCache[cacheKey]);\n        delete this.textureCache[cacheKey];\n      }\n    },\n\n    copyGLTo2D: copyGLTo2DDrawImage,\n\n    /**\n     * Attempt to extract GPU information strings from a WebGL context.\n     *\n     * Useful information when debugging or blacklisting specific GPUs.\n     *\n     * @returns {Object} A GPU info object with renderer and vendor strings.\n     */\n    captureGPUInfo: function() {\n      if (this.gpuInfo) {\n        return this.gpuInfo;\n      }\n      var gl = this.gl;\n      var ext = gl.getExtension('WEBGL_debug_renderer_info');\n      var gpuInfo = { renderer: '', vendor: '' };\n      if (ext) {\n        var renderer = gl.getParameter(ext.UNMASKED_RENDERER_WEBGL);\n        var vendor = gl.getParameter(ext.UNMASKED_VENDOR_WEBGL);\n        if (renderer) {\n          gpuInfo.renderer = renderer.toLowerCase();\n        }\n        if (vendor) {\n          gpuInfo.vendor = vendor.toLowerCase();\n        }\n      }\n      this.gpuInfo = gpuInfo;\n      return gpuInfo;\n    },\n  };\n})();\n\nfunction resizeCanvasIfNeeded(pipelineState) {\n  var targetCanvas = pipelineState.targetCanvas,\n      width = targetCanvas.width, height = targetCanvas.height,\n      dWidth = pipelineState.destinationWidth,\n      dHeight = pipelineState.destinationHeight;\n\n  if (width !== dWidth || height !== dHeight) {\n    targetCanvas.width = dWidth;\n    targetCanvas.height = dHeight;\n  }\n}\n\n/**\n * Copy an input WebGL canvas on to an output 2D canvas.\n *\n * The WebGL canvas is assumed to be upside down, with the top-left pixel of the\n * desired output image appearing in the bottom-left corner of the WebGL canvas.\n *\n * @param {WebGLRenderingContext} sourceContext The WebGL context to copy from.\n * @param {HTMLCanvasElement} targetCanvas The 2D target canvas to copy on to.\n * @param {Object} pipelineState The 2D target canvas to copy on to.\n */\nfunction copyGLTo2DDrawImage(gl, pipelineState) {\n  var glCanvas = gl.canvas, targetCanvas = pipelineState.targetCanvas,\n      ctx = targetCanvas.getContext('2d');\n  ctx.translate(0, targetCanvas.height); // move it down again\n  ctx.scale(1, -1); // vertical flip\n  // where is my image on the big glcanvas?\n  var sourceY = glCanvas.height - targetCanvas.height;\n  ctx.drawImage(glCanvas, 0, sourceY, targetCanvas.width, targetCanvas.height, 0, 0,\n    targetCanvas.width, targetCanvas.height);\n}\n\n/**\n * Copy an input WebGL canvas on to an output 2D canvas using 2d canvas' putImageData\n * API. Measurably faster than using ctx.drawImage in Firefox (version 54 on OSX Sierra).\n *\n * @param {WebGLRenderingContext} sourceContext The WebGL context to copy from.\n * @param {HTMLCanvasElement} targetCanvas The 2D target canvas to copy on to.\n * @param {Object} pipelineState The 2D target canvas to copy on to.\n */\nfunction copyGLTo2DPutImageData(gl, pipelineState) {\n  var targetCanvas = pipelineState.targetCanvas, ctx = targetCanvas.getContext('2d'),\n      dWidth = pipelineState.destinationWidth,\n      dHeight = pipelineState.destinationHeight,\n      numBytes = dWidth * dHeight * 4;\n\n  // eslint-disable-next-line no-undef\n  var u8 = new Uint8Array(this.imageBuffer, 0, numBytes);\n  // eslint-disable-next-line no-undef\n  var u8Clamped = new Uint8ClampedArray(this.imageBuffer, 0, numBytes);\n\n  gl.readPixels(0, 0, dWidth, dHeight, gl.RGBA, gl.UNSIGNED_BYTE, u8);\n  var imgData = new ImageData(u8Clamped, dWidth, dHeight);\n  ctx.putImageData(imgData, 0, 0);\n}\n\n\n(function() {\n\n  'use strict';\n\n  var noop = function() {};\n\n  fabric.Canvas2dFilterBackend = Canvas2dFilterBackend;\n\n  /**\n   * Canvas 2D filter backend.\n   */\n  function Canvas2dFilterBackend() {};\n\n  Canvas2dFilterBackend.prototype = /** @lends fabric.Canvas2dFilterBackend.prototype */ {\n    evictCachesForKey: noop,\n    dispose: noop,\n    clearWebGLCaches: noop,\n\n    /**\n     * Experimental. This object is a sort of repository of help layers used to avoid\n     * of recreating them during frequent filtering. If you are previewing a filter with\n     * a slider you probably do not want to create help layers every filter step.\n     * in this object there will be appended some canvases, created once, resized sometimes\n     * cleared never. Clearing is left to the developer.\n     **/\n    resources: {\n\n    },\n\n    /**\n     * Apply a set of filters against a source image and draw the filtered output\n     * to the provided destination canvas.\n     *\n     * @param {EnhancedFilter} filters The filter to apply.\n     * @param {HTMLImageElement|HTMLCanvasElement} sourceElement The source to be filtered.\n     * @param {Number} sourceWidth The width of the source input.\n     * @param {Number} sourceHeight The height of the source input.\n     * @param {HTMLCanvasElement} targetCanvas The destination for filtered output to be drawn.\n     */\n    applyFilters: function(filters, sourceElement, sourceWidth, sourceHeight, targetCanvas) {\n      var ctx = targetCanvas.getContext('2d');\n      ctx.drawImage(sourceElement, 0, 0, sourceWidth, sourceHeight);\n      var imageData = ctx.getImageData(0, 0, sourceWidth, sourceHeight);\n      var originalImageData = ctx.getImageData(0, 0, sourceWidth, sourceHeight);\n      var pipelineState = {\n        sourceWidth: sourceWidth,\n        sourceHeight: sourceHeight,\n        imageData: imageData,\n        originalEl: sourceElement,\n        originalImageData: originalImageData,\n        canvasEl: targetCanvas,\n        ctx: ctx,\n        filterBackend: this,\n      };\n      filters.forEach(function(filter) { filter.applyTo(pipelineState); });\n      if (pipelineState.imageData.width !== sourceWidth || pipelineState.imageData.height !== sourceHeight) {\n        targetCanvas.width = pipelineState.imageData.width;\n        targetCanvas.height = pipelineState.imageData.height;\n      }\n      ctx.putImageData(pipelineState.imageData, 0, 0);\n      return pipelineState;\n    },\n\n  };\n})();\n\n\n/**\n * @namespace fabric.Image.filters\n * @memberOf fabric.Image\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#image_filters}\n * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n */\nfabric.Image.filters = fabric.Image.filters || { };\n\n/**\n * Root filter class from which all filter classes inherit from\n * @class fabric.Image.filters.BaseFilter\n * @memberOf fabric.Image.filters\n */\nfabric.Image.filters.BaseFilter = fabric.util.createClass(/** @lends fabric.Image.filters.BaseFilter.prototype */ {\n\n  /**\n   * Filter type\n   * @param {String} type\n   * @default\n   */\n  type: 'BaseFilter',\n\n  /**\n   * Array of attributes to send with buffers. do not modify\n   * @private\n   */\n\n  vertexSource: 'attribute vec2 aPosition;\\n' +\n    'varying vec2 vTexCoord;\\n' +\n    'void main() {\\n' +\n      'vTexCoord = aPosition;\\n' +\n      'gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\\n' +\n    '}',\n\n  fragmentSource: 'precision highp float;\\n' +\n    'varying vec2 vTexCoord;\\n' +\n    'uniform sampler2D uTexture;\\n' +\n    'void main() {\\n' +\n      'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\n    '}',\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   */\n  initialize: function(options) {\n    if (options) {\n      this.setOptions(options);\n    }\n  },\n\n  /**\n   * Sets filter's properties from options\n   * @param {Object} [options] Options object\n   */\n  setOptions: function(options) {\n    for (var prop in options) {\n      this[prop] = options[prop];\n    }\n  },\n\n  /**\n   * Compile this filter's shader program.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context to use for shader compilation.\n   * @param {String} fragmentSource fragmentShader source for compilation\n   * @param {String} vertexSource vertexShader source for compilation\n   */\n  createProgram: function(gl, fragmentSource, vertexSource) {\n    fragmentSource = fragmentSource || this.fragmentSource;\n    vertexSource = vertexSource || this.vertexSource;\n    if (fabric.webGlPrecision !== 'highp'){\n      fragmentSource = fragmentSource.replace(\n        /precision highp float/g,\n        'precision ' + fabric.webGlPrecision + ' float'\n      );\n    }\n    var vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vertexShader, vertexSource);\n    gl.compileShader(vertexShader);\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n      throw new Error(\n        // eslint-disable-next-line prefer-template\n        'Vertex shader compile error for ' + this.type + ': ' +\n        gl.getShaderInfoLog(vertexShader)\n      );\n    }\n\n    var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fragmentShader, fragmentSource);\n    gl.compileShader(fragmentShader);\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      throw new Error(\n        // eslint-disable-next-line prefer-template\n        'Fragment shader compile error for ' + this.type + ': ' +\n        gl.getShaderInfoLog(fragmentShader)\n      );\n    }\n\n    var program = gl.createProgram();\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragmentShader);\n    gl.linkProgram(program);\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      throw new Error(\n        // eslint-disable-next-line prefer-template\n        'Shader link error for \"${this.type}\" ' +\n        gl.getProgramInfoLog(program)\n      );\n    }\n\n    var attributeLocations = this.getAttributeLocations(gl, program);\n    var uniformLocations = this.getUniformLocations(gl, program) || { };\n    uniformLocations.uStepW = gl.getUniformLocation(program, 'uStepW');\n    uniformLocations.uStepH = gl.getUniformLocation(program, 'uStepH');\n    return {\n      program: program,\n      attributeLocations: attributeLocations,\n      uniformLocations: uniformLocations\n    };\n  },\n\n  /**\n   * Return a map of attribute names to WebGLAttributeLocation objects.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {WebGLShaderProgram} program The shader program from which to take attribute locations.\n   * @returns {Object} A map of attribute names to attribute locations.\n   */\n  getAttributeLocations: function(gl, program) {\n    return {\n      aPosition: gl.getAttribLocation(program, 'aPosition'),\n    };\n  },\n\n  /**\n   * Return a map of uniform names to WebGLUniformLocation objects.\n   *\n   * Intended to be overridden by subclasses.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {WebGLShaderProgram} program The shader program from which to take uniform locations.\n   * @returns {Object} A map of uniform names to uniform locations.\n   */\n  getUniformLocations: function (/* gl, program */) {\n    // in case i do not need any special uniform i need to return an empty object\n    return { };\n  },\n\n  /**\n   * Send attribute data from this filter to its shader program on the GPU.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {Object} attributeLocations A map of shader attribute names to their locations.\n   */\n  sendAttributeData: function(gl, attributeLocations, aPositionData) {\n    var attributeLocation = attributeLocations.aPostion;\n    var buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    gl.enableVertexAttribArray(attributeLocation);\n    gl.vertexAttribPointer(attributeLocation, 2, gl.FLOAT, false, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, aPositionData, gl.STATIC_DRAW);\n  },\n\n  _setupFrameBuffer: function(options) {\n    var gl = options.context, width, height;\n    if (options.passes > 1) {\n      width = options.destinationWidth;\n      height = options.destinationHeight;\n      if (options.sourceWidth !== width || options.sourceHeight !== height) {\n        gl.deleteTexture(options.targetTexture);\n        options.targetTexture = options.filterBackend.createTexture(gl, width, height);\n      }\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D,\n        options.targetTexture, 0);\n    }\n    else {\n      // draw last filter on canvas and not to framebuffer.\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n      gl.finish();\n    }\n  },\n\n  _swapTextures: function(options) {\n    options.passes--;\n    options.pass++;\n    var temp = options.targetTexture;\n    options.targetTexture = options.sourceTexture;\n    options.sourceTexture = temp;\n  },\n\n  /**\n   * Intentionally left blank, to be overridden in custom filters\n   * @param {Object} options\n   **/\n  isNeutralState: function(/* options */) {\n    return false;\n  },\n\n  /**\n   * Apply this filter to the input image data provided.\n   *\n   * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n   *\n   * @param {Object} options\n   * @param {Number} options.passes The number of filters remaining to be executed\n   * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n   * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n   * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  applyTo: function(options) {\n    if (options.webgl) {\n      if (options.passes > 1 && this.isNeutralState(options)) {\n        // avoid doing something that we do not need\n        return;\n      }\n      this._setupFrameBuffer(options);\n      this.applyToWebGL(options);\n      this._swapTextures(options);\n    }\n    else if (!this.isNeutralState()) {\n      this.applyTo2d(options);\n    }\n  },\n\n  /**\n   * Retrieves the cached shader.\n   * @param {Object} options\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  retrieveShader: function(options) {\n    if (!options.programCache.hasOwnProperty(this.type)) {\n      options.programCache[this.type] = this.createProgram(options.context);\n    }\n    return options.programCache[this.type];\n  },\n\n  /**\n   * Apply this filter using webgl.\n   *\n   * @param {Object} options\n   * @param {Number} options.passes The number of filters remaining to be executed\n   * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n   * @param {WebGLTexture} options.originalTexture The texture of the original input image.\n   * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n   * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  applyToWebGL: function(options) {\n    var gl = options.context;\n    var shader = this.retrieveShader(options);\n    if (options.pass === 0 && options.originalTexture) {\n      gl.bindTexture(gl.TEXTURE_2D, options.originalTexture);\n    }\n    else {\n      gl.bindTexture(gl.TEXTURE_2D, options.sourceTexture);\n    }\n    gl.useProgram(shader.program);\n    this.sendAttributeData(gl, shader.attributeLocations, options.aPosition);\n\n    gl.uniform1f(shader.uniformLocations.uStepW, 1 / options.sourceWidth);\n    gl.uniform1f(shader.uniformLocations.uStepH, 1 / options.sourceHeight);\n\n    this.sendUniformData(gl, shader.uniformLocations);\n    gl.viewport(0, 0, options.destinationWidth, options.destinationHeight);\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n  },\n\n  bindAdditionalTexture: function(gl, texture, textureUnit) {\n    gl.activeTexture(textureUnit);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    // reset active texture to 0 as usual\n    gl.activeTexture(gl.TEXTURE0);\n  },\n\n  unbindAdditionalTexture: function(gl, textureUnit) {\n    gl.activeTexture(textureUnit);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.activeTexture(gl.TEXTURE0);\n  },\n\n  getMainParameter: function() {\n    return this[this.mainParameter];\n  },\n\n  setMainParameter: function(value) {\n    this[this.mainParameter] = value;\n  },\n\n  /**\n   * Send uniform data from this filter to its shader program on the GPU.\n   *\n   * Intended to be overridden by subclasses.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {Object} uniformLocations A map of shader uniform names to their locations.\n   */\n  sendUniformData: function(/* gl, uniformLocations */) {\n    // Intentionally left blank.  Override me in subclasses.\n  },\n\n  /**\n   * If needed by a 2d filter, this functions can create an helper canvas to be used\n   * remember that options.targetCanvas is available for use till end of chain.\n   */\n  createHelpLayer: function(options) {\n    if (!options.helpLayer) {\n      var helpLayer = document.createElement('canvas');\n      helpLayer.width = options.sourceWidth;\n      helpLayer.height = options.sourceHeight;\n      options.helpLayer = helpLayer;\n    }\n  },\n\n  /**\n   * Returns object representation of an instance\n   * @return {Object} Object representation of an instance\n   */\n  toObject: function() {\n    var object = { type: this.type }, mainP = this.mainParameter;\n    if (mainP) {\n      object[mainP] = this[mainP];\n    }\n    return object;\n  },\n\n  /**\n   * Returns a JSON representation of an instance\n   * @return {Object} JSON\n   */\n  toJSON: function() {\n    // delegate, not alias\n    return this.toObject();\n  }\n});\n\nfabric.Image.filters.BaseFilter.fromObject = function(object, callback) {\n  var filter = new fabric.Image.filters[object.type](object);\n  callback && callback(filter);\n  return filter;\n};\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Color Matrix filter class\n   * @class fabric.Image.filters.ColorMatrix\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.ColorMatrix#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @see {@Link http://www.webwasp.co.uk/tutorials/219/Color_Matrix_Filter.php}\n   * @see {@Link http://phoboslab.org/log/2013/11/fast-image-filters-with-webgl}\n   * @example <caption>Kodachrome filter</caption>\n   * var filter = new fabric.Image.filters.ColorMatrix({\n   *  matrix: [\n       1.1285582396593525, -0.3967382283601348, -0.03992559172921793, 0, 63.72958762196502,\n       -0.16404339962244616, 1.0835251566291304, -0.05498805115633132, 0, 24.732407896706203,\n       -0.16786010706155763, -0.5603416277695248, 1.6014850761964943, 0, 35.62982807460946,\n       0, 0, 0, 1, 0\n      ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.ColorMatrix = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.ColorMatrix.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'ColorMatrix',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'uniform mat4 uColorMatrix;\\n' +\n      'uniform vec4 uConstants;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'color *= uColorMatrix;\\n' +\n        'color += uConstants;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * Colormatrix for pixels.\n     * array of 20 floats. Numbers in positions 4, 9, 14, 19 loose meaning\n     * outside the -1, 1 range.\n     * 0.0039215686 is the part of 1 that get translated to 1 in 2d\n     * @param {Array} matrix array of 20 numbers.\n     * @default\n     */\n    matrix: [\n      1, 0, 0, 0, 0,\n      0, 1, 0, 0, 0,\n      0, 0, 1, 0, 0,\n      0, 0, 0, 1, 0\n    ],\n\n    mainParameter: 'matrix',\n\n    /**\n     * Lock the colormatrix on the color part, skipping alpha, manly for non webgl scenario\n     * to save some calculation\n     */\n    colorsOnly: true,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      // create a new array instead mutating the prototype with push\n      this.matrix = this.matrix.slice(0);\n    },\n\n    /**\n     * Intentionally left blank, to be overridden in custom filters\n     * @param {Object} options\n     **/\n    isNeutralState: function(/* options */) {\n      var _class = filters.ColorMatrix;\n      for (var i = 20; i--;) {\n        if (this.matrix[i] !== _class.prototype.matrix[i]) {\n          return false;\n        }\n      }\n      return true;\n    },\n\n    /**\n     * Apply the ColorMatrix operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          iLen = data.length,\n          m = this.matrix,\n          r, g, b, a, i, colorsOnly = this.colorsOnly;\n\n      for (i = 0; i < iLen; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n        if (colorsOnly) {\n          data[i] = r * m[0] + g * m[1] + b * m[2] + m[4] * 255;\n          data[i + 1] = r * m[5] + g * m[6] + b * m[7] + m[9] * 255;\n          data[i + 2] = r * m[10] + g * m[11] + b * m[12] + m[14] * 255;\n        }\n        else {\n          a = data[i + 3];\n          data[i] = r * m[0] + g * m[1] + b * m[2] + a * m[3] + m[4] * 255;\n          data[i + 1] = r * m[5] + g * m[6] + b * m[7] + a * m[8] + m[9] * 255;\n          data[i + 2] = r * m[10] + g * m[11] + b * m[12] + a * m[13] + m[14] * 255;\n          data[i + 3] = r * m[15] + g * m[16] + b * m[17] + a * m[18] + m[19] * 255;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uColorMatrix: gl.getUniformLocation(program, 'uColorMatrix'),\n        uConstants: gl.getUniformLocation(program, 'uConstants'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var m = this.matrix,\n          matrix = [\n            m[0], m[1], m[2], m[3],\n            m[5], m[6], m[7], m[8],\n            m[10], m[11], m[12], m[13],\n            m[15], m[16], m[17], m[18]\n          ],\n          constants = [m[4], m[9], m[14], m[19]];\n      gl.uniformMatrix4fv(uniformLocations.uColorMatrix, false, matrix);\n      gl.uniform4fv(uniformLocations.uConstants, constants);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] function to invoke after filter creation\n   * @return {fabric.Image.filters.ColorMatrix} Instance of fabric.Image.filters.ColorMatrix\n   */\n  fabric.Image.filters.ColorMatrix.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Brightness filter class\n   * @class fabric.Image.filters.Brightness\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Brightness#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Brightness({\n   *   brightness: 200\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Brightness = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Brightness.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Brightness',\n\n    /**\n     * Fragment source for the brightness program\n     */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uBrightness;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'color.rgb += uBrightness;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * Brightness value, from -1 to 1.\n     * translated to -255 to 255 for 2d\n     * 0.0039215686 is the part of 1 that get translated to 1 in 2d\n     * @param {Number} brightness\n     * @default\n     */\n    brightness: 0,\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'brightness',\n\n    /**\n    * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n    *\n    * @param {Object} options\n    * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n    */\n    applyTo2d: function(options) {\n      if (this.brightness === 0) {\n        return;\n      }\n      var imageData = options.imageData,\n          data = imageData.data, i, len = data.length,\n          brightness = Math.round(this.brightness * 255);\n      for (i = 0; i < len; i += 4) {\n        data[i] = data[i] + brightness;\n        data[i + 1] = data[i + 1] + brightness;\n        data[i + 2] = data[i + 2] + brightness;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uBrightness: gl.getUniformLocation(program, 'uBrightness'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uBrightness, this.brightness);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Brightness} Instance of fabric.Image.filters.Brightness\n   */\n  fabric.Image.filters.Brightness.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Adapted from <a href=\"http://www.html5rocks.com/en/tutorials/canvas/imagefilters/\">html5rocks article</a>\n   * @class fabric.Image.filters.Convolute\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Convolute#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example <caption>Sharpen filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 0, -1,  0,\n   *            -1,  5, -1,\n   *             0, -1,  0 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   * @example <caption>Blur filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 1/9, 1/9, 1/9,\n   *             1/9, 1/9, 1/9,\n   *             1/9, 1/9, 1/9 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   * @example <caption>Emboss filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 1,   1,  1,\n   *             1, 0.7, -1,\n   *            -1,  -1, -1 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   * @example <caption>Emboss filter with opaqueness</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   opaque: true,\n   *   matrix: [ 1,   1,  1,\n   *             1, 0.7, -1,\n   *            -1,  -1, -1 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n  filters.Convolute = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Convolute.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Convolute',\n\n    /*\n     * Opaque value (true/false)\n     */\n    opaque: false,\n\n    /*\n     * matrix for the filter, max 9x9\n     */\n    matrix: [0, 0, 0, 0, 1, 0, 0, 0, 0],\n\n    /**\n     * Fragment source for the brightness program\n     */\n    fragmentSource: {\n      Convolute_3_1: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[9];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 0);\\n' +\n          'for (float h = 0.0; h < 3.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 3.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 1), uStepH * (h - 1));\\n' +\n              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 3.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      Convolute_3_0: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[9];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 1);\\n' +\n          'for (float h = 0.0; h < 3.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 3.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 1.0), uStepH * (h - 1.0));\\n' +\n              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 3.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\n          'gl_FragColor = color;\\n' +\n          'gl_FragColor.a = alpha;\\n' +\n        '}',\n      Convolute_5_1: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[25];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 0);\\n' +\n          'for (float h = 0.0; h < 5.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 5.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\\n' +\n              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 5.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      Convolute_5_0: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[25];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 1);\\n' +\n          'for (float h = 0.0; h < 5.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 5.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\\n' +\n              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 5.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\n          'gl_FragColor = color;\\n' +\n          'gl_FragColor.a = alpha;\\n' +\n        '}',\n      Convolute_7_1: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[49];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 0);\\n' +\n          'for (float h = 0.0; h < 7.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 7.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\\n' +\n              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 7.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      Convolute_7_0: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[49];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 1);\\n' +\n          'for (float h = 0.0; h < 7.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 7.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\\n' +\n              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 7.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\n          'gl_FragColor = color;\\n' +\n          'gl_FragColor.a = alpha;\\n' +\n        '}',\n      Convolute_9_1: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[81];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 0);\\n' +\n          'for (float h = 0.0; h < 9.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 9.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\\n' +\n              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 9.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      Convolute_9_0: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[81];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 1);\\n' +\n          'for (float h = 0.0; h < 9.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 9.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\\n' +\n              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 9.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\n          'gl_FragColor = color;\\n' +\n          'gl_FragColor.a = alpha;\\n' +\n        '}',\n    },\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Convolute.prototype\n     * @param {Object} [options] Options object\n     * @param {Boolean} [options.opaque=false] Opaque value (true/false)\n     * @param {Array} [options.matrix] Filter matrix\n     */\n\n\n    /**\n    * Retrieves the cached shader.\n    * @param {Object} options\n    * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n    * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n    */\n    retrieveShader: function(options) {\n      var size = Math.sqrt(this.matrix.length);\n      var cacheKey = this.type + '_' + size + '_' + (this.opaque ? 1 : 0);\n      var shaderSource = this.fragmentSource[cacheKey];\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    /**\n     * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          weights = this.matrix,\n          side = Math.round(Math.sqrt(weights.length)),\n          halfSide = Math.floor(side / 2),\n          sw = imageData.width,\n          sh = imageData.height,\n          output = options.ctx.createImageData(sw, sh),\n          dst = output.data,\n          // go through the destination image pixels\n          alphaFac = this.opaque ? 1 : 0,\n          r, g, b, a, dstOff,\n          scx, scy, srcOff, wt,\n          x, y, cx, cy;\n\n      for (y = 0; y < sh; y++) {\n        for (x = 0; x < sw; x++) {\n          dstOff = (y * sw + x) * 4;\n          // calculate the weighed sum of the source image pixels that\n          // fall under the convolution matrix\n          r = 0; g = 0; b = 0; a = 0;\n\n          for (cy = 0; cy < side; cy++) {\n            for (cx = 0; cx < side; cx++) {\n              scy = y + cy - halfSide;\n              scx = x + cx - halfSide;\n\n              // eslint-disable-next-line max-depth\n              if (scy < 0 || scy > sh || scx < 0 || scx > sw) {\n                continue;\n              }\n\n              srcOff = (scy * sw + scx) * 4;\n              wt = weights[cy * side + cx];\n\n              r += data[srcOff] * wt;\n              g += data[srcOff + 1] * wt;\n              b += data[srcOff + 2] * wt;\n              // eslint-disable-next-line max-depth\n              if (!alphaFac) {\n                a += data[srcOff + 3] * wt;\n              }\n            }\n          }\n          dst[dstOff] = r;\n          dst[dstOff + 1] = g;\n          dst[dstOff + 2] = b;\n          if (!alphaFac) {\n            dst[dstOff + 3] = a;\n          }\n          else {\n            dst[dstOff + 3] = data[dstOff + 3];\n          }\n        }\n      }\n      options.imageData = output;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uMatrix: gl.getUniformLocation(program, 'uMatrix'),\n        uOpaque: gl.getUniformLocation(program, 'uOpaque'),\n        uHalfSize: gl.getUniformLocation(program, 'uHalfSize'),\n        uSize: gl.getUniformLocation(program, 'uSize'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1fv(uniformLocations.uMatrix, this.matrix);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        opaque: this.opaque,\n        matrix: this.matrix\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Convolute} Instance of fabric.Image.filters.Convolute\n   */\n  fabric.Image.filters.Convolute.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Grayscale image filter class\n   * @class fabric.Image.filters.Grayscale\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Grayscale();\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Grayscale = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Grayscale.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Grayscale',\n\n    fragmentSource: {\n      average: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n          'float average = (color.r + color.b + color.g) / 3.0;\\n' +\n          'gl_FragColor = vec4(average, average, average, color.a);\\n' +\n        '}',\n      lightness: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform int uMode;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 col = texture2D(uTexture, vTexCoord);\\n' +\n          'float average = (max(max(col.r, col.g),col.b) + min(min(col.r, col.g),col.b)) / 2.0;\\n' +\n          'gl_FragColor = vec4(average, average, average, col.a);\\n' +\n        '}',\n      luminosity: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform int uMode;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 col = texture2D(uTexture, vTexCoord);\\n' +\n          'float average = 0.21 * col.r + 0.72 * col.g + 0.07 * col.b;\\n' +\n          'gl_FragColor = vec4(average, average, average, col.a);\\n' +\n        '}',\n    },\n\n\n    /**\n     * Grayscale mode, between 'average', 'lightness', 'luminosity'\n     * @param {String} type\n     * @default\n     */\n    mode: 'average',\n\n    mainParameter: 'mode',\n\n    /**\n     * Apply the Grayscale operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data, i,\n          len = data.length, value,\n          mode = this.mode;\n      for (i = 0; i < len; i += 4) {\n        if (mode === 'average') {\n          value = (data[i] + data[i + 1] + data[i + 2]) / 3;\n        }\n        else if (mode === 'lightness') {\n          value = (Math.min(data[i], data[i + 1], data[i + 2]) +\n            Math.max(data[i], data[i + 1], data[i + 2])) / 2;\n        }\n        else if (mode === 'luminosity') {\n          value = 0.21 * data[i] + 0.72 * data[i + 1] + 0.07 * data[i + 2];\n        }\n        data[i] = value;\n        data[i + 1] = value;\n        data[i + 2] = value;\n      }\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function(options) {\n      var cacheKey = this.type + '_' + this.mode;\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        var shaderSource = this.fragmentSource[this.mode];\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uMode: gl.getUniformLocation(program, 'uMode'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      // default average mode.\n      var mode = 1;\n      gl.uniform1i(uniformLocations.uMode, mode);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Grayscale} Instance of fabric.Image.filters.Grayscale\n   */\n  fabric.Image.filters.Grayscale.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Invert filter class\n   * @class fabric.Image.filters.Invert\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Invert();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Invert = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Invert.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Invert',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform int uInvert;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'if (uInvert == 1) {\\n' +\n          'gl_FragColor = vec4(1.0 - color.r,1.0 -color.g,1.0 -color.b,color.a);\\n' +\n        '} else {\\n' +\n          'gl_FragColor = color;\\n' +\n        '}\\n' +\n      '}',\n\n    /**\n     * Filter invert. if false, does nothing\n     * @param {Boolean} invert\n     * @default\n     */\n    invert: true,\n\n    mainParameter: 'invert',\n\n    /**\n     * Apply the Invert operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function(options) {\n      if (!this.invert) {\n        return;\n      }\n      var imageData = options.imageData,\n          data = imageData.data, i,\n          len = data.length;\n      for (i = 0; i < len; i += 4) {\n        data[i] = 255 - data[i];\n        data[i + 1] = 255 - data[i + 1];\n        data[i + 2] = 255 - data[i + 2];\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uInvert: gl.getUniformLocation(program, 'uInvert'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1i(uniformLocations.uInvert, this.invert);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Invert} Instance of fabric.Image.filters.Invert\n   */\n  fabric.Image.filters.Invert.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Noise filter class\n   * @class fabric.Image.filters.Noise\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Noise#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Noise({\n   *   noise: 700\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n  filters.Noise = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Noise.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Noise',\n\n    /**\n     * Fragment source for the noise program\n     */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uStepH;\\n' +\n      'uniform float uNoise;\\n' +\n      'uniform float uSeed;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'float rand(vec2 co, float seed, float vScale) {\\n' +\n        'return fract(sin(dot(co.xy * vScale ,vec2(12.9898 , 78.233))) * 43758.5453 * (seed + 0.01) / 2.0);\\n' +\n      '}\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'color.rgb += (0.5 - rand(vTexCoord, uSeed, 0.1 / uStepH)) * uNoise;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'noise',\n\n    /**\n     * Noise value, from\n     * @param {Number} noise\n     * @default\n     */\n    noise: 0,\n\n    /**\n     * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      if (this.noise === 0) {\n        return;\n      }\n      var imageData = options.imageData,\n          data = imageData.data, i, len = data.length,\n          noise = this.noise, rand;\n\n      for (i = 0, len = data.length; i < len; i += 4) {\n\n        rand = (0.5 - Math.random()) * noise;\n\n        data[i] += rand;\n        data[i + 1] += rand;\n        data[i + 2] += rand;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uNoise: gl.getUniformLocation(program, 'uNoise'),\n        uSeed: gl.getUniformLocation(program, 'uSeed'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uNoise, this.noise / 255);\n      gl.uniform1f(uniformLocations.uSeed, Math.random());\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        noise: this.noise\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Noise} Instance of fabric.Image.filters.Noise\n   */\n  fabric.Image.filters.Noise.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Pixelate filter class\n   * @class fabric.Image.filters.Pixelate\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Pixelate#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Pixelate({\n   *   blocksize: 8\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Pixelate = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Pixelate.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Pixelate',\n\n    blocksize: 4,\n\n    mainParameter: 'blocksize',\n\n    /**\n     * Fragment source for the Pixelate program\n     */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uBlocksize;\\n' +\n      'uniform float uStepW;\\n' +\n      'uniform float uStepH;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'float blockW = uBlocksize * uStepW;\\n' +\n        'float blockH = uBlocksize * uStepW;\\n' +\n        'int posX = int(vTexCoord.x / blockW);\\n' +\n        'int posY = int(vTexCoord.y / blockH);\\n' +\n        'float fposX = float(posX);\\n' +\n        'float fposY = float(posY);\\n' +\n        'vec2 squareCoords = vec2(fposX * blockW, fposY * blockH);\\n' +\n        'vec4 color = texture2D(uTexture, squareCoords);\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * Apply the Pixelate operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      if (this.blocksize === 1) {\n        return;\n      }\n      var imageData = options.imageData,\n          data = imageData.data,\n          iLen = imageData.height,\n          jLen = imageData.width,\n          index, i, j, r, g, b, a,\n          _i, _j, _iLen, _jLen;\n\n      for (i = 0; i < iLen; i += this.blocksize) {\n        for (j = 0; j < jLen; j += this.blocksize) {\n\n          index = (i * 4) * jLen + (j * 4);\n\n          r = data[index];\n          g = data[index + 1];\n          b = data[index + 2];\n          a = data[index + 3];\n\n          _iLen = Math.min(i + this.blocksize, iLen);\n          _jLen = Math.min(j + this.blocksize, jLen);\n          for (_i = i; _i < _iLen; _i++) {\n            for (_j = j; _j < _jLen; _j++) {\n              index = (_i * 4) * jLen + (_j * 4);\n              data[index] = r;\n              data[index + 1] = g;\n              data[index + 2] = b;\n              data[index + 3] = a;\n            }\n          }\n        }\n      }\n    },\n\n    /**\n     * Indicate when the filter is not gonna apply changes to the image\n     **/\n    isNeutralState: function() {\n      return this.blocksize === 1;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uBlocksize: gl.getUniformLocation(program, 'uBlocksize'),\n        uStepW: gl.getUniformLocation(program, 'uStepW'),\n        uStepH: gl.getUniformLocation(program, 'uStepH'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uBlocksize, this.blocksize);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Pixelate} Instance of fabric.Image.filters.Pixelate\n   */\n  fabric.Image.filters.Pixelate.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Remove white filter class\n   * @class fabric.Image.filters.RemoveColor\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.RemoveColor#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.RemoveColor({\n   *   threshold: 0.2,\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n  filters.RemoveColor = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.RemoveColor.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'RemoveColor',\n\n    /**\n     * Color to remove, in any format understood by fabric.Color.\n     * @param {String} type\n     * @default\n     */\n    color: '#FFFFFF',\n\n    /**\n     * Fragment source for the brightness program\n     */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform vec4 uLow;\\n' +\n      'uniform vec4 uHigh;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\n        'if(all(greaterThan(gl_FragColor.rgb,uLow.rgb)) && all(greaterThan(uHigh.rgb,gl_FragColor.rgb))) {\\n' +\n          'gl_FragColor.a = 0.0;\\n' +\n        '}\\n' +\n      '}',\n\n    /**\n     * distance to actual color, as value up or down from each r,g,b\n     * between 0 and 1\n     **/\n    distance: 0.02,\n\n    /**\n     * For color to remove inside distance, use alpha channel for a smoother deletion\n     * NOT IMPLEMENTED YET\n     **/\n    useAlpha: false,\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.RemoveWhite.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.color=#RRGGBB] Threshold value\n     * @param {Number} [options.distance=10] Distance value\n     */\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data, i,\n          distance = this.distance * 255,\n          r, g, b,\n          source = new fabric.Color(this.color).getSource(),\n          lowC = [\n            source[0] - distance,\n            source[1] - distance,\n            source[2] - distance,\n          ],\n          highC = [\n            source[0] + distance,\n            source[1] + distance,\n            source[2] + distance,\n          ];\n\n\n      for (i = 0; i < data.length; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        if (r > lowC[0] &&\n            g > lowC[1] &&\n            b > lowC[2] &&\n            r < highC[0] &&\n            g < highC[1] &&\n            b < highC[2]) {\n          data[i + 3] = 0;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uLow: gl.getUniformLocation(program, 'uLow'),\n        uHigh: gl.getUniformLocation(program, 'uHigh'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var source = new fabric.Color(this.color).getSource(),\n          distance = parseFloat(this.distance),\n          lowC = [\n            0 + source[0] / 255 - distance,\n            0 + source[1] / 255 - distance,\n            0 + source[2] / 255 - distance,\n            1\n          ],\n          highC = [\n            source[0] / 255 + distance,\n            source[1] / 255 + distance,\n            source[2] / 255 + distance,\n            1\n          ];\n      gl.uniform4fv(uniformLocations.uLow, lowC);\n      gl.uniform4fv(uniformLocations.uHigh, highC);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        color: this.color,\n        distance: this.distance\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.RemoveColor} Instance of fabric.Image.filters.RemoveWhite\n   */\n  fabric.Image.filters.RemoveColor.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  var matrices = {\n    Brownie: [\n      0.59970,0.34553,-0.27082,0,0.186,\n      -0.03770,0.86095,0.15059,0,-0.1449,\n      0.24113,-0.07441,0.44972,0,-0.02965,\n      0,0,0,1,0\n    ],\n    Vintage: [\n      0.62793,0.32021,-0.03965,0,0.03784,\n      0.02578,0.64411,0.03259,0,0.02926,\n      0.04660,-0.08512,0.52416,0,0.02023,\n      0,0,0,1,0\n    ],\n    Kodachrome: [\n      1.12855,-0.39673,-0.03992,0,0.24991,\n      -0.16404,1.08352,-0.05498,0,0.09698,\n      -0.16786,-0.56034,1.60148,0,0.13972,\n      0,0,0,1,0\n    ],\n    Technicolor: [\n      1.91252,-0.85453,-0.09155,0,0.04624,\n      -0.30878,1.76589,-0.10601,0,-0.27589,\n      -0.23110,-0.75018,1.84759,0,0.12137,\n      0,0,0,1,0\n    ],\n    Polaroid: [\n      1.438,-0.062,-0.062,0,0,\n      -0.122,1.378,-0.122,0,0,\n      -0.016,-0.016,1.483,0,0,\n      0,0,0,1,0\n    ],\n    Sepia: [\n      0.393, 0.769, 0.189, 0, 0,\n      0.349, 0.686, 0.168, 0, 0,\n      0.272, 0.534, 0.131, 0, 0,\n      0, 0, 0, 1, 0\n    ],\n    BlackWhite: [\n      1.5, 1.5, 1.5, 0, -1,\n      1.5, 1.5, 1.5, 0, -1,\n      1.5, 1.5, 1.5, 0, -1,\n      0, 0, 0, 1, 0,\n    ]\n  };\n\n  for (var key in matrices) {\n    filters[key] = createClass(filters.ColorMatrix, /** @lends fabric.Image.filters.Sepia.prototype */ {\n\n      /**\n       * Filter type\n       * @param {String} type\n       * @default\n       */\n      type: key,\n\n      /**\n       * Colormatrix for the effect\n       * array of 20 floats. Numbers in positions 4, 9, 14, 19 loose meaning\n       * outside the -1, 1 range.\n       * @param {Array} matrix array of 20 numbers.\n       * @default\n       */\n      matrix: matrices[key],\n\n      /**\n       * Lock the matrix export for this kind of static, parameter less filters.\n       */\n      mainParameter: false,\n      /**\n       * Lock the colormatrix on the color part, skipping alpha\n       */\n      colorsOnly: true,\n\n    });\n    fabric.Image.filters[key].fromObject = fabric.Image.filters.BaseFilter.fromObject;\n  }\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n  'use strict';\n\n  var fabric = global.fabric,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Color Blend filter class\n   * @class fabric.Image.filter.BlendColor\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @example\n   * var filter = new fabric.Image.filters.BlendColor({\n   *  color: '#000',\n   *  mode: 'multiply'\n   * });\n   *\n   * var filter = new fabric.Image.filters.BlendImage({\n   *  image: fabricImageObject,\n   *  mode: 'multiply',\n   *  alpha: 0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n\n  filters.BlendColor = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Blend.prototype */ {\n    type: 'BlendColor',\n\n    /**\n     * Color to make the blend operation with. default to a reddish color since black or white\n     * gives always strong result.\n     **/\n    color: '#F95C63',\n\n    /**\n     * Blend mode for the filter: one of multiply, add, diff, screen, subtract,\n     * darken, lighten, overlay, exclusion, tint.\n     **/\n    mode: 'multiply',\n\n    /**\n     * alpha value. represent the strength of the blend color operation.\n     **/\n    alpha: 1,\n\n    /**\n     * Fragment source for the Multiply program\n     */\n    fragmentSource: {\n      multiply: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n          'color.rgb *= uColor.rgb;\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      screen: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n          'color.rgb = 1.0 - (1.0 - color.rgb) * (1.0 - uColor.rgb);\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      add: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\n          'gl_FragColor.rgb += uColor.rgb;\\n' +\n        '}',\n      diff: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\n          'gl_FragColor.rgb = abs(gl_FragColor.rgb - uColor.rgb);\\n' +\n      '}',\n      subtract: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\n          'gl_FragColor.rgb -= uColor.rgb;\\n' +\n        '}',\n      lighten: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\n          'gl_FragColor.rgb = max(gl_FragColor.rgb, uColor.rgb);\\n' +\n        '}',\n      darken: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\n          'gl_FragColor.rgb = min(gl_FragColor.rgb, uColor.rgb);\\n' +\n        '}',\n      exclusion: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\n          'gl_FragColor.rgb += uColor.rgb - 2.0 * (uColor.rgb * gl_FragColor.rgb);\\n' +\n        '}',\n      overlay: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\n          'if (uColor.r < 0.5) {\\n' +\n            'gl_FragColor.r *= 2.0 * uColor.r;\\n' +\n          '} else {\\n' +\n            'gl_FragColor.r = 1.0 - 2.0 * (1.0 - gl_FragColor.r) * (1.0 - uColor.r);\\n' +\n          '}\\n' +\n          'if (uColor.g < 0.5) {\\n' +\n            'gl_FragColor.g *= 2.0 * uColor.g;\\n' +\n          '} else {\\n' +\n            'gl_FragColor.g = 1.0 - 2.0 * (1.0 - gl_FragColor.g) * (1.0 - uColor.g);\\n' +\n          '}\\n' +\n          'if (uColor.b < 0.5) {\\n' +\n            'gl_FragColor.b *= 2.0 * uColor.b;\\n' +\n          '} else {\\n' +\n            'gl_FragColor.b = 1.0 - 2.0 * (1.0 - gl_FragColor.b) * (1.0 - uColor.b);\\n' +\n          '}\\n' +\n        '}',\n      tint: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\n          'gl_FragColor.rgb *= (1.0 - uColor.a);\\n' +\n          'gl_FragColor.rgb += uColor.rgb;\\n' +\n        '}'\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function(options) {\n      var cacheKey = this.type + '_' + this.mode;\n      var shaderSource = this.fragmentSource[this.mode];\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    /**\n     * Apply the Blend operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data, iLen = data.length,\n          tr, tg, tb,\n          r, g, b,\n          source, alpha1 = 1 - this.alpha;\n\n      source = new fabric.Color(this.color).getSource();\n      tr = source[0] * this.alpha;\n      tg = source[1] * this.alpha;\n      tb = source[2] * this.alpha;\n\n      for (var i = 0; i < iLen; i += 4) {\n\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        switch (this.mode) {\n          case 'multiply':\n            data[i] = r * tr / 255;\n            data[i + 1] = g * tg / 255;\n            data[i + 2] = b * tb / 255;\n            break;\n          case 'screen':\n            data[i] = 255 - (255 - r) * (255 - tr) / 255;\n            data[i + 1] = 255 - (255 - g) * (255 - tg) / 255;\n            data[i + 2] = 255 - (255 - b) * (255 - tb) / 255;\n            break;\n          case 'add':\n            data[i] = r + tr;\n            data[i + 1] = g + tg;\n            data[i + 2] = b + tb;\n            break;\n          case 'diff':\n          case 'difference':\n            data[i] = Math.abs(r - tr);\n            data[i + 1] = Math.abs(g - tg);\n            data[i + 2] = Math.abs(b - tb);\n            break;\n          case 'subtract':\n            data[i] = r - tr;\n            data[i + 1] = g - tg;\n            data[i + 2] = b - tb;\n            break;\n          case 'darken':\n            data[i] = Math.min(r, tr);\n            data[i + 1] = Math.min(g, tg);\n            data[i + 2] = Math.min(b, tb);\n            break;\n          case 'lighten':\n            data[i] = Math.max(r, tr);\n            data[i + 1] = Math.max(g, tg);\n            data[i + 2] = Math.max(b, tb);\n            break;\n          case 'overlay':\n            data[i] = tr < 128 ? (2 * r * tr / 255) : (255 - 2 * (255 - r) * (255 - tr) / 255);\n            data[i + 1] = tg < 128 ? (2 * g * tg / 255) : (255 - 2 * (255 - g) * (255 - tg) / 255);\n            data[i + 2] = tb < 128 ? (2 * b * tb / 255) : (255 - 2 * (255 - b) * (255 - tb) / 255);\n            break;\n          case 'exclusion':\n            data[i] = tr + r - ((2 * tr * r) / 255);\n            data[i + 1] = tg + g - ((2 * tg * g) / 255);\n            data[i + 2] = tb + b - ((2 * tb * b) / 255);\n            break;\n          case 'tint':\n            data[i] = tr + r * alpha1;\n            data[i + 1] = tg + g * alpha1;\n            data[i + 2] = tb + b * alpha1;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uColor: gl.getUniformLocation(program, 'uColor'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var source = new fabric.Color(this.color).getSource();\n      source[0] = this.alpha * source[0] / 255;\n      source[1] = this.alpha * source[1] / 255;\n      source[2] = this.alpha * source[2] / 255;\n      source[3] = this.alpha;\n      gl.uniform4fv(uniformLocations.uColor, source);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return {\n        type: this.type,\n        color: this.color,\n        mode: this.mode,\n        alpha: this.alpha\n      };\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.BlendColor} Instance of fabric.Image.filters.BlendColor\n   */\n  fabric.Image.filters.BlendColor.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n  'use strict';\n\n  var fabric = global.fabric,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Image Blend filter class\n   * @class fabric.Image.filter.BlendImage\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @example\n   * var filter = new fabric.Image.filters.BlendColor({\n   *  color: '#000',\n   *  mode: 'multiply'\n   * });\n   *\n   * var filter = new fabric.Image.filters.BlendImage({\n   *  image: fabricImageObject,\n   *  mode: 'multiply',\n   *  alpha: 0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n\n  filters.BlendImage = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.BlendImage.prototype */ {\n    type: 'BlendImage',\n\n    /**\n     * Color to make the blend operation with. default to a reddish color since black or white\n     * gives always strong result.\n     **/\n    image: null,\n\n    /**\n     * Blend mode for the filter: one of multiply, add, diff, screen, subtract,\n     * darken, lighten, overlay, exclusion, tint.\n     **/\n    mode: 'multiply',\n\n    /**\n     * alpha value. represent the strength of the blend color operation.\n     **/\n    alpha: 1,\n\n    vertexSource: 'attribute vec2 aPosition;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'varying vec2 vTexCoord2;\\n' +\n      'uniform mat3 uTransformMatrix;\\n' +\n      'void main() {\\n' +\n        'vTexCoord = aPosition;\\n' +\n        'vTexCoord2 = (uTransformMatrix * vec3(aPosition, 1.0)).xy;\\n' +\n        'gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\\n' +\n      '}',\n\n    /**\n     * Fragment source for the Multiply program\n     */\n    fragmentSource: {\n      multiply: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform sampler2D uImage;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'varying vec2 vTexCoord2;\\n' +\n        'void main() {\\n' +\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n          'vec4 color2 = texture2D(uImage, vTexCoord2);\\n' +\n          'color.rgba *= color2.rgba;\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      mask: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform sampler2D uImage;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'varying vec2 vTexCoord2;\\n' +\n        'void main() {\\n' +\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n          'vec4 color2 = texture2D(uImage, vTexCoord2);\\n' +\n          'color.a = color2.a;\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function(options) {\n      var cacheKey = this.type + '_' + this.mode;\n      var shaderSource = this.fragmentSource[this.mode];\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    applyToWebGL: function(options) {\n      // load texture to blend.\n      var gl = options.context,\n          texture = this.createTexture(options.filterBackend, this.image);\n      this.bindAdditionalTexture(gl, texture, gl.TEXTURE1);\n      this.callSuper('applyToWebGL', options);\n      this.unbindAdditionalTexture(gl, gl.TEXTURE1);\n    },\n\n    createTexture: function(backend, image) {\n      return backend.getCachedTexture(image.cacheKey, image._element);\n    },\n\n    /**\n     * Calculate a transformMatrix to adapt the image to blend over\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    calculateMatrix: function() {\n      var image = this.image,\n          width = image._element.width,\n          height = image._element.height;\n      return [\n        1 / image.scaleX, 0, 0,\n        0, 1 / image.scaleY, 0,\n        -image.left / width, -image.top / height, 1\n      ];\n    },\n\n    /**\n     * Apply the Blend operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          resources = options.filterBackend.resources,\n          data = imageData.data, iLen = data.length,\n          width = options.imageData.width,\n          height = options.imageData.height,\n          tr, tg, tb, ta,\n          r, g, b, a,\n          canvas1, context, image = this.image, blendData;\n\n      if (!resources.blendImage) {\n        resources.blendImage = document.createElement('canvas');\n      }\n      canvas1 = resources.blendImage;\n      if (canvas1.width !== width || canvas1.height !== height) {\n        canvas1.width = width;\n        canvas1.height = height;\n      }\n      context = canvas1.getContext('2d');\n      context.setTransform(image.scaleX, 0, 0, image.scaleY, image.left, image.top);\n      context.drawImage(image._element, 0, 0, width, height);\n      blendData = context.getImageData(0, 0, width, height).data;\n      for (var i = 0; i < iLen; i += 4) {\n\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n        a = data[i + 3];\n\n        tr = blendData[i];\n        tg = blendData[i + 1];\n        tb = blendData[i + 2];\n        ta = blendData[i + 3];\n\n        switch (this.mode) {\n          case 'multiply':\n            data[i] = r * tr / 255;\n            data[i + 1] = g * tg / 255;\n            data[i + 2] = b * tb / 255;\n            data[i + 3] = a * ta / 255;\n            break;\n          case 'mask':\n            data[i + 3] = ta;\n            break;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uTransformMatrix: gl.getUniformLocation(program, 'uTransformMatrix'),\n        uImage: gl.getUniformLocation(program, 'uImage'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var matrix = this.calculateMatrix();\n      gl.uniform1i(uniformLocations.uImage, 1); // texture unit 1.\n      gl.uniformMatrix3fv(uniformLocations.uTransformMatrix, false, matrix);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return {\n        type: this.type,\n        image: this.image && this.image.toObject(),\n        mode: this.mode,\n        alpha: this.alpha\n      };\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} callback to be invoked after filter creation\n   * @return {fabric.Image.filters.BlendImage} Instance of fabric.Image.filters.BlendImage\n   */\n  fabric.Image.filters.BlendImage.fromObject = function(object, callback) {\n    fabric.Image.fromObject(object.image, function(image) {\n      var options = fabric.util.object.clone(object);\n      options.image = image;\n      callback(new fabric.Image.filters.BlendImage(options));\n    });\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }), pow = Math.pow, floor = Math.floor,\n      sqrt = Math.sqrt, abs = Math.abs, round = Math.round, sin = Math.sin,\n      ceil = Math.ceil,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Resize image filter class\n   * @class fabric.Image.filters.Resize\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Resize();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Resize = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Resize.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Resize',\n\n    /**\n     * Resize type\n     * @param {String} resizeType\n     * @default\n     */\n    resizeType: 'hermite',\n\n    /**\n     * Scale factor for resizing, x axis\n     * @param {Number} scaleX\n     * @default\n     */\n    scaleX: 0,\n\n    /**\n     * Scale factor for resizing, y axis\n     * @param {Number} scaleY\n     * @default\n     */\n    scaleY: 0,\n\n    /**\n     * LanczosLobes parameter for lanczos filter\n     * @param {Number} lanczosLobes\n     * @default\n     */\n    lanczosLobes: 3,\n\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uDelta: gl.getUniformLocation(program, 'uDelta'),\n        uTaps: gl.getUniformLocation(program, 'uTaps'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform2fv(uniformLocations.uDelta, this.horizontal ? [1 / this.width, 0] : [0, 1 / this.height]);\n      gl.uniform1fv(uniformLocations.uTaps, this.taps);\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function(options) {\n      var filterWindow = this.getFilterWindow(), cacheKey = this.type + '_' + filterWindow;\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        var fragmentShader = this.generateShader(filterWindow);\n        options.programCache[cacheKey] = this.createProgram(options.context, fragmentShader);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    getFilterWindow: function() {\n      var scale = this.tempScale;\n      return Math.ceil(this.lanczosLobes / scale);\n    },\n\n    getTaps: function() {\n      var lobeFunction = this.lanczosCreate(this.lanczosLobes), scale = this.tempScale,\n          filterWindow = this.getFilterWindow(), taps = new Array(filterWindow);\n      for (var i = 1; i <= filterWindow; i++) {\n        taps[i - 1] = lobeFunction(i * scale);\n      }\n      return taps;\n    },\n\n    /**\n     * Generate vertex and shader sources from the necessary steps numbers\n     * @param {Number} filterWindow\n     */\n    generateShader: function(filterWindow) {\n      var offsets = new Array(filterWindow),\n          fragmentShader = this.fragmentSourceTOP, filterWindow;\n\n      for (var i = 1; i <= filterWindow; i++) {\n        offsets[i - 1] = i + '.0 * uDelta';\n      }\n\n      fragmentShader += 'uniform float uTaps[' + filterWindow + '];\\n';\n      fragmentShader += 'void main() {\\n';\n      fragmentShader += '  vec4 color = texture2D(uTexture, vTexCoord);\\n';\n      fragmentShader += '  float sum = 1.0;\\n';\n\n      offsets.forEach(function(offset, i) {\n        fragmentShader += '  color += texture2D(uTexture, vTexCoord + ' + offset + ') * uTaps[' + i + '];\\n';\n        fragmentShader += '  color += texture2D(uTexture, vTexCoord - ' + offset + ') * uTaps[' + i + '];\\n';\n        fragmentShader += '  sum += 2.0 * uTaps[' + i + '];\\n';\n      });\n      fragmentShader += '  gl_FragColor = color / sum;\\n';\n      fragmentShader += '}';\n      return fragmentShader;\n    },\n\n    fragmentSourceTOP: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform vec2 uDelta;\\n' +\n      'varying vec2 vTexCoord;\\n',\n\n    /**\n     * Apply the resize filter to the image\n     * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n     *\n     * @param {Object} options\n     * @param {Number} options.passes The number of filters remaining to be executed\n     * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n     * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n     * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    applyTo: function(options) {\n      if (options.webgl) {\n        if (options.passes > 1 && this.isNeutralState(options)) {\n          // avoid doing something that we do not need\n          return;\n        }\n        options.passes++;\n        this.width = options.sourceWidth;\n        this.horizontal = true;\n        this.dW = Math.round(this.width * this.scaleX);\n        this.dH = options.sourceHeight;\n        this.tempScale = this.dW / this.width;\n        this.taps = this.getTaps();\n        options.destinationWidth = this.dW;\n        this._setupFrameBuffer(options);\n        this.applyToWebGL(options);\n        this._swapTextures(options);\n        options.sourceWidth = options.destinationWidth;\n\n        this.height = options.sourceHeight;\n        this.horizontal = false;\n        this.dH = Math.round(this.height * this.scaleY);\n        this.tempScale = this.dH / this.height;\n        this.taps = this.getTaps();\n        options.destinationHeight = this.dH;\n        this._setupFrameBuffer(options);\n        this.applyToWebGL(options);\n        this._swapTextures(options);\n        options.sourceHeight = options.destinationHeight;\n      }\n      else if (!this.isNeutralState(options)) {\n        this.applyTo2d(options);\n      }\n    },\n\n    isNeutralState: function(options) {\n      var scaleX = options.scaleX || this.scaleX,\n          scaleY = options.scaleY || this.scaleY;\n      return scaleX === 1 && scaleY === 1;\n    },\n\n    lanczosCreate: function(lobes) {\n      return function(x) {\n        if (x >= lobes || x <= -lobes) {\n          return 0.0;\n        }\n        if (x < 1.19209290E-07 && x > -1.19209290E-07) {\n          return 1.0;\n        }\n        x *= Math.PI;\n        var xx = x / lobes;\n        return (sin(x) / x) * sin(xx) / xx;\n      };\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @memberOf fabric.Image.filters.Resize.prototype\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} scaleX\n     * @param {Number} scaleY\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          scaleX = this.scaleX,\n          scaleY = this.scaleY;\n\n      this.rcpScaleX = 1 / scaleX;\n      this.rcpScaleY = 1 / scaleY;\n\n      var oW = imageData.width, oH = imageData.height,\n          dW = round(oW * scaleX), dH = round(oH * scaleY),\n          newData;\n\n      if (this.resizeType === 'sliceHack') {\n        newData = this.sliceByTwo(options, oW, oH, dW, dH);\n      }\n      else if (this.resizeType === 'hermite') {\n        newData = this.hermiteFastResize(options, oW, oH, dW, dH);\n      }\n      else if (this.resizeType === 'bilinear') {\n        newData = this.bilinearFiltering(options, oW, oH, dW, dH);\n      }\n      else if (this.resizeType === 'lanczos') {\n        newData = this.lanczosResize(options, oW, oH, dW, dH);\n      }\n      options.imageData = newData;\n    },\n\n    /**\n     * Filter sliceByTwo\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    sliceByTwo: function(options, oW, oH, dW, dH) {\n      var imageData = options.imageData,\n          mult = 0.5, doneW = false, doneH = false, stepW = oW * mult,\n          stepH = oH * mult, resources = fabric.filterBackend.resources,\n          tmpCanvas, ctx, sX = 0, sY = 0, dX = oW, dY = 0;\n      if (!resources.sliceByTwo) {\n        resources.sliceByTwo = document.createElement('canvas');\n      }\n      tmpCanvas = resources.sliceByTwo;\n      if (tmpCanvas.width < oW * 1.5 || tmpCanvas.height < oH) {\n        tmpCanvas.width = oW * 1.5;\n        tmpCanvas.height = oH;\n      }\n      ctx = tmpCanvas.getContext('2d');\n      ctx.clearRect(0, 0, oW * 1.5, oH);\n      ctx.putImageData(imageData, 0, 0);\n\n      dW = floor(dW);\n      dH = floor(dH);\n\n      while (!doneW || !doneH) {\n        oW = stepW;\n        oH = stepH;\n        if (dW < floor(stepW * mult)) {\n          stepW = floor(stepW * mult);\n        }\n        else {\n          stepW = dW;\n          doneW = true;\n        }\n        if (dH < floor(stepH * mult)) {\n          stepH = floor(stepH * mult);\n        }\n        else {\n          stepH = dH;\n          doneH = true;\n        }\n        ctx.drawImage(tmpCanvas, sX, sY, oW, oH, dX, dY, stepW, stepH);\n        sX = dX;\n        sY = dY;\n        dY += stepH;\n      }\n      return ctx.getImageData(sX, sY, dW, dH);\n    },\n\n    /**\n     * Filter lanczosResize\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    lanczosResize: function(options, oW, oH, dW, dH) {\n\n      function process(u) {\n        var v, i, weight, idx, a, red, green,\n            blue, alpha, fX, fY;\n        center.x = (u + 0.5) * ratioX;\n        icenter.x = floor(center.x);\n        for (v = 0; v < dH; v++) {\n          center.y = (v + 0.5) * ratioY;\n          icenter.y = floor(center.y);\n          a = 0; red = 0; green = 0; blue = 0; alpha = 0;\n          for (i = icenter.x - range2X; i <= icenter.x + range2X; i++) {\n            if (i < 0 || i >= oW) {\n              continue;\n            }\n            fX = floor(1000 * abs(i - center.x));\n            if (!cacheLanc[fX]) {\n              cacheLanc[fX] = { };\n            }\n            for (var j = icenter.y - range2Y; j <= icenter.y + range2Y; j++) {\n              if (j < 0 || j >= oH) {\n                continue;\n              }\n              fY = floor(1000 * abs(j - center.y));\n              if (!cacheLanc[fX][fY]) {\n                cacheLanc[fX][fY] = lanczos(sqrt(pow(fX * rcpRatioX, 2) + pow(fY * rcpRatioY, 2)) / 1000);\n              }\n              weight = cacheLanc[fX][fY];\n              if (weight > 0) {\n                idx = (j * oW + i) * 4;\n                a += weight;\n                red += weight * srcData[idx];\n                green += weight * srcData[idx + 1];\n                blue += weight * srcData[idx + 2];\n                alpha += weight * srcData[idx + 3];\n              }\n            }\n          }\n          idx = (v * dW + u) * 4;\n          destData[idx] = red / a;\n          destData[idx + 1] = green / a;\n          destData[idx + 2] = blue / a;\n          destData[idx + 3] = alpha / a;\n        }\n\n        if (++u < dW) {\n          return process(u);\n        }\n        else {\n          return destImg;\n        }\n      }\n\n      var srcData = options.imageData.data,\n          destImg = options.ctx.createImageData(dW, dH),\n          destData = destImg.data,\n          lanczos = this.lanczosCreate(this.lanczosLobes),\n          ratioX = this.rcpScaleX, ratioY = this.rcpScaleY,\n          rcpRatioX = 2 / this.rcpScaleX, rcpRatioY = 2 / this.rcpScaleY,\n          range2X = ceil(ratioX * this.lanczosLobes / 2),\n          range2Y = ceil(ratioY * this.lanczosLobes / 2),\n          cacheLanc = { }, center = { }, icenter = { };\n\n      return process(0);\n    },\n\n    /**\n     * bilinearFiltering\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    bilinearFiltering: function(options, oW, oH, dW, dH) {\n      var a, b, c, d, x, y, i, j, xDiff, yDiff, chnl,\n          color, offset = 0, origPix, ratioX = this.rcpScaleX,\n          ratioY = this.rcpScaleY,\n          w4 = 4 * (oW - 1), img = options.imageData,\n          pixels = img.data, destImage = options.ctx.createImageData(dW, dH),\n          destPixels = destImage.data;\n      for (i = 0; i < dH; i++) {\n        for (j = 0; j < dW; j++) {\n          x = floor(ratioX * j);\n          y = floor(ratioY * i);\n          xDiff = ratioX * j - x;\n          yDiff = ratioY * i - y;\n          origPix = 4 * (y * oW + x);\n\n          for (chnl = 0; chnl < 4; chnl++) {\n            a = pixels[origPix + chnl];\n            b = pixels[origPix + 4 + chnl];\n            c = pixels[origPix + w4 + chnl];\n            d = pixels[origPix + w4 + 4 + chnl];\n            color = a * (1 - xDiff) * (1 - yDiff) + b * xDiff * (1 - yDiff) +\n                    c * yDiff * (1 - xDiff) + d * xDiff * yDiff;\n            destPixels[offset++] = color;\n          }\n        }\n      }\n      return destImage;\n    },\n\n    /**\n     * hermiteFastResize\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    hermiteFastResize: function(options, oW, oH, dW, dH) {\n      var ratioW = this.rcpScaleX, ratioH = this.rcpScaleY,\n          ratioWHalf = ceil(ratioW / 2),\n          ratioHHalf = ceil(ratioH / 2),\n          img = options.imageData, data = img.data,\n          img2 = options.ctx.createImageData(dW, dH), data2 = img2.data;\n      for (var j = 0; j < dH; j++) {\n        for (var i = 0; i < dW; i++) {\n          var x2 = (i + j * dW) * 4, weight = 0, weights = 0, weightsAlpha = 0,\n              gxR = 0, gxG = 0, gxB = 0, gxA = 0, centerY = (j + 0.5) * ratioH;\n          for (var yy = floor(j * ratioH); yy < (j + 1) * ratioH; yy++) {\n            var dy = abs(centerY - (yy + 0.5)) / ratioHHalf,\n                centerX = (i + 0.5) * ratioW, w0 = dy * dy;\n            for (var xx = floor(i * ratioW); xx < (i + 1) * ratioW; xx++) {\n              var dx = abs(centerX - (xx + 0.5)) / ratioWHalf,\n                  w = sqrt(w0 + dx * dx);\n              /* eslint-disable max-depth */\n              if (w > 1 && w < -1) {\n                continue;\n              }\n              //hermite filter\n              weight = 2 * w * w * w - 3 * w * w + 1;\n              if (weight > 0) {\n                dx = 4 * (xx + yy * oW);\n                //alpha\n                gxA += weight * data[dx + 3];\n                weightsAlpha += weight;\n                //colors\n                if (data[dx + 3] < 255) {\n                  weight = weight * data[dx + 3] / 250;\n                }\n                gxR += weight * data[dx];\n                gxG += weight * data[dx + 1];\n                gxB += weight * data[dx + 2];\n                weights += weight;\n              }\n              /* eslint-enable max-depth */\n            }\n          }\n          data2[x2] = gxR / weights;\n          data2[x2 + 1] = gxG / weights;\n          data2[x2 + 2] = gxB / weights;\n          data2[x2 + 3] = gxA / weightsAlpha;\n        }\n      }\n      return img2;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return {\n        type: this.type,\n        scaleX: this.scaleX,\n        scaleY: this.scaleY,\n        resizeType: this.resizeType,\n        lanczosLobes: this.lanczosLobes\n      };\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Resize} Instance of fabric.Image.filters.Resize\n   */\n  fabric.Image.filters.Resize.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Contrast filter class\n   * @class fabric.Image.filters.Contrast\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Contrast#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Contrast({\n   *   contrast: 40\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Contrast = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Contrast.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Contrast',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uContrast;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'float contrastF = 1.015 * (uContrast + 1.0) / (1.0 * (1.015 - uContrast));\\n' +\n        'color.rgb = contrastF * (color.rgb - 0.5) + 0.5;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    contrast: 0,\n\n    mainParameter: 'contrast',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Contrast.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.contrast=0] Value to contrast the image up (-1...1)\n     */\n\n    /**\n      * Apply the Contrast operation to a Uint8Array representing the pixels of an image.\n      *\n      * @param {Object} options\n      * @param {ImageData} options.imageData The Uint8Array to be filtered.\n      */\n    applyTo2d: function(options) {\n      if (this.contrast === 0) {\n        return;\n      }\n      var imageData = options.imageData, i, len,\n          data = imageData.data, len = data.length,\n          contrast = Math.floor(this.contrast * 255),\n          contrastF = 259 * (contrast + 255) / (255 * (259 - contrast));\n\n      for (i = 0; i < len; i += 4) {\n        data[i] = contrastF * (data[i] - 128) + 128;\n        data[i + 1] = contrastF * (data[i + 1] - 128) + 128;\n        data[i + 2] = contrastF * (data[i + 2] - 128) + 128;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uContrast: gl.getUniformLocation(program, 'uContrast'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uContrast, this.contrast);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Contrast} Instance of fabric.Image.filters.Contrast\n   */\n  fabric.Image.filters.Contrast.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Saturate filter class\n   * @class fabric.Image.filters.Saturation\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Saturation#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Saturation({\n   *   saturation: 100\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Saturation = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Saturation.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Saturation',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uSaturation;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'float rgMax = max(color.r, color.g);\\n' +\n        'float rgbMax = max(rgMax, color.b);\\n' +\n        'color.r += rgbMax != color.r ? (rgbMax - color.r) * uSaturation : 0.00;\\n' +\n        'color.g += rgbMax != color.g ? (rgbMax - color.g) * uSaturation : 0.00;\\n' +\n        'color.b += rgbMax != color.b ? (rgbMax - color.b) * uSaturation : 0.00;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    saturation: 0,\n\n    mainParameter: 'saturation',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Saturate.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.saturate=0] Value to saturate the image (-1...1)\n     */\n\n    /**\n     * Apply the Saturation operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      if (this.saturation === 0) {\n        return;\n      }\n      var imageData = options.imageData,\n          data = imageData.data, len = data.length,\n          adjust = -this.saturation, i, max;\n\n      for (i = 0; i < len; i += 4) {\n        max = Math.max(data[i], data[i + 1], data[i + 2]);\n        data[i] += max !== data[i] ? (max - data[i]) * adjust : 0;\n        data[i + 1] += max !== data[i + 1] ? (max - data[i + 1]) * adjust : 0;\n        data[i + 2] += max !== data[i + 2] ? (max - data[i + 2]) * adjust : 0;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uSaturation: gl.getUniformLocation(program, 'uSaturation'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uSaturation, -this.saturation);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Saturation} Instance of fabric.Image.filters.Saturate\n   */\n  fabric.Image.filters.Saturation.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Blur filter class\n   * @class fabric.Image.filters.Blur\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Blur#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Blur({\n   *   blur: 0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n  filters.Blur = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Blur.prototype */ {\n\n    type: 'Blur',\n\n    /*\n'gl_FragColor = vec4(0.0);',\n'gl_FragColor += texture2D(texture, vTexCoord + -7 * uDelta)*0.0044299121055113265;',\n'gl_FragColor += texture2D(texture, vTexCoord + -6 * uDelta)*0.00895781211794;',\n'gl_FragColor += texture2D(texture, vTexCoord + -5 * uDelta)*0.0215963866053;',\n'gl_FragColor += texture2D(texture, vTexCoord + -4 * uDelta)*0.0443683338718;',\n'gl_FragColor += texture2D(texture, vTexCoord + -3 * uDelta)*0.0776744219933;',\n'gl_FragColor += texture2D(texture, vTexCoord + -2 * uDelta)*0.115876621105;',\n'gl_FragColor += texture2D(texture, vTexCoord + -1 * uDelta)*0.147308056121;',\n'gl_FragColor += texture2D(texture, vTexCoord              )*0.159576912161;',\n'gl_FragColor += texture2D(texture, vTexCoord + 1 * uDelta)*0.147308056121;',\n'gl_FragColor += texture2D(texture, vTexCoord + 2 * uDelta)*0.115876621105;',\n'gl_FragColor += texture2D(texture, vTexCoord + 3 * uDelta)*0.0776744219933;',\n'gl_FragColor += texture2D(texture, vTexCoord + 4 * uDelta)*0.0443683338718;',\n'gl_FragColor += texture2D(texture, vTexCoord + 5 * uDelta)*0.0215963866053;',\n'gl_FragColor += texture2D(texture, vTexCoord + 6 * uDelta)*0.00895781211794;',\n'gl_FragColor += texture2D(texture, vTexCoord + 7 * uDelta)*0.0044299121055113265;',\n*/\n\n    /* eslint-disable max-len */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform vec2 uDelta;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'const float nSamples = 15.0;\\n' +\n      'vec3 v3offset = vec3(12.9898, 78.233, 151.7182);\\n' +\n      'float random(vec3 scale) {\\n' +\n        /* use the fragment position for a different seed per-pixel */\n        'return fract(sin(dot(gl_FragCoord.xyz, scale)) * 43758.5453);\\n' +\n      '}\\n' +\n      'void main() {\\n' +\n        'vec4 color = vec4(0.0);\\n' +\n        'float total = 0.0;\\n' +\n        'float offset = random(v3offset);\\n' +\n        'for (float t = -nSamples; t <= nSamples; t++) {\\n' +\n          'float percent = (t + offset - 0.5) / nSamples;\\n' +\n          'float weight = 1.0 - abs(percent);\\n' +\n          'color += texture2D(uTexture, vTexCoord + uDelta * percent) * weight;\\n' +\n          'total += weight;\\n' +\n        '}\\n' +\n        'gl_FragColor = color / total;\\n' +\n      '}',\n    /* eslint-enable max-len */\n\n    /**\n     * blur value, in percentage of image dimensions.\n     * specific to keep the image blur constant at different resolutions\n     * range bewteen 0 and 1.\n     */\n    blur: 0,\n\n    mainParameter: 'blur',\n\n    applyTo: function(options) {\n      if (options.webgl) {\n        // this aspectRatio is used to give the same blur to vertical and horizontal\n        this.aspectRatio = options.sourceWidth / options.sourceHeight;\n        options.passes++;\n        this._setupFrameBuffer(options);\n        this.horizontal = true;\n        this.applyToWebGL(options);\n        this._swapTextures(options);\n        this._setupFrameBuffer(options);\n        this.horizontal = false;\n        this.applyToWebGL(options);\n        this._swapTextures(options);\n      }\n      else {\n        this.applyTo2d(options);\n      }\n    },\n\n    applyTo2d: function(options) {\n      // paint canvasEl with current image data.\n      //options.ctx.putImageData(options.imageData, 0, 0);\n      options.imageData = this.simpleBlur(options);\n    },\n\n    simpleBlur: function(options) {\n      var resources = options.filterBackend.resources, canvas1, canvas2,\n          width = options.imageData.width,\n          height = options.imageData.height;\n\n      if (!resources.blurLayer1) {\n        resources.blurLayer1 = document.createElement('canvas');\n        resources.blurLayer2 = document.createElement('canvas');\n      }\n      canvas1 = resources.blurLayer1;\n      canvas2 = resources.blurLayer2;\n      if (canvas1.width !== width || canvas1.height !== height) {\n        canvas2.width = canvas1.width = width;\n        canvas2.height = canvas1.height = height;\n      }\n      var ctx1 = canvas1.getContext('2d'),\n          ctx2 = canvas2.getContext('2d'),\n          nSamples = 15,\n          random, percent, j, i,\n          blur = this.blur * 0.06 * 0.5;\n\n      // load first canvas\n      ctx1.putImageData(options.imageData, 0, 0);\n      ctx2.clearRect(0, 0, width, height);\n\n      for (i = -nSamples; i <= nSamples; i++) {\n        random = (Math.random() - 0.5) / 4;\n        percent = i / nSamples;\n        j = blur * percent * width + random;\n        ctx2.globalAlpha = 1 - Math.abs(percent);\n        ctx2.drawImage(canvas1, j, random);\n        ctx1.drawImage(canvas2, 0, 0);\n        ctx2.globalAlpha = 1;\n        ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\n      }\n      for (i = -nSamples; i <= nSamples; i++) {\n        random = (Math.random() - 0.5) / 4;\n        percent = i / nSamples;\n        j = blur * percent * height + random;\n        ctx2.globalAlpha = 1 - Math.abs(percent);\n        ctx2.drawImage(canvas1, random, j);\n        ctx1.drawImage(canvas2, 0, 0);\n        ctx2.globalAlpha = 1;\n        ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\n      }\n      options.ctx.drawImage(canvas1, 0, 0);\n      var newImageData = options.ctx.getImageData(0, 0, canvas1.width, canvas1.height);\n      ctx1.globalAlpha = 1;\n      ctx1.clearRect(0, 0, canvas1.width, canvas1.height);\n      return newImageData;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        delta: gl.getUniformLocation(program, 'uDelta'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var delta = this.chooseRightDelta();\n      gl.uniform2fv(uniformLocations.delta, delta);\n    },\n\n    /**\n     * choose right value of image percentage to blur with\n     * @returns {Array} a numeric array with delta values\n     */\n    chooseRightDelta: function() {\n      var blurScale = 1, delta = [0, 0], blur;\n      if (this.horizontal) {\n        if (this.aspectRatio > 1) {\n          // image is wide, i want to shrink radius horizontal\n          blurScale = 1 / this.aspectRatio;\n        }\n      }\n      else {\n        if (this.aspectRatio < 1) {\n          // image is tall, i want to shrink radius vertical\n          blurScale = this.aspectRatio;\n        }\n      }\n      blur = blurScale * this.blur * 0.12;\n      if (this.horizontal) {\n        delta[0] = blur;\n      }\n      else {\n        delta[1] = blur;\n      }\n      return delta;\n    },\n  });\n\n  /**\n   * Deserialize a JSON definition of a BlurFilter into a concrete instance.\n   */\n  filters.Blur.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Gamma filter class\n   * @class fabric.Image.filters.Gamma\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Gamma#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Gamma({\n   *   brightness: 200\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Gamma = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Gamma.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Gamma',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform vec3 uGamma;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'vec3 correction = (1.0 / uGamma);\\n' +\n        'color.r = pow(color.r, correction.r);\\n' +\n        'color.g = pow(color.g, correction.g);\\n' +\n        'color.b = pow(color.b, correction.b);\\n' +\n        'gl_FragColor = color;\\n' +\n        'gl_FragColor.rgb *= color.a;\\n' +\n      '}',\n\n    /**\n     * Gamma array value, from 0.01 to 2.2.\n     * @param {Array} gamma\n     * @default\n     */\n    gamma: [1, 1, 1],\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'gamma',\n\n    /**\n     * Apply the Gamma operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData, data = imageData.data,\n          gamma = this.gamma, len = data.length,\n          rInv = 1 / gamma[0], gInv = 1 / gamma[1],\n          bInv = 1 / gamma[2], i;\n\n      if (!this.rVals) {\n        // eslint-disable-next-line\n        this.rVals = new Uint8Array(256);\n        // eslint-disable-next-line\n        this.gVals = new Uint8Array(256);\n        // eslint-disable-next-line\n        this.bVals = new Uint8Array(256);\n      }\n\n      // This is an optimization - pre-compute a look-up table for each color channel\n      // instead of performing these pow calls for each pixel in the image.\n      for (i = 0, len = 256; i < len; i++) {\n        this.rVals[i] = Math.pow(i / 255, rInv) * 255;\n        this.gVals[i] = Math.pow(i / 255, gInv) * 255;\n        this.bVals[i] = Math.pow(i / 255, bInv) * 255;\n      }\n      for (i = 0, len = data.length; i < len; i += 4) {\n        data[i] = this.rVals[data[i]];\n        data[i + 1] = this.gVals[data[i + 1]];\n        data[i + 2] = this.bVals[data[i + 2]];\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uGamma: gl.getUniformLocation(program, 'uGamma'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform3fv(uniformLocations.uGamma, this.gamma);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Gamma} Instance of fabric.Image.filters.Gamma\n   */\n  fabric.Image.filters.Gamma.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * A container class that knows how to apply a sequence of filters to an input image.\n   */\n  filters.Composed = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Composed.prototype */ {\n\n    type: 'Composed',\n\n    /**\n     * A non sparse array of filters to apply\n     */\n    subFilters: [],\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      // create a new array instead mutating the prototype with push\n      this.subFilters = this.subFilters.slice(0);\n    },\n\n    /**\n     * Apply this container's filters to the input image provided.\n     *\n     * @param {Object} options\n     * @param {Number} options.passes The number of filters remaining to be applied.\n     */\n    applyTo: function(options) {\n      options.passes += this.subFilters.length - 1;\n      this.subFilters.forEach(function(filter) {\n        filter.applyTo(options);\n      });\n    },\n\n    /**\n     * Serialize this filter into JSON.\n     *\n     * @returns {Object} A JSON representation of this filter.\n     */\n    toObject: function() {\n      return fabric.util.object.extend(this.callSuper('toObject'), {\n        subFilters: this.subFilters.map(function(filter) { return filter.toObject(); }),\n      });\n    },\n  });\n\n  /**\n   * Deserialize a JSON definition of a ComposedFilter into a concrete instance.\n   */\n  fabric.Image.filters.Composed.fromObject = function(object, callback) {\n    var filters = object.subFilters || [],\n        subFilters = filters.map(function(filter) {\n          return new fabric.Image.filters[filter.type](filter);\n        }),\n        instance = new fabric.Image.filters.Composed({ subFilters: subFilters });\n    callback && callback(instance);\n    return instance;\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * HueRotation filter class\n   * @class fabric.Image.filters.HueRotation\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.HueRotation#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.HueRotation({\n   *   rotation: -0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.HueRotation = createClass(filters.ColorMatrix, /** @lends fabric.Image.filters.HueRotation.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'HueRotation',\n\n    /**\n     * HueRotation value, from -1 to 1.\n     * the unit is radians\n     * @param {Number} myParameter\n     * @default\n     */\n    rotation: 0,\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'rotation',\n\n    calculateMatrix: function() {\n      var rad = this.rotation * Math.PI, cos = Math.cos(rad), sin = Math.sin(rad),\n          aThird = 1 / 3, aThirdSqtSin = Math.sqrt(aThird) * sin, OneMinusCos = 1 - cos;\n      this.matrix = [\n        1, 0, 0, 0, 0,\n        0, 1, 0, 0, 0,\n        0, 0, 1, 0, 0,\n        0, 0, 0, 1, 0\n      ];\n      this.matrix[0] = cos + OneMinusCos / 3;\n      this.matrix[1] = aThird * OneMinusCos - aThirdSqtSin;\n      this.matrix[2] = aThird * OneMinusCos + aThirdSqtSin;\n      this.matrix[5] = aThird * OneMinusCos + aThirdSqtSin;\n      this.matrix[6] = cos + aThird * OneMinusCos;\n      this.matrix[7] = aThird * OneMinusCos - aThirdSqtSin;\n      this.matrix[10] = aThird * OneMinusCos - aThirdSqtSin;\n      this.matrix[11] = aThird * OneMinusCos + aThirdSqtSin;\n      this.matrix[12] = cos + aThird * OneMinusCos;\n    },\n\n    /**\n     * Apply this filter to the input image data provided.\n     *\n     * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n     *\n     * @param {Object} options\n     * @param {Number} options.passes The number of filters remaining to be executed\n     * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n     * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n     * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    applyTo: function(options) {\n      this.calculateMatrix();\n      fabric.Image.filters.BaseFilter.prototype.applyTo.call(this, options);\n    },\n\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.HueRotation} Instance of fabric.Image.filters.HueRotation\n   */\n  fabric.Image.filters.HueRotation.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      clone = fabric.util.object.clone,\n      MIN_TEXT_WIDTH = 2,\n      CACHE_FONT_SIZE = 200;\n\n  if (fabric.Text) {\n    fabric.warn('fabric.Text is already defined');\n    return;\n  }\n\n  /**\n   * Text class\n   * @class fabric.Text\n   * @extends fabric.Object\n   * @return {fabric.Text} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#text}\n   * @see {@link fabric.Text#initialize} for constructor definition\n   */\n  fabric.Text = fabric.util.createClass(fabric.Object, /** @lends fabric.Text.prototype */ {\n\n    /**\n     * Properties which when set cause object to change dimensions\n     * @type Object\n     * @private\n     */\n    _dimensionAffectingProps: [\n      'fontSize',\n      'fontWeight',\n      'fontFamily',\n      'fontStyle',\n      'lineHeight',\n      'text',\n      'charSpacing',\n      'textAlign',\n      'styles',\n    ],\n\n    /**\n     * @private\n     */\n    _reNewline: /\\r?\\n/,\n\n    /**\n     * Use this regular expression to filter for whitespaces that is not a new line.\n     * Mostly used when text is 'justify' aligned.\n     * @private\n     */\n    _reSpacesAndTabs: /[ \\t\\r]/g,\n\n    /**\n     * Use this regular expression to filter for whitespace that is not a new line.\n     * Mostly used when text is 'justify' aligned.\n     * @private\n     */\n    _reSpaceAndTab: /[ \\t\\r]/,\n\n    /**\n     * Use this regular expression to filter consecutive groups of non spaces.\n     * Mostly used when text is 'justify' aligned.\n     * @private\n     */\n    _reWords: /\\S+/g,\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type:                 'text',\n\n    /**\n     * Font size (in pixels)\n     * @type Number\n     * @default\n     */\n    fontSize:             40,\n\n    /**\n     * Font weight (e.g. bold, normal, 400, 600, 800)\n     * @type {(Number|String)}\n     * @default\n     */\n    fontWeight:           'normal',\n\n    /**\n     * Font family\n     * @type String\n     * @default\n     */\n    fontFamily:           'Times New Roman',\n\n    /**\n     * Text decoration underline.\n     * @type String\n     * @default\n     */\n    underline:       false,\n\n    /**\n     * Text decoration overline.\n     * @type String\n     * @default\n     */\n    overline:       false,\n\n    /**\n     * Text decoration linethrough.\n     * @type String\n     * @default\n     */\n    linethrough:       false,\n\n    /**\n     * Text alignment. Possible values: \"left\", \"center\", \"right\", \"justify\",\n     * \"justify-left\", \"justify-center\" or \"justify-right\".\n     * @type String\n     * @default\n     */\n    textAlign:            'left',\n\n    /**\n     * Font style . Possible values: \"\", \"normal\", \"italic\" or \"oblique\".\n     * @type String\n     * @default\n     */\n    fontStyle:            'normal',\n\n    /**\n     * Line height\n     * @type Number\n     * @default\n     */\n    lineHeight:           1.16,\n\n    /**\n     * Background color of text lines\n     * @type String\n     * @default\n     */\n    textBackgroundColor:  '',\n\n    /**\n     * List of properties to consider when checking if\n     * state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: fabric.Object.prototype.stateProperties.concat('fontFamily',\n      'fontWeight',\n      'fontSize',\n      'text',\n      'underline',\n      'overline',\n      'linethrough',\n      'textAlign',\n      'fontStyle',\n      'lineHeight',\n      'textBackgroundColor',\n      'charSpacing',\n      'styles'),\n\n    /**\n     * List of properties to consider when checking if cache needs refresh\n     * @type Array\n     */\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('fontFamily',\n      'fontWeight',\n      'fontSize',\n      'text',\n      'underline',\n      'overline',\n      'linethrough',\n      'textAlign',\n      'fontStyle',\n      'lineHeight',\n      'textBackgroundColor',\n      'charSpacing',\n      'styles'),\n\n    /**\n     * When defined, an object is rendered via stroke and this property specifies its color.\n     * <b>Backwards incompatibility note:</b> This property was named \"strokeStyle\" until v1.1.6\n     * @type String\n     * @default\n     */\n    stroke:               null,\n\n    /**\n     * Shadow object representing shadow of this shape.\n     * <b>Backwards incompatibility note:</b> This property was named \"textShadow\" (String) until v1.2.11\n     * @type fabric.Shadow\n     * @default\n     */\n    shadow:               null,\n\n    /**\n     * @private\n     */\n    _fontSizeFraction: 0.222,\n\n    /**\n     * @private\n     */\n    offsets: {\n      underline: 0.10,\n      linethrough: -0.315,\n      overline: -0.88\n    },\n\n    /**\n     * Text Line proportion to font Size (in pixels)\n     * @type Number\n     * @default\n     */\n    _fontSizeMult:             1.13,\n\n    /**\n     * additional space between characters\n     * expressed in thousands of em unit\n     * @type Number\n     * @default\n     */\n    charSpacing:             0,\n\n    /**\n     * Object containing character styles\n     * (where top-level properties corresponds to line number and 2nd-level properties -- to char number in a line)\n     * @type Object\n     * @default\n     */\n    styles: null,\n\n    /**\n     * Reference to a context to measure text char or couple of chars\n     * the cacheContext of the canvas will be used or a freshly created one if the object is not on canvas\n     * once created it will be referenced on fabric._measuringContext to avoide creating a canvas for every\n     * text object created.\n     * @type {CanvasRenderingContext2D}\n     * @default\n     */\n    _measuringContext: null,\n\n    /**\n     * Array of properties that define a style unit.\n     * @type {Array}\n     * @default\n     */\n    _styleProperties: [\n      'stroke',\n      'strokeWidth',\n      'fill',\n      'fontFamily',\n      'fontSize',\n      'fontWeight',\n      'fontStyle',\n      'underline',\n      'overline',\n      'linethrough',\n      'textBackgroundColor',\n    ],\n\n    /**\n     * contains characters bounding boxes\n     */\n    __charBounds: [],\n\n    /**\n     * Constructor\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.Text} thisArg\n     */\n    initialize: function(text, options) {\n      this.styles = options ? (options.styles || { }) : { };\n      this.text = text;\n      this.__skipDimension = true;\n      this.callSuper('initialize', options);\n      this.__skipDimension = false;\n      this.initDimensions();\n      this.setCoords();\n      this.setupState({ propertySet: '_dimensionAffectingProps' });\n    },\n\n    /**\n     * Return a contex for measurement of text string.\n     * if created it gets stored for reuse\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.Text} thisArg\n     */\n    getMeasuringContext: function() {\n      // if we did not return we have to measure something.\n      if (!fabric._measuringContext) {\n        fabric._measuringContext = this.canvas && this.canvas.contextCache ||\n          fabric.util.createCanvasElement().getContext('2d');\n      }\n      return fabric._measuringContext;\n    },\n\n    /**\n     * @private\n     * Divides text into lines of text and lines of graphemes.\n     */\n    _splitText: function() {\n      var newLines = this._splitTextIntoLines(this.text);\n      this.textLines = newLines.lines;\n      this._textLines = newLines.graphemeLines;\n      this._unwrappedTextLines = newLines._unwrappedLines;\n      this._text = newLines.graphemeText;\n      return newLines;\n    },\n\n    /**\n     * Initialize or update text dimensions.\n     * Updates this.width and this.height with the proper values.\n     * Does not return dimensions.\n     */\n    initDimensions: function() {\n      if (this.__skipDimension) {\n        return;\n      }\n      this._splitText();\n      this._clearCache();\n      this.width = this.calcTextWidth() || this.cursorWidth || MIN_TEXT_WIDTH;\n      if (this.textAlign.indexOf('justify') !== -1) {\n        // once text is measured we need to make space fatter to make justified text.\n        this.enlargeSpaces();\n      }\n      this.height = this.calcTextHeight();\n      this.saveState({ propertySet: '_dimensionAffectingProps' });\n    },\n\n    /**\n     * Enlarge space boxes and shift the others\n     */\n    enlargeSpaces: function() {\n      var diffSpace, currentLineWidth, numberOfSpaces, accumulatedSpace, line, charBound, spaces;\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        if (this.textAlign !== 'justify' && (i === len - 1 || this.isEndOfWrapping(i))) {\n          continue;\n        }\n        accumulatedSpace = 0;\n        line = this._textLines[i];\n        currentLineWidth = this.getLineWidth(i);\n        if (currentLineWidth < this.width && (spaces = this.textLines[i].match(this._reSpacesAndTabs))) {\n          numberOfSpaces = spaces.length;\n          diffSpace = (this.width - currentLineWidth) / numberOfSpaces;\n          for (var j = 0, jlen = line.length; j <= jlen; j++) {\n            charBound = this.__charBounds[i][j];\n            if (this._reSpaceAndTab.test(line[j])) {\n              charBound.width += diffSpace;\n              charBound.kernedWidth += diffSpace;\n              charBound.left += accumulatedSpace;\n              accumulatedSpace += diffSpace;\n            }\n            else {\n              charBound.left += accumulatedSpace;\n            }\n          }\n        }\n      }\n    },\n\n    /**\n     * Detect if the text line is ended with an hard break\n     * text and itext do not have wrapping, return false\n     * @return {Boolean}\n     */\n    isEndOfWrapping: function(lineIndex) {\n      return lineIndex === this._textLines.length - 1;\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} String representation of text object\n     */\n    toString: function() {\n      return '#<fabric.Text (' + this.complexity() +\n        '): { \"text\": \"' + this.text + '\", \"fontFamily\": \"' + this.fontFamily + '\" }>';\n    },\n\n    /**\n     * Return the dimension and the zoom level needed to create a cache canvas\n     * big enough to host the object to be cached.\n     * @private\n     * @param {Object} dim.x width of object to be cached\n     * @param {Object} dim.y height of object to be cached\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _getCacheCanvasDimensions: function() {\n      var dims = this.callSuper('_getCacheCanvasDimensions');\n      var fontSize = this.fontSize;\n      dims.width += fontSize * dims.zoomX;\n      dims.height += fontSize * dims.zoomY;\n      return dims;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      this._setTextStyles(ctx);\n      this._renderTextLinesBackground(ctx);\n      this._renderTextDecoration(ctx, 'underline');\n      this._renderText(ctx);\n      this._renderTextDecoration(ctx, 'overline');\n      this._renderTextDecoration(ctx, 'linethrough');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderText: function(ctx) {\n      if (this.paintFirst === 'stroke') {\n        this._renderTextStroke(ctx);\n        this._renderTextFill(ctx);\n      }\n      else {\n        this._renderTextFill(ctx);\n        this._renderTextStroke(ctx);\n      }\n    },\n\n    /**\n     * Set the font parameter of the context with the object properties or with charStyle\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} [charStyle] object with font style properties\n     * @param {String} [charStyle.fontFamily] Font Family\n     * @param {Number} [charStyle.fontSize] Font size in pixels. ( without px suffix )\n     * @param {String} [charStyle.fontWeight] Font weight\n     * @param {String} [charStyle.fontStyle] Font style (italic|normal)\n     */\n    _setTextStyles: function(ctx, charStyle, forMeasuring) {\n      ctx.textBaseline = 'alphabetic';\n      ctx.font = this._getFontDeclaration(charStyle, forMeasuring);\n    },\n\n    /**\n     * calculate and return the text Width measuring each line.\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @return {Number} Maximum width of fabric.Text object\n     */\n    calcTextWidth: function() {\n      var maxWidth = this.getLineWidth(0);\n\n      for (var i = 1, len = this._textLines.length; i < len; i++) {\n        var currentLineWidth = this.getLineWidth(i);\n        if (currentLineWidth > maxWidth) {\n          maxWidth = currentLineWidth;\n        }\n      }\n      return maxWidth;\n    },\n\n    /**\n     * @private\n     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line Text to render\n     * @param {Number} left Left position of text\n     * @param {Number} top Top position of text\n     * @param {Number} lineIndex Index of a line in a text\n     */\n    _renderTextLine: function(method, ctx, line, left, top, lineIndex) {\n      this._renderChars(method, ctx, line, left, top, lineIndex);\n    },\n\n    /**\n     * Renders the text background for lines, taking care of style\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextLinesBackground: function(ctx) {\n      if (!this.textBackgroundColor && !this.styleHas('textBackgroundColor')) {\n        return;\n      }\n      var lineTopOffset = 0, heightOfLine,\n          lineLeftOffset, originalFill = ctx.fillStyle,\n          line, lastColor,\n          leftOffset = this._getLeftOffset(),\n          topOffset = this._getTopOffset(),\n          boxStart = 0, boxWidth = 0, charBox, currentColor;\n\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        heightOfLine = this.getHeightOfLine(i);\n        if (!this.textBackgroundColor && !this.styleHas('textBackgroundColor', i)) {\n          lineTopOffset += heightOfLine;\n          continue;\n        }\n        line = this._textLines[i];\n        lineLeftOffset = this._getLineLeftOffset(i);\n        boxWidth = 0;\n        boxStart = 0;\n        lastColor = this.getValueOfPropertyAt(i, 0, 'textBackgroundColor');\n        for (var j = 0, jlen = line.length; j < jlen; j++) {\n          charBox = this.__charBounds[i][j];\n          currentColor = this.getValueOfPropertyAt(i, j, 'textBackgroundColor');\n          if (currentColor !== lastColor) {\n            ctx.fillStyle = lastColor;\n            lastColor && ctx.fillRect(\n              leftOffset + lineLeftOffset + boxStart,\n              topOffset + lineTopOffset,\n              boxWidth,\n              heightOfLine / this.lineHeight\n            );\n            boxStart = charBox.left;\n            boxWidth = charBox.width;\n            lastColor = currentColor;\n          }\n          else {\n            boxWidth += charBox.kernedWidth;\n          }\n        }\n        if (currentColor) {\n          ctx.fillStyle = currentColor;\n          ctx.fillRect(\n            leftOffset + lineLeftOffset + boxStart,\n            topOffset + lineTopOffset,\n            boxWidth,\n            heightOfLine / this.lineHeight\n          );\n        }\n        lineTopOffset += heightOfLine;\n      }\n      ctx.fillStyle = originalFill;\n      // if there is text background color no\n      // other shadows should be casted\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * @private\n     * @param {Object} decl style declaration for cache\n     * @param {String} decl.fontFamily fontFamily\n     * @param {String} decl.fontStyle fontStyle\n     * @param {String} decl.fontWeight fontWeight\n     * @return {Object} reference to cache\n     */\n    getFontCache: function(decl) {\n      var fontFamily = decl.fontFamily.toLowerCase();\n      if (!fabric.charWidthsCache[fontFamily]) {\n        fabric.charWidthsCache[fontFamily] = { };\n      }\n      var cache = fabric.charWidthsCache[fontFamily],\n          cacheProp = decl.fontStyle.toLowerCase() + '_' + (decl.fontWeight + '').toLowerCase();\n      if (!cache[cacheProp]) {\n        cache[cacheProp] = { };\n      }\n      return cache[cacheProp];\n    },\n\n    /**\n     * apply all the character style to canvas for rendering\n     * @private\n     * @param {String} _char\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} [decl]\n     */\n    _applyCharStyles: function(method, ctx, lineIndex, charIndex, styleDeclaration) {\n\n      this._setFillStyles(ctx, styleDeclaration);\n      this._setStrokeStyles(ctx, styleDeclaration);\n\n      ctx.font = this._getFontDeclaration(styleDeclaration);\n    },\n\n    /**\n     * measure and return the width of a single character.\n     * possibly overridden to accommodate different measure logic or\n     * to hook some external lib for character measurement\n     * @private\n     * @param {String} char to be measured\n     * @param {Object} charStyle style of char to be measured\n     * @param {String} [previousChar] previous char\n     * @param {Object} [prevCharStyle] style of previous char\n     */\n    _measureChar: function(_char, charStyle, previousChar, prevCharStyle) {\n      // first i try to return from cache\n      var fontCache = this.getFontCache(charStyle), fontDeclaration = this._getFontDeclaration(charStyle),\n          previousFontDeclaration = this._getFontDeclaration(prevCharStyle), couple = previousChar + _char,\n          stylesAreEqual = fontDeclaration === previousFontDeclaration, width, coupleWidth, previousWidth,\n          fontMultiplier = charStyle.fontSize / CACHE_FONT_SIZE, kernedWidth;\n\n      if (previousChar && fontCache[previousChar]) {\n        previousWidth = fontCache[previousChar];\n      }\n      if (fontCache[_char]) {\n        kernedWidth = width = fontCache[_char];\n      }\n      if (stylesAreEqual && fontCache[couple]) {\n        coupleWidth = fontCache[couple];\n        kernedWidth = coupleWidth - previousWidth;\n      }\n      if (!width || !previousWidth || !coupleWidth) {\n        var ctx = this.getMeasuringContext();\n        // send a TRUE to specify measuring font size CACHE_FONT_SIZE\n        this._setTextStyles(ctx, charStyle, true);\n      }\n      if (!width) {\n        kernedWidth = width = ctx.measureText(_char).width;\n        fontCache[_char] = width;\n      }\n      if (!previousWidth && stylesAreEqual && previousChar) {\n        previousWidth = ctx.measureText(previousChar).width;\n        fontCache[previousChar] = previousWidth;\n      }\n      if (stylesAreEqual && !coupleWidth) {\n        // we can measure the kerning couple and subtract the width of the previous character\n        coupleWidth = ctx.measureText(couple).width;\n        fontCache[couple] = coupleWidth;\n        kernedWidth = coupleWidth - previousWidth;\n        // try to fix a MS browsers oddity\n        if (kernedWidth > width) {\n          var diff = kernedWidth - width;\n          fontCache[_char] = kernedWidth;\n          fontCache[couple] += diff;\n          width = kernedWidth;\n        }\n      }\n      return { width: width * fontMultiplier, kernedWidth: kernedWidth * fontMultiplier };\n    },\n\n    /**\n     * return height of char in fontSize for a character at lineIndex, charIndex\n     * @param {Number} l line Index\n     * @param {Number} c char index\n     * @return {Number} fontSize of that character\n     */\n    getHeightOfChar: function(l, c) {\n      return this.getValueOfPropertyAt(l, c, 'fontSize');\n    },\n\n    /**\n     * measure a text line measuring all characters.\n     * @param {Number} lineIndex line number\n     * @return {Number} Line width\n     */\n    measureLine: function(lineIndex) {\n      var lineInfo = this._measureLine(lineIndex);\n      if (this.charSpacing !== 0) {\n        lineInfo.width -= this._getWidthOfCharSpacing();\n      }\n      if (lineInfo.width < 0) {\n        lineInfo.width = 0;\n      }\n      return lineInfo;\n    },\n\n    /**\n     * measure every grapheme of a line, populating __charBounds\n     * @param {Number} lineIndex\n     * @return {Object} object.width total width of characters\n     * @return {Object} object.widthOfSpaces length of chars that match this._reSpacesAndTabs\n     */\n    _measureLine: function(lineIndex) {\n      var width = 0, i, grapheme, line = this._textLines[lineIndex], prevGrapheme,\n          graphemeInfo, numOfSpaces = 0, lineBounds = new Array(line.length);\n\n      this.__charBounds[lineIndex] = lineBounds;\n      for (i = 0; i < line.length; i++) {\n        grapheme = line[i];\n        graphemeInfo = this._getGraphemeBox(grapheme, lineIndex, i, prevGrapheme);\n        lineBounds[i] = graphemeInfo;\n        width += graphemeInfo.kernedWidth;\n        prevGrapheme = grapheme;\n      }\n      // this latest bound box represent the last character of the line\n      // to simplify cursor handling in interactive mode.\n      lineBounds[i] = {\n        left: graphemeInfo ? graphemeInfo.left + graphemeInfo.width : 0,\n        width: 0,\n        kernedWidth: 0,\n        height: this.fontSize\n      };\n      return { width: width, numOfSpaces: numOfSpaces };\n    },\n\n    /**\n     * Measure and return the info of a single grapheme.\n     * needs the the info of previous graphemes already filled\n     * @private\n     * @param {String} grapheme to be measured\n     * @param {Number} lineIndex index of the line where the char is\n     * @param {Number} charIndex position in the line\n     * @param {String} [previousChar] character preceding the one to be measured\n     */\n    _getGraphemeBox: function(grapheme, lineIndex, charIndex, previousGrapheme, skipLeft) {\n      var charStyle = this.getCompleteStyleDeclaration(lineIndex, charIndex),\n          prevCharStyle = previousGrapheme ? this.getCompleteStyleDeclaration(lineIndex, charIndex - 1) : { },\n          info = this._measureChar(grapheme, charStyle, previousGrapheme, prevCharStyle),\n          kernedWidth = info.kernedWidth, width = info.width;\n\n      if (this.charSpacing !== 0) {\n        width += this._getWidthOfCharSpacing();\n        kernedWidth += this._getWidthOfCharSpacing();\n      }\n      var box = {\n        width: width,\n        left: 0,\n        height: charStyle.fontSize,\n        kernedWidth: kernedWidth,\n      };\n      if (charIndex > 0 && !skipLeft) {\n        var previousBox = this.__charBounds[lineIndex][charIndex - 1];\n        box.left = previousBox.left + previousBox.width + info.kernedWidth - info.width;\n      }\n      return box;\n    },\n\n    /**\n     * Calculate height of chosen line\n     * height of line is based mainly on fontSize\n     * @private\n     * @param {Number} lineIndex index of the line to calculate\n     */\n    getHeightOfLine: function(lineIndex) {\n      if (this.__lineHeights[lineIndex]) {\n        return this.__lineHeights[lineIndex];\n      }\n\n      var line = this._textLines[lineIndex],\n          maxHeight = this.getHeightOfChar(lineIndex, 0);\n\n      for (var i = 1, len = line.length; i < len; i++) {\n        var currentCharHeight = this.getHeightOfChar(lineIndex, i);\n        if (currentCharHeight > maxHeight) {\n          maxHeight = currentCharHeight;\n        }\n      }\n      this.__lineHeights[lineIndex] = maxHeight * this.lineHeight * this._fontSizeMult;\n      return this.__lineHeights[lineIndex];\n    },\n\n    /**\n     * calculate text box height\n     * @private\n     */\n    calcTextHeight: function() {\n      var lineHeight, height = 0;\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        lineHeight = this.getHeightOfLine(i);\n        height += (i === len - 1 ? lineHeight / this.lineHeight : lineHeight);\n      }\n      return height;\n    },\n\n    /**\n     * @private\n     * @return {Number} Left offset\n     */\n    _getLeftOffset: function() {\n      return -this.width / 2;\n    },\n\n    /**\n     * @private\n     * @return {Number} Top offset\n     */\n    _getTopOffset: function() {\n      return -this.height / 2;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n     */\n    _renderTextCommon: function(ctx, method) {\n      ctx.save();\n      var lineHeights = 0, left = this._getLeftOffset(), top = this._getTopOffset(),\n          offsets = this._applyPatternGradientTransform(ctx, method === 'fillText' ? this.fill : this.stroke);\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        var heightOfLine = this.getHeightOfLine(i),\n            maxHeight = heightOfLine / this.lineHeight,\n            leftOffset = this._getLineLeftOffset(i);\n        this._renderTextLine(\n          method,\n          ctx,\n          this._textLines[i],\n          left + leftOffset - offsets.offsetX,\n          top + lineHeights + maxHeight - offsets.offsetY,\n          i\n        );\n        lineHeights += heightOfLine;\n      }\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextFill: function(ctx) {\n      if (!this.fill && !this.styleHas('fill')) {\n        return;\n      }\n\n      this._renderTextCommon(ctx, 'fillText');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextStroke: function(ctx) {\n      if ((!this.stroke || this.strokeWidth === 0) && this.isEmptyStyles()) {\n        return;\n      }\n\n      if (this.shadow && !this.shadow.affectStroke) {\n        this._removeShadow(ctx);\n      }\n\n      ctx.save();\n      this._setLineDash(ctx, this.strokeDashArray);\n      ctx.beginPath();\n      this._renderTextCommon(ctx, 'strokeText');\n      ctx.closePath();\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line Content of the line\n     * @param {Number} left\n     * @param {Number} top\n     * @param {Number} lineIndex\n     * @param {Number} charOffset\n     */\n    _renderChars: function(method, ctx, line, left, top, lineIndex) {\n      // set proper line offset\n      var lineHeight = this.getHeightOfLine(lineIndex),\n          isJustify = this.textAlign.indexOf('justify') !== -1,\n          actualStyle,\n          nextStyle,\n          charsToRender = '',\n          charBox,\n          boxWidth = 0,\n          timeToRender,\n          shortCut = !isJustify && this.charSpacing === 0 && this.isEmptyStyles(lineIndex);\n\n      ctx.save();\n      top -= lineHeight * this._fontSizeFraction / this.lineHeight;\n      if (shortCut) {\n        // render all the line in one pass without checking\n        this._renderChar(method, ctx, lineIndex, 0, this.textLines[lineIndex], left, top, lineHeight);\n        ctx.restore();\n        return;\n      }\n      for (var i = 0, len = line.length - 1; i <= len; i++) {\n        timeToRender = i === len || this.charSpacing;\n        charsToRender += line[i];\n        charBox = this.__charBounds[lineIndex][i];\n        if (boxWidth === 0) {\n          left += charBox.kernedWidth - charBox.width;\n          boxWidth += charBox.width;\n        }\n        else {\n          boxWidth += charBox.kernedWidth;\n        }\n        if (isJustify && !timeToRender) {\n          if (this._reSpaceAndTab.test(line[i])) {\n            timeToRender = true;\n          }\n        }\n        if (!timeToRender) {\n          // if we have charSpacing, we render char by char\n          actualStyle = actualStyle || this.getCompleteStyleDeclaration(lineIndex, i);\n          nextStyle = this.getCompleteStyleDeclaration(lineIndex, i + 1);\n          timeToRender = this._hasStyleChanged(actualStyle, nextStyle);\n        }\n        if (timeToRender) {\n          this._renderChar(method, ctx, lineIndex, i, charsToRender, left, top, lineHeight);\n          charsToRender = '';\n          actualStyle = nextStyle;\n          left += boxWidth;\n          boxWidth = 0;\n        }\n      }\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {String} _char\n     * @param {Number} left Left coordinate\n     * @param {Number} top Top coordinate\n     * @param {Number} lineHeight Height of the line\n     */\n    _renderChar: function(method, ctx, lineIndex, charIndex, _char, left, top) {\n      var decl = this._getStyleDeclaration(lineIndex, charIndex),\n          fullDecl = this.getCompleteStyleDeclaration(lineIndex, charIndex),\n          shouldFill = method === 'fillText' && fullDecl.fill,\n          shouldStroke = method === 'strokeText' && fullDecl.stroke && fullDecl.strokeWidth;\n\n      if (!shouldStroke && !shouldFill) {\n        return;\n      }\n      decl && ctx.save();\n\n      this._applyCharStyles(method, ctx, lineIndex, charIndex, fullDecl);\n\n      if (decl && decl.textBackgroundColor) {\n        this._removeShadow(ctx);\n      }\n      shouldFill && ctx.fillText(_char, left, top);\n      shouldStroke && ctx.strokeText(_char, left, top);\n      decl && ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {Object} prevStyle\n     * @param {Object} thisStyle\n     */\n    _hasStyleChanged: function(prevStyle, thisStyle) {\n      return prevStyle.fill !== thisStyle.fill ||\n              prevStyle.stroke !== thisStyle.stroke ||\n              prevStyle.strokeWidth !== thisStyle.strokeWidth ||\n              prevStyle.fontSize !== thisStyle.fontSize ||\n              prevStyle.fontFamily !== thisStyle.fontFamily ||\n              prevStyle.fontWeight !== thisStyle.fontWeight ||\n              prevStyle.fontStyle !== thisStyle.fontStyle;\n    },\n\n    /**\n     * @private\n     * @param {Object} prevStyle\n     * @param {Object} thisStyle\n     */\n    _hasStyleChangedForSvg: function(prevStyle, thisStyle) {\n      return this._hasStyleChanged(prevStyle, thisStyle) ||\n        prevStyle.overline !== thisStyle.overline ||\n        prevStyle.underline !== thisStyle.underline ||\n        prevStyle.linethrough !== thisStyle.linethrough;\n    },\n\n    /**\n     * @private\n     * @param {Number} lineIndex index text line\n     * @return {Number} Line left offset\n     */\n    _getLineLeftOffset: function(lineIndex) {\n      var lineWidth = this.getLineWidth(lineIndex);\n      if (this.textAlign === 'center') {\n        return (this.width - lineWidth) / 2;\n      }\n      if (this.textAlign === 'right') {\n        return this.width - lineWidth;\n      }\n      if (this.textAlign === 'justify-center' && this.isEndOfWrapping(lineIndex)) {\n        return (this.width - lineWidth) / 2;\n      }\n      if (this.textAlign === 'justify-right' && this.isEndOfWrapping(lineIndex)) {\n        return this.width - lineWidth;\n      }\n      return 0;\n    },\n\n    /**\n     * @private\n     */\n    _clearCache: function() {\n      this.__lineWidths = [];\n      this.__lineHeights = [];\n      this.__charBounds = [];\n    },\n\n    /**\n     * @private\n     */\n    _shouldClearDimensionCache: function() {\n      var shouldClear = this._forceClearCache;\n      shouldClear || (shouldClear = this.hasStateChanged('_dimensionAffectingProps'));\n      if (shouldClear) {\n        this.dirty = true;\n        this._forceClearCache = false;\n      }\n      return shouldClear;\n    },\n\n    /**\n     * Measure a single line given its index. Used to calculate the initial\n     * text bounding box. The values are calculated and stored in __lineWidths cache.\n     * @private\n     * @param {Number} lineIndex line number\n     * @return {Number} Line width\n     */\n    getLineWidth: function(lineIndex) {\n      if (this.__lineWidths[lineIndex]) {\n        return this.__lineWidths[lineIndex];\n      }\n\n      var width, line = this._textLines[lineIndex], lineInfo;\n\n      if (line === '') {\n        width = 0;\n      }\n      else {\n        lineInfo = this.measureLine(lineIndex);\n        width = lineInfo.width;\n      }\n      this.__lineWidths[lineIndex] = width;\n      return width;\n    },\n\n    _getWidthOfCharSpacing: function() {\n      if (this.charSpacing !== 0) {\n        return this.fontSize * this.charSpacing / 1000;\n      }\n      return 0;\n    },\n\n    /**\n     * @private\n     * @param {Number} LineIndex\n     * @param {Number} charIndex\n     * @param {String} property\n\n     */\n    getValueOfPropertyAt: function(lineIndex, charIndex, property) {\n      var charStyle = this._getStyleDeclaration(lineIndex, charIndex),\n          styleDecoration = charStyle && typeof charStyle[property] !== 'undefined';\n      return styleDecoration ? charStyle[property] : this[property];\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextDecoration: function(ctx, type) {\n      if (!this[type] && !this.styleHas(type)) {\n        return;\n      }\n      var heightOfLine,\n          lineLeftOffset,\n          line, lastDecoration,\n          leftOffset = this._getLeftOffset(),\n          topOffset = this._getTopOffset(),\n          boxStart, boxWidth, charBox, currentDecoration,\n          maxHeight, currentFill, lastFill;\n\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        heightOfLine = this.getHeightOfLine(i);\n        if (!this[type] && !this.styleHas(type, i)) {\n          topOffset += heightOfLine;\n          continue;\n        }\n        line = this._textLines[i];\n        maxHeight = heightOfLine / this.lineHeight;\n        lineLeftOffset = this._getLineLeftOffset(i);\n        boxStart = 0;\n        boxWidth = 0;\n        lastDecoration = this.getValueOfPropertyAt(i, 0, type);\n        lastFill = this.getValueOfPropertyAt(i, 0, 'fill');\n        for (var j = 0, jlen = line.length; j < jlen; j++) {\n          charBox = this.__charBounds[i][j];\n          currentDecoration = this.getValueOfPropertyAt(i, j, type);\n          currentFill = this.getValueOfPropertyAt(i, j, 'fill');\n          if ((currentDecoration !== lastDecoration || currentFill !== lastFill) && boxWidth > 0) {\n            ctx.fillStyle = lastFill;\n            lastDecoration && lastFill && ctx.fillRect(\n              leftOffset + lineLeftOffset + boxStart,\n              topOffset + maxHeight * (1 - this._fontSizeFraction) + this.offsets[type] * this.fontSize,\n              boxWidth,\n              this.fontSize / 15);\n            boxStart = charBox.left;\n            boxWidth = charBox.width;\n            lastDecoration = currentDecoration;\n            lastFill = currentFill;\n          }\n          else {\n            boxWidth += charBox.kernedWidth;\n          }\n        }\n        ctx.fillStyle = currentFill;\n        currentDecoration && currentFill && ctx.fillRect(\n          leftOffset + lineLeftOffset + boxStart,\n          topOffset + maxHeight * (1 - this._fontSizeFraction) + this.offsets[type] * this.fontSize,\n          boxWidth,\n          this.fontSize / 15\n        );\n        topOffset += heightOfLine;\n      }\n      // if there is text background color no\n      // other shadows should be casted\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * return font declaration string for canvas context\n     * @param {Object} [styleObject] object\n     * @returns {String} font declaration formatted for canvas context.\n     */\n    _getFontDeclaration: function(styleObject, forMeasuring) {\n      var style = styleObject || this;\n      return [\n        // node-canvas needs \"weight style\", while browsers need \"style weight\"\n        (fabric.isLikelyNode ? style.fontWeight : style.fontStyle),\n        (fabric.isLikelyNode ? style.fontStyle : style.fontWeight),\n        forMeasuring ? CACHE_FONT_SIZE + 'px' : style.fontSize + 'px',\n        (fabric.isLikelyNode ? ('\"' + style.fontFamily + '\"') : style.fontFamily)\n      ].join(' ');\n    },\n\n    /**\n     * Renders text instance on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    render: function(ctx) {\n      // do not render if object is not visible\n      if (!this.visible) {\n        return;\n      }\n      if (this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen()) {\n        return;\n      }\n      if (this._shouldClearDimensionCache()) {\n        this.initDimensions();\n      }\n      this.callSuper('render', ctx);\n    },\n\n    /**\n     * Returns the text as an array of lines.\n     * @param {String} text text to split\n     * @returns {Array} Lines in the text\n     */\n    _splitTextIntoLines: function(text) {\n      var lines = text.split(this._reNewline),\n          newLines = new Array(lines.length),\n          newLine = ['\\n'],\n          newText = [];\n      for (var i = 0; i < lines.length; i++) {\n        newLines[i] = fabric.util.string.graphemeSplit(lines[i]);\n        newText = newText.concat(newLines[i], newLine);\n      }\n      newText.pop();\n      return { _unwrappedLines: newLines, lines: lines, graphemeText: newText, graphemeLines: newLines };\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var additionalProperties = [\n        'text',\n        'fontSize',\n        'fontWeight',\n        'fontFamily',\n        'fontStyle',\n        'lineHeight',\n        'underline',\n        'overline',\n        'linethrough',\n        'textAlign',\n        'textBackgroundColor',\n        'charSpacing',\n      ].concat(propertiesToInclude);\n      var obj = this.callSuper('toObject', additionalProperties);\n      obj.styles = clone(this.styles, true);\n      return obj;\n    },\n\n    /**\n     * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\n     * @param {String|Object} key Property name or object (if object, iterate over the object properties)\n     * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    set: function(key, value) {\n      this.callSuper('set', key, value);\n      var needsDims = false;\n      if (typeof key === 'object') {\n        for (var _key in key) {\n          needsDims = needsDims || this._dimensionAffectingProps.indexOf(_key) !== -1;\n        }\n      }\n      else {\n        needsDims = this._dimensionAffectingProps.indexOf(key) !== -1;\n      }\n      if (needsDims) {\n        this.initDimensions();\n        this.setCoords();\n      }\n      return this;\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity\n     */\n    complexity: function() {\n      return 1;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Text.fromElement})\n   * @static\n   * @memberOf fabric.Text\n   * @see: http://www.w3.org/TR/SVG/text.html#TextElement\n   */\n  fabric.Text.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(\n    'x y dx dy font-family font-style font-weight font-size text-decoration text-anchor'.split(' '));\n\n  /**\n   * Default SVG font size\n   * @static\n   * @memberOf fabric.Text\n   */\n  fabric.Text.DEFAULT_SVG_FONT_SIZE = 16;\n\n  /**\n   * Returns fabric.Text instance from an SVG element (<b>not yet implemented</b>)\n   * @static\n   * @memberOf fabric.Text\n   * @param {SVGElement} element Element to parse\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n  fabric.Text.fromElement = function(element, callback, options) {\n    if (!element) {\n      return callback(null);\n    }\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Text.ATTRIBUTE_NAMES),\n        parsedAnchor = parsedAttributes.textAnchor || 'left';\n    options = fabric.util.object.extend((options ? clone(options) : { }), parsedAttributes);\n\n    options.top = options.top || 0;\n    options.left = options.left || 0;\n    if (parsedAttributes.textDecoration) {\n      var textDecoration = parsedAttributes.textDecoration;\n      if (textDecoration.indexOf('underline') !== -1) {\n        options.underline = true;\n      }\n      if (textDecoration.indexOf('overline') !== -1) {\n        options.overline = true;\n      }\n      if (textDecoration.indexOf('line-through') !== -1) {\n        options.linethrough = true;\n      }\n      delete options.textDecoration;\n    }\n    if ('dx' in parsedAttributes) {\n      options.left += parsedAttributes.dx;\n    }\n    if ('dy' in parsedAttributes) {\n      options.top += parsedAttributes.dy;\n    }\n    if (!('fontSize' in options)) {\n      options.fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n    }\n\n    var textContent = '';\n\n    // The XML is not properly parsed in IE9 so a workaround to get\n    // textContent is through firstChild.data. Another workaround would be\n    // to convert XML loaded from a file to be converted using DOMParser (same way loadSVGFromString() does)\n    if (!('textContent' in element)) {\n      if ('firstChild' in element && element.firstChild !== null) {\n        if ('data' in element.firstChild && element.firstChild.data !== null) {\n          textContent = element.firstChild.data;\n        }\n      }\n    }\n    else {\n      textContent = element.textContent;\n    }\n\n    textContent = textContent.replace(/^\\s+|\\s+$|\\n+/g, '').replace(/\\s+/g, ' ');\n\n    var text = new fabric.Text(textContent, options),\n        textHeightScaleFactor = text.getScaledHeight() / text.height,\n        lineHeightDiff = (text.height + text.strokeWidth) * text.lineHeight - text.height,\n        scaledDiff = lineHeightDiff * textHeightScaleFactor,\n        textHeight = text.getScaledHeight() + scaledDiff,\n        offX = 0;\n    /*\n      Adjust positioning:\n        x/y attributes in SVG correspond to the bottom-left corner of text bounding box\n        fabric output by default at top, left.\n    */\n    if (parsedAnchor === 'center') {\n      offX = text.getScaledWidth() / 2;\n    }\n    if (parsedAnchor === 'right') {\n      offX = text.getScaledWidth();\n    }\n    text.set({\n      left: text.left - offX,\n      top: text.top - (textHeight - text.fontSize * (0.18 + text._fontSizeFraction)) / text.lineHeight\n    });\n    callback(text);\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Text instance from an object representation\n   * @static\n   * @memberOf fabric.Text\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Text instance is created\n   */\n  fabric.Text.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Text', object, callback, 'text');\n  };\n\n  fabric.util.createAccessors && fabric.util.createAccessors(fabric.Text);\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n  fabric.util.object.extend(fabric.Text.prototype, /** @lends fabric.Text.prototype */ {\n    /**\n     * Returns true if object has no styling or no styling in a line\n     * @param {Number} lineIndex\n     * @return {Boolean}\n     */\n    isEmptyStyles: function(lineIndex) {\n      if (!this.styles) {\n        return true;\n      }\n      if (typeof lineIndex !== 'undefined' && !this.styles[lineIndex]) {\n        return true;\n      }\n      var obj = typeof lineIndex === 'undefined' ? this.styles : { line: this.styles[lineIndex] };\n      for (var p1 in obj) {\n        for (var p2 in obj[p1]) {\n          // eslint-disable-next-line no-unused-vars\n          for (var p3 in obj[p1][p2]) {\n            return false;\n          }\n        }\n      }\n      return true;\n    },\n\n    /**\n     * Returns true if object has a style property or has it ina specified line\n     * @param {Number} lineIndex\n     * @return {Boolean}\n     */\n    styleHas: function(property, lineIndex) {\n      if (!this.styles || !property || property === '') {\n        return false;\n      }\n      if (typeof lineIndex !== 'undefined' && !this.styles[lineIndex]) {\n        return false;\n      }\n      var obj = typeof lineIndex === 'undefined' ? this.styles : { line: this.styles[lineIndex] };\n      // eslint-disable-next-line\n      for (var p1 in obj) {\n        // eslint-disable-next-line\n        for (var p2 in obj[p1]) {\n          if (typeof obj[p1][p2][property] !== 'undefined') {\n            return true;\n          }\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Check if characters in a text have a value for a property\n     * whose value matches the textbox's value for that property.  If so,\n     * the character-level property is deleted.  If the character\n     * has no other properties, then it is also deleted.  Finally,\n     * if the line containing that character has no other characters\n     * then it also is deleted.\n     *\n     * @param {string} property The property to compare between characters and text.\n     */\n    cleanStyle: function(property) {\n      if (!this.styles || !property || property === '') {\n        return false;\n      }\n      var obj = this.styles, stylesCount = 0, letterCount, foundStyle = false, style,\n          canBeSwapped = true, graphemeCount = 0;\n      // eslint-disable-next-line\n      for (var p1 in obj) {\n        letterCount = 0;\n        // eslint-disable-next-line\n        for (var p2 in obj[p1]) {\n          stylesCount++;\n          if (!foundStyle) {\n            style = obj[p1][p2][property];\n            foundStyle = true;\n          }\n          else if (obj[p1][p2][property] !== style) {\n            canBeSwapped = false;\n          }\n          if (obj[p1][p2][property] === this[property]) {\n            delete obj[p1][p2][property];\n          }\n          if (Object.keys(obj[p1][p2]).length !== 0) {\n            letterCount++;\n          }\n          else {\n            delete obj[p1][p2];\n          }\n        }\n        if (letterCount === 0) {\n          delete obj[p1];\n        }\n      }\n      // if every grapheme has the same style set then\n      // delete those styles and set it on the parent\n      for (var i = 0; i < this._textLines.length; i++) {\n        graphemeCount += this._textLines[i].length;\n      }\n      if (canBeSwapped && stylesCount === graphemeCount) {\n        this[property] = style;\n        this.removeStyle(property);\n      }\n    },\n\n    /**\n     * Remove a style property or properties from all individual character styles\n     * in a text object.  Deletes the character style object if it contains no other style\n     * props.  Deletes a line style object if it contains no other character styles.\n     *\n     * @param {String} props The property to remove from character styles.\n     */\n    removeStyle: function(property) {\n      if (!this.styles || !property || property === '') {\n        return;\n      }\n      var obj = this.styles, line, lineNum, charNum;\n      for (lineNum in obj) {\n        line = obj[lineNum];\n        for (charNum in line) {\n          delete line[charNum][property];\n          if (Object.keys(line[charNum]).length === 0) {\n            delete line[charNum];\n          }\n        }\n        if (Object.keys(line).length === 0) {\n          delete obj[lineNum];\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _extendStyles: function(index, styles) {\n      var loc = this.get2DCursorLocation(index);\n\n      if (!this._getLineStyle(loc.lineIndex)) {\n        this._setLineStyle(loc.lineIndex, {});\n      }\n\n      if (!this._getStyleDeclaration(loc.lineIndex, loc.charIndex)) {\n        this._setStyleDeclaration(loc.lineIndex, loc.charIndex, {});\n      }\n\n      fabric.util.object.extend(this._getStyleDeclaration(loc.lineIndex, loc.charIndex), styles);\n    },\n\n    /**\n     * Returns 2d representation (lineIndex and charIndex) of cursor (or selection start)\n     * @param {Number} [selectionStart] Optional index. When not given, current selectionStart is used.\n     * @param {Boolean} [skipWrapping] consider the location for unwrapped lines. usefull to manage styles.\n     */\n    get2DCursorLocation: function(selectionStart, skipWrapping) {\n      if (typeof selectionStart === 'undefined') {\n        selectionStart = this.selectionStart;\n      }\n      var lines = skipWrapping ? this._unwrappedTextLines : this._textLines;\n      var len = lines.length;\n      for (var i = 0; i < len; i++) {\n        if (selectionStart <= lines[i].length) {\n          return {\n            lineIndex: i,\n            charIndex: selectionStart\n          };\n        }\n        selectionStart -= lines[i].length + 1;\n      }\n      return {\n        lineIndex: i - 1,\n        charIndex: lines[i - 1].length < selectionStart ? lines[i - 1].length : selectionStart\n      };\n    },\n\n    /**\n     * Gets style of a current selection/cursor (at the start position)\n     * if startIndex or endIndex are not provided, slectionStart or selectionEnd will be used.\n     * @param {Number} [startIndex] Start index to get styles at\n     * @param {Number} [endIndex] End index to get styles at, if not specified selectionEnd or startIndex + 1\n     * @param {Boolean} [complete] get full style or not\n     * @return {Array} styles an array with one, zero or more Style objects\n     */\n    getSelectionStyles: function(startIndex, endIndex, complete) {\n      if (typeof startIndex === 'undefined') {\n        startIndex = this.selectionStart || 0;\n      }\n      if (typeof endIndex === 'undefined') {\n        endIndex = this.selectionEnd || startIndex;\n      }\n      var styles = [];\n      for (var i = startIndex; i < endIndex; i++) {\n        styles.push(this.getStyleAtPosition(i, complete));\n      }\n      return styles;\n    },\n\n    /**\n     * Gets style of a current selection/cursor position\n     * @param {Number} position  to get styles at\n     * @param {Boolean} [complete] full style if true\n     * @return {Object} style Style object at a specified index\n     * @private\n     */\n    getStyleAtPosition: function(position, complete) {\n      var loc = this.get2DCursorLocation(position),\n          style = complete ? this.getCompleteStyleDeclaration(loc.lineIndex, loc.charIndex) :\n            this._getStyleDeclaration(loc.lineIndex, loc.charIndex);\n      return style || {};\n    },\n\n    /**\n     * Sets style of a current selection, if no selection exist, do not set anything.\n     * @param {Object} [styles] Styles object\n     * @param {Number} [startIndex] Start index to get styles at\n     * @param {Number} [endIndex] End index to get styles at, if not specified selectionEnd or startIndex + 1\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    setSelectionStyles: function(styles, startIndex, endIndex) {\n      if (typeof startIndex === 'undefined') {\n        startIndex = this.selectionStart || 0;\n      }\n      if (typeof endIndex === 'undefined') {\n        endIndex = this.selectionEnd || startIndex;\n      }\n      for (var i = startIndex; i < endIndex; i++) {\n        this._extendStyles(i, styles);\n      }\n      /* not included in _extendStyles to avoid clearing cache more than once */\n      this._forceClearCache = true;\n      return this;\n    },\n\n    /**\n     * get the reference, not a clone, of the style object for a given character\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @return {Object} style object\n     */\n    _getStyleDeclaration: function(lineIndex, charIndex) {\n      var lineStyle = this.styles && this.styles[lineIndex];\n      if (!lineStyle) {\n        return null;\n      }\n      return lineStyle[charIndex];\n    },\n\n    /**\n     * return a new object that contains all the style property for a character\n     * the object returned is newly created\n     * @param {Number} lineIndex of the line where the character is\n     * @param {Number} charIndex position of the character on the line\n     * @return {Object} style object\n     */\n    getCompleteStyleDeclaration: function(lineIndex, charIndex) {\n      var style = this._getStyleDeclaration(lineIndex, charIndex) || { },\n          styleObject = { }, prop;\n      for (var i = 0; i < this._styleProperties.length; i++) {\n        prop = this._styleProperties[i];\n        styleObject[prop] = typeof style[prop] === 'undefined' ? this[prop] : style[prop];\n      }\n      return styleObject;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} style\n     * @private\n     */\n    _setStyleDeclaration: function(lineIndex, charIndex, style) {\n      this.styles[lineIndex][charIndex] = style;\n    },\n\n    /**\n     *\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _deleteStyleDeclaration: function(lineIndex, charIndex) {\n      delete this.styles[lineIndex][charIndex];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _getLineStyle: function(lineIndex) {\n      return this.styles[lineIndex];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Object} style\n     * @private\n     */\n    _setLineStyle: function(lineIndex, style) {\n      this.styles[lineIndex] = style;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _deleteLineStyle: function(lineIndex) {\n      delete this.styles[lineIndex];\n    }\n  });\n})();\n\n\n(function() {\n\n  function parseDecoration(object) {\n    if (object.textDecoration) {\n      object.textDecoration.indexOf('underline') > -1 && (object.underline = true);\n      object.textDecoration.indexOf('line-through') > -1 && (object.linethrough = true);\n      object.textDecoration.indexOf('overline') > -1 && (object.overline = true);\n      delete object.textDecoration;\n    }\n  }\n\n  /**\n   * IText class (introduced in <b>v1.4</b>) Events are also fired with \"text:\"\n   * prefix when observing canvas.\n   * @class fabric.IText\n   * @extends fabric.Text\n   * @mixes fabric.Observable\n   *\n   * @fires changed\n   * @fires selection:changed\n   * @fires editing:entered\n   * @fires editing:exited\n   *\n   * @return {fabric.IText} thisArg\n   * @see {@link fabric.IText#initialize} for constructor definition\n   *\n   * <p>Supported key combinations:</p>\n   * <pre>\n   *   Move cursor:                    left, right, up, down\n   *   Select character:               shift + left, shift + right\n   *   Select text vertically:         shift + up, shift + down\n   *   Move cursor by word:            alt + left, alt + right\n   *   Select words:                   shift + alt + left, shift + alt + right\n   *   Move cursor to line start/end:  cmd + left, cmd + right or home, end\n   *   Select till start/end of line:  cmd + shift + left, cmd + shift + right or shift + home, shift + end\n   *   Jump to start/end of text:      cmd + up, cmd + down\n   *   Select till start/end of text:  cmd + shift + up, cmd + shift + down or shift + pgUp, shift + pgDown\n   *   Delete character:               backspace\n   *   Delete word:                    alt + backspace\n   *   Delete line:                    cmd + backspace\n   *   Forward delete:                 delete\n   *   Copy text:                      ctrl/cmd + c\n   *   Paste text:                     ctrl/cmd + v\n   *   Cut text:                       ctrl/cmd + x\n   *   Select entire text:             ctrl/cmd + a\n   *   Quit editing                    tab or esc\n   * </pre>\n   *\n   * <p>Supported mouse/touch combination</p>\n   * <pre>\n   *   Position cursor:                click/touch\n   *   Create selection:               click/touch & drag\n   *   Create selection:               click & shift + click\n   *   Select word:                    double click\n   *   Select line:                    triple click\n   * </pre>\n   */\n  fabric.IText = fabric.util.createClass(fabric.Text, fabric.Observable, /** @lends fabric.IText.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'i-text',\n\n    /**\n     * Index where text selection starts (or where cursor is when there is no selection)\n     * @type Number\n     * @default\n     */\n    selectionStart: 0,\n\n    /**\n     * Index where text selection ends\n     * @type Number\n     * @default\n     */\n    selectionEnd: 0,\n\n    /**\n     * Color of text selection\n     * @type String\n     * @default\n     */\n    selectionColor: 'rgba(17,119,255,0.3)',\n\n    /**\n     * Indicates whether text is in editing mode\n     * @type Boolean\n     * @default\n     */\n    isEditing: false,\n\n    /**\n     * Indicates whether a text can be edited\n     * @type Boolean\n     * @default\n     */\n    editable: true,\n\n    /**\n     * Border color of text object while it's in editing mode\n     * @type String\n     * @default\n     */\n    editingBorderColor: 'rgba(102,153,255,0.25)',\n\n    /**\n     * Width of cursor (in px)\n     * @type Number\n     * @default\n     */\n    cursorWidth: 2,\n\n    /**\n     * Color of default cursor (when not overwritten by character style)\n     * @type String\n     * @default\n     */\n    cursorColor: '#333',\n\n    /**\n     * Delay between cursor blink (in ms)\n     * @type Number\n     * @default\n     */\n    cursorDelay: 1000,\n\n    /**\n     * Duration of cursor fadein (in ms)\n     * @type Number\n     * @default\n     */\n    cursorDuration: 600,\n\n    /**\n     * Indicates whether internal text char widths can be cached\n     * @type Boolean\n     * @default\n     */\n    caching: true,\n\n    /**\n     * @private\n     */\n    _reSpace: /\\s|\\n/,\n\n    /**\n     * @private\n     */\n    _currentCursorOpacity: 0,\n\n    /**\n     * @private\n     */\n    _selectionDirection: null,\n\n    /**\n     * @private\n     */\n    _abortCursorAnimation: false,\n\n    /**\n     * @private\n     */\n    __widthOfSpace: [],\n\n    /**\n     * Helps determining when the text is in composition, so that the cursor\n     * rendering is altered.\n     */\n    inCompositionMode: false,\n\n    /**\n     * Constructor\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.IText} thisArg\n     */\n    initialize: function(text, options) {\n      this.callSuper('initialize', text, options);\n      this.initBehavior();\n    },\n\n    /**\n     * Sets selection start (left boundary of a selection)\n     * @param {Number} index Index to set selection start to\n     */\n    setSelectionStart: function(index) {\n      index = Math.max(index, 0);\n      this._updateAndFire('selectionStart', index);\n    },\n\n    /**\n     * Sets selection end (right boundary of a selection)\n     * @param {Number} index Index to set selection end to\n     */\n    setSelectionEnd: function(index) {\n      index = Math.min(index, this.text.length);\n      this._updateAndFire('selectionEnd', index);\n    },\n\n    /**\n     * @private\n     * @param {String} property 'selectionStart' or 'selectionEnd'\n     * @param {Number} index new position of property\n     */\n    _updateAndFire: function(property, index) {\n      if (this[property] !== index) {\n        this._fireSelectionChanged();\n        this[property] = index;\n      }\n      this._updateTextarea();\n    },\n\n    /**\n     * Fires the even of selection changed\n     * @private\n     */\n    _fireSelectionChanged: function() {\n      this.fire('selection:changed');\n      this.canvas && this.canvas.fire('text:selection:changed', { target: this });\n    },\n\n    /**\n     * Initialize text dimensions. Render all text on given context\n     * or on a offscreen canvas to get the text width with measureText.\n     * Updates this.width and this.height with the proper values.\n     * Does not return dimensions.\n     * @private\n     */\n    initDimensions: function() {\n      this.isEditing && this.initDelayedCursor();\n      this.clearContextTop();\n      this.callSuper('initDimensions');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    render: function(ctx) {\n      this.clearContextTop();\n      this.callSuper('render', ctx);\n      // clear the cursorOffsetCache, so we ensure to calculate once per renderCursor\n      // the correct position but not at every cursor animation.\n      this.cursorOffsetCache = { };\n      this.renderCursorOrSelection();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      this.callSuper('_render', ctx);\n    },\n\n    /**\n     * Prepare and clean the contextTop\n     */\n    clearContextTop: function(skipRestore) {\n      if (!this.isEditing) {\n        return;\n      }\n      if (this.canvas && this.canvas.contextTop) {\n        var ctx = this.canvas.contextTop, v = this.canvas.viewportTransform;\n        ctx.save();\n        ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n        this.transform(ctx);\n        this.transformMatrix && ctx.transform.apply(ctx, this.transformMatrix);\n        this._clearTextArea(ctx);\n        skipRestore || ctx.restore();\n      }\n    },\n\n    /**\n     * Renders cursor or selection (depending on what exists)\n     */\n    renderCursorOrSelection: function() {\n      if (!this.isEditing || !this.canvas) {\n        return;\n      }\n      var boundaries = this._getCursorBoundaries(), ctx;\n      if (this.canvas && this.canvas.contextTop) {\n        ctx = this.canvas.contextTop;\n        this.clearContextTop(true);\n      }\n      else {\n        ctx = this.canvas.contextContainer;\n        ctx.save();\n      }\n      if (this.selectionStart === this.selectionEnd) {\n        this.renderCursor(boundaries, ctx);\n      }\n      else {\n        this.renderSelection(boundaries, ctx);\n      }\n      ctx.restore();\n    },\n\n    _clearTextArea: function(ctx) {\n      // we add 4 pixel, to be sure to do not leave any pixel out\n      var width = this.width + 4, height = this.height + 4;\n      ctx.clearRect(-width / 2, -height / 2, width, height);\n    },\n\n    /**\n     * Returns cursor boundaries (left, top, leftOffset, topOffset)\n     * @private\n     * @param {Array} chars Array of characters\n     * @param {String} typeOfBoundaries\n     */\n    _getCursorBoundaries: function(position) {\n\n      // left/top are left/top of entire text box\n      // leftOffset/topOffset are offset from that left/top point of a text box\n\n      if (typeof position === 'undefined') {\n        position = this.selectionStart;\n      }\n\n      var left = this._getLeftOffset(),\n          top = this._getTopOffset(),\n          offsets = this._getCursorBoundariesOffsets(position);\n\n      return {\n        left: left,\n        top: top,\n        leftOffset: offsets.left,\n        topOffset: offsets.top\n      };\n    },\n\n    /**\n     * @private\n     */\n    _getCursorBoundariesOffsets: function(position) {\n      if (this.cursorOffsetCache && 'top' in this.cursorOffsetCache) {\n        return this.cursorOffsetCache;\n      }\n      var lineLeftOffset,\n          lineIndex = 0,\n          charIndex = 0,\n          topOffset = 0,\n          leftOffset = 0,\n          boundaries,\n          cursorPosition = this.get2DCursorLocation(position);\n      for (var i = 0; i < cursorPosition.lineIndex; i++) {\n        topOffset += this.getHeightOfLine(i);\n      }\n\n      lineLeftOffset = this._getLineLeftOffset(cursorPosition.lineIndex);\n      var bound = this.__charBounds[cursorPosition.lineIndex][cursorPosition.charIndex];\n      bound && (leftOffset = bound.left);\n      if (this.charSpacing !== 0 && charIndex === this._textLines[lineIndex].length) {\n        leftOffset -= this._getWidthOfCharSpacing();\n      }\n      boundaries = {\n        top: topOffset,\n        left: lineLeftOffset + (leftOffset > 0 ? leftOffset : 0),\n      };\n      this.cursorOffsetCache = boundaries;\n      return this.cursorOffsetCache;\n    },\n\n    /**\n     * Renders cursor\n     * @param {Object} boundaries\n     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n     */\n    renderCursor: function(boundaries, ctx) {\n      var cursorLocation = this.get2DCursorLocation(),\n          lineIndex = cursorLocation.lineIndex,\n          charIndex = cursorLocation.charIndex > 0 ? cursorLocation.charIndex - 1 : 0,\n          charHeight = this.getValueOfPropertyAt(lineIndex, charIndex, 'fontSize'),\n          multiplier = this.scaleX * this.canvas.getZoom(),\n          cursorWidth = this.cursorWidth / multiplier,\n          topOffset = boundaries.topOffset;\n\n      topOffset += (1 - this._fontSizeFraction) * this.getHeightOfLine(lineIndex) / this.lineHeight\n        - charHeight * (1 - this._fontSizeFraction);\n\n      if (this.inCompositionMode) {\n        this.renderSelection(boundaries, ctx);\n      }\n\n      ctx.fillStyle = this.getValueOfPropertyAt(lineIndex, charIndex, 'fill');\n      ctx.globalAlpha = this.__isMousedown ? 1 : this._currentCursorOpacity;\n      ctx.fillRect(\n        boundaries.left + boundaries.leftOffset - cursorWidth / 2,\n        topOffset + boundaries.top,\n        cursorWidth,\n        charHeight);\n    },\n\n    /**\n     * Renders text selection\n     * @param {Object} boundaries Object with left/top/leftOffset/topOffset\n     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n     */\n    renderSelection: function(boundaries, ctx) {\n\n      var selectionStart = this.inCompositionMode ? this.hiddenTextarea.selectionStart : this.selectionStart,\n          selectionEnd = this.inCompositionMode ? this.hiddenTextarea.selectionEnd : this.selectionEnd,\n          isJustify = this.textAlign.indexOf('justify') !== -1,\n          start = this.get2DCursorLocation(selectionStart),\n          end = this.get2DCursorLocation(selectionEnd),\n          startLine = start.lineIndex,\n          endLine = end.lineIndex,\n          startChar = start.charIndex < 0 ? 0 : start.charIndex,\n          endChar = end.charIndex < 0 ? 0 : end.charIndex;\n\n      for (var i = startLine; i <= endLine; i++) {\n        var lineOffset = this._getLineLeftOffset(i) || 0,\n            lineHeight = this.getHeightOfLine(i),\n            realLineHeight = 0, boxStart = 0, boxEnd = 0;\n\n        if (i === startLine) {\n          boxStart = this.__charBounds[startLine][startChar].left;\n        }\n        if (i >= startLine && i < endLine) {\n          boxEnd = isJustify && !this.isEndOfWrapping(i) ? this.width : this.getLineWidth(i) || 5; // WTF is this 5?\n        }\n        else if (i === endLine) {\n          if (endChar === 0) {\n            boxEnd = this.__charBounds[endLine][endChar].left;\n          }\n          else {\n            boxEnd = this.__charBounds[endLine][endChar - 1].left + this.__charBounds[endLine][endChar - 1].width;\n          }\n        }\n        realLineHeight = lineHeight;\n        if (this.lineHeight < 1 || (i === endLine && this.lineHeight > 1)) {\n          lineHeight /= this.lineHeight;\n        }\n        if (this.inCompositionMode) {\n          ctx.fillStyle = this.compositionColor || 'black';\n          ctx.fillRect(\n            boundaries.left + lineOffset + boxStart,\n            boundaries.top + boundaries.topOffset + lineHeight,\n            boxEnd - boxStart,\n            1);\n        }\n        else {\n          ctx.fillStyle = this.selectionColor;\n          ctx.fillRect(\n            boundaries.left + lineOffset + boxStart,\n            boundaries.top + boundaries.topOffset,\n            boxEnd - boxStart,\n            lineHeight);\n        }\n\n\n        boundaries.topOffset += realLineHeight;\n      }\n    },\n\n    /**\n     * High level function to know the height of the cursor.\n     * the currentChar is the one that precedes the cursor\n     * Returns fontSize of char at the current cursor\n     * @return {Number} Character font size\n     */\n    getCurrentCharFontSize: function() {\n      var cp = this._getCurrentCharIndex();\n      return this.getValueOfPropertyAt(cp.l, cp.c, 'fontSize');\n    },\n\n    /**\n     * High level function to know the color of the cursor.\n     * the currentChar is the one that precedes the cursor\n     * Returns color (fill) of char at the current cursor\n     * @return {String} Character color (fill)\n     */\n    getCurrentCharColor: function() {\n      var cp = this._getCurrentCharIndex();\n      return this.getValueOfPropertyAt(cp.l, cp.c, 'fill');\n    },\n\n    /**\n     * Returns the cursor position for the getCurrent.. functions\n     * @private\n     */\n    _getCurrentCharIndex: function() {\n      var cursorPosition = this.get2DCursorLocation(this.selectionStart, true),\n          charIndex = cursorPosition.charIndex > 0 ? cursorPosition.charIndex - 1 : 0;\n      return { l: cursorPosition.lineIndex, c: charIndex };\n    }\n  });\n\n  /**\n   * Returns fabric.IText instance from an object representation\n   * @static\n   * @memberOf fabric.IText\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as argument\n   */\n  fabric.IText.fromObject = function(object, callback) {\n    parseDecoration(object);\n    if (object.styles) {\n      for (var i in object.styles) {\n        for (var j in object.styles[i]) {\n          parseDecoration(object.styles[i][j]);\n        }\n      }\n    }\n    fabric.Object._fromObject('IText', object, callback, 'text');\n  };\n})();\n\n\n(function() {\n\n  var clone = fabric.util.object.clone;\n\n  fabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\n    /**\n     * Initializes all the interactive behavior of IText\n     */\n    initBehavior: function() {\n      this.initAddedHandler();\n      this.initRemovedHandler();\n      this.initCursorSelectionHandlers();\n      this.initDoubleClickSimulation();\n      this.mouseMoveHandler = this.mouseMoveHandler.bind(this);\n    },\n\n    onDeselect: function(options) {\n      this.isEditing && this.exitEditing();\n      this.selected = false;\n      fabric.Object.prototype.onDeselect.call(this, options);\n    },\n\n    /**\n     * Initializes \"added\" event handler\n     */\n    initAddedHandler: function() {\n      var _this = this;\n      this.on('added', function() {\n        var canvas = _this.canvas;\n        if (canvas) {\n          if (!canvas._hasITextHandlers) {\n            canvas._hasITextHandlers = true;\n            _this._initCanvasHandlers(canvas);\n          }\n          canvas._iTextInstances = canvas._iTextInstances || [];\n          canvas._iTextInstances.push(_this);\n        }\n      });\n    },\n\n    initRemovedHandler: function() {\n      var _this = this;\n      this.on('removed', function() {\n        var canvas = _this.canvas;\n        if (canvas) {\n          canvas._iTextInstances = canvas._iTextInstances || [];\n          fabric.util.removeFromArray(canvas._iTextInstances, _this);\n          if (canvas._iTextInstances.length === 0) {\n            canvas._hasITextHandlers = false;\n            _this._removeCanvasHandlers(canvas);\n          }\n        }\n      });\n    },\n\n    /**\n     * register canvas event to manage exiting on other instances\n     * @private\n     */\n    _initCanvasHandlers: function(canvas) {\n      canvas._mouseUpITextHandler = (function() {\n        if (canvas._iTextInstances) {\n          canvas._iTextInstances.forEach(function(obj) {\n            obj.__isMousedown = false;\n          });\n        }\n      }).bind(this);\n      canvas.on('mouse:up', canvas._mouseUpITextHandler);\n    },\n\n    /**\n     * remove canvas event to manage exiting on other instances\n     * @private\n     */\n    _removeCanvasHandlers: function(canvas) {\n      canvas.off('mouse:up', canvas._mouseUpITextHandler);\n    },\n\n    /**\n     * @private\n     */\n    _tick: function() {\n      this._currentTickState = this._animateCursor(this, 1, this.cursorDuration, '_onTickComplete');\n    },\n\n    /**\n     * @private\n     */\n    _animateCursor: function(obj, targetOpacity, duration, completeMethod) {\n\n      var tickState;\n\n      tickState = {\n        isAborted: false,\n        abort: function() {\n          this.isAborted = true;\n        },\n      };\n\n      obj.animate('_currentCursorOpacity', targetOpacity, {\n        duration: duration,\n        onComplete: function() {\n          if (!tickState.isAborted) {\n            obj[completeMethod]();\n          }\n        },\n        onChange: function() {\n          // we do not want to animate a selection, only cursor\n          if (obj.canvas && obj.selectionStart === obj.selectionEnd) {\n            obj.renderCursorOrSelection();\n          }\n        },\n        abort: function() {\n          return tickState.isAborted;\n        }\n      });\n      return tickState;\n    },\n\n    /**\n     * @private\n     */\n    _onTickComplete: function() {\n\n      var _this = this;\n\n      if (this._cursorTimeout1) {\n        clearTimeout(this._cursorTimeout1);\n      }\n      this._cursorTimeout1 = setTimeout(function() {\n        _this._currentTickCompleteState = _this._animateCursor(_this, 0, this.cursorDuration / 2, '_tick');\n      }, 100);\n    },\n\n    /**\n     * Initializes delayed cursor\n     */\n    initDelayedCursor: function(restart) {\n      var _this = this,\n          delay = restart ? 0 : this.cursorDelay;\n\n      this.abortCursorAnimation();\n      this._currentCursorOpacity = 1;\n      this._cursorTimeout2 = setTimeout(function() {\n        _this._tick();\n      }, delay);\n    },\n\n    /**\n     * Aborts cursor animation and clears all timeouts\n     */\n    abortCursorAnimation: function() {\n      var shouldClear = this._currentTickState || this._currentTickCompleteState,\n          canvas = this.canvas;\n      this._currentTickState && this._currentTickState.abort();\n      this._currentTickCompleteState && this._currentTickCompleteState.abort();\n\n      clearTimeout(this._cursorTimeout1);\n      clearTimeout(this._cursorTimeout2);\n\n      this._currentCursorOpacity = 0;\n      // to clear just itext area we need to transform the context\n      // it may not be worth it\n      if (shouldClear && canvas) {\n        canvas.clearContext(canvas.contextTop || canvas.contextContainer);\n      }\n\n    },\n\n    /**\n     * Selects entire text\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    selectAll: function() {\n      this.selectionStart = 0;\n      this.selectionEnd = this._text.length;\n      this._fireSelectionChanged();\n      this._updateTextarea();\n      return this;\n    },\n\n    /**\n     * Returns selected text\n     * @return {String}\n     */\n    getSelectedText: function() {\n      return this._text.slice(this.selectionStart, this.selectionEnd).join('');\n    },\n\n    /**\n     * Find new selection index representing start of current word according to current selection index\n     * @param {Number} startFrom Surrent selection index\n     * @return {Number} New selection index\n     */\n    findWordBoundaryLeft: function(startFrom) {\n      var offset = 0, index = startFrom - 1;\n\n      // remove space before cursor first\n      if (this._reSpace.test(this._text[index])) {\n        while (this._reSpace.test(this._text[index])) {\n          offset++;\n          index--;\n        }\n      }\n      while (/\\S/.test(this._text[index]) && index > -1) {\n        offset++;\n        index--;\n      }\n\n      return startFrom - offset;\n    },\n\n    /**\n     * Find new selection index representing end of current word according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findWordBoundaryRight: function(startFrom) {\n      var offset = 0, index = startFrom;\n\n      // remove space after cursor first\n      if (this._reSpace.test(this._text[index])) {\n        while (this._reSpace.test(this._text[index])) {\n          offset++;\n          index++;\n        }\n      }\n      while (/\\S/.test(this._text[index]) && index < this.text.length) {\n        offset++;\n        index++;\n      }\n\n      return startFrom + offset;\n    },\n\n    /**\n     * Find new selection index representing start of current line according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findLineBoundaryLeft: function(startFrom) {\n      var offset = 0, index = startFrom - 1;\n\n      while (!/\\n/.test(this._text[index]) && index > -1) {\n        offset++;\n        index--;\n      }\n\n      return startFrom - offset;\n    },\n\n    /**\n     * Find new selection index representing end of current line according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findLineBoundaryRight: function(startFrom) {\n      var offset = 0, index = startFrom;\n\n      while (!/\\n/.test(this._text[index]) && index < this.text.length) {\n        offset++;\n        index++;\n      }\n\n      return startFrom + offset;\n    },\n\n    /**\n     * Finds index corresponding to beginning or end of a word\n     * @param {Number} selectionStart Index of a character\n     * @param {Number} direction 1 or -1\n     * @return {Number} Index of the beginning or end of a word\n     */\n    searchWordBoundary: function(selectionStart, direction) {\n      var index     = this._reSpace.test(this.text.charAt(selectionStart)) ? selectionStart - 1 : selectionStart,\n          _char     = this.text.charAt(index),\n          reNonWord = /[ \\n\\.,;!\\?\\-]/;\n\n      while (!reNonWord.test(_char) && index > 0 && index < this.text.length) {\n        index += direction;\n        _char = this.text.charAt(index);\n      }\n      if (reNonWord.test(_char) && _char !== '\\n') {\n        index += direction === 1 ? 0 : 1;\n      }\n      return index;\n    },\n\n    /**\n     * Selects a word based on the index\n     * @param {Number} selectionStart Index of a character\n     */\n    selectWord: function(selectionStart) {\n      selectionStart = selectionStart || this.selectionStart;\n      var newSelectionStart = this.searchWordBoundary(selectionStart, -1), /* search backwards */\n          newSelectionEnd = this.searchWordBoundary(selectionStart, 1); /* search forward */\n\n      this.selectionStart = newSelectionStart;\n      this.selectionEnd = newSelectionEnd;\n      this._fireSelectionChanged();\n      this._updateTextarea();\n      this.renderCursorOrSelection();\n    },\n\n    /**\n     * Selects a line based on the index\n     * @param {Number} selectionStart Index of a character\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    selectLine: function(selectionStart) {\n      selectionStart = selectionStart || this.selectionStart;\n      var newSelectionStart = this.findLineBoundaryLeft(selectionStart),\n          newSelectionEnd = this.findLineBoundaryRight(selectionStart);\n\n      this.selectionStart = newSelectionStart;\n      this.selectionEnd = newSelectionEnd;\n      this._fireSelectionChanged();\n      this._updateTextarea();\n      return this;\n    },\n\n    /**\n     * Enters editing state\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    enterEditing: function(e) {\n      if (this.isEditing || !this.editable) {\n        return;\n      }\n\n      if (this.canvas) {\n        this.canvas.calcOffset();\n        this.exitEditingOnOthers(this.canvas);\n      }\n\n      this.isEditing = true;\n\n      this.initHiddenTextarea(e);\n      this.hiddenTextarea.focus();\n      this.hiddenTextarea.value = this.text;\n      this._updateTextarea();\n      this._saveEditingProps();\n      this._setEditingProps();\n      this._textBeforeEdit = this.text;\n\n      this._tick();\n      this.fire('editing:entered');\n      this._fireSelectionChanged();\n      if (!this.canvas) {\n        return this;\n      }\n      this.canvas.fire('text:editing:entered', { target: this });\n      this.initMouseMoveHandler();\n      this.canvas.requestRenderAll();\n      return this;\n    },\n\n    exitEditingOnOthers: function(canvas) {\n      if (canvas._iTextInstances) {\n        canvas._iTextInstances.forEach(function(obj) {\n          obj.selected = false;\n          if (obj.isEditing) {\n            obj.exitEditing();\n          }\n        });\n      }\n    },\n\n    /**\n     * Initializes \"mousemove\" event handler\n     */\n    initMouseMoveHandler: function() {\n      this.canvas.on('mouse:move', this.mouseMoveHandler);\n    },\n\n    /**\n     * @private\n     */\n    mouseMoveHandler: function(options) {\n      if (!this.__isMousedown || !this.isEditing) {\n        return;\n      }\n\n      var newSelectionStart = this.getSelectionStartFromPointer(options.e),\n          currentStart = this.selectionStart,\n          currentEnd = this.selectionEnd;\n      if (\n        (newSelectionStart !== this.__selectionStartOnMouseDown || currentStart === currentEnd)\n        &&\n        (currentStart === newSelectionStart || currentEnd === newSelectionStart)\n      ) {\n        return;\n      }\n      if (newSelectionStart > this.__selectionStartOnMouseDown) {\n        this.selectionStart = this.__selectionStartOnMouseDown;\n        this.selectionEnd = newSelectionStart;\n      }\n      else {\n        this.selectionStart = newSelectionStart;\n        this.selectionEnd = this.__selectionStartOnMouseDown;\n      }\n      if (this.selectionStart !== currentStart || this.selectionEnd !== currentEnd) {\n        this.restartCursorIfNeeded();\n        this._fireSelectionChanged();\n        this._updateTextarea();\n        this.renderCursorOrSelection();\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setEditingProps: function() {\n      this.hoverCursor = 'text';\n\n      if (this.canvas) {\n        this.canvas.defaultCursor = this.canvas.moveCursor = 'text';\n      }\n\n      this.borderColor = this.editingBorderColor;\n\n      this.hasControls = this.selectable = false;\n      this.lockMovementX = this.lockMovementY = true;\n    },\n\n    /**\n     * convert from textarea to grapheme indexes\n     */\n    fromStringToGraphemeSelection: function(start, end, text) {\n      var smallerTextStart = text.slice(0, start),\n          graphemeStart = fabric.util.string.graphemeSplit(smallerTextStart).length;\n      if (start === end) {\n        return { selectionStart: graphemeStart, selectionEnd: graphemeStart };\n      }\n      var smallerTextEnd = text.slice(start, end),\n          graphemeEnd = fabric.util.string.graphemeSplit(smallerTextEnd).length;\n      return { selectionStart: graphemeStart, selectionEnd: graphemeStart + graphemeEnd };\n    },\n\n    /**\n     * convert from fabric to textarea values\n     */\n    fromGraphemeToStringSelection: function(start, end, _text) {\n      var smallerTextStart = _text.slice(0, start),\n          graphemeStart = smallerTextStart.join('').length;\n      if (start === end) {\n        return { selectionStart: graphemeStart, selectionEnd: graphemeStart };\n      }\n      var smallerTextEnd = _text.slice(start, end),\n          graphemeEnd = smallerTextEnd.join('').length;\n      return { selectionStart: graphemeStart, selectionEnd: graphemeStart + graphemeEnd };\n    },\n\n    /**\n     * @private\n     */\n    _updateTextarea: function() {\n      this.cursorOffsetCache = { };\n      if (!this.hiddenTextarea) {\n        return;\n      }\n      if (!this.inCompositionMode) {\n        var newSelection = this.fromGraphemeToStringSelection(this.selectionStart, this.selectionEnd, this._text);\n        this.hiddenTextarea.selectionStart = newSelection.selectionStart;\n        this.hiddenTextarea.selectionEnd = newSelection.selectionEnd;\n      }\n      this.updateTextareaPosition();\n    },\n\n    /**\n     * @private\n     */\n    updateFromTextArea: function() {\n      if (!this.hiddenTextarea) {\n        return;\n      }\n      this.cursorOffsetCache = { };\n      this.text = this.hiddenTextarea.value;\n      if (this._shouldClearDimensionCache()) {\n        this.initDimensions();\n        this.setCoords();\n      }\n      var newSelection = this.fromStringToGraphemeSelection(\n        this.hiddenTextarea.selectionStart, this.hiddenTextarea.selectionEnd, this.hiddenTextarea.value);\n      this.selectionEnd = this.selectionStart = newSelection.selectionEnd;\n      if (!this.inCompositionMode) {\n        this.selectionStart = newSelection.selectionStart;\n      }\n      this.updateTextareaPosition();\n    },\n\n    /**\n     * @private\n     */\n    updateTextareaPosition: function() {\n      if (this.selectionStart === this.selectionEnd) {\n        var style = this._calcTextareaPosition();\n        this.hiddenTextarea.style.left = style.left;\n        this.hiddenTextarea.style.top = style.top;\n      }\n    },\n\n    /**\n     * @private\n     * @return {Object} style contains style for hiddenTextarea\n     */\n    _calcTextareaPosition: function() {\n      if (!this.canvas) {\n        return { x: 1, y: 1 };\n      }\n      var desiredPostion = this.inCompositionMode ? this.compositionStart : this.selectionStart,\n          boundaries = this._getCursorBoundaries(desiredPostion),\n          cursorLocation = this.get2DCursorLocation(desiredPostion),\n          lineIndex = cursorLocation.lineIndex,\n          charIndex = cursorLocation.charIndex,\n          charHeight = this.getValueOfPropertyAt(lineIndex, charIndex, 'fontSize') * this.lineHeight,\n          leftOffset = boundaries.leftOffset,\n          m = this.calcTransformMatrix(),\n          p = {\n            x: boundaries.left + leftOffset,\n            y: boundaries.top + boundaries.topOffset + charHeight\n          },\n          upperCanvas = this.canvas.upperCanvasEl,\n          maxWidth = upperCanvas.width - charHeight,\n          maxHeight = upperCanvas.height - charHeight;\n\n      p = fabric.util.transformPoint(p, m);\n      p = fabric.util.transformPoint(p, this.canvas.viewportTransform);\n      if (p.x < 0) {\n        p.x = 0;\n      }\n      if (p.x > maxWidth) {\n        p.x = maxWidth;\n      }\n      if (p.y < 0) {\n        p.y = 0;\n      }\n      if (p.y > maxHeight) {\n        p.y = maxHeight;\n      }\n\n      // add canvas offset on document\n      p.x += this.canvas._offset.left;\n      p.y += this.canvas._offset.top;\n\n      return { left: p.x + 'px', top: p.y + 'px', fontSize: charHeight + 'px', charHeight: charHeight };\n    },\n\n    /**\n     * @private\n     */\n    _saveEditingProps: function() {\n      this._savedProps = {\n        hasControls: this.hasControls,\n        borderColor: this.borderColor,\n        lockMovementX: this.lockMovementX,\n        lockMovementY: this.lockMovementY,\n        hoverCursor: this.hoverCursor,\n        defaultCursor: this.canvas && this.canvas.defaultCursor,\n        moveCursor: this.canvas && this.canvas.moveCursor\n      };\n    },\n\n    /**\n     * @private\n     */\n    _restoreEditingProps: function() {\n      if (!this._savedProps) {\n        return;\n      }\n\n      this.hoverCursor = this._savedProps.hoverCursor;\n      this.hasControls = this._savedProps.hasControls;\n      this.borderColor = this._savedProps.borderColor;\n      this.lockMovementX = this._savedProps.lockMovementX;\n      this.lockMovementY = this._savedProps.lockMovementY;\n\n      if (this.canvas) {\n        this.canvas.defaultCursor = this._savedProps.defaultCursor;\n        this.canvas.moveCursor = this._savedProps.moveCursor;\n      }\n    },\n\n    /**\n     * Exits from editing state\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    exitEditing: function() {\n      var isTextChanged = (this._textBeforeEdit !== this.text);\n      this.selected = false;\n      this.isEditing = false;\n      this.selectable = true;\n\n      this.selectionEnd = this.selectionStart;\n\n      if (this.hiddenTextarea) {\n        this.hiddenTextarea.blur && this.hiddenTextarea.blur();\n        this.canvas && this.hiddenTextarea.parentNode.removeChild(this.hiddenTextarea);\n        this.hiddenTextarea = null;\n      }\n\n      this.abortCursorAnimation();\n      this._restoreEditingProps();\n      this._currentCursorOpacity = 0;\n      if (this._shouldClearDimensionCache()) {\n        this.initDimensions();\n        this.setCoords();\n      }\n      this.fire('editing:exited');\n      isTextChanged && this.fire('modified');\n      if (this.canvas) {\n        this.canvas.off('mouse:move', this.mouseMoveHandler);\n        this.canvas.fire('text:editing:exited', { target: this });\n        isTextChanged && this.canvas.fire('object:modified', { target: this });\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _removeExtraneousStyles: function() {\n      for (var prop in this.styles) {\n        if (!this._textLines[prop]) {\n          delete this.styles[prop];\n        }\n      }\n    },\n\n    /**\n     * remove and reflow a style block from start to end.\n     * @param {Number} start linear start position for removal (included in removal)\n     * @param {Number} end linear end position for removal ( excluded from removal )\n     */\n    removeStyleFromTo: function(start, end) {\n      var cursorStart = this.get2DCursorLocation(start, true),\n          cursorEnd = this.get2DCursorLocation(end, true),\n          lineStart = cursorStart.lineIndex,\n          charStart = cursorStart.charIndex,\n          lineEnd = cursorEnd.lineIndex,\n          charEnd = cursorEnd.charIndex,\n          i, styleObj;\n      if (lineStart !== lineEnd) {\n        // step1 remove the trailing of lineStart\n        if (this.styles[lineStart]) {\n          for (i = charStart; i < this._unwrappedTextLines[lineStart].length; i++) {\n            delete this.styles[lineStart][i];\n          }\n        }\n        // step2 move the trailing of lineEnd to lineStart if needed\n        if (this.styles[lineEnd]) {\n          for (i = charEnd; i < this._unwrappedTextLines[lineEnd].length; i++) {\n            styleObj = this.styles[lineEnd][i];\n            if (styleObj) {\n              this.styles[lineStart] || (this.styles[lineStart] = { });\n              this.styles[lineStart][charStart + i - charEnd] = styleObj;\n            }\n          }\n        }\n        // step3 detects lines will be completely removed.\n        for (i = lineStart + 1; i <= lineEnd; i++) {\n          delete this.styles[i];\n        }\n        // step4 shift remaining lines.\n        this.shiftLineStyles(lineEnd, lineStart - lineEnd);\n      }\n      else {\n        // remove and shift left on the same line\n        if (this.styles[lineStart]) {\n          styleObj = this.styles[lineStart];\n          var diff = charEnd - charStart, numericChar, _char;\n          for (i = charStart; i < charEnd; i++) {\n            delete styleObj[i];\n          }\n          for (_char in this.styles[lineStart]) {\n            numericChar = parseInt(_char, 10);\n            if (numericChar >= charEnd) {\n              styleObj[numericChar - diff] = styleObj[_char];\n              delete styleObj[_char];\n            }\n          }\n        }\n      }\n    },\n\n    /**\n     * Shifts line styles up or down\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} offset Can any number?\n     */\n    shiftLineStyles: function(lineIndex, offset) {\n      // shift all line styles by offset upward or downward\n      // do not clone deep. we need new array, not new style objects\n      var clonedStyles = clone(this.styles);\n      for (var line in this.styles) {\n        var numericLine = parseInt(line, 10);\n        if (numericLine > lineIndex) {\n          this.styles[numericLine + offset] = clonedStyles[numericLine];\n          if (!clonedStyles[numericLine - offset]) {\n            delete this.styles[numericLine];\n          }\n        }\n      }\n    },\n\n    restartCursorIfNeeded: function() {\n      if (!this._currentTickState || this._currentTickState.isAborted\n        || !this._currentTickCompleteState || this._currentTickCompleteState.isAborted\n      ) {\n        this.initDelayedCursor();\n      }\n    },\n\n    /**\n     * Inserts new style object\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Number} qty number of lines to add\n     * @param {Array} copiedStyle Array of objects styles\n     */\n    insertNewlineStyleObject: function(lineIndex, charIndex, qty, copiedStyle) {\n      var currentCharStyle,\n          newLineStyles = {},\n          somethingAdded = false;\n\n      qty || (qty = 1);\n      this.shiftLineStyles(lineIndex, qty);\n      if (this.styles[lineIndex]) {\n        currentCharStyle = this.styles[lineIndex][charIndex === 0 ? charIndex : charIndex - 1];\n      }\n\n      // we clone styles of all chars\n      // after cursor onto the current line\n      for (var index in this.styles[lineIndex]) {\n        var numIndex = parseInt(index, 10);\n        if (numIndex >= charIndex) {\n          somethingAdded = true;\n          newLineStyles[numIndex - charIndex] = this.styles[lineIndex][index];\n          // remove lines from the previous line since they're on a new line now\n          delete this.styles[lineIndex][index];\n        }\n      }\n      if (somethingAdded) {\n        this.styles[lineIndex + qty] = newLineStyles;\n      }\n      else {\n        delete this.styles[lineIndex + qty];\n      }\n      // for the other lines\n      // we clone current char style onto the next (otherwise empty) line\n      while (qty > 1) {\n        qty--;\n        if (copiedStyle && copiedStyle[qty]) {\n          this.styles[lineIndex + qty] = { 0: clone(copiedStyle[qty]) };\n        }\n        else if (currentCharStyle) {\n          this.styles[lineIndex + qty] = { 0: clone(currentCharStyle) };\n        }\n        else {\n          delete this.styles[lineIndex + qty];\n        }\n      }\n      this._forceClearCache = true;\n    },\n\n    /**\n     * Inserts style object for a given line/char index\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Number} quantity number Style object to insert, if given\n     * @param {Array} copiedStyle array of style objecs\n     */\n    insertCharStyleObject: function(lineIndex, charIndex, quantity, copiedStyle) {\n      if (!this.styles) {\n        this.styles = {};\n      }\n      var currentLineStyles       = this.styles[lineIndex],\n          currentLineStylesCloned = currentLineStyles ? clone(currentLineStyles) : {};\n\n      quantity || (quantity = 1);\n      // shift all char styles by quantity forward\n      // 0,1,2,3 -> (charIndex=2) -> 0,1,3,4 -> (insert 2) -> 0,1,2,3,4\n      for (var index in currentLineStylesCloned) {\n        var numericIndex = parseInt(index, 10);\n        if (numericIndex >= charIndex) {\n          currentLineStyles[numericIndex + quantity] = currentLineStylesCloned[numericIndex];\n          // only delete the style if there was nothing moved there\n          if (!currentLineStylesCloned[numericIndex - quantity]) {\n            delete currentLineStyles[numericIndex];\n          }\n        }\n      }\n      this._forceClearCache = true;\n      if (copiedStyle) {\n        while (quantity--) {\n          if (!Object.keys(copiedStyle[quantity]).length) {\n            continue;\n          }\n          if (!this.styles[lineIndex]) {\n            this.styles[lineIndex] = {};\n          }\n          this.styles[lineIndex][charIndex + quantity] = clone(copiedStyle[quantity]);\n        }\n        return;\n      }\n      if (!currentLineStyles) {\n        return;\n      }\n      var newStyle = currentLineStyles[charIndex ? charIndex - 1 : 1];\n      while (newStyle && quantity--) {\n        this.styles[lineIndex][charIndex + quantity] = clone(newStyle);\n      }\n    },\n\n    /**\n     * Inserts style object(s)\n     * @param {Array} insertedText Characters at the location where style is inserted\n     * @param {Number} start cursor index for inserting style\n     * @param {Array} [copiedStyle] array of style objects to insert.\n     */\n    insertNewStyleBlock: function(insertedText, start, copiedStyle) {\n      var cursorLoc = this.get2DCursorLocation(start, true),\n          addedLines = [0], linesLenght = 0;\n      for (var i = 0; i < insertedText.length; i++) {\n        if (insertedText[i] === '\\n') {\n          linesLenght++;\n          addedLines[linesLenght] = 0;\n        }\n        else {\n          addedLines[linesLenght]++;\n        }\n      }\n      if (addedLines[0] > 0) {\n        this.insertCharStyleObject(cursorLoc.lineIndex, cursorLoc.charIndex, addedLines[0], copiedStyle);\n        copiedStyle = copiedStyle && copiedStyle.slice(addedLines[0] + 1);\n      }\n      linesLenght && this.insertNewlineStyleObject(\n        cursorLoc.lineIndex, cursorLoc.charIndex + addedLines[0], linesLenght);\n      for (var i = 1; i < linesLenght; i++) {\n        if (addedLines[i] > 0) {\n          this.insertCharStyleObject(cursorLoc.lineIndex + i, 0, addedLines[i], copiedStyle);\n        }\n        else if (copiedStyle) {\n          this.styles[cursorLoc.lineIndex + i][0] = copiedStyle[0];\n        }\n        copiedStyle = copiedStyle && copiedStyle.slice(addedLines[i] + 1);\n      }\n      // we use i outside the loop to get it like linesLength\n      if (addedLines[i] > 0) {\n        this.insertCharStyleObject(cursorLoc.lineIndex + i, 0, addedLines[i], copiedStyle);\n      }\n    },\n\n    /**\n     * Set the selectionStart and selectionEnd according to the ne postion of cursor\n     * mimic the key - mouse navigation when shift is pressed.\n     */\n    setSelectionStartEndWithShift: function(start, end, newSelection) {\n      if (newSelection <= start) {\n        if (end === start) {\n          this._selectionDirection = 'left';\n        }\n        else if (this._selectionDirection === 'right') {\n          this._selectionDirection = 'left';\n          this.selectionEnd = start;\n        }\n        this.selectionStart = newSelection;\n      }\n      else if (newSelection > start && newSelection < end) {\n        if (this._selectionDirection === 'right') {\n          this.selectionEnd = newSelection;\n        }\n        else {\n          this.selectionStart = newSelection;\n        }\n      }\n      else {\n        // newSelection is > selection start and end\n        if (end === start) {\n          this._selectionDirection = 'right';\n        }\n        else if (this._selectionDirection === 'left') {\n          this._selectionDirection = 'right';\n          this.selectionStart = end;\n        }\n        this.selectionEnd = newSelection;\n      }\n    },\n\n    setSelectionInBoundaries: function() {\n      var length = this.text.length;\n      if (this.selectionStart > length) {\n        this.selectionStart = length;\n      }\n      else if (this.selectionStart < 0) {\n        this.selectionStart = 0;\n      }\n      if (this.selectionEnd > length) {\n        this.selectionEnd = length;\n      }\n      else if (this.selectionEnd < 0) {\n        this.selectionEnd = 0;\n      }\n    }\n  });\n})();\n\n\nfabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n  /**\n   * Initializes \"dbclick\" event handler\n   */\n  initDoubleClickSimulation: function() {\n\n    // for double click\n    this.__lastClickTime = +new Date();\n\n    // for triple click\n    this.__lastLastClickTime = +new Date();\n\n    this.__lastPointer = { };\n\n    this.on('mousedown', this.onMouseDown.bind(this));\n  },\n\n  onMouseDown: function(options) {\n\n    this.__newClickTime = +new Date();\n    var newPointer = this.canvas.getPointer(options.e);\n\n    if (this.isTripleClick(newPointer, options.e)) {\n      this.fire('tripleclick', options);\n      this._stopEvent(options.e);\n    }\n    this.__lastLastClickTime = this.__lastClickTime;\n    this.__lastClickTime = this.__newClickTime;\n    this.__lastPointer = newPointer;\n    this.__lastIsEditing = this.isEditing;\n    this.__lastSelected = this.selected;\n  },\n\n  isTripleClick: function(newPointer) {\n    return this.__newClickTime - this.__lastClickTime < 500 &&\n        this.__lastClickTime - this.__lastLastClickTime < 500 &&\n        this.__lastPointer.x === newPointer.x &&\n        this.__lastPointer.y === newPointer.y;\n  },\n\n  /**\n   * @private\n   */\n  _stopEvent: function(e) {\n    e.preventDefault && e.preventDefault();\n    e.stopPropagation && e.stopPropagation();\n  },\n\n  /**\n   * Initializes event handlers related to cursor or selection\n   */\n  initCursorSelectionHandlers: function() {\n    this.initMousedownHandler();\n    this.initMouseupHandler();\n    this.initClicks();\n  },\n\n  /**\n   * Initializes double and triple click event handlers\n   */\n  initClicks: function() {\n    this.on('mousedblclick', function(options) {\n      this.selectWord(this.getSelectionStartFromPointer(options.e));\n    });\n    this.on('tripleclick', function(options) {\n      this.selectLine(this.getSelectionStartFromPointer(options.e));\n    });\n  },\n\n  /**\n   * Default event handler for the basic functionalities needed on _mouseDown\n   * can be overridden to do something different.\n   * Scope of this implementation is: find the click position, set selectionStart\n   * find selectionEnd, initialize the drawing of either cursor or selection area\n   */\n  _mouseDownHandler: function(options) {\n    if (!this.canvas || !this.editable || (options.e.button && options.e.button !== 1)) {\n      return;\n    }\n    var pointer = this.canvas.getPointer(options.e);\n\n    this.__mousedownX = pointer.x;\n    this.__mousedownY = pointer.y;\n    this.__isMousedown = true;\n\n    if (this.selected) {\n      this.setCursorByClick(options.e);\n    }\n\n    if (this.isEditing) {\n      this.__selectionStartOnMouseDown = this.selectionStart;\n      if (this.selectionStart === this.selectionEnd) {\n        this.abortCursorAnimation();\n      }\n      this.renderCursorOrSelection();\n    }\n  },\n\n  /**\n   * Initializes \"mousedown\" event handler\n   */\n  initMousedownHandler: function() {\n    this.on('mousedown', this._mouseDownHandler);\n  },\n\n  /**\n   * @private\n   */\n  _isObjectMoved: function(e) {\n    var pointer = this.canvas.getPointer(e);\n\n    return this.__mousedownX !== pointer.x ||\n           this.__mousedownY !== pointer.y;\n  },\n\n  /**\n   * Initializes \"mouseup\" event handler\n   */\n  initMouseupHandler: function() {\n    this.on('mouseup', function(options) {\n      this.__isMousedown = false;\n      if (!this.editable || this._isObjectMoved(options.e) || (options.e.button && options.e.button !== 1)) {\n        return;\n      }\n\n      if (this.__lastSelected && !this.__corner) {\n        this.enterEditing(options.e);\n        if (this.selectionStart === this.selectionEnd) {\n          this.initDelayedCursor(true);\n        }\n        else {\n          this.renderCursorOrSelection();\n        }\n      }\n      this.selected = true;\n    });\n  },\n\n  /**\n   * Changes cursor location in a text depending on passed pointer (x/y) object\n   * @param {Event} e Event object\n   */\n  setCursorByClick: function(e) {\n    var newSelection = this.getSelectionStartFromPointer(e),\n        start = this.selectionStart, end = this.selectionEnd;\n    if (e.shiftKey) {\n      this.setSelectionStartEndWithShift(start, end, newSelection);\n    }\n    else {\n      this.selectionStart = newSelection;\n      this.selectionEnd = newSelection;\n    }\n    if (this.isEditing) {\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Returns index of a character corresponding to where an object was clicked\n   * @param {Event} e Event object\n   * @return {Number} Index of a character\n   */\n  getSelectionStartFromPointer: function(e) {\n    var mouseOffset = this.getLocalPointer(e),\n        prevWidth = 0,\n        width = 0,\n        height = 0,\n        charIndex = 0,\n        lineIndex = 0,\n        lineLeftOffset,\n        line;\n\n    for (var i = 0, len = this._textLines.length; i < len; i++) {\n      if (height <= mouseOffset.y) {\n        height += this.getHeightOfLine(i) * this.scaleY;\n        lineIndex = i;\n        if (i > 0) {\n          charIndex += this._textLines[i - 1].length + 1;\n        }\n      }\n      else {\n        break;\n      }\n    }\n    lineLeftOffset = this._getLineLeftOffset(lineIndex);\n    width = lineLeftOffset * this.scaleX;\n    line = this._textLines[lineIndex];\n    for (var j = 0, jlen = line.length; j < jlen; j++) {\n      prevWidth = width;\n      // i removed something about flipX here, check.\n      width += this.__charBounds[lineIndex][j].kernedWidth * this.scaleX;\n      if (width <= mouseOffset.x) {\n        charIndex++;\n      }\n      else {\n        break;\n      }\n    }\n    return this._getNewSelectionStartFromOffset(mouseOffset, prevWidth, width, charIndex, jlen);\n  },\n\n  /**\n   * @private\n   */\n  _getNewSelectionStartFromOffset: function(mouseOffset, prevWidth, width, index, jlen) {\n    // we need Math.abs because when width is after the last char, the offset is given as 1, while is 0\n    var distanceBtwLastCharAndCursor = mouseOffset.x - prevWidth,\n        distanceBtwNextCharAndCursor = width - mouseOffset.x,\n        offset = distanceBtwNextCharAndCursor > distanceBtwLastCharAndCursor ||\n          distanceBtwNextCharAndCursor < 0 ? 0 : 1,\n        newSelectionStart = index + offset;\n    // if object is horizontally flipped, mirror cursor location from the end\n    if (this.flipX) {\n      newSelectionStart = jlen - newSelectionStart;\n    }\n\n    if (newSelectionStart > this._text.length) {\n      newSelectionStart = this._text.length;\n    }\n\n    return newSelectionStart;\n  }\n});\n\n\nfabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\n  /**\n   * Initializes hidden textarea (needed to bring up keyboard in iOS)\n   */\n  initHiddenTextarea: function() {\n    this.hiddenTextarea = fabric.document.createElement('textarea');\n    this.hiddenTextarea.setAttribute('autocapitalize', 'off');\n    this.hiddenTextarea.setAttribute('autocorrect', 'off');\n    this.hiddenTextarea.setAttribute('autocomplete', 'off');\n    this.hiddenTextarea.setAttribute('spellcheck', 'false');\n    this.hiddenTextarea.setAttribute('data-fabric-hiddentextarea', '');\n    this.hiddenTextarea.setAttribute('wrap', 'off');\n    var style = this._calcTextareaPosition();\n    this.hiddenTextarea.style.cssText = 'position: absolute; top: ' + style.top +\n    '; left: ' + style.left + '; z-index: -999; opacity: 0; width: 1px; height: 1px; font-size: 1px;' +\n    ' line-height: 1px; paddingｰtop: ' + style.fontSize + ';';\n    fabric.document.body.appendChild(this.hiddenTextarea);\n\n    fabric.util.addListener(this.hiddenTextarea, 'keydown', this.onKeyDown.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'keyup', this.onKeyUp.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'input', this.onInput.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'copy', this.copy.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'cut', this.copy.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'paste', this.paste.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionstart', this.onCompositionStart.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionupdate', this.onCompositionUpdate.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionend', this.onCompositionEnd.bind(this));\n\n    if (!this._clickHandlerInitialized && this.canvas) {\n      fabric.util.addListener(this.canvas.upperCanvasEl, 'click', this.onClick.bind(this));\n      this._clickHandlerInitialized = true;\n    }\n  },\n\n  /**\n   * For functionalities on keyDown\n   * Map a special key to a function of the instance/prototype\n   * If you need different behaviour for ESC or TAB or arrows, you have to change\n   * this map setting the name of a function that you build on the fabric.Itext or\n   * your prototype.\n   * the map change will affect all Instances unless you need for only some text Instances\n   * in that case you have to clone this object and assign your Instance.\n   * this.keysMap = fabric.util.object.clone(this.keysMap);\n   * The function must be in fabric.Itext.prototype.myFunction And will receive event as args[0]\n   */\n  keysMap: {\n    9:  'exitEditing',\n    27: 'exitEditing',\n    33: 'moveCursorUp',\n    34: 'moveCursorDown',\n    35: 'moveCursorRight',\n    36: 'moveCursorLeft',\n    37: 'moveCursorLeft',\n    38: 'moveCursorUp',\n    39: 'moveCursorRight',\n    40: 'moveCursorDown',\n  },\n\n  /**\n   * For functionalities on keyUp + ctrl || cmd\n   */\n  ctrlKeysMapUp: {\n    67: 'copy',\n    88: 'cut'\n  },\n\n  /**\n   * For functionalities on keyDown + ctrl || cmd\n   */\n  ctrlKeysMapDown: {\n    65: 'selectAll'\n  },\n\n  onClick: function() {\n    // No need to trigger click event here, focus is enough to have the keyboard appear on Android\n    this.hiddenTextarea && this.hiddenTextarea.focus();\n  },\n\n  /**\n   * Handles keyup event\n   * @param {Event} e Event object\n   */\n  onKeyDown: function(e) {\n    if (!this.isEditing || this.inCompositionMode) {\n      return;\n    }\n    if (e.keyCode in this.keysMap) {\n      this[this.keysMap[e.keyCode]](e);\n    }\n    else if ((e.keyCode in this.ctrlKeysMapDown) && (e.ctrlKey || e.metaKey)) {\n      this[this.ctrlKeysMapDown[e.keyCode]](e);\n    }\n    else {\n      return;\n    }\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    if (e.keyCode >= 33 && e.keyCode <= 40) {\n      // if i press an arrow key just update selection\n      this.clearContextTop();\n      this.renderCursorOrSelection();\n    }\n    else {\n      this.canvas && this.canvas.requestRenderAll();\n    }\n  },\n\n  /**\n   * Handles keyup event\n   * We handle KeyUp because ie11 and edge have difficulties copy/pasting\n   * if a copy/cut event fired, keyup is dismissed\n   * @param {Event} e Event object\n   */\n  onKeyUp: function(e) {\n    if (!this.isEditing || this._copyDone || this.inCompositionMode) {\n      this._copyDone = false;\n      return;\n    }\n    if ((e.keyCode in this.ctrlKeysMapUp) && (e.ctrlKey || e.metaKey)) {\n      this[this.ctrlKeysMapUp[e.keyCode]](e);\n    }\n    else {\n      return;\n    }\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    this.canvas && this.canvas.requestRenderAll();\n  },\n\n  /**\n   * Handles onInput event\n   * @param {Event} e Event object\n   */\n  onInput: function(e) {\n    var fromPaste = this.fromPaste;\n    this.fromPaste = false;\n    e && e.stopPropagation();\n    if (!this.isEditing) {\n      return;\n    }\n    // decisions about style changes.\n    var nextText = this._splitTextIntoLines(this.hiddenTextarea.value).graphemeText,\n        charCount = this._text.length,\n        nextCharCount = nextText.length,\n        removedText, insertedText,\n        charDiff = nextCharCount - charCount;\n    if (this.hiddenTextarea.value === '') {\n      this.styles = { };\n      this.updateFromTextArea();\n      this.fire('changed');\n      if (this.canvas) {\n        this.canvas.fire('text:changed', { target: this });\n        this.canvas.requestRenderAll();\n      }\n      return;\n    }\n\n    var textareaSelection = this.fromStringToGraphemeSelection(\n      this.hiddenTextarea.selectionStart,\n      this.hiddenTextarea.selectionEnd,\n      this.hiddenTextarea.value\n    );\n    var backDelete = this.selectionStart > textareaSelection.selectionStart;\n\n    if (this.selectionStart !== this.selectionEnd) {\n      removedText = this._text.slice(this.selectionStart, this.selectionEnd);\n      charDiff += this.selectionEnd - this.selectionStart;\n    }\n    else if (nextCharCount < charCount) {\n      if (backDelete) {\n        removedText = this._text.slice(this.selectionEnd + charDiff, this.selectionEnd);\n      }\n      else {\n        removedText = this._text.slice(this.selectionStart, this.selectionStart - charDiff);\n      }\n    }\n    insertedText = nextText.slice(textareaSelection.selectionEnd - charDiff, textareaSelection.selectionEnd);\n    if (removedText && removedText.length) {\n      if (this.selectionStart !== this.selectionEnd) {\n        this.removeStyleFromTo(this.selectionStart, this.selectionEnd);\n      }\n      else if (backDelete) {\n        // detect differencies between forwardDelete and backDelete\n        this.removeStyleFromTo(this.selectionEnd - removedText.length, this.selectionEnd);\n      }\n      else {\n        this.removeStyleFromTo(this.selectionEnd, this.selectionEnd + removedText.length);\n      }\n    }\n    if (insertedText.length) {\n      if (fromPaste && insertedText.join('') === fabric.copiedText) {\n        this.insertNewStyleBlock(insertedText, this.selectionStart, fabric.copiedTextStyle);\n      }\n      else {\n        this.insertNewStyleBlock(insertedText, this.selectionStart);\n      }\n    }\n    this.updateFromTextArea();\n    this.fire('changed');\n    if (this.canvas) {\n      this.canvas.fire('text:changed', { target: this });\n      this.canvas.requestRenderAll();\n    }\n  },\n  /**\n   * Composition start\n   */\n  onCompositionStart: function() {\n    this.inCompositionMode = true;\n  },\n\n  /**\n   * Composition end\n   */\n  onCompositionEnd: function() {\n    this.inCompositionMode = false;\n  },\n\n  // /**\n  //  * Composition update\n  //  */\n  onCompositionUpdate: function(e) {\n    this.compositionStart = e.target.selectionStart;\n    this.compositionEnd = e.target.selectionEnd;\n    this.updateTextareaPosition();\n  },\n\n  /**\n   * Copies selected text\n   * @param {Event} e Event object\n   */\n  copy: function() {\n    if (this.selectionStart === this.selectionEnd) {\n      //do not cut-copy if no selection\n      return;\n    }\n\n    fabric.copiedText = this.getSelectedText();\n    fabric.copiedTextStyle = this.getSelectionStyles(this.selectionStart, this.selectionEnd, true);\n    this._copyDone = true;\n  },\n\n  /**\n   * Pastes text\n   * @param {Event} e Event object\n   */\n  paste: function() {\n    this.fromPaste = true;\n  },\n\n  /**\n   * @private\n   * @param {Event} e Event object\n   * @return {Object} Clipboard data object\n   */\n  _getClipboardData: function(e) {\n    return (e && e.clipboardData) || fabric.window.clipboardData;\n  },\n\n  /**\n   * Finds the width in pixels before the cursor on the same line\n   * @private\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @return {Number} widthBeforeCursor width before cursor\n   */\n  _getWidthBeforeCursor: function(lineIndex, charIndex) {\n    var widthBeforeCursor = this._getLineLeftOffset(lineIndex), bound;\n\n    if (charIndex > 0) {\n      bound = this.__charBounds[lineIndex][charIndex - 1];\n      widthBeforeCursor += bound.left + bound.width;\n    }\n    return widthBeforeCursor;\n  },\n\n  /**\n   * Gets start offset of a selection\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getDownCursorOffset: function(e, isRight) {\n    var selectionProp = this._getSelectionForOffset(e, isRight),\n        cursorLocation = this.get2DCursorLocation(selectionProp),\n        lineIndex = cursorLocation.lineIndex;\n    // if on last line, down cursor goes to end of line\n    if (lineIndex === this._textLines.length - 1 || e.metaKey || e.keyCode === 34) {\n      // move to the end of a text\n      return this._text.length - selectionProp;\n    }\n    var charIndex = cursorLocation.charIndex,\n        widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n        indexOnOtherLine = this._getIndexOnLine(lineIndex + 1, widthBeforeCursor),\n        textAfterCursor = this._textLines[lineIndex].slice(charIndex);\n    return textAfterCursor.length + indexOnOtherLine + 2;\n  },\n\n  /**\n   * private\n   * Helps finding if the offset should be counted from Start or End\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  _getSelectionForOffset: function(e, isRight) {\n    if (e.shiftKey && this.selectionStart !== this.selectionEnd && isRight) {\n      return this.selectionEnd;\n    }\n    else {\n      return this.selectionStart;\n    }\n  },\n\n  /**\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getUpCursorOffset: function(e, isRight) {\n    var selectionProp = this._getSelectionForOffset(e, isRight),\n        cursorLocation = this.get2DCursorLocation(selectionProp),\n        lineIndex = cursorLocation.lineIndex;\n    if (lineIndex === 0 || e.metaKey || e.keyCode === 33) {\n      // if on first line, up cursor goes to start of line\n      return -selectionProp;\n    }\n    var charIndex = cursorLocation.charIndex,\n        widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n        indexOnOtherLine = this._getIndexOnLine(lineIndex - 1, widthBeforeCursor),\n        textBeforeCursor = this._textLines[lineIndex].slice(0, charIndex);\n    // return a negative offset\n    return -this._textLines[lineIndex - 1].length + indexOnOtherLine - textBeforeCursor.length;\n  },\n\n  /**\n   * for a given width it founds the matching character.\n   * @private\n   */\n  _getIndexOnLine: function(lineIndex, width) {\n\n    var line = this._textLines[lineIndex],\n        lineLeftOffset = this._getLineLeftOffset(lineIndex),\n        widthOfCharsOnLine = lineLeftOffset,\n        indexOnLine = 0, charWidth, foundMatch;\n\n    for (var j = 0, jlen = line.length; j < jlen; j++) {\n      charWidth = this.__charBounds[lineIndex][j].width;\n      widthOfCharsOnLine += charWidth;\n      if (widthOfCharsOnLine > width) {\n        foundMatch = true;\n        var leftEdge = widthOfCharsOnLine - charWidth,\n            rightEdge = widthOfCharsOnLine,\n            offsetFromLeftEdge = Math.abs(leftEdge - width),\n            offsetFromRightEdge = Math.abs(rightEdge - width);\n\n        indexOnLine = offsetFromRightEdge < offsetFromLeftEdge ? j : (j - 1);\n        break;\n      }\n    }\n\n    // reached end\n    if (!foundMatch) {\n      indexOnLine = line.length - 1;\n    }\n\n    return indexOnLine;\n  },\n\n\n  /**\n   * Moves cursor down\n   * @param {Event} e Event object\n   */\n  moveCursorDown: function(e) {\n    if (this.selectionStart >= this._text.length && this.selectionEnd >= this._text.length) {\n      return;\n    }\n    this._moveCursorUpOrDown('Down', e);\n  },\n\n  /**\n   * Moves cursor up\n   * @param {Event} e Event object\n   */\n  moveCursorUp: function(e) {\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n      return;\n    }\n    this._moveCursorUpOrDown('Up', e);\n  },\n\n  /**\n   * Moves cursor up or down, fires the events\n   * @param {String} direction 'Up' or 'Down'\n   * @param {Event} e Event object\n   */\n  _moveCursorUpOrDown: function(direction, e) {\n    // getUpCursorOffset\n    // getDownCursorOffset\n    var action = 'get' + direction + 'CursorOffset',\n        offset = this[action](e, this._selectionDirection === 'right');\n    if (e.shiftKey) {\n      this.moveCursorWithShift(offset);\n    }\n    else {\n      this.moveCursorWithoutShift(offset);\n    }\n    if (offset !== 0) {\n      this.setSelectionInBoundaries();\n      this.abortCursorAnimation();\n      this._currentCursorOpacity = 1;\n      this.initDelayedCursor();\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Moves cursor with shift\n   * @param {Number} offset\n   */\n  moveCursorWithShift: function(offset) {\n    var newSelection = this._selectionDirection === 'left'\n      ? this.selectionStart + offset\n      : this.selectionEnd + offset;\n    this.setSelectionStartEndWithShift(this.selectionStart, this.selectionEnd, newSelection);\n    return offset !== 0;\n  },\n\n  /**\n   * Moves cursor up without shift\n   * @param {Number} offset\n   */\n  moveCursorWithoutShift: function(offset) {\n    if (offset < 0) {\n      this.selectionStart += offset;\n      this.selectionEnd = this.selectionStart;\n    }\n    else {\n      this.selectionEnd += offset;\n      this.selectionStart = this.selectionEnd;\n    }\n    return offset !== 0;\n  },\n\n  /**\n   * Moves cursor left\n   * @param {Event} e Event object\n   */\n  moveCursorLeft: function(e) {\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n      return;\n    }\n    this._moveCursorLeftOrRight('Left', e);\n  },\n\n  /**\n   * @private\n   * @return {Boolean} true if a change happened\n   */\n  _move: function(e, prop, direction) {\n    var newValue;\n    if (e.altKey) {\n      newValue = this['findWordBoundary' + direction](this[prop]);\n    }\n    else if (e.metaKey || e.keyCode === 35 ||  e.keyCode === 36 ) {\n      newValue = this['findLineBoundary' + direction](this[prop]);\n    }\n    else {\n      this[prop] += direction === 'Left' ? -1 : 1;\n      return true;\n    }\n    if (typeof newValue !== undefined && this[prop] !== newValue) {\n      this[prop] = newValue;\n      return true;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _moveLeft: function(e, prop) {\n    return this._move(e, prop, 'Left');\n  },\n\n  /**\n   * @private\n   */\n  _moveRight: function(e, prop) {\n    return this._move(e, prop, 'Right');\n  },\n\n  /**\n   * Moves cursor left without keeping selection\n   * @param {Event} e\n   */\n  moveCursorLeftWithoutShift: function(e) {\n    var change = true;\n    this._selectionDirection = 'left';\n\n    // only move cursor when there is no selection,\n    // otherwise we discard it, and leave cursor on same place\n    if (this.selectionEnd === this.selectionStart && this.selectionStart !== 0) {\n      change = this._moveLeft(e, 'selectionStart');\n\n    }\n    this.selectionEnd = this.selectionStart;\n    return change;\n  },\n\n  /**\n   * Moves cursor left while keeping selection\n   * @param {Event} e\n   */\n  moveCursorLeftWithShift: function(e) {\n    if (this._selectionDirection === 'right' && this.selectionStart !== this.selectionEnd) {\n      return this._moveLeft(e, 'selectionEnd');\n    }\n    else if (this.selectionStart !== 0){\n      this._selectionDirection = 'left';\n      return this._moveLeft(e, 'selectionStart');\n    }\n  },\n\n  /**\n   * Moves cursor right\n   * @param {Event} e Event object\n   */\n  moveCursorRight: function(e) {\n    if (this.selectionStart >= this._text.length && this.selectionEnd >= this._text.length) {\n      return;\n    }\n    this._moveCursorLeftOrRight('Right', e);\n  },\n\n  /**\n   * Moves cursor right or Left, fires event\n   * @param {String} direction 'Left', 'Right'\n   * @param {Event} e Event object\n   */\n  _moveCursorLeftOrRight: function(direction, e) {\n    var actionName = 'moveCursor' + direction + 'With';\n    this._currentCursorOpacity = 1;\n\n    if (e.shiftKey) {\n      actionName += 'Shift';\n    }\n    else {\n      actionName += 'outShift';\n    }\n    if (this[actionName](e)) {\n      this.abortCursorAnimation();\n      this.initDelayedCursor();\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Moves cursor right while keeping selection\n   * @param {Event} e\n   */\n  moveCursorRightWithShift: function(e) {\n    if (this._selectionDirection === 'left' && this.selectionStart !== this.selectionEnd) {\n      return this._moveRight(e, 'selectionStart');\n    }\n    else if (this.selectionEnd !== this._text.length) {\n      this._selectionDirection = 'right';\n      return this._moveRight(e, 'selectionEnd');\n    }\n  },\n\n  /**\n   * Moves cursor right without keeping selection\n   * @param {Event} e Event object\n   */\n  moveCursorRightWithoutShift: function(e) {\n    var changed = true;\n    this._selectionDirection = 'right';\n\n    if (this.selectionStart === this.selectionEnd) {\n      changed = this._moveRight(e, 'selectionStart');\n      this.selectionEnd = this.selectionStart;\n    }\n    else {\n      this.selectionStart = this.selectionEnd;\n    }\n    return changed;\n  },\n\n  /**\n   * Removes characters from start/end\n   * start/end ar per grapheme position in _text array.\n   *\n   * @param {Number} start\n   * @param {Number} end default to start + 1\n   */\n  removeChars: function(start, end) {\n    if (typeof end === 'undefined') {\n      end = start + 1;\n    }\n    this.removeStyleFromTo(start, end);\n    this._text.splice(start, end - start);\n    this.text = this._text.join('');\n    this.set('dirty', true);\n    if (this._shouldClearDimensionCache()) {\n      this.initDimensions();\n      this.setCoords();\n    }\n    this._removeExtraneousStyles();\n  },\n\n  /**\n   * insert characters at start position, before start position.\n   * start  equal 1 it means the text get inserted between actual grapheme 0 and 1\n   * if style array is provided, it must be as the same length of text in graphemes\n   * if end is provided and is bigger than start, old text is replaced.\n   * start/end ar per grapheme position in _text array.\n   *\n   * @param {String} text text to insert\n   * @param {Array} style array of style objects\n   * @param {Number} start\n   * @param {Number} end default to start + 1\n   */\n  insertChars: function(text, style, start, end) {\n    if (typeof end === 'undefined') {\n      end = start;\n    }\n    if (end > start) {\n      this.removeStyleFromTo(start, end);\n    }\n    var graphemes = fabric.util.string.graphemeSplit(text);\n    this.insertNewStyleBlock(graphemes, start, style);\n    this._text = [].concat(this._text.slice(0, start), graphemes, this._text.slice(end));\n    this.text = this._text.join('');\n    this.set('dirty', true);\n    if (this._shouldClearDimensionCache()) {\n      this.initDimensions();\n      this.setCoords();\n    }\n    this._removeExtraneousStyles();\n  },\n\n});\n\n\n/* _TO_SVG_START_ */\n(function() {\n  var toFixed = fabric.util.toFixed;\n\n  fabric.util.object.extend(fabric.Text.prototype, /** @lends fabric.Text.prototype */ {\n\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(),\n          offsets = this._getSVGLeftTopOffsets(),\n          textAndBg = this._getSVGTextAndBg(offsets.textTop, offsets.textLeft);\n      this._wrapSVGTextAndBg(markup, textAndBg);\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n\n    /**\n     * @private\n     */\n    _getSVGLeftTopOffsets: function() {\n      return {\n        textLeft: -this.width / 2,\n        textTop: -this.height / 2,\n        lineTop: this.getHeightOfLine(0)\n      };\n    },\n\n    /**\n     * @private\n     */\n    _wrapSVGTextAndBg: function(markup, textAndBg) {\n      var noShadow = true, filter = this.getSvgFilter(),\n          style = filter === '' ? '' : ' style=\"' + filter + '\"',\n          textDecoration = this.getSvgTextDecoration(this);\n      markup.push(\n        '\\t<g ', this.getSvgId(), 'transform=\"', this.getSvgTransform(), this.getSvgTransformMatrix(), '\"',\n        style, '>\\n',\n        textAndBg.textBgRects.join(''),\n        '\\t\\t<text xml:space=\"preserve\" ',\n        (this.fontFamily ? 'font-family=\"' + this.fontFamily.replace(/\"/g, '\\'') + '\" ' : ''),\n        (this.fontSize ? 'font-size=\"' + this.fontSize + '\" ' : ''),\n        (this.fontStyle ? 'font-style=\"' + this.fontStyle + '\" ' : ''),\n        (this.fontWeight ? 'font-weight=\"' + this.fontWeight + '\" ' : ''),\n        (textDecoration ? 'text-decoration=\"' + textDecoration + '\" ' : ''),\n        'style=\"', this.getSvgStyles(noShadow), '\"', this.addPaintOrder(), ' >',\n        textAndBg.textSpans.join(''),\n        '</text>\\n',\n        '\\t</g>\\n'\n      );\n    },\n\n    /**\n     * @private\n     * @param {Number} textTopOffset Text top offset\n     * @param {Number} textLeftOffset Text left offset\n     * @return {Object}\n     */\n    _getSVGTextAndBg: function(textTopOffset, textLeftOffset) {\n      var textSpans = [],\n          textBgRects = [],\n          height = textTopOffset, lineOffset;\n      // bounding-box background\n      this._setSVGBg(textBgRects);\n\n      // text and text-background\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        lineOffset = this._getLineLeftOffset(i);\n        if (this.textBackgroundColor || this.styleHas('textBackgroundColor', i)) {\n          this._setSVGTextLineBg(textBgRects, i, textLeftOffset + lineOffset, height);\n        }\n        this._setSVGTextLineText(textSpans, i, textLeftOffset + lineOffset, height);\n        height += this.getHeightOfLine(i);\n      }\n\n      return {\n        textSpans: textSpans,\n        textBgRects: textBgRects\n      };\n    },\n\n    /**\n     * @private\n     */\n    _createTextCharSpan: function(_char, styleDecl, left, top) {\n      var styleProps = this.getSvgSpanStyles(styleDecl, _char !== _char.trim()),\n          fillStyles = styleProps ? 'style=\"' + styleProps + '\"' : '',\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n      return [\n        '<tspan x=\"', toFixed(left, NUM_FRACTION_DIGITS), '\" y=\"',\n        toFixed(top, NUM_FRACTION_DIGITS), '\" ',\n        fillStyles, '>',\n        fabric.util.string.escapeXml(_char),\n        '</tspan>'\n      ].join('');\n    },\n\n    _setSVGTextLineText: function(textSpans, lineIndex, textLeftOffset, textTopOffset) {\n      // set proper line offset\n      var lineHeight = this.getHeightOfLine(lineIndex),\n          isJustify = this.textAlign.indexOf('justify') !== -1,\n          actualStyle,\n          nextStyle,\n          charsToRender = '',\n          charBox, style,\n          boxWidth = 0,\n          line = this._textLines[lineIndex],\n          timeToRender;\n\n      textTopOffset += lineHeight * (1 - this._fontSizeFraction) / this.lineHeight;\n      for (var i = 0, len = line.length - 1; i <= len; i++) {\n        timeToRender = i === len || this.charSpacing;\n        charsToRender += line[i];\n        charBox = this.__charBounds[lineIndex][i];\n        if (boxWidth === 0) {\n          textLeftOffset += charBox.kernedWidth - charBox.width;\n          boxWidth += charBox.width;\n        }\n        else {\n          boxWidth += charBox.kernedWidth;\n        }\n        if (isJustify && !timeToRender) {\n          if (this._reSpaceAndTab.test(line[i])) {\n            timeToRender = true;\n          }\n        }\n        if (!timeToRender) {\n          // if we have charSpacing, we render char by char\n          actualStyle = actualStyle || this.getCompleteStyleDeclaration(lineIndex, i);\n          nextStyle = this.getCompleteStyleDeclaration(lineIndex, i + 1);\n          timeToRender = this._hasStyleChangedForSvg(actualStyle, nextStyle);\n        }\n        if (timeToRender) {\n          style = this._getStyleDeclaration(lineIndex, i) || { };\n          textSpans.push(this._createTextCharSpan(charsToRender, style, textLeftOffset, textTopOffset));\n          charsToRender = '';\n          actualStyle = nextStyle;\n          textLeftOffset += boxWidth;\n          boxWidth = 0;\n        }\n      }\n    },\n\n    _pushTextBgRect: function(textBgRects, color, left, top, width, height) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n      textBgRects.push(\n        '\\t\\t<rect ',\n        this._getFillAttributes(color),\n        ' x=\"',\n        toFixed(left, NUM_FRACTION_DIGITS),\n        '\" y=\"',\n        toFixed(top, NUM_FRACTION_DIGITS),\n        '\" width=\"',\n        toFixed(width, NUM_FRACTION_DIGITS),\n        '\" height=\"',\n        toFixed(height, NUM_FRACTION_DIGITS),\n        '\"></rect>\\n');\n    },\n\n    _setSVGTextLineBg: function(textBgRects, i, leftOffset, textTopOffset) {\n      var line = this._textLines[i],\n          heightOfLine = this.getHeightOfLine(i) / this.lineHeight,\n          boxWidth = 0,\n          boxStart = 0,\n          charBox, currentColor,\n          lastColor = this.getValueOfPropertyAt(i, 0, 'textBackgroundColor');\n      for (var j = 0, jlen = line.length; j < jlen; j++) {\n        charBox = this.__charBounds[i][j];\n        currentColor = this.getValueOfPropertyAt(i, j, 'textBackgroundColor');\n        if (currentColor !== lastColor) {\n          lastColor && this._pushTextBgRect(textBgRects, lastColor, leftOffset + boxStart,\n            textTopOffset, boxWidth, heightOfLine);\n          boxStart = charBox.left;\n          boxWidth = charBox.width;\n          lastColor = currentColor;\n        }\n        else {\n          boxWidth += charBox.kernedWidth;\n        }\n      }\n      currentColor && this._pushTextBgRect(textBgRects, currentColor, leftOffset + boxStart,\n        textTopOffset, boxWidth, heightOfLine);\n    },\n\n    /**\n     * Adobe Illustrator (at least CS5) is unable to render rgba()-based fill values\n     * we work around it by \"moving\" alpha channel into opacity attribute and setting fill's alpha to 1\n     *\n     * @private\n     * @param {*} value\n     * @return {String}\n     */\n    _getFillAttributes: function(value) {\n      var fillColor = (value && typeof value === 'string') ? new fabric.Color(value) : '';\n      if (!fillColor || !fillColor.getSource() || fillColor.getAlpha() === 1) {\n        return 'fill=\"' + value + '\"';\n      }\n      return 'opacity=\"' + fillColor.getAlpha() + '\" fill=\"' + fillColor.setAlpha(1).toRgb() + '\"';\n    },\n\n    /**\n     * @private\n     */\n    _getSVGLineTopOffset: function(lineIndex) {\n      var lineTopOffset = 0, lastHeight = 0;\n      for (var j = 0; j < lineIndex; j++) {\n        lineTopOffset += this.getHeightOfLine(j);\n      }\n      lastHeight = this.getHeightOfLine(j);\n      return {\n        lineTop: lineTopOffset,\n        offset: (this._fontSizeMult - this._fontSizeFraction) * lastHeight / (this.lineHeight * this._fontSizeMult)\n      };\n    },\n\n    /**\n     * Returns styles-string for svg-export\n     * @param {Boolean} skipShadow a boolean to skip shadow filter output\n     * @return {String}\n     */\n    getSvgStyles: function(skipShadow) {\n      var svgStyle = fabric.Object.prototype.getSvgStyles.call(this, skipShadow);\n      return svgStyle + ' white-space: pre;';\n    },\n  });\n})();\n/* _TO_SVG_END_ */\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {});\n\n  /**\n   * Textbox class, based on IText, allows the user to resize the text rectangle\n   * and wraps lines automatically. Textboxes have their Y scaling locked, the\n   * user can only change width. Height is adjusted automatically based on the\n   * wrapping of lines.\n   * @class fabric.Textbox\n   * @extends fabric.IText\n   * @mixes fabric.Observable\n   * @return {fabric.Textbox} thisArg\n   * @see {@link fabric.Textbox#initialize} for constructor definition\n   */\n  fabric.Textbox = fabric.util.createClass(fabric.IText, fabric.Observable, {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'textbox',\n\n    /**\n     * Minimum width of textbox, in pixels.\n     * @type Number\n     * @default\n     */\n    minWidth: 20,\n\n    /**\n     * Minimum calculated width of a textbox, in pixels.\n     * fixed to 2 so that an empty textbox cannot go to 0\n     * and is still selectable without text.\n     * @type Number\n     * @default\n     */\n    dynamicMinWidth: 2,\n\n    /**\n     * Cached array of text wrapping.\n     * @type Array\n     */\n    __cachedLines: null,\n\n    /**\n     * Override standard Object class values\n     */\n    lockScalingFlip: true,\n\n    /**\n     * Override standard Object class values\n     * Textbox needs this on false\n     */\n    noScaleCache: false,\n\n    /**\n     * Properties which when set cause object to change dimensions\n     * @type Object\n     * @private\n     */\n    _dimensionAffectingProps: fabric.Text.prototype._dimensionAffectingProps.concat('width'),\n\n    /**\n     * Constructor. Some scaling related property values are forced. Visibility\n     * of controls is also fixed; only the rotation and width controls are\n     * made available.\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.Textbox} thisArg\n     */\n    initialize: function(text, options) {\n      this.callSuper('initialize', text, options);\n    },\n\n    /**\n     * Unlike superclass's version of this function, Textbox does not update\n     * its width.\n     * @private\n     * @override\n     */\n    initDimensions: function() {\n      if (this.__skipDimension) {\n        return;\n      }\n      this.isEditing && this.initDelayedCursor();\n      this.clearContextTop();\n      this._clearCache();\n      // clear dynamicMinWidth as it will be different after we re-wrap line\n      this.dynamicMinWidth = 0;\n      // wrap lines\n      this._styleMap = this._generateStyleMap(this._splitText());\n      // if after wrapping, the width is smaller than dynamicMinWidth, change the width and re-wrap\n      if (this.dynamicMinWidth > this.width) {\n        this._set('width', this.dynamicMinWidth);\n      }\n      if (this.textAlign.indexOf('justify') !== -1) {\n        // once text is measured we need to make space fatter to make justified text.\n        this.enlargeSpaces();\n      }\n      // clear cache and re-calculate height\n      this.height = this.calcTextHeight();\n      this.saveState({ propertySet: '_dimensionAffectingProps' });\n    },\n\n    /**\n     * Generate an object that translates the style object so that it is\n     * broken up by visual lines (new lines and automatic wrapping).\n     * The original text styles object is broken up by actual lines (new lines only),\n     * which is only sufficient for Text / IText\n     * @private\n     */\n    _generateStyleMap: function(textInfo) {\n      var realLineCount     = 0,\n          realLineCharCount = 0,\n          charCount         = 0,\n          map               = {};\n\n      for (var i = 0; i < textInfo.graphemeLines.length; i++) {\n        if (textInfo.graphemeText[charCount] === '\\n' && i > 0) {\n          realLineCharCount = 0;\n          charCount++;\n          realLineCount++;\n        }\n        else if (this._reSpaceAndTab.test(textInfo.graphemeText[charCount]) && i > 0) {\n          // this case deals with space's that are removed from end of lines when wrapping\n          realLineCharCount++;\n          charCount++;\n        }\n\n        map[i] = { line: realLineCount, offset: realLineCharCount };\n\n        charCount += textInfo.graphemeLines[i].length;\n        realLineCharCount += textInfo.graphemeLines[i].length;\n      }\n\n      return map;\n    },\n\n    /**\n     * Returns true if object has a style property or has it ina specified line\n     * @param {Number} lineIndex\n     * @return {Boolean}\n     */\n    styleHas: function(property, lineIndex) {\n      if (this._styleMap && !this.isWrapping) {\n        var map = this._styleMap[lineIndex];\n        if (map) {\n          lineIndex = map.line;\n        }\n      }\n      return fabric.Text.prototype.styleHas.call(this, property, lineIndex);\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _getStyleDeclaration: function(lineIndex, charIndex) {\n      if (this._styleMap && !this.isWrapping) {\n        var map = this._styleMap[lineIndex];\n        if (!map) {\n          return null;\n        }\n        lineIndex = map.line;\n        charIndex = map.offset + charIndex;\n      }\n      return this.callSuper('_getStyleDeclaration', lineIndex, charIndex);\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} style\n     * @private\n     */\n    _setStyleDeclaration: function(lineIndex, charIndex, style) {\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n\n      this.styles[lineIndex][charIndex] = style;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _deleteStyleDeclaration: function(lineIndex, charIndex) {\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n\n      delete this.styles[lineIndex][charIndex];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _getLineStyle: function(lineIndex) {\n      var map = this._styleMap[lineIndex];\n      return this.styles[map.line];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Object} style\n     * @private\n     */\n    _setLineStyle: function(lineIndex, style) {\n      var map = this._styleMap[lineIndex];\n      this.styles[map.line] = style;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _deleteLineStyle: function(lineIndex) {\n      var map = this._styleMap[lineIndex];\n      delete this.styles[map.line];\n    },\n\n    /**\n     * Wraps text using the 'width' property of Textbox. First this function\n     * splits text on newlines, so we preserve newlines entered by the user.\n     * Then it wraps each line using the width of the Textbox by calling\n     * _wrapLine().\n     * @param {Array} lines The string array of text that is split into lines\n     * @param {Number} desiredWidth width you want to wrap to\n     * @returns {Array} Array of lines\n     */\n    _wrapText: function(lines, desiredWidth) {\n      var wrapped = [], i;\n      this.isWrapping = true;\n      for (i = 0; i < lines.length; i++) {\n        wrapped = wrapped.concat(this._wrapLine(lines[i], i, desiredWidth));\n      }\n      this.isWrapping = false;\n      return wrapped;\n    },\n\n    /**\n     * Helper function to measure a string of text, given its lineIndex and charIndex offset\n     * it gets called when charBounds are not available yet.\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {String} text\n     * @param {number} lineIndex\n     * @param {number} charOffset\n     * @returns {number}\n     * @private\n     */\n    _measureWord: function(word, lineIndex, charOffset) {\n      var width = 0, prevGrapheme, skipLeft = true;\n      charOffset = charOffset || 0;\n      for (var i = 0, len = word.length; i < len; i++) {\n        var box = this._getGraphemeBox(word[i], lineIndex, i + charOffset, prevGrapheme, skipLeft);\n        width += box.kernedWidth;\n        prevGrapheme = word[i];\n      }\n      return width;\n    },\n\n    /**\n     * Wraps a line of text using the width of the Textbox and a context.\n     * @param {Array} line The grapheme array that represent the line\n     * @param {Number} lineIndex\n     * @param {Number} desiredWidth width you want to wrap the line to\n     * @returns {Array} Array of line(s) into which the given text is wrapped\n     * to.\n     */\n    _wrapLine: function(_line, lineIndex, desiredWidth) {\n      var lineWidth        = 0,\n          graphemeLines    = [],\n          line             = [],\n          // spaces in different languges?\n          words            = _line.split(this._reSpaceAndTab),\n          word             = '',\n          offset           = 0,\n          infix            = ' ',\n          wordWidth        = 0,\n          infixWidth       = 0,\n          largestWordWidth = 0,\n          lineJustStarted = true,\n          additionalSpace = this._getWidthOfCharSpacing();\n      for (var i = 0; i < words.length; i++) {\n        // i would avoid resplitting the graphemes\n        word = fabric.util.string.graphemeSplit(words[i]);\n        wordWidth = this._measureWord(word, lineIndex, offset);\n        offset += word.length;\n\n        lineWidth += infixWidth + wordWidth - additionalSpace;\n\n        if (lineWidth >= desiredWidth && !lineJustStarted) {\n          graphemeLines.push(line);\n          line = [];\n          lineWidth = wordWidth;\n          lineJustStarted = true;\n        }\n\n        if (!lineJustStarted) {\n          line.push(infix);\n        }\n        line = line.concat(word);\n\n        infixWidth = this._measureWord([infix], lineIndex, offset);\n        offset++;\n        lineJustStarted = false;\n        // keep track of largest word\n        if (wordWidth > largestWordWidth) {\n          largestWordWidth = wordWidth;\n        }\n      }\n\n      i && graphemeLines.push(line);\n\n      if (largestWordWidth > this.dynamicMinWidth) {\n        this.dynamicMinWidth = largestWordWidth - additionalSpace;\n      }\n\n      return graphemeLines;\n    },\n\n    /**\n     * Detect if the text line is ended with an hard break\n     * text and itext do not have wrapping, return false\n     * @param {Number} lineIndex text to split\n     * @return {Boolean}\n     */\n    isEndOfWrapping: function(lineIndex) {\n      if (!this._styleMap[lineIndex + 1]) {\n        // is last line, return true;\n        return true;\n      }\n      if (this._styleMap[lineIndex + 1].line !== this._styleMap[lineIndex].line) {\n        // this is last line before a line break, return true;\n        return true;\n      }\n      return false;\n    },\n\n    /**\n    * Gets lines of text to render in the Textbox. This function calculates\n    * text wrapping on the fly every time it is called.\n    * @param {String} text text to split\n    * @returns {Array} Array of lines in the Textbox.\n    * @override\n    */\n    _splitTextIntoLines: function(text) {\n      var newText = fabric.Text.prototype._splitTextIntoLines.call(this, text),\n          graphemeLines = this._wrapText(newText.lines, this.width),\n          lines = new Array(graphemeLines.length);\n\n      for (var i = 0; i < graphemeLines.length; i++) {\n        lines[i] = graphemeLines[i].join('');\n      }\n      newText.lines = lines;\n      newText.graphemeLines = graphemeLines;\n      return newText;\n    },\n\n    getMinWidth: function() {\n      return Math.max(this.minWidth, this.dynamicMinWidth);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @method toObject\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['minWidth'].concat(propertiesToInclude));\n    }\n  });\n\n  /**\n   * Returns fabric.Textbox instance from an object representation\n   * @static\n   * @memberOf fabric.Textbox\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Textbox instance is created\n   */\n  fabric.Textbox.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Textbox', object, callback, 'text');\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  /**\n   * Override _setObjectScale and add Textbox specific resizing behavior. Resizing\n   * a Textbox doesn't scale text, it only changes width and makes text wrap automatically.\n   */\n  var setObjectScaleOverridden = fabric.Canvas.prototype._setObjectScale;\n\n  fabric.Canvas.prototype._setObjectScale = function(localMouse, transform,\n    lockScalingX, lockScalingY, by, lockScalingFlip, _dim) {\n\n    var t = transform.target;\n    if (by === 'x' && t instanceof fabric.Textbox) {\n      var tw = t._getTransformedDimensions().x;\n      var w = t.width * (localMouse.x / tw);\n      if (w >= t.getMinWidth()) {\n        t.set('width', w);\n        return true;\n      }\n    }\n    else {\n      return setObjectScaleOverridden.call(fabric.Canvas.prototype, localMouse, transform,\n        lockScalingX, lockScalingY, by, lockScalingFlip, _dim);\n    }\n  };\n\n  fabric.util.object.extend(fabric.Textbox.prototype, /** @lends fabric.IText.prototype */ {\n    /**\n     * @private\n     */\n    _removeExtraneousStyles: function() {\n      for (var prop in this._styleMap) {\n        if (!this._textLines[prop]) {\n          delete this.styles[this._styleMap[prop].line];\n        }\n      }\n    },\n\n  });\n})();\n","import CanvasObject from '../object.js';\nimport {fabric} from '../../core/fabric.js';\n//import {sum} from '../../core/util';\n\nexport default class FabricCanvasObject extends CanvasObject {\n  constructor(props) {\n    super(_.defaults(props, {\n      type: 'shape',\n      shape: 'rect'\n    }));\n\n    if (this.props.type === 'shape') {\n      var shapeFabricClassMap = {\n        rect: fabric.Rect,\n        polyline: fabric.Polyline,\n        path: fabric.Path,\n        circle: fabric.Circle\n      };\n\n      var defaultArg;\n\n      if (this.props.shape === 'polyline') defaultArg = this.props.points || [];\n      if (this.props.shape === 'path') defaultArg = '';\n\n      this.fabricObject = new shapeFabricClassMap[this.props.shape](defaultArg);\n    }\n    else if (this.props.type === 'image') {\n      this.fabricObject = new fabric.Image(this.props.image);\n    }\n\n    this.fabricObject.set({objectCaching: false, selectable: false});\n\n    this.set(props);\n  }\n\n  set(props) {\n    if (props.diameter) props.radius = props.diameter / 2;\n\n    super.set(props);\n\n    //this.fabricObject.set();\n  }\n\n  addToCanvasView(canvasView) {\n    super.addToCanvasView(canvasView);\n\n    this.canvas.add(this.fabricObject);\n  }\n\n  removeFromCanvasView(options) {\n    this.canvas.remove(this.fabricObject);\n\n    this.isRemoved = true;\n\n    super.removeFromCanvasView(options);\n  }\n\n  layout() {\n    super.layout();\n\n    var scale = this.scale;\n    var props = {\n      left: this.canvasView.offset.x + this.props.position.x * this.scale,\n      top: this.canvasView.offset.y + this.props.position.y * this.scale,\n      angle: this.props.rotation,\n      originX: this.props.origin.x,\n      originY: this.props.origin.y,\n      strokeWidth: 1\n    };\n\n    _.extend(props, _.pick(this.props, ['zIndex', 'opacity', 'fill', 'stroke', 'radius', 'strokeWidth', 'rx', 'ry']));\n\n    if (this.props.type === 'image') {\n      props.scaleX = (this.props.size.width * this.scale) / this.fabricObject.width;\n      props.scaleY = (this.props.size.height * this.scale) / this.fabricObject.height;\n\n      if (this.props.fill) {\n        this.fabricObject.filters[16] = new fabric.Image.filters.BlendColor({\n          color: this.props.fill,\n          mode: 'add',\n          alpha: 1\n        });\n\n        this.fabricObject.applyFilters();\n      }\n    }\n    else if (this.props.type === 'shape') {\n      if (_.includes(['rect'], this.props.shape)) {\n        _.extend(props, this.props.size);\n      }\n\n      if (this.props.shape === 'path') {\n        props.path = this.props.path || this.pathArrayFrom({commands: this.props.commands});\n        props.width = 10;\n        props.height = 10;\n      }\n      else if (this.props.shape === 'polyline') {\n        props.points = _.map(this.props.points || [], point => _.mapValues(point, p => p * scale));\n      }\n    }\n\n    var scalePropKeys = ['radius', 'width', 'height', 'rx', 'ry', 'strokeWidth'];\n\n    _.forEach(_.pick(props, scalePropKeys), (prop, key) => props[key] = prop * scale);\n\n    this.fabricObject.set(props);\n\n    if (this.props.type === 'polyline' && props.points) {\n      this.fabricObject._calcDimensions();\n      this.fabricObject.pathOffset = {x: this.fabricObject.width / 2, y: this.fabricObject.height / 2};\n    }\n\n    this.fabricObject.setCoords();\n  }\n\n  pathArrayFrom({commands}) {\n    var pathArray = [];\n    var scale = this.scale;\n\n    commands.forEach(({quadratic, point, curvePoint}, c) => {\n      point = _.mapValues(point, p => p * scale);\n\n      if (quadratic) {\n        curvePoint = _.mapValues(curvePoint, p => p * scale);\n\n        pathArray.push(['Q', point.x, point.y, curvePoint.x, curvePoint.y]);\n      }\n      else {\n        pathArray.push([c === 0 ? 'M' : 'L', point.x, point.y]);\n      }\n    });\n\n    if (this.props.closed) {\n      pathArray.push(['Z']);\n    }\n\n    return pathArray;\n  }\n\n  static loadImages(imageUrls) {\n    var promises = [];\n\n    _.forEach(imageUrls, (url, key) => {\n      promises.push(new Promise((success) => {\n        fabric.util.loadImage(url, image => {\n          success({key, image});\n        });\n      }));\n    });\n\n    return Promise.all(promises).then(m => _.mapValues(_.keyBy(m, 'key'), _.property('image')));\n  }\n}\n","import Class from '../core/class.js';\n\nexport default class CanvasObject extends Class {\n  constructor(props) {\n    super(_.defaults(props, {\n      position: {x: 0, y: 0},\n      size: {width: 0, height: 0},\n      rotation: 0,\n      zIndex: 0,\n      origin: {x: 'center', y: 'center'},\n      fill: '',\n      stroke: ''\n    }));\n  }\n\n  set(props) {\n    super.set(props);\n  }\n\n  addToCanvasView(canvasView) {\n    this.canvasView = canvasView;\n    this.canvas = canvasView.canvas;\n  }\n\n  removeFromCanvasView({dereference=true} = {}) {\n    if (dereference) delete this.canvasView.objects[this];\n\n    delete this.canvasView;\n    delete this.canvas;\n  }\n\n  layout() {\n\n  }\n\n  toString() {\n    return Math.random() + ``;\n  }\n\n  get scale() {\n    return this.canvasView.scale;\n  }\n}\n","export default class Class {\n  constructor(props, options) {\n    this.props = props;\n    this.options = options;\n  }\n\n  set(props) {\n    _.extend(this.props, props);\n  }\n}\n","import Class from '../core/class.js';\nimport {fabric} from '../core/fabric.js';\n\nexport default class CanvasView extends Class {\n  constructor(props) {\n    super(_.defaults(props, {\n      _container: undefined,\n      scale: 1,\n      id: `canvas-${Math.floor(Math.random() * 1000000000)}`\n    }));\n\n    this.objects = {};\n\n    this.create();\n  }\n\n  set(props) {\n    super.set(props);\n\n    if (props.size || props.scale) this.resize();\n  }\n\n  create() {\n    this._container = this.props._container;\n    this._container.innerHTML = `<canvas id=\"${this.props.id}\">`;\n    this._canvas = document.getElementById(this.props.id);\n\n    this.canvas = new fabric.StaticCanvas(this.props.id, {\n      selection: false,\n      backgroundColor: '#fff',\n      objectCaching: false,\n      ...this.props.canvasOptions\n    });\n\n    this.canvas.renderOnAddRemove = false;\n\n    window.addEventListener('resize', this.resize.bind(this));\n\n    this.resize();\n  }\n\n  resize() {\n    this.canvas.setDimensions({\n      width: _.floor(this.props.size.width * this.scale),\n      height: _.floor(this.props.size.height * this.scale)\n    });\n\n    this.origin = {\n      x: this.props.size.width * this.scale / 2,\n      y: this.props.size.height * this.scale / 2\n    };\n\n    this.render({layout: true});\n  }\n\n  add({object}) {\n    this.objects[object] = object;\n\n    object.addToCanvasView(this);\n  }\n\n  remove({object}) {\n    delete this.objects[object];\n\n    object.removeFromCanvasView();\n  }\n\n  layout() {\n    this.forEachObject(object => object.layout());\n  }\n\n  forEachObject(fn) {\n    _.forEach(this.objects, (object, o) => {\n      if (!object.isRemoved) {\n        fn(object, o);\n      }\n    });\n  }\n\n  render({layout=false} = {}) {\n    if (layout) this.layout();\n\n    this.canvas.renderAll();\n  }\n\n  destroy() {\n    this.$canvas.remove();\n  }\n\n  get offset() {\n    return this.origin;\n  }\n\n  get scale() {\n    return this.props.scale;\n  }\n}\n","var trig;\n\ntrig = {\n  dist(p1, p2) {\n    return Math.sqrt(trig.dist2(p1, p2));\n  },\n\n  dist2(p1, p2) {\n    return Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2);\n  },\n\n  radiansToDegrees(radians) {\n    return (radians * 180) / Math.PI;\n  },\n\n  degreesToRadians(degrees) {\n    return (degrees / 180) * Math.PI;\n  },\n\n  distance({fromPoint, toLine, toPoint}) {\n    if (toLine) {\n      var p = fromPoint, lp1 = toLine.from, lp2 = toLine.to;\n\n      var l2 = trig.dist2(lp1, lp2);\n\n      if (l2 === 0) return Math.sqrt(trig.dist2(p, lp1));\n\n      var t = Math.max(0, Math.min(1, ((p.x - lp1.x) * (lp2.x - lp1.x) + (p.y - lp1.y) * (lp2.y - lp1.y)) / l2));\n\n      return Math.sqrt(trig.dist2(p, {\n        x: lp1.x + t * (lp2.x - lp1.x),\n        y: lp1.y + t * (lp2.y - lp1.y)\n      }));\n    }\n    else if (toPoint) {\n      return trig.dist(fromPoint, toPoint);\n    }\n  },\n\n  nearestPoint({point, onLine}) {\n    var p = point, a = onLine.from, b = onLine.to;\n\n    var atob = { x: b.x - a.x, y: b.y - a.y };\n    var atop = { x: p.x - a.x, y: p.y - a.y };\n    var len = atob.x * atob.x + atob.y * atob.y;\n    var dot = atop.x * atob.x + atop.y * atob.y;\n    var t = Math.min(1, Math.max(0, dot / len));\n\n    dot = (b.x - a.x) * (p.y - a.y) - (b.y - a.y) * (p.x - a.x);\n\n    return {x: a.x + atob.x * t, y: a.y + atob.y * t};\n  },\n\n  rotate({point, position, canvasPosition, byRadians=0, byDegrees, aroundOrigin}) {\n    if (byDegrees) byRadians = trig.degreesToRadians(byDegrees);\n    if (position) point = position;\n    if (canvasPosition) point = {x: canvasPosition.left, y: canvasPosition.top};\n\n    if (byRadians !== 0) {\n      if (aroundOrigin) point = {x: point.x - aroundOrigin.x, y: point.y - aroundOrigin.y};\n\n      point = {\n        x: point.x * Math.cos(byRadians) - point.y * Math.sin(byRadians),\n        y: point.y * Math.cos(byRadians) + point.x * Math.sin(byRadians)\n      };\n\n      if (aroundOrigin) point = {x: point.x + aroundOrigin.x, y: point.y + aroundOrigin.y};\n      if (canvasPosition) canvasPosition = {left: point.x, top: point.y};\n    }\n\n    return canvasPosition || point;\n  },\n\n  //slope of line\n  alpha({p1, p2, perpendicular=0}) {\n    var x1 = p1.x, y1 = p1.y, x2 = p2.x, y2 = p2.y;\n\n    var delta = {x: x2 - x1, y: y2 - y1};\n    var alpha = Math.atan2(delta.y, delta.x);\n\n    if (perpendicular) alpha += ((Math.PI / 2) * perpendicular);\n\n    return alpha;\n  },\n\n  //angle between two normalized vectors\n  theta({p1, p2, radians, degrees}) {\n    var theta;\n\n    if (p1 && p2) {\n      var a2 = Math.atan2(p1.y, p1.x);\n      var a1 = Math.atan2(p2.y, p2.x);\n      var sign = a1 > a2 ? 1 : -1;\n      var angle = a1 - a2;\n      var K = -sign * Math.PI * 2;\n\n      theta = (Math.abs(K + angle) < Math.abs(angle)) ? K + angle : angle;\n    }\n    else if (degrees) {\n      theta = trig.normalize({degrees: degrees[0] - degrees[1]});\n    }\n    else if (radians) {\n      theta = trig.normalize({radians: radians[0] - radians[1]});\n    }\n\n    return theta;\n  },\n\n  extend({line, by=1000000}) {\n    var {from, to} = line;\n    var alpha = Math.atan2(to.y - from.y, to.x - from.x);\n\n    return {\n      from: {x: from.x - by * Math.cos(alpha), y: from.y - by * Math.sin(alpha)},\n      to: {x: to.x + by * Math.cos(alpha), y: to.y + by * Math.sin(alpha)}\n    };\n  },\n\n  isOnLine({point, line}) {\n    var d = trig.dist;\n\n    return Math.abs(d(line.from, line.to) - d(line.from, point) - d(line.to, point)) < Number.EPSILON;\n  },\n\n  inside({point, polygon}) {\n    var {x, y} = point;\n    var inside = false;\n\n    for (var i = 0, j = polygon.length - 1; i < polygon.length; j = i++) {\n      var xi = polygon[i].x, yi = polygon[i].y;\n      var xj = polygon[j].x, yj = polygon[j].y;\n\n      var intersect = ((yi > y) !== (yj > y))\n        && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n\n      if (intersect) inside = !inside;\n    }\n\n    return inside;\n  },\n\n  closestAngle({target, sources}) {\n    var angleDelta = (a, b) => {\n      var d = Math.abs(a - b);\n\n      return d > Math.PI ? (Math.PI * 2) - d : d;\n    };\n\n    var deltas = sources.map(source => angleDelta(source, target));\n    var closestSourceIndex = deltas.indexOf(_.min(deltas));\n\n    return sources[closestSourceIndex];\n  },\n\n  furthestAngle({target, sources}) {\n    var angleDelta = (a, b) => {\n      var d = Math.abs(a - b);\n\n      return d > Math.PI ? (Math.PI * 2) - d : d;\n    };\n\n    var deltas = sources.map(source => angleDelta(source, target));\n    var closestSourceIndex = deltas.indexOf(_.max(deltas));\n\n    return sources[closestSourceIndex];\n  },\n\n  translate({point, by, alpha}){\n    return {\n      x: point.x + Math.cos(alpha) * by,\n      y: point.y + Math.sin(alpha) * by\n    };\n  },\n\n  normalize({degrees, radians}) {\n    if (degrees !== undefined) radians = trig.degreesToRadians(degrees);\n\n    while (radians > Math.PI * 2) radians -= Math.PI * 2;\n    while (radians < 0) radians += Math.PI * 2;\n\n    if (radians === Math.PI * 2) radians = 0; //0..<2pi\n\n    return degrees !== undefined ? trig.radiansToDegrees(radians) : radians;\n  }\n};\n\nexport default trig;\n","import _ from 'lodash';\nimport trig from '../util/trig';\n\nvar util = {\n  rand(size=1, factor=0) {\n    return Math.random() * Math.abs(size) + (factor ? Math.abs(size) * factor : 0);\n  },\n\n  randInt(factor) {\n    return _.floor(util.rand() * factor);\n  },\n\n  arrayArgsOrVariadicArgsToArray(args, ...variadicArgs) {\n    if (!Array.isArray(args)) {\n      args = [args, ...variadicArgs];\n    }\n\n    return args;\n  },\n\n  //sum(1, 2) or sum([1, 2]);\n  //sum(1, 2) or sum({a: 1}, {a: 2})\n  sum(...args) {\n    var values = util.arrayArgsOrVariadicArgsToArray(args);\n\n    if (typeof(values[0]) === 'object') {\n      var sum = _.reduce(values, (sum, object) => {\n        _.forEach(object, (value, key) => sum[key] = (sum[key] || 0) + value);\n\n        return sum;\n      }, {});\n    }\n    else {\n      var sum = _.sum(values);\n    }\n\n    return sum;\n  },\n\n  min(...args) {\n    return _.min(util.arrayArgsOrVariadicArgsToArray(args));\n  },\n\n  max(...args) {\n    return _.max(util.arrayArgsOrVariadicArgsToArray(args));\n  },\n\n  getImageData({url, size}) {\n    return new Promise((resolve) => {\n      FabricCanvasObject.loadImages({image: url}).then(({image}) => {\n        var scale = window.devicePixelRatio;\n        var downscaledSize = {width: size.width / scale, height: size.height / scale};\n\n        var canvasView = new CanvasView({size: downscaledSize, $container: $('body'), canvasOptions: {backgroundColor: 'transparent'}});\n        var canvasContext = canvasView.canvas.getContext('2d');\n        var object = new FabricCanvasObject({type: 'image', image, position: {x: 0, y: 0}, size: downscaledSize});\n\n        canvasView.add({object});\n        canvasView.render({layout: true});\n\n        var {data} = canvasContext.getImageData(0, 0, size.width, size.height);\n        var pixels = {};\n\n        _.times(size.width, x => {\n          _.times(size.height, y => {\n            var red = (y * size.width + x) * 4;\n            var rgba = {r: data[red], g: data[red + 1], b: data[red + 2], a: data[red + 3]};\n\n            pixels[`${x}-${y}`] = new Color(rgba);\n          });\n        });\n\n        resolve({image, pixels});\n      });\n    });\n  },\n\n  canvasSizeFor({dpi, feet, inches, retina=false}) {\n    if (feet) inches = {width: feet.width * 12, height: feet.height * 12};\n\n    var size = {width: inches.width * dpi, height: inches.height * dpi};\n\n    if (retina) size = {width: size.width / 2, height: size.height / 2};\n\n    return size;\n  },\n\n  trig\n};\n\nexport default util;\n","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","import FabricCanvasObject from '../canvas/fabric/object.js';\nimport CanvasView from '../canvas/view.js';\nimport CanvasObject from '../canvas/object.js';\n\nexport default {\n  classes: {\n    CanvasView, CanvasObject, FabricCanvasObject\n  }\n};\n","export default {\n  fetch({model='default', samples=[], count=5} = {}) {\n    return fetch('http://colormind.io/api/', {\n      method: 'POST',\n      body: JSON.stringify({model, input: [...samples, ..._.times(count - samples.length, _.constant('N'))]})\n    })\n    .then(response => response.json())\n    .then(({result}) => result.map(rgb => `rgb(${rgb[0]}, ${rgb[1]}, ${rgb[2]})`))\n    .catch(err => console.log(err)); //eslint-disable-line\n  }\n};\n","import evenlyDistributedFor from '../generators/positions/evenly-distributed-for.js';\n//import plantSpiral from '../generators/positions/plant-spiral.js';\nimport spiralFor from '../generators/positions/spiral-for.js';\n\nimport forCurveThrough from '../generators/path-commands/for-curve-through.js';\n\nexport default {\n  positions: {evenlyDistributedFor, /*plantSpiral, */spiralFor},\n  pathCommands: {forCurveThrough}\n};\n","export default function evenlyDistributedFor({/*path, */precision=0.01, spacing=1, count=5, scale=1, fx}) {\n  var dx = precision, s = spacing, x = 0, positions = [];\n\n  while (positions.length < count) {\n    var y = fx(x);\n    var dy = fx(x + dx) - y;\n    var ds = Math.sqrt(dx * dx + dy * dy);\n\n    s += ds;\n\n    if (s >= spacing) {\n      positions.push({x: x * scale, y: y * scale});\n\n      s -= spacing;\n    }\n\n    x += dx;\n  }\n\n  return {positions};\n}\n","//import _ from 'lodash';\n//import {} from '../../core/util.js';\n\nexport default function spiralFor({ringCount=3, radius=1, spacing=1, angle=0, a=0.2, b=5, count=500}) {\n  var positions = [];\n  //var a = 0.2, b = 5; //correlate with radius\n\n  for (var i = 0; i < count; i++) {\n    angle -= 0.1;\n\n    var x = (a + b * angle) * Math.cos(angle);\n    var y = (a + b * angle) * Math.sin(angle);\n\n    positions.push({x, y});\n  }\n\n  return {positions};\n}\n","export default function forCurveThrough({points}) {\n  var commands = [{point: points[0]}];\n\n  for (var i = 1; i < points.length - 2; i++) {\n    var curvePoint = {\n      x: (points[i].x + points[i + 1].x) / 2,\n      y: (points[i].y + points[i + 1].y) / 2\n    };\n\n    commands.push({quadratic: true, point: points[i], curvePoint});\n  }\n\n  commands.push({quadratic: true, point: points[i], curvePoint: points[i+1]});\n\n  return commands;\n}\n","import basic from '../ui/initializers/basic.js'\n\nexport default {basic};\n","import FabricCanvasObject from '../../canvas/fabric/object.js';\nimport CanvasView from '../../canvas/view.js';\nimport util from '../../core/util';\nimport _ from 'lodash';\n\nexport default function basic({\n  containerId,\n  images={},\n  overlay=true,\n  size={width: 500, height: 500},\n  renderScale=4,\n  backgroundColor='#ffffff'\n}) {\n  return new Promise((resolve) => {\n    var onDomReady = () => {\n      var _container = document.getElementById(containerId);\n\n      _container.innerHTML = `\n        <div class=\"mo-canvas-container\"></div>\n        <div class=\"mo-render\">Render</div>\n        <div class=\"mo-render-print\">Render Print</div>\n      `;\n\n      var _render = _container.querySelector('.mo-render');\n      var _renderPrint = _container.querySelector('.mo-render-print');\n      var _upperCanvas = _container.querySelector('.upper-canvas');\n      var _canvasContainer = _container.querySelector('.mo-canvas-container');\n\n      var canvasView = new CanvasView({\n        _container: _canvasContainer,\n        size,\n        canvasOptions: {backgroundColor}\n      });\n\n      if (overlay) {\n        var overlayObject;\n\n        images.overlay = 'https://i.postimg.cc/jjc1KWX2/overlay-01.png';\n\n        _renderPrint.addEventListener('click', () => {\n          if (overlayObject.canvasView) canvasView.remove({object: overlayObject});\n\n          canvasView.set({scale: renderScale});\n\n          _upperCanvas && _upperCanvas.remove();\n        });\n      }\n\n      _render.addEventListener('click', () => {\n        canvasView.set({scale: renderScale});\n\n        _upperCanvas && _upperCanvas.remove();\n      });\n\n      FabricCanvasObject.loadImages(images).then(images => {\n        overlayObject = new FabricCanvasObject({\n          type: 'image',\n          image: images.overlay,\n          size,\n          origin: {x: 'center', y: 'center'},\n          opacity: 0.4,\n          zIndex: 1000,\n          position: {x: 0, y: 0}\n        });\n\n        canvasView.add({object: overlayObject});\n\n        resolve({\n          canvasView, images, size,\n          render: () => canvasView.render({layout: true}),\n          offset: {x: 0, y: 0},\n          ..._.pick(util, ['rand', 'randInt', 'sum', 'min', 'max'])\n        });\n      }, null, 'Anonymous');\n    };\n\n    if (mo.domReady) {\n      onDomReady();\n    }\n    else {\n      document.addEventListener(\"DOMContentLoaded\", onDomReady);\n    }\n  });\n}\n","import generate from './core/generate.js';\nimport canvas from './core/canvas.js';\nimport initializers from './core/initialize.js';\nimport util from './core/util.js';\nimport colors from './colors/index.js';\n\nvar mo = global.mo = {};\n\n_.extend(mo, canvas.classes);\n\nmo.g = mo.generate = generate;\nmo.c = mo.canvas = canvas;\nmo.util = util;\nmo.ui = {init: initializers};\nmo.colors = colors;\n\nmo.domReady = false;\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  mo.domReady = true;\n});\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","module.exports = function(module) {\r\n\tif (!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif (!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n"],"sourceRoot":""}